import { WitnessMap, StackItem, WitnessStack } from '@noir-lang/acvm_js';

// See `nested_acir_call_circuit` integration test in `acir/tests/test_program_serialization.rs`.
export const bytecode = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 0, 255, 181, 145, 61, 10, 131, 64, 16, 133, 231, 7, 239, 145, 50, 233, 18, 114, 132, 16,
  72, 21, 82, 166, 177, 243, 0, 98, 103, 233, 17, 196, 11, 120, 10, 209, 227, 216, 89, 218, 216, 171, 184, 171, 235,
  176, 176, 107, 225, 7, 15, 134, 225, 49, 59, 111, 135, 97, 129, 149, 102, 130, 73, 56, 137, 96, 3, 149, 64, 247, 93,
  38, 6, 129, 54, 94, 192, 11, 36, 195, 123, 143, 190, 73, 251, 40, 111, 245, 239, 93, 101, 217, 63, 188, 62, 187, 79,
  218, 196, 249, 171, 29, 138, 94, 61, 230, 57, 119, 93, 84, 214, 104, 241, 49, 236, 3, 106, 142, 102, 49, 189, 174, 44,
  228, 63, 151, 2, 229, 39, 99, 47, 235, 17, 228, 149, 100, 205, 162, 103, 251, 140, 51, 67, 35, 28, 59, 160, 43, 143,
  141, 17, 210, 152, 112, 189, 235, 2, 0, 0,
]);

export const initialWitnessMap: WitnessMap = new Map([
  [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
  [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
]);

const inner_call_witness: StackItem = {
  index: 2,
  witness: new Map([
    [0, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const nested_call_witness: StackItem = {
  index: 1,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const main_witness: StackItem = {
  index: 0,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

export const expectedWitnessStack: WitnessStack = [
  inner_call_witness,
  nested_call_witness,
  inner_call_witness,
  nested_call_witness,
  main_witness,
];

export const expectedCompressedWitnessStack = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 2, 255, 237, 145, 177, 13, 0, 32, 8, 4, 17, 117, 31, 75, 75, 87, 113, 255, 37, 44, 196, 5,
  228, 42, 194, 39, 132, 238, 114, 249, 239, 114, 163, 118, 47, 203, 254, 240, 101, 23, 152, 213, 120, 199, 73, 58, 42,
  200, 170, 176, 87, 238, 27, 119, 95, 201, 238, 190, 89, 7, 37, 195, 196, 176, 4, 5, 0, 0,
]);
