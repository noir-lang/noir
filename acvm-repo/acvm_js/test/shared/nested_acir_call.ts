import { WitnessMap, StackItem, WitnessStack } from '@noir-lang/acvm_js';

// See `nested_acir_call_circuit` integration test in `acir/tests/test_program_serialization.rs`.
export const bytecode = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 0, 255, 181, 81, 59, 10, 131, 64, 16, 157, 15, 222, 35, 101, 210, 37, 228, 8, 33, 144, 42,
  88, 218, 216, 121, 0, 177, 179, 244, 8, 226, 5, 60, 133, 232, 113, 236, 44, 109, 236, 85, 88, 101, 92, 23, 119, 45,
  124, 240, 96, 216, 125, 204, 188, 55, 195, 176, 5, 43, 206, 240, 38, 226, 68, 18, 255, 168, 8, 203, 187, 77, 196, 218,
  128, 85, 120, 3, 39, 32, 9, 237, 51, 250, 39, 237, 171, 124, 212, 254, 183, 202, 178, 32, 188, 191, 187, 95, 218, 196,
  249, 167, 29, 138, 94, 13, 115, 236, 187, 26, 148, 53, 30, 232, 25, 182, 33, 23, 156, 205, 35, 181, 182, 60, 228, 222,
  151, 60, 165, 39, 225, 107, 119, 8, 253, 74, 122, 205, 96, 118, 108, 90, 204, 149, 193, 209, 189, 175, 53, 147, 9, 35,
  191, 119, 205, 214, 247, 2, 0, 0,
]);

export const initialWitnessMap: WitnessMap = new Map([
  [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
  [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
]);

const inner_call_witness: StackItem = {
  index: 2,
  witness: new Map([
    [0, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const nested_call_witness: StackItem = {
  index: 1,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const main_witness: StackItem = {
  index: 0,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

export const expectedWitnessStack: WitnessStack = [
  inner_call_witness,
  nested_call_witness,
  inner_call_witness,
  nested_call_witness,
  main_witness,
];

export const expectedCompressedWitnessStack = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 2, 255, 237, 145, 177, 13, 0, 32, 8, 4, 17, 117, 31, 75, 75, 87, 113, 255, 37, 44, 196, 5,
  228, 42, 194, 39, 132, 238, 114, 249, 239, 114, 163, 118, 47, 203, 254, 240, 101, 23, 152, 213, 120, 199, 73, 58, 42,
  200, 170, 176, 87, 238, 27, 119, 95, 201, 238, 190, 89, 7, 37, 195, 196, 176, 4, 5, 0, 0,
]);
