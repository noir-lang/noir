import { WitnessMap, StackItem, WitnessStack } from '@noir-lang/acvm_js';

// See `nested_acir_call_circuit` integration test in `acir/tests/test_program_serialization.rs`.
export const bytecode = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 0, 255, 213, 148, 75, 78, 195, 48, 16, 64, 243, 185, 80, 190, 109, 178, 3, 113, 6, 54, 108,
  44, 39, 158, 128, 165, 196, 9, 254, 148, 110, 249, 72, 108, 147, 244, 6, 128, 168, 130, 132, 248, 9, 177, 229, 26,
  220, 6, 83, 81, 40, 42, 130, 162, 86, 32, 188, 178, 70, 163, 209, 248, 189, 241, 88, 7, 93, 166, 88, 42, 105, 201,
  196, 232, 248, 62, 85, 156, 3, 147, 104, 143, 74, 6, 66, 32, 202, 8, 12, 237, 113, 89, 165, 37, 1, 49, 218, 63, 219,
  192, 121, 126, 116, 66, 137, 121, 78, 89, 165, 164, 104, 13, 115, 92, 42, 249, 114, 109, 172, 174, 226, 64, 104, 138,
  37, 60, 126, 157, 105, 207, 102, 94, 172, 11, 1, 92, 110, 1, 47, 15, 187, 66, 229, 72, 2, 47, 68, 125, 151, 83, 6,
  152, 163, 180, 44, 18, 202, 240, 164, 195, 182, 125, 90, 115, 150, 59, 174, 165, 107, 248, 78, 47, 8, 160, 239, 129,
  235, 187, 216, 241, 226, 36, 10, 157, 32, 76, 122, 145, 27, 185, 97, 20, 18, 47, 242, 125, 136, 130, 168, 31, 39, 113,
  223, 137, 221, 192, 7, 55, 11, 99, 63, 123, 45, 98, 159, 238, 162, 116, 233, 86, 156, 107, 24, 106, 14, 66, 232, 167,
  105, 226, 68, 238, 116, 155, 44, 41, 149, 102, 78, 110, 43, 78, 7, 26, 15, 170, 48, 199, 5, 104, 36, 162, 49, 110, 42,
  149, 228, 52, 157, 141, 153, 151, 28, 164, 226, 12, 13, 112, 174, 64, 212, 87, 120, 2, 19, 21, 186, 44, 222, 214, 129,
  239, 156, 182, 191, 205, 223, 88, 1, 127, 107, 37, 252, 189, 247, 33, 181, 166, 67, 106, 125, 62, 164, 63, 51, 165,
  71, 125, 94, 85, 253, 209, 84, 99, 47, 170, 202, 156, 170, 106, 254, 163, 42, 243, 47, 190, 202, 66, 2, 140, 57, 1,
  15, 122, 19, 106, 116, 146, 99, 205, 147, 160, 183, 197, 88, 63, 3, 120, 190, 183, 13, 38, 5, 0, 0,
]);

export const initialWitnessMap: WitnessMap = new Map([
  [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
  [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
]);

const inner_call_witness: StackItem = {
  index: 2,
  witness: new Map([
    [0, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const nested_call_witness: StackItem = {
  index: 1,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const main_witness: StackItem = {
  index: 0,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

export const expectedWitnessStack: WitnessStack = [
  inner_call_witness,
  nested_call_witness,
  inner_call_witness,
  nested_call_witness,
  main_witness,
];

export const expectedCompressedWitnessStack = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 2, 255, 237, 145, 177, 9, 192, 32, 16, 69, 245, 178, 80, 202, 148, 89, 69, 18, 11, 9, 216,
  156, 16, 91, 197, 21, 28, 65, 156, 201, 109, 108, 180, 179, 59, 27, 193, 63, 192, 227, 241, 31, 184, 132, 70, 60, 95,
  244, 73, 233, 87, 90, 200, 191, 50, 90, 34, 122, 86, 238, 147, 54, 193, 233, 136, 166, 197, 187, 86, 160, 107, 93, 19,
  180, 128, 142, 56, 166, 157, 179, 155, 173, 215, 140, 237, 115, 6, 136, 10, 194, 76, 233, 151, 142, 4, 0, 0,
]);
