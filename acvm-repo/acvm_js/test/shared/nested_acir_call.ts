import { WitnessMap, StackItem, WitnessStack } from '@noir-lang/acvm_js';

// See `nested_acir_call_circuit` integration test in `acir/tests/test_program_serialization.rs`.
export const bytecode = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 0, 255, 205, 146, 97, 10, 195, 32, 12, 133, 163, 66, 207, 147, 24, 109, 227, 191, 93, 101,
  50, 123, 255, 35, 172, 99, 25, 83, 17, 250, 99, 14, 250, 224, 97, 144, 16, 146, 143, 231, 224, 45, 167, 126, 105, 57,
  108, 14, 91, 248, 202, 168, 65, 255, 207, 122, 28, 180, 250, 244, 221, 244, 197, 223, 68, 182, 154, 197, 184, 134, 80,
  54, 95, 136, 233, 142, 62, 101, 137, 24, 98, 94, 133, 132, 162, 196, 135, 23, 230, 34, 65, 182, 148, 211, 134, 137, 2,
  23, 218, 99, 226, 93, 135, 185, 121, 123, 33, 84, 12, 234, 218, 192, 64, 174, 3, 248, 47, 88, 48, 17, 150, 157, 183,
  151, 95, 244, 86, 91, 221, 61, 10, 81, 31, 178, 190, 110, 194, 102, 96, 76, 251, 202, 80, 13, 204, 77, 224, 25, 176,
  70, 79, 197, 128, 18, 64, 3, 4, 0, 0,
]);

export const initialWitnessMap: WitnessMap = new Map([
  [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
  [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
]);

const inner_call_witness: StackItem = {
  index: 2,
  witness: new Map([
    [0, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const nested_call_witness: StackItem = {
  index: 1,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

const main_witness: StackItem = {
  index: 0,
  witness: new Map([
    [0, '0x0000000000000000000000000000000000000000000000000000000000000008'],
    [1, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [2, '0x000000000000000000000000000000000000000000000000000000000000000a'],
    [3, '0x000000000000000000000000000000000000000000000000000000000000000a'],
  ]),
};

export const expectedWitnessStack: WitnessStack = [
  inner_call_witness,
  nested_call_witness,
  inner_call_witness,
  nested_call_witness,
  main_witness,
];

export const expectedCompressedWitnessStack = Uint8Array.from([
  31, 139, 8, 0, 0, 0, 0, 0, 2, 255, 237, 145, 177, 13, 0, 32, 8, 4, 17, 117, 31, 75, 75, 87, 113, 255, 37, 44, 196, 5,
  228, 42, 194, 39, 132, 238, 114, 249, 239, 114, 163, 118, 47, 203, 254, 240, 101, 23, 152, 213, 120, 199, 73, 58, 42,
  200, 170, 176, 87, 238, 27, 119, 95, 201, 238, 190, 89, 7, 37, 195, 196, 176, 4, 5, 0, 0,
]);
