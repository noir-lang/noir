[workspace]

members = [
    "aztec_macros",
    "compiler/noirc_evaluator",
    "compiler/noirc_frontend",
    "compiler/noirc_errors",
    "compiler/noirc_driver",
    "compiler/noirc_printable_type",
    "compiler/fm",
    "compiler/wasm",
    # Utility crates used by the Noir compiler
    "compiler/utils/arena",
    "compiler/utils/iter-extended",
    # Crates related to tooling built ontop of the Noir compiler
    "tooling/backend_interface",
    "tooling/bb_abstraction_leaks",
    "tooling/lsp",
    "tooling/debugger",
    "tooling/nargo",
    "tooling/nargo_fmt",
    "tooling/nargo_cli",
    "tooling/nargo_toml",
    "tooling/noirc_abi",
    "tooling/noirc_abi_wasm",
    # ACVM
    "acvm-repo/acir_field",
    "acvm-repo/acir",
    "acvm-repo/acvm",
    "acvm-repo/acvm_js",
    "acvm-repo/brillig",
    "acvm-repo/brillig_vm",
    "acvm-repo/blackbox_solver",
    "acvm-repo/bn254_blackbox_solver",
]
default-members = ["tooling/nargo_cli"]
resolver = "2"

[workspace.package]
# x-release-please-start-version
version = "0.22.0"
# x-release-please-end
authors = ["The Noir Team <team@noir-lang.org>"]
edition = "2021"
rust-version = "1.71.1"
license = "MIT OR Apache-2.0"
repository = "https://github.com/noir-lang/noir/"

[workspace.dependencies]

# ACVM workspace dependencies
acir_field = { version = "0.38.0", path = "acvm-repo/acir_field", default-features = false }
acir = { version = "0.38.0", path = "acvm-repo/acir", default-features = false }
acvm = { version = "0.38.0", path = "acvm-repo/acvm" }
stdlib = { version = "0.37.1", package = "acvm_stdlib", path = "acvm-repo/stdlib", default-features = false }
brillig = { version = "0.38.0", path = "acvm-repo/brillig", default-features = false }
brillig_vm = { version = "0.38.0", path = "acvm-repo/brillig_vm", default-features = false }
acvm_blackbox_solver = { version = "0.38.0", path = "acvm-repo/blackbox_solver", default-features = false }
bn254_blackbox_solver = { version = "0.38.0", path = "acvm-repo/bn254_blackbox_solver", default-features = false }

# Noir compiler workspace dependencies
arena = { path = "compiler/utils/arena" }
fm = { path = "compiler/fm" }
iter-extended = { path = "compiler/utils/iter-extended" }
noirc_driver = { path = "compiler/noirc_driver" }
noirc_errors = { path = "compiler/noirc_errors" }
noirc_evaluator = { path = "compiler/noirc_evaluator" }
noirc_frontend = { path = "compiler/noirc_frontend" }
noirc_printable_type = { path = "compiler/noirc_printable_type" }
noir_wasm = { path = "compiler/wasm" }

# Noir tooling workspace dependencies
nargo = { path = "tooling/nargo" }
nargo_fmt = { path = "tooling/nargo_fmt" }
nargo_cli = { path = "tooling/nargo_cli" }
nargo_toml = { path = "tooling/nargo_toml" }
noir_lsp = { path = "tooling/lsp" }
noir_debugger = { path = "tooling/debugger" }
noirc_abi = { path = "tooling/noirc_abi" }
bb_abstraction_leaks = { path = "tooling/bb_abstraction_leaks" }

# LSP
async-lsp = { version = "0.1.0", default-features = false }
lsp-types = "0.94.1"
tower = "0.4"

# Wasm
wasm-bindgen = { version = "=0.2.86", features = ["serde-serialize"] }
wasm-bindgen-test = "0.3.36"
wasm-bindgen-futures = "0.4.36"
console_error_panic_hook = "0.1.7"
gloo-utils = { version = "0.1", features = ["serde"] }
js-sys = "0.3.62"
getrandom = "0.2"

# Debugger
dap = "0.4.1-alpha1"

cfg-if = "1.0.0"
clap = { version = "4.3.19", features = ["derive", "env"] }
codespan = { version = "0.11.1", features = ["serialization"] }
codespan-lsp = "0.11.1"
codespan-reporting = "0.11.1"
chumsky = { git = "https://github.com/jfecher/chumsky", rev = "ad9d312", default-features = false, features = [
    "ahash",
    "std",
] }
dirs = "4"
serde = { version = "1.0.136", features = ["derive"] }
serde_json = "1.0"
smol_str = { version = "0.1.17", features = ["serde"] }
thiserror = "1.0.21"
toml = "0.7.2"
url = "2.2.0"
base64 = "0.21.2"
fxhash = "0.2.1"
build-data = "0.1.3"
bincode = "1.3.3"
hex = "0.4.2"
const_format = "0.2.30"
num-bigint = "0.4"
num-traits = "0.2"
similar-asserts = "1.5.0"
log = "0.4.17"
tempfile = "3.6.0"

tracing = "0.1.40"

[profile.dev]
# This is required to be able to run `cargo test` in acvm_js due to the `locals exceeds maximum` error.
# See https://ritik-mishra.medium.com/resolving-the-wasm-pack-error-locals-exceed-maximum-ec3a9d96685b
opt-level = 1


[profile.size]
inherits = "release"
lto = true
opt-level = "z"

[profile.size-aggressive]
inherits = "release"
strip = true
lto = true
panic = "abort"
opt-level = "z"
