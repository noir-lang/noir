name: build-x86_64-unknown-linux-gnu
# <arch>-<vendor>-<os>-<env>

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build-x86_64-unknown-linux-gnu:
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 1
      matrix:
        target: [x86_64-unknown-linux-gnu]

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: cachix/install-nix-action@v18
        with:
          nix_path: nixpkgs=channel:nixos-22.05

      - uses: cachix/cachix-action@v11
        with:
          name: nargo-cache
          # If you chose signing key for write access
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          # If you chose API tokens for write access OR if you have a private cache
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Build environment and Compile
        run: |
          chmod +x .github/build-nix
          .github/build-nix ${{ matrix.target }}

      - name: Package artifacts
        run: |
          mkdir dist
          cp ./target/${{ matrix.target }}/release/nargo ./dist/nargo
          mkdir -p ./dist/noir-lang/std
          cp crates/std_lib/src/*.nr ./dist/noir-lang/std
          7z a -ttar -so -an ./dist/* | 7z a -si ./nargo-${{ matrix.target }}.gz

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./nargo-${{ matrix.target }}.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
