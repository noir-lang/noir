name: Test

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master

# This will cancel previous runs when a branch or PR is updated
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-test-artifacts:
    name: Build test artifacts
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@1.71.1
        with:
          targets: x86_64-unknown-linux-gnu

      - uses: Swatinem/rust-cache@v2
        with:
          key: x86_64-unknown-linux-gnu
          cache-on-failure: true
          save-if: ${{ github.event_name != 'merge_group' }}

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.67

      - name: Build and archive tests
        run: cargo nextest archive --archive-file nextest-archive.tar.zst
      
      - name: Upload archive to workflow
        uses: actions/upload-artifact@v3
        with:
          name: nextest-archive
          path: nextest-archive.tar.zst

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [build-test-artifacts]
    strategy:
      matrix:
        test-filter: ["package(noir_debugger)",  "not package(noir_debugger)"]
    steps:
      - uses: actions/checkout@v4
      
      # cargo nextest's run phase does not
      # require Cargo. You can choose to install Rust if your tests require it, of course.
      # Instead, create ~/.cargo/bin as required by the install action.
      - run: mkdir -p ~/.cargo/bin
      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.67
      
      - name: Download archive
        uses: actions/download-artifact@v3
        with:
          name: nextest-archive
      - name: Run tests
        run: |
          ~/.cargo/bin/cargo-nextest nextest run --workspace --archive-file nextest-archive.tar.zst \
            -E "${{ matrix.test-filter }}"
