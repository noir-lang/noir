name: Test

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master

# This will cancel previous runs when a branch or PR is updated
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-test-artifacts:
    name: Build test artifacts
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@1.73.0
        with:
          targets: x86_64-unknown-linux-gnu

      - uses: Swatinem/rust-cache@v2
        with:
          key: x86_64-unknown-linux-gnu
          cache-on-failure: true
          save-if: ${{ github.event_name != 'merge_group' }}

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.67

      - name: Build and archive tests
        run: cargo nextest archive --workspace --release --archive-file nextest-archive.tar.zst
      
      - name: Upload archive to workflow
        uses: actions/upload-artifact@v4
        with:
          name: nextest-archive
          path: nextest-archive.tar.zst

  run-tests:
    name: "Run tests (partition ${{matrix.partition}})"
    runs-on: ubuntu-latest
    needs: [build-test-artifacts]
    strategy:
      fail-fast: false
      matrix:
        partition: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@1.73.0
        with:
          targets: x86_64-unknown-linux-gnu

      - name: Install nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest@0.9.67
      
      - name: Download archive
        uses: actions/download-artifact@v4
        with:
          name: nextest-archive
      - name: Run tests
        run: |
          cargo nextest run --archive-file nextest-archive.tar.zst \
            --partition count:${{ matrix.partition }}/4

  # This is a job which depends on all test jobs and reports the overall status.
  # This allows us to add/remove test jobs without having to update the required workflows.
  tests-end:
    name: Rust End
    runs-on: ubuntu-latest
    # We want this job to always run (even if the dependant jobs fail) as we want this job to fail rather than skipping.
    if: ${{ always() }}
    needs: 
      - run-tests
    
    steps:
      - name: Report overall success
        run: |
          if [[ $FAIL == true ]]; then
              exit 1
          else
              exit 0
          fi
        env:
          # We treat any cancelled, skipped or failing jobs as a failure for the workflow as a whole.
          FAIL: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'skipped') }}
