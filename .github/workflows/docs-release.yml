name: Rebuild docs with the latest release

on:
  release:
    types: [released]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install wasm-bindgen-cli
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-bindgen-cli@0.2.86

      - name: Install wasm-opt
        run: |
          npm i wasm-opt -g

      - name: Install dependencies
        run: yarn

      - name: Build acvm_js
        run: yarn workspace @noir-lang/acvm_js build

      - name: Build noirc_abi
        run: yarn workspace @noir-lang/noirc_abi build

      - name: Build noir_js_types
        run: yarn workspace @noir-lang/types build

      - name: Build barretenberg wrapper
        run: yarn workspace @noir-lang/backend_barretenberg build

      - name: Run noir_js
        run: |
          yarn workspace @noir-lang/noir_js build

      - name: Remove pre-releases
        working-directory: docs
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn setStable

      - name: Build docs
        run: 
          yarn workspace docs build
    
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.1
        with:
          publish-dir: './docs/build'
          production-branch: master
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-github-deployment: false
          deploy-message: "Deploy from GitHub Actions for release"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
