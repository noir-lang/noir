name: test-integration

on:
  workflow_dispatch:
  pull_request:
  merge_group:
  schedule:
    - cron: "0 2 * * *" # Run nightly at 2 AM UTC

jobs:
  build-nargo:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]

    steps:
      - name: Checkout Noir repo
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@1.71.1

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
          cache-on-failure: true
          save-if: ${{ github.event_name != 'merge_group' }}

      - name: Build Nargo
        run: cargo build --package nargo_cli --release

      - name: Package artifacts
        run: |
          mkdir dist
          cp ./target/release/nargo ./dist/nargo
          7z a -ttar -so -an ./dist/* | 7z a -si ./nargo-x86_64-unknown-linux-gnu.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nargo
          path: ./dist/*
          retention-days: 3

  build-acvm-js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: ./.github/actions/nix
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix-cache-name: "noir"
          cachix-auth-token: ${{ secrets.CACHIXAUTHTOKEN }}

      - name: Build acvm-js
        run: |
          nix build -L .#acvm_js

      - name: Dereference symlink
        run: echo "UPLOAD_PATH=$(readlink -f result/acvm_js)" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: acvm-js
          path: ${{ env.UPLOAD_PATH }}
          retention-days: 3

  build-wasm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Nix
        uses: ./.github/actions/nix
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix-cache-name: "noir"
          cachix-auth-token: ${{ secrets.CACHIXAUTHTOKEN }}

      - name: Build wasm package
        run: |
          nix build -L .#noir_wasm

      - name: Dereference symlink
        run: echo "UPLOAD_PATH=$(readlink -f ./result/noir_wasm)" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: noir_wasm
          path: ${{ env.UPLOAD_PATH }}
          retention-days: 3

  build-noirc:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Nix
        uses: ./.github/actions/nix
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix-cache-name: "noir"
          cachix-auth-token: ${{ secrets.CACHIXAUTHTOKEN }}

      - name: Build noirc_abi_wasm
        run: |
          nix build -L .#noirc_abi_wasm
          cp -r ./result/noirc_abi_wasm/nodejs ./tooling/noirc_abi_wasm
          cp -r ./result/noirc_abi_wasm/web ./tooling/noirc_abi_wasm

      - name: Dereference symlink
        run: echo "UPLOAD_PATH=$(readlink -f ./result/noirc_abi_wasm)" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: noirc_abi_wasm
          path: ${{ env.UPLOAD_PATH }}
          retention-days: 10

  test-solidity-verifier:
    runs-on: ubuntu-latest
    needs: [build-acvm-js, build-wasm, build-nargo, build-noirc]
    env:
      CACHED_PATH: /tmp/nix-cache

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download nargo binary
        uses: actions/download-artifact@v3
        with:
          name: nargo
          path: ./nargo

      - name: Download acvm_js package artifact
        uses: actions/download-artifact@v3
        with:
          name: acvm-js
          path: ./acvm-repo/acvm_js

      - name: Download noir_wasm package artifact
        uses: actions/download-artifact@v3
        with:
          name: noir_wasm
          path: ./compiler/wasm

      - name: Download noirc_abi package artifact
        uses: actions/download-artifact@v3
        with:
          name: noirc_abi_wasm
          path: ./tooling/noirc_abi_wasm

      - name: Set nargo on PATH
        run: |
          nargo_binary="${{ github.workspace }}/nargo/nargo"
          chmod +x $nargo_binary
          echo "$(dirname $nargo_binary)" >> $GITHUB_PATH
          export PATH="$PATH:$(dirname $nargo_binary)"
          nargo -V

      - name: Install Yarn dependencies
        uses: ./.github/actions/setup

      - name: Install Playwright
        uses: ./.github/actions/install-playwright

      - name: Setup `integration-tests`
        run: |
          yarn workspace @noir-lang/source-resolver build
          yarn workspace @noir-lang/types build
          yarn workspace @noir-lang/backend_barretenberg build
          yarn workspace @noir-lang/noir_js build

      - name: Run `integration-tests`
        run: |
          yarn test:integration

      - name: Alert on nightly test failure
        uses: JasonEtco/create-an-issue@v2
        if: ${{ failure() && github.event_name == 'schedule' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_NAME: ${{ github.workflow }}
          WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          update_existing: true
          filename: .github/NIGHTLY_TEST_FAILURE.md
