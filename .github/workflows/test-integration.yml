name: test-integration

on:
  workflow_dispatch:
  pull_request:
  merge_group:
  schedule:
    - cron: "0 2 * * *" # Run nightly at 2 AM UTC

jobs:
  build-nargo:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]

    steps:
      - name: Checkout Noir repo
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@1.66.0

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
          cache-on-failure: true
          save-if: ${{ github.event_name != 'merge_group' }}

      - name: Build Nargo
        run: cargo build --package nargo_cli --release

      - name: Package artifacts
        run: |
          mkdir dist
          cp ./target/release/nargo ./dist/nargo
          7z a -ttar -so -an ./dist/* | 7z a -si ./nargo-x86_64-unknown-linux-gnu.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nargo
          path: ./dist/*
          retention-days: 3

  test-solidity-verifier:
    runs-on: ubuntu-latest
    needs: [build-nargo]
    env:
      CACHED_PATH: /tmp/nix-cache

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download nargo binary
        uses: actions/download-artifact@v3
        with:
          name: nargo
          path: ./nargo

      - name: Set nargo on PATH
        run: |
          nargo_binary="${{ github.workspace }}/nargo/nargo"
          chmod +x $nargo_binary
          echo "$(dirname $nargo_binary)" >> $GITHUB_PATH
          export PATH="$PATH:$(dirname $nargo_binary)"
          nargo -V

      - name: Setup Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-23.05
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v12
        with:
          name: barretenberg
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Install Yarn dependencies
        uses: ./.github/actions/setup

      - name: Install Playwright
        uses: ./.github/actions/install-playwright

      - name: Setup `integration-tests`
        run: |
          yarn install:from:nix

      - name: Run `integration-tests`
        run: |
          yarn test:integration

      - name: Alert on nightly test failure
        uses: JasonEtco/create-an-issue@v2
        if: ${{ failure() && github.event_name == 'schedule' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_NAME: ${{ github.workflow }}
          WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        with:
          update_existing: true
          filename: .github/NIGHTLY_TEST_FAILURE.md
