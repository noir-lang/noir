name: test-integration

on:
  workflow_dispatch:
  push:
    branches:
        - kh-integration-testing    

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  wasm-packages-build:
    runs-on: ubuntu-latest
    env:
      CACHED_PATH: /tmp/nix-cache

    steps:
      - name: Install Yarn
        run: npm install -g yarn

      - name: Checkout noir sources
        uses: actions/checkout@v4
      
      - name: Checkout acvm sources
        uses: actions/checkout@v3 # v3 is needed here otherwise this fails in local execution
        with:
          repository: noir-lang/acvm
          path: acvm

      - name: Setup Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-23.05
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v12
        with:
          name: barretenberg
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
  
      - name: Restore nix store cache
        if: env.ACT != 'true'
        uses: actions/cache/restore@v3
        id: cache
        with:
          path: ${{ env.CACHED_PATH }}
          key: ${{ runner.os }}-flake-wasm-${{ hashFiles('*.lock') }}

      # Based on https://github.com/marigold-dev/deku/blob/b5016f0cf4bf6ac48db9111b70dd7fb49b969dfd/.github/workflows/build.yml#L26
      - name: Copy cache into nix store
        if: steps.cache.outputs.cache-hit == 'true' && env.ACT != 'true'
        # We don't check the signature because we're the one that created the cache
        run: |
          for narinfo in ${{ env.CACHED_PATH }}/*.narinfo; do
            path=$(head -n 1 "$narinfo" | awk '{print $2}')
            nix copy --no-check-sigs --from "file://${{ env.CACHED_PATH }}" "$path"
          done

      - name: Build noir_wasm package
        run: |
          nix build -L .#wasm
          mkdir -p ./.packages/noir_wasm
          cp -r ./result/* ./.packages/noir_wasm/

      - name: Dereference symlink
        run: echo "UPLOAD_PATH=$(readlink -f result)" >> $GITHUB_ENV

      - name: Upload artifact
        if: env.ACT != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: noir_wasm
          path: ${{ env.UPLOAD_PATH }}
          retention-days: 3

      - name: Build noirc_abi_wasm package
        run: |
          nix build -L .#noirc_abi_wasm
          mkdir -p ./.packages/noirc_abi_wasm
          cp -r ./result/* ./.packages/noirc_abi_wasm/
  
      - name: Dereference symlink
        run: echo "UPLOAD_PATH=$(readlink -f result)" >> $GITHUB_ENV

      - name: Upload artifact
        if: env.ACT != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: noirc_abi_wasm
          path: ${{ env.UPLOAD_PATH }}
          retention-days: 3
  
      - name: Build acvm_js package
        working-directory: ./acvm
        run: |
          nix build -L .#
          mkdir -p ../.packages/acvm_js
          cp -r ./result/* ../.packages/acvm_js/

      - name: Dereference symlink
        run: echo "UPLOAD_PATH=$(readlink -f result)" >> $GITHUB_ENV

      - name: Upload artifact
        if: env.ACT != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: acvm_js
          path: ${{ env.UPLOAD_PATH }}
          retention-days: 3

      - name: Install Yarn
        if: env.ACT == 'true'
        run: npm install -g yarn
  
      - name: Install dependencies
        working-directory: ./crates/integration-tests
        run: yarn install

      - name: Install playwright deps
        working-directory: ./crates/integration-tests
        run: |
          npx playwright install
          npx playwright install-deps

      - name: Run tests
        working-directory: ./crates/integration-tests
        run: |
          yarn test:browser
  
  test-noir-bb-integration:
    # needs: [build-wasm, build-nargo]
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout noir-lang/noir
        uses: actions/checkout@v4


      - name: Install dependencies
        working-directory: ./crates/wasm
        run: yarn install

      - name: Install playwright deps
        working-directory: ./crates/wasm
        run: |
          npx playwright install
          npx playwright install-deps

      - name: Run tests
        working-directory: ./crates/wasm
        run: |
          yarn test:browser
          # yarn test:node
