{"run_id":"1757343946-494082163","line":976,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":976,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757343946-494082163","line":933,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"multiple_blocks","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":933,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 5 at v1\n    jmp b1(Field 5)\n  b1(v0: Field):\n    store Field 6 at v1\n    return v0, Field 5, Field 6\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    jmp b1(Field 5)\n  b1(v0: Field):\n    return v0, Field 5, Field 6\n}"}}
{"run_id":"1757343946-494082163","line":1782,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"store_load_from_array_get","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1782,"expression":"ssa_string"},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    store u1 0 at v8\n    return u1 0\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    return u1 0\n}"}}
{"run_id":"1757347521-480946854","line":1827,"new":null,"old":null}
{"run_id":"1757347521-480946854","line":1356,"new":null,"old":null}
{"run_id":"1757347521-480946854","line":1713,"new":null,"old":null}
{"run_id":"1757347521-480946854","line":1744,"new":null,"old":null}
{"run_id":"1757347521-480946854","line":1660,"new":null,"old":null}
{"run_id":"1757347521-480946854","line":881,"new":null,"old":null}
{"run_id":"1757347521-480946854","line":2096,"new":null,"old":null}
{"run_id":"1757347521-480946854","line":856,"new":null,"old":null}
{"run_id":"1757347521-480946854","line":906,"new":null,"old":null}
{"run_id":"1757347521-480946854","line":935,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"multiple_blocks","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":935,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 5 at v1\n    jmp b1(Field 5)\n  b1(v0: Field):\n    store Field 6 at v1\n    return v0, Field 5, Field 6\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    jmp b1(Field 5)\n  b1(v0: Field):\n    return v0, Field 5, Field 6\n}"}}
{"run_id":"1757347521-480946854","line":1784,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"store_load_from_array_get","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1784,"expression":"ssa_string"},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    store u1 0 at v8\n    return u1 0\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    return u1 0\n}"}}
{"run_id":"1757347521-480946854","line":978,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":978,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757347521-480946854","line":1102,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1102,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v11 = load v3 -> &mut Field\n    store Field 2 at v11\n    v13 = add v0, Field 1\n    jmp b1(v13)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = load v8 -> Field\n    v10 = eq v9, Field 2\n    constrain v9 == Field 2\n    return\n}"}}
{"run_id":"1757347533-244237789","line":1102,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1102,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v11 = load v3 -> &mut Field\n    store Field 2 at v11\n    v13 = add v0, Field 1\n    jmp b1(v13)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = load v8 -> Field\n    v10 = eq v9, Field 2\n    constrain v9 == Field 2\n    return\n}"}}
{"run_id":"1757348117-157425709","line":1102,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1102,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v11 = load v3 -> &mut Field\n    store Field 2 at v11\n    v13 = add v0, Field 1\n    jmp b1(v13)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757348135-107863041","line":1102,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":1826,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":1355,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":1743,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":1712,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":1659,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":1102,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":856,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":2095,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":906,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":881,"new":null,"old":null}
{"run_id":"1757348139-968499033","line":978,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":978,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757348139-968499033","line":1783,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"store_load_from_array_get","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1783,"expression":"ssa_string"},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    store u1 0 at v8\n    return u1 0\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    return u1 0\n}"}}
{"run_id":"1757348139-968499033","line":935,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"multiple_blocks","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":935,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 5 at v1\n    jmp b1(Field 5)\n  b1(v0: Field):\n    store Field 6 at v1\n    return v0, Field 5, Field 6\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    jmp b1(Field 5)\n  b1(v0: Field):\n    return v0, Field 5, Field 6\n}"}}
{"run_id":"1757348145-870168745","line":935,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"multiple_blocks","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":935,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 5 at v1\n    jmp b1(Field 5)\n  b1(v0: Field):\n    store Field 6 at v1\n    return v0, Field 5, Field 6\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    jmp b1(Field 5)\n  b1(v0: Field):\n    return v0, Field 5, Field 6\n}"}}
{"run_id":"1757348744-809666769","line":938,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"multiple_blocks","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":938,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 5 at v1\n    jmp b1(Field 5)\n  b1(v0: Field):\n    store Field 6 at v1\n    return v0, Field 5, Field 6\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    jmp b1(Field 5)\n  b1(v0: Field):\n    return v0, Field 5, Field 6\n}"}}
{"run_id":"1757348808-797883347","line":925,"new":null,"old":null}
{"run_id":"1757349013-459263874","line":908,"new":null,"old":null}
{"run_id":"1757349089-273915928","line":908,"new":null,"old":null}
{"run_id":"1757349137-954962884","line":908,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":1799,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":1328,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":908,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":1632,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":1716,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":1685,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":854,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":829,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":879,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":1756,"new":null,"old":null}
{"run_id":"1757349147-548155546","line":2068,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"nested_alias_in_array","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":2068,"expression":"ssa_string"},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757349147-548155546","line":1075,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1075,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757349147-548155546","line":951,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":951,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    v1 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757349156-114044853","line":2068,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"nested_alias_in_array","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":2068,"expression":"ssa_string"},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757349201-9351873","line":1799,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":1328,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":908,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":1685,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":1632,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":1716,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":2068,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":854,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":1756,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":879,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":829,"new":null,"old":null}
{"run_id":"1757349201-9351873","line":951,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":951,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    v1 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757349201-9351873","line":1075,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1075,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757349210-376243534","line":1075,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1075,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757349469-533427993","line":1075,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1075,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757349536-992509332","line":1077,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1077,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757349814-45269320","line":1077,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1077,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757349877-57779751","line":1077,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1077,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757355883-323162340","line":1078,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1078,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v11 = load v3 -> &mut Field\n    v13 = add v0, Field 1\n    jmp b1(v13)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = load v8 -> Field\n    v10 = eq v9, Field 2\n    constrain v9 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757356038-885365280","line":1072,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1072,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v11 = load v3 -> &mut Field\n    v13 = add v0, Field 1\n    jmp b1(v13)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = load v8 -> Field\n    v10 = eq v9, Field 2\n    constrain v9 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757356339-596733525","line":1072,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1072,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757356479-301063910","line":1072,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1072,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757356550-843459181","line":1072,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1072,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757356822-486588271","line":1072,"new":null,"old":null}
{"run_id":"1757356839-353124325","line":1325,"new":null,"old":null}
{"run_id":"1757356839-353124325","line":1629,"new":null,"old":null}
{"run_id":"1757356839-353124325","line":1713,"new":null,"old":null}
{"run_id":"1757356839-353124325","line":1072,"new":null,"old":null}
{"run_id":"1757356839-353124325","line":826,"new":null,"old":null}
{"run_id":"1757356839-353124325","line":851,"new":null,"old":null}
{"run_id":"1757356839-353124325","line":876,"new":null,"old":null}
{"run_id":"1757356839-353124325","line":1682,"new":null,"old":null}
{"run_id":"1757356839-353124325","line":905,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"multiple_blocks","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":905,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 5 at v1\n    jmp b1(Field 5)\n  b1(v0: Field):\n    store Field 6 at v1\n    return v0, Field 5, Field 6\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    jmp b1(Field 5)\n  b1(v0: Field):\n    return v0, Field 5, Field 6\n}"}}
{"run_id":"1757356839-353124325","line":948,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":948,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757356839-353124325","line":1753,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"store_load_from_array_get","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1753,"expression":"ssa_string"},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    store u1 0 at v8\n    return u1 0\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    return u1 0\n}"}}
{"run_id":"1757356839-353124325","line":2065,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"nested_alias_in_array","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":2065,"expression":"ssa_string"},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    store v4 at v5\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    return\n}"}}
{"run_id":"1757356839-353124325","line":1796,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"does_not_remove_store_to_potentially_aliased_address","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1796,"expression":"ssa_string"},"snapshot":"acir(inline) fn create_note f0 {\n  b0(v0: &mut [Field; 1], v1: &mut [Field; 1]):\n    v2 = load v0 -> [Field; 1]\n    store v2 at v0\n    store v2 at v1\n    v4 = make_array [Field 0] : [Field; 1]\n    store v4 at v1\n    return v1, v2\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn create_note f0 {\n  b0(v0: &mut [Field; 1], v1: &mut [Field; 1]):\n    v2 = load v0 -> [Field; 1]\n    v3 = load v1 -> [Field; 1]\n    store v2 at v0\n    store v3 at v1\n    v5 = make_array [Field 0] : [Field; 1]\n    store v5 at v1\n    return v1, v3\n}"}}
{"run_id":"1757358810-913263202","line":1808,"new":null,"old":null}
{"run_id":"1757358810-913263202","line":1337,"new":null,"old":null}
{"run_id":"1757358810-913263202","line":1725,"new":null,"old":null}
{"run_id":"1757358810-913263202","line":1641,"new":null,"old":null}
{"run_id":"1757358810-913263202","line":1694,"new":null,"old":null}
{"run_id":"1757358810-913263202","line":1084,"new":null,"old":null}
{"run_id":"1757358810-913263202","line":888,"new":null,"old":null}
{"run_id":"1757358810-913263202","line":838,"new":null,"old":null}
{"run_id":"1757358810-913263202","line":863,"new":null,"old":null}
{"run_id":"1757358810-913263202","line":960,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":960,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757358810-913263202","line":917,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"multiple_blocks","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":917,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 5 at v1\n    jmp b1(Field 5)\n  b1(v0: Field):\n    store Field 6 at v1\n    return v0, Field 5, Field 6\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    jmp b1(Field 5)\n  b1(v0: Field):\n    return v0, Field 5, Field 6\n}"}}
{"run_id":"1757358810-913263202","line":1765,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"store_load_from_array_get","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1765,"expression":"ssa_string"},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    store u1 0 at v8\n    return u1 0\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    return u1 0\n}"}}
{"run_id":"1757358810-913263202","line":2077,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"nested_alias_in_array","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":2077,"expression":"ssa_string"},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    store v4 at v5\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    return\n}"}}
{"run_id":"1757358830-582770868","line":1084,"new":null,"old":null}
{"run_id":"1757358893-30657199","line":1084,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":1808,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":1337,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":1084,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":1725,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":1694,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":1641,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":838,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":863,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":888,"new":null,"old":null}
{"run_id":"1757358897-394646014","line":2077,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"nested_alias_in_array","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":2077,"expression":"ssa_string"},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    store v4 at v5\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    return\n}"}}
{"run_id":"1757358897-394646014","line":1765,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"store_load_from_array_get","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1765,"expression":"ssa_string"},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    store u1 0 at v8\n    return u1 0\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    return u1 0\n}"}}
{"run_id":"1757358897-394646014","line":917,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"multiple_blocks","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":917,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 5 at v1\n    jmp b1(Field 5)\n  b1(v0: Field):\n    store Field 6 at v1\n    return v0, Field 5, Field 6\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    jmp b1(Field 5)\n  b1(v0: Field):\n    return v0, Field 5, Field 6\n}"}}
{"run_id":"1757358897-394646014","line":960,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":960,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757358909-566016582","line":960,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":960,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757358933-797341491","line":960,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":960,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757359186-866681930","line":960,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"load_aliases_in_predecessor_block","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":960,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    jmp b1()\n  b1():\n    store Field 1 at v0\n    return\n}"}}
{"run_id":"1757359588-140435754","line":1808,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":1337,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":917,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":960,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":1725,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":1641,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":1694,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":863,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":888,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":838,"new":null,"old":null}
{"run_id":"1757359588-140435754","line":2077,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"nested_alias_in_array","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":2077,"expression":"ssa_string"},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    store v4 at v5\n    store Field 2 at v0\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn regression_2445_deeper_ref f0 {\n  b0():\n    v0 = allocate -> &mut Field\n    store Field 0 at v0\n    v2 = allocate -> &mut &mut Field\n    store v0 at v2\n    v3 = allocate -> &mut &mut &mut Field\n    store v2 at v3\n    v4 = make_array [v3, v3] : [&mut &mut &mut Field; 2]\n    v5 = allocate -> &mut [&mut &mut &mut Field; 2]\n    return\n}"}}
{"run_id":"1757359588-140435754","line":1084,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1084,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757359588-140435754","line":1765,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"store_load_from_array_get","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1765,"expression":"ssa_string"},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    store u1 0 at v8\n    return u1 0\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"brillig(inline) fn main f0 {\n  b0():\n    v2 = allocate -> &mut u1\n    store u1 0 at v2\n    v4 = make_array [v2] : [&mut u1]\n    jmpif u1 1 then: b1, else: b2\n  b1():\n    jmp b3(u32 0, u32 1)\n  b2():\n    jmp b3(u32 0, u32 1)\n  b3(v0: u32, v1: u32):\n    constrain v0 == u32 0\n    v8 = array_get v4, index v0 -> &mut u1\n    return u1 0\n}"}}
{"run_id":"1757360067-234549544","line":1084,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1084,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757361824-165157544","line":1074,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1074,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757361863-300787348","line":1074,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1074,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757362001-35458023","line":1074,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1074,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757362264-483731669","line":1074,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1074,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757362474-368139275","line":1074,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1074,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757362558-826585731","line":1075,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1075,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757362789-559645601","line":1075,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1075,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757363366-990018705","line":1075,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1075,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757363610-323159895","line":1075,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1075,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757363656-504767329","line":1075,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1075,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757363710-51978841","line":1076,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1076,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757363761-875902183","line":1078,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1078,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757364076-756643381","line":1078,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1078,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
{"run_id":"1757424517-312124628","line":1078,"new":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","snapshot_name":"remove_repeat_loads","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/mem2reg.rs","assertion_line":1078,"expression":"ssa_string"},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__mem2reg__tests","metadata":{},"snapshot":"acir(inline) fn main f0 {\n  b0():\n    v1 = allocate -> &mut Field\n    store Field 0 at v1\n    v3 = allocate -> &mut &mut Field\n    store v1 at v3\n    jmp b1(Field 0)\n  b1(v0: Field):\n    v4 = eq v0, Field 0\n    jmpif v4 then: b2, else: b3\n  b2():\n    v10 = load v3 -> &mut Field\n    store Field 2 at v10\n    v12 = add v0, Field 1\n    jmp b1(v12)\n  b3():\n    v5 = load v1 -> Field\n    v7 = eq v5, Field 2\n    constrain v5 == Field 2\n    v8 = load v3 -> &mut Field\n    v9 = eq v5, Field 2\n    constrain v5 == Field 2\n    return\n}"}}
