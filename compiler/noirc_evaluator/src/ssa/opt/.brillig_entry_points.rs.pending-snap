{"run_id":"1757446422-167065291","line":761,"new":{"module_name":"noirc_evaluator__ssa__opt__brillig_entry_points__tests","snapshot_name":"duplicate_recursive_shared_entry_points","metadata":{"source":"compiler/noirc_evaluator/src/ssa/opt/brillig_entry_points.rs","assertion_line":761,"expression":"ssa_string"},"snapshot":"acir(inline) impure fn main f0 {\n  b0():\n    v3 = call f1(u1 1, u32 5) -> u1\n    constrain v3 == u1 0\n    v6 = call f2(u1 1, u32 5) -> u1\n    constrain v6 == u1 0\n    return\n}\nbrillig(inline) impure fn func_1 f1 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v6 = sub v1, u32 1\n    v8 = call f5(v0, v6) -> u1\n    v10 = call f6(v8, v6) -> u1\n    jmp b3(v10)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) impure fn func_2 f2 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v6 = sub v1, u32 1\n    v8 = call f3(v0, v6) -> u1\n    v10 = call f4(v8, v6) -> u1\n    jmp b3(v10)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) fn func_2 f3 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v6 = sub v1, u32 1\n    v8 = call f3(v0, v6) -> u1\n    v10 = call f4(v8, v6) -> u1\n    jmp b3(v10)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) fn func_1 f4 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v6 = sub v1, u32 1\n    v8 = call f3(v0, v6) -> u1\n    v10 = call f4(v8, v6) -> u1\n    jmp b3(v10)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) fn func_2 f5 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v6 = sub v1, u32 1\n    v8 = call f5(v0, v6) -> u1\n    v10 = call f6(v8, v6) -> u1\n    jmp b3(v10)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) fn func_1 f6 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v6 = sub v1, u32 1\n    v8 = call f5(v0, v6) -> u1\n    v10 = call f6(v8, v6) -> u1\n    jmp b3(v10)\n  b3(v2: u1):\n    return v2\n}"},"old":{"module_name":"noirc_evaluator__ssa__opt__brillig_entry_points__tests","metadata":{},"snapshot":"acir(inline) impure fn main f0 {\n  b0():\n    v3 = call f1(u1 1, u32 5) -> u1\n    constrain v3 == u1 0\n    v6 = call f2(u1 1, u32 5) -> u1\n    constrain v6 == u1 0\n    return\n}\nbrillig(inline) impure fn func_1 f1 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v7 = sub v1, u32 1\n    v9 = call f5(v0, v7) -> u1\n    v11 = call f6(v9, v7) -> u1\n    jmp b3(v11)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) impure fn func_2 f2 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v7 = sub v1, u32 1\n    v9 = call f3(v0, v7) -> u1\n    v11 = call f4(v9, v7) -> u1\n    jmp b3(v11)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) fn func_2 f3 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v7 = sub v1, u32 1\n    v9 = call f3(v0, v7) -> u1\n    v11 = call f4(v9, v7) -> u1\n    jmp b3(v11)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) fn func_1 f4 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v7 = sub v1, u32 1\n    v9 = call f3(v0, v7) -> u1\n    v11 = call f4(v9, v7) -> u1\n    jmp b3(v11)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) fn func_2 f5 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v7 = sub v1, u32 1\n    v9 = call f5(v0, v7) -> u1\n    v11 = call f6(v9, v7) -> u1\n    jmp b3(v11)\n  b3(v2: u1):\n    return v2\n}\nbrillig(inline) fn func_1 f6 {\n  b0(v0: u1, v1: u32):\n    v4 = eq v1, u32 0\n    jmpif v4 then: b1, else: b2\n  b1():\n    jmp b3(u1 0)\n  b2():\n    v7 = sub v1, u32 1\n    v9 = call f5(v0, v7) -> u1\n    v11 = call f6(v9, v7) -> u1\n    jmp b3(v11)\n  b3(v2: u1):\n    return v2\n}"}}
{"run_id":"1757446422-167065291","line":887,"new":null,"old":null}
{"run_id":"1757446422-167065291","line":961,"new":null,"old":null}
{"run_id":"1757446422-167065291","line":1029,"new":null,"old":null}
{"run_id":"1757446422-167065291","line":1076,"new":null,"old":null}
{"run_id":"1757448902-392408295","line":655,"new":null,"old":null}
{"run_id":"1757448902-392408295","line":450,"new":null,"old":null}
{"run_id":"1757448902-392408295","line":544,"new":null,"old":null}
{"run_id":"1757448902-392408295","line":887,"new":null,"old":null}
{"run_id":"1757448902-392408295","line":961,"new":null,"old":null}
{"run_id":"1757448902-392408295","line":1029,"new":null,"old":null}
{"run_id":"1757448902-392408295","line":1076,"new":null,"old":null}
{"run_id":"1757450212-846140831","line":655,"new":null,"old":null}
{"run_id":"1757450212-846140831","line":450,"new":null,"old":null}
{"run_id":"1757450212-846140831","line":544,"new":null,"old":null}
{"run_id":"1757450212-846140831","line":887,"new":null,"old":null}
{"run_id":"1757450212-846140831","line":961,"new":null,"old":null}
{"run_id":"1757450212-846140831","line":1029,"new":null,"old":null}
{"run_id":"1757450212-846140831","line":1076,"new":null,"old":null}
