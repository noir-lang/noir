FROM rust:1.71.1-slim-bookworm as base
RUN apt-get update && apt-get upgrade -y && apt-get install build-essential git -y
WORKDIR /usr/src/noir
ENV PATH="${PATH}:/usr/src/noir/target/release"

FROM base as base-nargo
COPY . .
RUN .github/scripts/nargo-build.sh

FROM base as base-js
# RUN apt update && apt install -y curl && rm -rf /var/lib/apt/lists/* && apt-get clean
# ENV NODE_VERSION=18.19.0
# RUN ARCH= && \
#     dpkgArch="$(dpkg --print-architecture)" && \
#     case "${dpkgArch##*-}" in \
#         amd64) ARCH='x64';; \
#         arm64) ARCH='arm64';; \
#         *) echo "unsupported architecture"; exit 1 ;; \
#     esac && \
#     curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.gz" && \
#     tar zxf "node-v$NODE_VERSION-linux-$ARCH.tar.gz" -C /usr --strip-components=1 --no-same-owner \
#     --exclude "*/share/*" \
#     --exclude "*/bin/corepack" \
#     --exclude "*/bin/npx" \
#     --exclude "*/bin/npm" \
#     --exclude "*/corepack/*" \
#     --exclude "*/npm/man/*" \
#     --exclude "*/npm/docs/*" \
#     --exclude "*/include/*" && \
#     rm "node-v$NODE_VERSION-linux-$ARCH.tar.gz" && \
#     node --version
# # Yarn is used for unboxing.
# ENV YARN_VERSION=1.22.19 
# RUN curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" && \
#     mkdir -p /opt && \
#     tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ && \
#     ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn && \
#     ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg && \
#     rm yarn-v$YARN_VERSION.tar.gz && \
#     yarn --version

# ENV PATH="${PATH}:/usr/local/bin"
RUN apt-get install -y ca-certificates curl gnupg
RUN mkdir -p /etc/apt/keyrings
RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
RUN echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
RUN apt-get update && apt-get install nodejs -y
RUN corepack enable
RUN apt-get install -y jq
COPY yarn.lock package.json .yarnrc.yml ./
COPY .yarn/ ./.yarn/
COPY ./acvm-repo/acvm_js/package.json ./acvm-repo/acvm_js/
COPY ./tooling/noirc_abi_wasm/package.json ./tooling/noirc_abi_wasm/
COPY ./compiler/wasm/package.json ./compiler/wasm/
COPY ./tooling/noir_js_types/package.json ./tooling/noir_js_types/
COPY ./tooling/noir_js_backend_barretenberg/package.json ./tooling/noir_js_backend_barretenberg/
COPY ./tooling/noir_js/package.json ./tooling/noir_js/
COPY ./tooling/noir_codegen/package.json ./tooling/noir_codegen/
COPY ./compiler/integration-tests/package.json ./compiler/integration-tests/
COPY ./docs/package.json ./docs/
RUN yarn --immutable
COPY . .
