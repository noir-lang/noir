---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
trait Foo {
    fn foo(self) -> Self;
}

impl Foo for Field {
    fn foo(self) -> Self {
        self + 1_Field
    }
}

trait Bar<T> {
    fn bar(self) -> T;
}

impl Bar<bool> for Field {
    fn bar(self) -> bool {
        true
    }
}

trait Baz<T>: Foo + Bar<T> {

}

impl<#T, T> Baz<T> for #T where #T: Foo, #T: Bar<T> {

}

fn baz<T, U>(x: T) -> U where T: Baz<U> {
    x.foo().bar()
}

fn main() {
    assert(0_Field.foo().bar() == baz(0_Field));
}

// Warning: the generated code has syntax errors
