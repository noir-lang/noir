---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
fn main() {
    cursed::<S>();
}

fn cursed<T>()
where
    T: Foo,
    T: Foo2,
{
    T::bar(1);
    T::bar(());
    T::bar(());
}

trait Foo {
    fn bar<U>(x: U);
}

trait Foo2 {
    fn bar<U>(x: U);
}

pub struct S {}

impl Foo for S {
    fn bar<Z>(_x: Z) {}
}

impl Foo2 for S {
    fn bar<Z>(_x: Z) {}
}
