---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
pub trait Foo {
    fn foo(self) -> Self;
}

impl Foo for Field {
    fn foo(self) -> Self {
        self + 1_Field
    }
}

pub trait Bar {
    fn bar(self) -> Self;
}

impl Bar for Field {
    fn bar(self) -> Self {
        self + 2_Field
    }
}

pub trait Baz: Foo + Bar {

}

impl<#T> Baz for #T where #T: Foo, #T: Bar {

}

fn baz<T>(x: T) -> T where T: Baz {
    x.foo().bar()
}

fn main() {
    assert(0_Field.foo().bar() == baz(0_Field));
}

// Warning: the generated code has syntax errors
