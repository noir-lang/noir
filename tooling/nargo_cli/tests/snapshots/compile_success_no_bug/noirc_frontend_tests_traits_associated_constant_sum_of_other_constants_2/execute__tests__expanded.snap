---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
pub trait Deserialize {
    let N: u32;

    fn deserialize(_: [Field; N]);
}

impl Deserialize for Field {
    let N: u32 = 1;

    fn deserialize(_: [Self; 1]) {}
}

impl<let M: u32, T> Deserialize for [T; M]
where
    T: Deserialize,
{
    let N: u32 = M + <T as Deserialize>::N;

    fn deserialize(_: [Field; M + <T as Deserialize>::N]) {}
}

pub fn foo<let X: u32>() {
    let f: fn([Field; X + 1]) = <[Field; X] as Deserialize<N = X + 1>>::deserialize;
    let _: () = f([0_Field; X + 1]);
}

fn main() {}
