---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
trait Foo {
    fn foo(self) -> Field;
}

trait Bar<T>: Foo {
    fn bar(self) -> Field {
        self.foo()
    }
}

struct MyStruct<T> {
    inner: Field,
}

impl<T> Foo for MyStruct<T>
where
    T: MarkerTrait,
{
    fn foo(self) -> Field
    where
        T: MarkerTrait,
    {
        let _: Self = self;
        42
    }
}

impl<T> Bar<T> for MyStruct<T>
where
    T: MarkerTrait,
{
    fn bar(self) -> Field
    where
        T: MarkerTrait,
    {
        31415
    }
}

trait MarkerTrait {}

impl MarkerTrait for Field {}

fn main() {
    let foo: MyStruct<Field> = MyStruct::<Field> { inner: 42 };
    let _: Field = foo.bar();
}
