---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "v1",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 16
        },
        "visibility": "private"
      },
      {
        "name": "v2",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "unsigned",
        "width": 8
      },
      "visibility": "public"
    },
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _5",
    "private parameters indices : [_0, _1]",
    "public parameters indices : []",
    "return value indices : [_2]",
    "BLACKBOX::RANGE [(_0, 16)] []",
    "BLACKBOX::RANGE [(_1, 1)] []",
    "EXPR [ (1, _0, _1) (-257, _1) (-1, _3) 0 ]",
    "BLACKBOX::RANGE [(_3, 16)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(3))], q_c: 65536 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 256 })], outputs: [Simple(Witness(4)), Simple(Witness(5))]",
    "BLACKBOX::RANGE [(_4, 9)] []",
    "BLACKBOX::RANGE [(_5, 8)] []",
    "EXPR [ (1, _3) (-256, _4) (-1, _5) 65536 ]",
    "EXPR [ (-1, _1, _5) (1, _2) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "jZBBDoMgEEXvMmsW1lZtuUrTGMTRkBAgCE0a4907Eml10aSbP8x8HhP+DD12cWyVGewE/D5D55XWamy1lSIoa2g6Lwxy2waPSCPY+UQ54dEE4CZqzeApdEyXJidMqkF4cgsGaHqq9OCgNK6nhX3p4jdaZ7a+fuDqb7q6bXRTHegHdUIqf/gtlMBPDM5JL8BLBlXSOmlDuqyrvBKdxi2fIRq5iyu8XHZyoM5biX30uC5LHq1/Aw==",
  "file_map": {
    "50": {
      "source": "fn main(v1: u16, v2: bool) -> pub u8 {\n    if v2 {\n        (v1 - 257) as u8\n    } else {\n        0\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient"
  ]
}
