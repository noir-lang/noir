---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "array",
          "length": 30,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _35",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 1)] []",
    "BLACKBOX::RANGE [(_1, 32)] []",
    "BLACKBOX::RANGE [(_2, 32)] []",
    "BLACKBOX::RANGE [(_3, 32)] []",
    "BLACKBOX::RANGE [(_4, 32)] []",
    "BLACKBOX::RANGE [(_5, 32)] []",
    "BLACKBOX::RANGE [(_6, 32)] []",
    "BLACKBOX::RANGE [(_7, 32)] []",
    "BLACKBOX::RANGE [(_8, 32)] []",
    "BLACKBOX::RANGE [(_9, 32)] []",
    "BLACKBOX::RANGE [(_10, 32)] []",
    "BLACKBOX::RANGE [(_11, 32)] []",
    "BLACKBOX::RANGE [(_12, 32)] []",
    "BLACKBOX::RANGE [(_13, 32)] []",
    "BLACKBOX::RANGE [(_14, 32)] []",
    "BLACKBOX::RANGE [(_15, 32)] []",
    "BLACKBOX::RANGE [(_16, 32)] []",
    "BLACKBOX::RANGE [(_17, 32)] []",
    "BLACKBOX::RANGE [(_18, 32)] []",
    "BLACKBOX::RANGE [(_19, 32)] []",
    "BLACKBOX::RANGE [(_20, 32)] []",
    "BLACKBOX::RANGE [(_21, 32)] []",
    "BLACKBOX::RANGE [(_22, 32)] []",
    "BLACKBOX::RANGE [(_23, 32)] []",
    "BLACKBOX::RANGE [(_24, 32)] []",
    "BLACKBOX::RANGE [(_25, 32)] []",
    "BLACKBOX::RANGE [(_26, 32)] []",
    "BLACKBOX::RANGE [(_27, 32)] []",
    "BLACKBOX::RANGE [(_28, 32)] []",
    "BLACKBOX::RANGE [(_29, 32)] []",
    "BLACKBOX::RANGE [(_30, 32)] []",
    "INIT (id: 0, len: 30, witnesses: [_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30])",
    "EXPR [ (-1, _31) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _31) 0 ], value: EXPR [ (1, _32) 0 ]) ",
    "INIT (id: 1, len: 30, witnesses: [_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30])",
    "EXPR [ (-1, _0, _32) (1, _0) (1, _32) (-1, _33) 0 ]",
    "MEM (id: 1, write EXPR [ (1, _33) 0 ] at: EXPR [ (1, _31) 0 ]) ",
    "EXPR [ (-1, _34) 1 ]",
    "MEM (id: 1, read at: EXPR [ (1, _34) 0 ], value: EXPR [ (1, _35) 0 ]) ",
    "EXPR [ (-1, _0, _1) (-1, _0, _2) (1, _0, _35) (1, _0) (1, _1) (1, _2) -1 ]"
  ],
  "debug_symbols": "nZHNCoMwDIDfJecedK5u+ipjSNUohVJLbQdDfPdFW1EPg7HT1/x8JSQTtFj7vpK6G0YoHxPUViol+0oNjXBy0JSdZgZbWDmLSCk41MkywqJ2UGqvFIOXUH5tGo3QK52wVE0YoG6J9GEnFS6vme128l3leXTzXeY/23ce7SL/w06TIuppyk/+kyLRSHvaFmQX6mSQZQHXAB6QB9wC7gEFlNm8DGClqBXGnXdeN4cTuLfZKtuRjB0abL3FZYC1RiN9AA==",
  "file_map": {
    "50": {
      "source": "fn main(x: bool, mut y: [u32; 30]) {\n    if x {\n        y[0] = 1;\n    }\n\n    let z = y[0] + y[1];\n    assert(z == 1);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": []
}
