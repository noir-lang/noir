---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "array",
          "length": 30,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : 93",
    "private parameters indices : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 1)] []",
    "BLACKBOX::RANGE [(_1, 32)] []",
    "BLACKBOX::RANGE [(_2, 32)] []",
    "BLACKBOX::RANGE [(_3, 32)] []",
    "BLACKBOX::RANGE [(_4, 32)] []",
    "BLACKBOX::RANGE [(_5, 32)] []",
    "BLACKBOX::RANGE [(_6, 32)] []",
    "BLACKBOX::RANGE [(_7, 32)] []",
    "BLACKBOX::RANGE [(_8, 32)] []",
    "BLACKBOX::RANGE [(_9, 32)] []",
    "BLACKBOX::RANGE [(_10, 32)] []",
    "BLACKBOX::RANGE [(_11, 32)] []",
    "BLACKBOX::RANGE [(_12, 32)] []",
    "BLACKBOX::RANGE [(_13, 32)] []",
    "BLACKBOX::RANGE [(_14, 32)] []",
    "BLACKBOX::RANGE [(_15, 32)] []",
    "BLACKBOX::RANGE [(_16, 32)] []",
    "BLACKBOX::RANGE [(_17, 32)] []",
    "BLACKBOX::RANGE [(_18, 32)] []",
    "BLACKBOX::RANGE [(_19, 32)] []",
    "BLACKBOX::RANGE [(_20, 32)] []",
    "BLACKBOX::RANGE [(_21, 32)] []",
    "BLACKBOX::RANGE [(_22, 32)] []",
    "BLACKBOX::RANGE [(_23, 32)] []",
    "BLACKBOX::RANGE [(_24, 32)] []",
    "BLACKBOX::RANGE [(_25, 32)] []",
    "BLACKBOX::RANGE [(_26, 32)] []",
    "BLACKBOX::RANGE [(_27, 32)] []",
    "BLACKBOX::RANGE [(_28, 32)] []",
    "BLACKBOX::RANGE [(_29, 32)] []",
    "BLACKBOX::RANGE [(_30, 32)] []",
    "INIT (id: 0, len: 30, witnesses: [_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30])",
    "EXPR [ (-1, _31) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _31) 0 ], value: EXPR [ (1, _32) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _31) 0 ], value: EXPR [ (1, _33) 0 ]) ",
    "EXPR [ (-1, _34) 1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _34) 0 ], value: EXPR [ (1, _35) 0 ]) ",
    "EXPR [ (-1, _36) 2 ]",
    "MEM (id: 0, read at: EXPR [ (1, _36) 0 ], value: EXPR [ (1, _37) 0 ]) ",
    "EXPR [ (-1, _38) 3 ]",
    "MEM (id: 0, read at: EXPR [ (1, _38) 0 ], value: EXPR [ (1, _39) 0 ]) ",
    "EXPR [ (-1, _40) 4 ]",
    "MEM (id: 0, read at: EXPR [ (1, _40) 0 ], value: EXPR [ (1, _41) 0 ]) ",
    "EXPR [ (-1, _42) 5 ]",
    "MEM (id: 0, read at: EXPR [ (1, _42) 0 ], value: EXPR [ (1, _43) 0 ]) ",
    "EXPR [ (-1, _44) 6 ]",
    "MEM (id: 0, read at: EXPR [ (1, _44) 0 ], value: EXPR [ (1, _45) 0 ]) ",
    "EXPR [ (-1, _46) 7 ]",
    "MEM (id: 0, read at: EXPR [ (1, _46) 0 ], value: EXPR [ (1, _47) 0 ]) ",
    "EXPR [ (-1, _48) 8 ]",
    "MEM (id: 0, read at: EXPR [ (1, _48) 0 ], value: EXPR [ (1, _49) 0 ]) ",
    "EXPR [ (-1, _50) 9 ]",
    "MEM (id: 0, read at: EXPR [ (1, _50) 0 ], value: EXPR [ (1, _51) 0 ]) ",
    "EXPR [ (-1, _52) 10 ]",
    "MEM (id: 0, read at: EXPR [ (1, _52) 0 ], value: EXPR [ (1, _53) 0 ]) ",
    "EXPR [ (-1, _54) 11 ]",
    "MEM (id: 0, read at: EXPR [ (1, _54) 0 ], value: EXPR [ (1, _55) 0 ]) ",
    "EXPR [ (-1, _56) 12 ]",
    "MEM (id: 0, read at: EXPR [ (1, _56) 0 ], value: EXPR [ (1, _57) 0 ]) ",
    "EXPR [ (-1, _58) 13 ]",
    "MEM (id: 0, read at: EXPR [ (1, _58) 0 ], value: EXPR [ (1, _59) 0 ]) ",
    "EXPR [ (-1, _60) 14 ]",
    "MEM (id: 0, read at: EXPR [ (1, _60) 0 ], value: EXPR [ (1, _61) 0 ]) ",
    "EXPR [ (-1, _62) 15 ]",
    "MEM (id: 0, read at: EXPR [ (1, _62) 0 ], value: EXPR [ (1, _63) 0 ]) ",
    "EXPR [ (-1, _64) 16 ]",
    "MEM (id: 0, read at: EXPR [ (1, _64) 0 ], value: EXPR [ (1, _65) 0 ]) ",
    "EXPR [ (-1, _66) 17 ]",
    "MEM (id: 0, read at: EXPR [ (1, _66) 0 ], value: EXPR [ (1, _67) 0 ]) ",
    "EXPR [ (-1, _68) 18 ]",
    "MEM (id: 0, read at: EXPR [ (1, _68) 0 ], value: EXPR [ (1, _69) 0 ]) ",
    "EXPR [ (-1, _70) 19 ]",
    "MEM (id: 0, read at: EXPR [ (1, _70) 0 ], value: EXPR [ (1, _71) 0 ]) ",
    "EXPR [ (-1, _72) 20 ]",
    "MEM (id: 0, read at: EXPR [ (1, _72) 0 ], value: EXPR [ (1, _73) 0 ]) ",
    "EXPR [ (-1, _74) 21 ]",
    "MEM (id: 0, read at: EXPR [ (1, _74) 0 ], value: EXPR [ (1, _75) 0 ]) ",
    "EXPR [ (-1, _76) 22 ]",
    "MEM (id: 0, read at: EXPR [ (1, _76) 0 ], value: EXPR [ (1, _77) 0 ]) ",
    "EXPR [ (-1, _78) 23 ]",
    "MEM (id: 0, read at: EXPR [ (1, _78) 0 ], value: EXPR [ (1, _79) 0 ]) ",
    "EXPR [ (-1, _80) 24 ]",
    "MEM (id: 0, read at: EXPR [ (1, _80) 0 ], value: EXPR [ (1, _81) 0 ]) ",
    "EXPR [ (-1, _82) 25 ]",
    "MEM (id: 0, read at: EXPR [ (1, _82) 0 ], value: EXPR [ (1, _83) 0 ]) ",
    "EXPR [ (-1, _84) 26 ]",
    "MEM (id: 0, read at: EXPR [ (1, _84) 0 ], value: EXPR [ (1, _85) 0 ]) ",
    "EXPR [ (-1, _86) 27 ]",
    "MEM (id: 0, read at: EXPR [ (1, _86) 0 ], value: EXPR [ (1, _87) 0 ]) ",
    "EXPR [ (-1, _88) 28 ]",
    "MEM (id: 0, read at: EXPR [ (1, _88) 0 ], value: EXPR [ (1, _89) 0 ]) ",
    "EXPR [ (-1, _90) 29 ]",
    "MEM (id: 0, read at: EXPR [ (1, _90) 0 ], value: EXPR [ (1, _91) 0 ]) ",
    "INIT (id: 1, len: 30, witnesses: [_33, _35, _37, _39, _41, _43, _45, _47, _49, _51, _53, _55, _57, _59, _61, _63, _65, _67, _69, _71, _73, _75, _77, _79, _81, _83, _85, _87, _89, _91])",
    "EXPR [ (-1, _0, _32) (1, _0) (1, _32) (-1, _92) 0 ]",
    "MEM (id: 1, write EXPR [ (1, _92) 0 ] at: EXPR [ (1, _31) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _34) 0 ], value: EXPR [ (1, _93) 0 ]) ",
    "EXPR [ (-1, _0, _1) (-1, _0, _2) (1, _0, _93) (1, _0) (1, _1) (1, _2) -1 ]",
    "",
    ""
  ],
  "debug_symbols": "ldfLasMwEIXhd9HaC7vWjCS/SinBFzkIjG18KRSTd68TEkihm395Zs5o8610mC42+/WSxn5aTfV5mGFq6y1N45kOU348Zutcj/e4bvWymUo0M3HsTKX5LTN9GuI5y29fmSlL2LewL7CvsO9g38N+YH2bw34B+9DXQl8LfS30tdDXQl8LfS30Fegr0Fegr0Bfgb4CfQX6CvQV6CvQV6GvQl+Fvgp9Ffoq9FXoq9BXoa9CXwd9HfR10NdBXwd9HfR10NdBXwd9HfT10NdDXw99PfT10NdDXw99PfT10NdD3wB9A/QN0DdA3wB9A/QN0Df861vk4XlQFPLn4gzNkoYhXS/v/45z/F0vqW6G+Iz9PrZv2+1nfm1e9/MytbHbl3h/6bE7n/8F",
  "file_map": {
    "50": {
      "source": "fn main(x: bool, mut y: [u32; 30]) {\n    if x {\n        y[0] = 1;\n    }\n\n    let z = y[0] + y[1];\n    assert(z == 1);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": []
}
