---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 8
        },
        "visibility": "private"
      },
      {
        "name": "nest",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/71XbW7bMAyl/JHWLQYPHXaBncCukzo/iy0rsAG7wP55CXIOH30VIiLPz0ybNlIJBLItinx8eqYVJwdz4eetCGMmc1OfxzA2l1kbMVaTEqdLhHNCspPTpnO7MFa03s/nEQuuKG/M+Otm2VdGfRHxdxXETBD/XuMXaeI3VyHOz3EaXyhvTn68Btc9gc8T+Hj7JNMmgHF0DrWq66+ff7Ucr+/CdUXxUugHMcXm/4uBP4PavP0YZcJzrNwafzMmqa29DXu1CfFKqu9rGBe+xnBtacDRXqd61xzlE8ollP9Gkmqj5fdK8TA/GXFXGFg/G3NaUy0vazAh540jXAXUmBtYM6MOvfZW0rNvYfQ6/E3xeJ/5WUbcZQaexP15pXtaytx0bgG5ESNbTveI2/PzB+KyH+dErWj+Wk5rrKI6UulIsaCOSqPeTObcLaDOkp61wBPrCPWXG89YR87Ak1hHD6wVNJ27gtzcU66pZpH3aewvxGU/oRwWr+i3GQ9jLXPtswZ1XQH32EP1G2t97709hrG50Kx+J3K6/3I/+y5TnKjfmO/THdWPufB7fSvHc0oxxsfSrw+cecvHIyesM8xfkv+vcH9j1FRcgHPfD+2+G/bDatjtltuBOfOWAU+x8w99t97eL7f9v1U3dA+v5sez2Etni3PfMV1rnek/6MzWWb3onDObS4OnPZfX957Z+Azy1m8PzmnPO6UNKzb2zE1YX8t8j4szYsXs5Zibe6f6b8OY+j+11Ts1l+f6P1HFY9INEwAA",
  "debug_symbols": "tZjRioMwEEX/Jc8+mMlMYvyVZVlsa4sgWqxdWEr/fXWp3ZLKLkO5L0JkzklguCHMxezqzfnw0XT7/mTKt4tp+201Nn03rS7XzGyGpm2bw8fjb5PPHyp+6k/HqpuXp7EaRlN6m5m625kyxIneN21tSsmv2VNh9LdCm/Nj5XtmKKLMLoeZLcxMMLODmRlmFpjZv2Qm5lslSZGqA05d4NQRpuYcp7Y4NeHUDqdmnFpwalwaGZdGxqWRcWkUXBrlxTT65b6mmKdqwqkdTs04teDUHqcOOPWLabw/FtzTY0EiTO1X0/jHw8VbLUBawGkB1gKiBMJqb5kWgh2lRNQSxWon2MpCkEsJqyZITTg1wWpC1IRXE0FNFFoirvZDaMmpUEwJUhOr/RB3J1xICVYT8s+pngmvJoKaKHTEdVp9VkNTbdr6Nl7Yn7vtw7Rh/DrWyeDhOPTbence6nkE8Tt9sHM2fZEFNx3Ezm0OnAU/7THt8w0=",
  "file_map": {
    "50": {
      "source": "fn main(x: u8, nest: bool) {\n    if nest {\n        let foo = unsafe_assert([x]);\n        assert(foo != 0);\n    }\n}\n\n#[no_predicates]\npub fn unsafe_assert<let N: u32>(msg: [u8; N]) -> u8 {\n    // Safety: testing context\n    let block = unsafe { get_block(msg) };\n    verify_block(msg, block);\n    block[0]\n}\n\nunconstrained fn get_block<let N: u32>(msg: [u8; N]) -> [u8; 2] {\n    let mut block: [u8; 2] = [0; 2];\n    block[0] = msg[0];\n    block\n}\n\nfn verify_block<let N: u32>(msg: [u8; N], block: [u8; 2]) {\n    assert_eq(block[0], msg[0]);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
