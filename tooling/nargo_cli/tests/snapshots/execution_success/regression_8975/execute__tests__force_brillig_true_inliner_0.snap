---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [],
    "return_type": {
      "abi_type": {
        "kind": "boolean"
      },
      "visibility": "public"
    },
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _0",
    "private parameters indices : []",
    "public parameters indices : []",
    "return value indices : [_0]",
    "BRILLIG CALL func 0: inputs: [], outputs: [_0]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(1), offset_address: Relative(2) }, Call { location: 12 }, Call { location: 13 }, Mov { destination: Direct(32836), source: Relative(1) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32836 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, Return, Call { location: 48 }, Mov { destination: Relative(1), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Integer(U1), value: 0 }, Store { destination_pointer: Relative(2), source: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(4) }, IndirectConst { destination_pointer: Relative(3), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Mov { destination: Relative(5), source: Relative(4) }, Store { destination_pointer: Relative(5), source: Relative(2) }, Store { destination_pointer: Relative(1), source: Relative(3) }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Store { destination_pointer: Relative(2), source: Relative(3) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 1 }, Jump { location: 34 }, Load { destination: Relative(5), source_pointer: Relative(1) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(4) }, Load { destination: Relative(6), source_pointer: Relative(7) }, Load { destination: Relative(5), source_pointer: Relative(6) }, JumpIf { condition: Relative(5), location: 40 }, Jump { location: 46 }, Load { destination: Relative(5), source_pointer: Relative(2) }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, JumpIf { condition: Relative(6), location: 45 }, Jump { location: 44 }, Jump { location: 34 }, Jump { location: 46 }, Const { destination: Relative(1), bit_size: Integer(U1), value: 1 }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 53 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "tZNLjoQgEEDvwtoFHwX1Kp2OQcUOCUFD6yQT492ntKRHF25MesMDql7xSWomramnV2V9179J+ZhJHaxz9lW5vtGj7T3szoSuA0tJKRLCMoREKESOKDZwyE8BDMERApEiMoREKARUyQDFBkERDAGeBICnABKhNqQUAZn5siQk3r0agzHr1Q+PgScOOhg/ktJPziXkR7tpS3oP2m8cdYAoTYjxLRAKdtaZdbYk/za9VmV0Zf6Rs7PNrm3G8l1nQl35/It+IaJf3PF5Wuw+z+gdX8Xv44rd8WX+8fkdv+C7L+jZf8JKNzacmmNZKwWra2f2ZTf55hAdf4cYic01hL4x7RTMWunQYTA+0jzJxHNZT/sD",
  "file_map": {
    "50": {
      "source": "fn main() -> pub bool {\n    // Safety:\n    unsafe {\n        func_1()\n    }\n    true\n}\nunconstrained fn func_1() {\n    func_2([&mut true])\n}\nunconstrained fn func_2(mut b: [&mut bool; 1]) {\n    b[0] = (&mut false);\n    {\n        let mut idx_c: u32 = 0;\n        while (*b[0]) {\n            if (idx_c == 0) {\n                break\n            }\n        }\n    };\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
