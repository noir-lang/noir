---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "field"
        },
        "visibility": "public"
      }
    ],
    "return_type": null,
    "error_types": {
      "986260048197077973": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "14990209321349310352": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "15764276373176857197": {
        "error_kind": "string",
        "string": "Stack too deep"
      },
      "16431471497789672479": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _1",
    "private parameters indices : [_0]",
    "public parameters indices : [_1]",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Mov { destination: Relative(1), source: Direct(32836) }, Mov { destination: Relative(2), source: Direct(32837) }, Call { location: 13 }, Call { location: 14 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 1663 }, Const { destination: Relative(5), bit_size: Field, value: 10 }, BinaryFieldOp { destination: Relative(6), op: Equals, lhs: Relative(2), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 20 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, Const { destination: Relative(2), bit_size: Field, value: 0 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(9) }, Mov { destination: Relative(6), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(8) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(7) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(7) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(8) }, Mov { destination: Relative(8), source: Relative(7) }, Store { destination_pointer: Relative(8), source: Relative(2) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(2) }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(1), rhs: Relative(5) }, Const { destination: Relative(8), bit_size: Field, value: 20 }, BinaryFieldOp { destination: Relative(9), op: Equals, lhs: Relative(1), rhs: Relative(8) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(13) }, Mov { destination: Relative(10), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(12) }, IndirectConst { destination_pointer: Relative(10), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(11) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(11) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(12) }, Mov { destination: Relative(12), source: Relative(11) }, Store { destination_pointer: Relative(12), source: Relative(2) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(2) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(5) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 3 }, JumpIf { condition: Relative(7), location: 81 }, Jump { location: 62 }, JumpIf { condition: Relative(9), location: 75 }, Jump { location: 64 }, Load { destination: Relative(15), source_pointer: Relative(10) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(16), rhs: Relative(15) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 70 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(15) }, Mov { destination: Relative(13), source: Relative(12) }, Mov { destination: Relative(14), source: Relative(10) }, Jump { location: 78 }, Mov { destination: Relative(13), source: Relative(11) }, Mov { destination: Relative(14), source: Relative(6) }, Jump { location: 78 }, Mov { destination: Relative(3), source: Relative(13) }, Mov { destination: Relative(4), source: Relative(14) }, Jump { location: 84 }, Mov { destination: Relative(3), source: Relative(11) }, Mov { destination: Relative(4), source: Relative(6) }, Jump { location: 84 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(12) }, JumpIf { condition: Relative(13), location: 88 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, Const { destination: Relative(3), bit_size: Integer(U32), value: 5 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, Load { destination: Relative(13), source_pointer: Relative(14) }, BinaryFieldOp { destination: Relative(4), op: Equals, lhs: Relative(13), rhs: Relative(5) }, JumpIf { condition: Relative(4), location: 95 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, Load { destination: Relative(4), source_pointer: Relative(6) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(4) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 101 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(4) }, Mov { destination: Relative(4), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(11) }, Mov { destination: Relative(14), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(6) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 4 }, JumpIf { condition: Relative(7), location: 143 }, Jump { location: 112 }, Load { destination: Relative(13), source_pointer: Relative(6) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(16), rhs: Relative(13) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 118 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(13) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 4 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(18) }, Mov { destination: Relative(6), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(17) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(13) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(13) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(17) }, Mov { destination: Relative(17), source: Relative(13) }, Store { destination_pointer: Relative(17), source: Relative(2) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(2) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(5) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(1) }, Store { destination_pointer: Relative(4), source: Relative(15) }, Store { destination_pointer: Relative(14), source: Relative(6) }, Jump { location: 172 }, Load { destination: Relative(13), source_pointer: Relative(6) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(16), rhs: Relative(13) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 149 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(13) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(18) }, Mov { destination: Relative(6), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(17) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(13) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(13) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(17) }, Mov { destination: Relative(17), source: Relative(13) }, Store { destination_pointer: Relative(17), source: Relative(2) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(2) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(1) }, Store { destination_pointer: Relative(4), source: Relative(12) }, Store { destination_pointer: Relative(14), source: Relative(6) }, Jump { location: 172 }, Load { destination: Relative(6), source_pointer: Relative(4) }, Load { destination: Relative(4), source_pointer: Relative(14) }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(6), rhs: Relative(15) }, JumpIf { condition: Relative(13), location: 178 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, Const { destination: Relative(6), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(4), rhs: Relative(6) }, Load { destination: Relative(13), source_pointer: Relative(14) }, Const { destination: Relative(4), bit_size: Field, value: 5 }, BinaryFieldOp { destination: Relative(14), op: Equals, lhs: Relative(13), rhs: Relative(4) }, JumpIf { condition: Relative(14), location: 186 }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(16) } }, Const { destination: Relative(14), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(17) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(16) }, IndirectConst { destination_pointer: Relative(13), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(16), source: Relative(14) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(16), rhs: Direct(2) }, Store { destination_pointer: Relative(16), source: Relative(14) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(16) }, Mov { destination: Relative(16), source: Relative(14) }, Store { destination_pointer: Relative(16), source: Relative(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(16), rhs: Direct(2) }, Store { destination_pointer: Relative(16), source: Relative(2) }, Mov { destination: Relative(14), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(11) }, Mov { destination: Relative(16), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(16), source: Relative(13) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 1 }, JumpIf { condition: Relative(7), location: 242 }, Jump { location: 212 }, Mov { destination: Relative(13), source: Relative(17) }, Jump { location: 214 }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Relative(3) }, JumpIf { condition: Relative(19), location: 218 }, Jump { location: 217 }, Jump { location: 271 }, Load { destination: Relative(19), source_pointer: Relative(14) }, Load { destination: Relative(20), source_pointer: Relative(16) }, Load { destination: Relative(21), source_pointer: Relative(20) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(23), op: Equals, bit_size: U32, lhs: Relative(22), rhs: Relative(21) }, Not { destination: Relative(23), source: Relative(23), bit_size: U1 }, JumpIf { condition: Relative(23), location: 226 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(21) }, Cast { destination: Relative(21), source: Relative(13), bit_size: Field }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(19) }, Mov { destination: Direct(32772), source: Relative(20) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(24), source: Direct(32774) }, Mov { destination: Relative(25), source: Direct(32775) }, Store { destination_pointer: Relative(25), source: Relative(21) }, Store { destination_pointer: Relative(14), source: Relative(23) }, Store { destination_pointer: Relative(16), source: Relative(24) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(18) }, Mov { destination: Relative(13), source: Relative(19) }, Jump { location: 214 }, Load { destination: Relative(19), source_pointer: Relative(13) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(20), rhs: Relative(19) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 248 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(19) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(22), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(22) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(21) }, IndirectConst { destination_pointer: Relative(13), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(19) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(19) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(21) }, Mov { destination: Relative(21), source: Relative(19) }, Store { destination_pointer: Relative(21), source: Relative(2) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(2) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(1) }, Store { destination_pointer: Relative(14), source: Relative(12) }, Store { destination_pointer: Relative(16), source: Relative(13) }, Jump { location: 271 }, Load { destination: Relative(13), source_pointer: Relative(14) }, Load { destination: Relative(14), source_pointer: Relative(16) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(16) }, JumpIf { condition: Relative(19), location: 278 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Const { destination: Relative(13), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(13) }, Load { destination: Relative(19), source_pointer: Relative(20) }, Const { destination: Relative(14), bit_size: Field, value: 4 }, BinaryFieldOp { destination: Relative(20), op: Equals, lhs: Relative(19), rhs: Relative(14) }, JumpIf { condition: Relative(20), location: 286 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Const { destination: Relative(19), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(21) }, Mov { destination: Relative(14), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(20) }, IndirectConst { destination_pointer: Relative(14), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(19) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(19) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(20) }, Mov { destination: Relative(20), source: Relative(19) }, Store { destination_pointer: Relative(20), source: Relative(2) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(2) }, Mov { destination: Relative(19), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(11) }, Mov { destination: Relative(20), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(14) }, JumpIf { condition: Relative(7), location: 341 }, Jump { location: 310 }, Load { destination: Relative(21), source_pointer: Relative(14) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(23), op: Equals, bit_size: U32, lhs: Relative(22), rhs: Relative(21) }, Not { destination: Relative(23), source: Relative(23), bit_size: U1 }, JumpIf { condition: Relative(23), location: 316 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(21) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 4 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(24) }, Mov { destination: Relative(14), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(23) }, IndirectConst { destination_pointer: Relative(14), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(21) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(21) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(23) }, Mov { destination: Relative(23), source: Relative(21) }, Store { destination_pointer: Relative(23), source: Relative(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(5) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(1) }, Store { destination_pointer: Relative(19), source: Relative(15) }, Store { destination_pointer: Relative(20), source: Relative(14) }, Jump { location: 370 }, Load { destination: Relative(21), source_pointer: Relative(14) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(23), op: Equals, bit_size: U32, lhs: Relative(22), rhs: Relative(21) }, Not { destination: Relative(23), source: Relative(23), bit_size: U1 }, JumpIf { condition: Relative(23), location: 347 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(21) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(24) }, Mov { destination: Relative(14), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(23) }, IndirectConst { destination_pointer: Relative(14), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(21) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(21) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(23) }, Mov { destination: Relative(23), source: Relative(21) }, Store { destination_pointer: Relative(23), source: Relative(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(1) }, Store { destination_pointer: Relative(19), source: Relative(12) }, Store { destination_pointer: Relative(20), source: Relative(14) }, Jump { location: 370 }, JumpIf { condition: Relative(9), location: 372 }, Jump { location: 393 }, Load { destination: Relative(14), source_pointer: Relative(19) }, Load { destination: Relative(21), source_pointer: Relative(20) }, Load { destination: Relative(22), source_pointer: Relative(21) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(22) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 380 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(22) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(14) }, Mov { destination: Direct(32772), source: Relative(21) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(24), source: Direct(32774) }, Mov { destination: Relative(25), source: Direct(32775) }, Store { destination_pointer: Relative(25), source: Relative(8) }, Store { destination_pointer: Relative(19), source: Relative(22) }, Store { destination_pointer: Relative(20), source: Relative(24) }, Jump { location: 393 }, Load { destination: Relative(14), source_pointer: Relative(19) }, Load { destination: Relative(21), source_pointer: Relative(20) }, Load { destination: Relative(22), source_pointer: Relative(21) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(22) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 401 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(22) }, Const { destination: Relative(22), bit_size: Field, value: 15 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(14) }, Mov { destination: Direct(32772), source: Relative(21) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(25), source: Direct(32774) }, Mov { destination: Relative(26), source: Direct(32775) }, Store { destination_pointer: Relative(26), source: Relative(22) }, Load { destination: Relative(14), source_pointer: Relative(25) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(14) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 418 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(25), source: Relative(14) }, Const { destination: Relative(14), bit_size: Field, value: 30 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(24) }, Mov { destination: Direct(32772), source: Relative(25) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(27), source: Direct(32774) }, Mov { destination: Relative(28), source: Direct(32775) }, Store { destination_pointer: Relative(28), source: Relative(14) }, Store { destination_pointer: Relative(19), source: Relative(26) }, Store { destination_pointer: Relative(20), source: Relative(27) }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(6) }, JumpIf { condition: Relative(19), location: 435 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(6) }, Load { destination: Relative(19), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(20), op: Equals, lhs: Relative(19), rhs: Relative(4) }, JumpIf { condition: Relative(20), location: 441 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(16) }, Load { destination: Relative(19), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(20), op: Equals, lhs: Relative(19), rhs: Relative(22) }, JumpIf { condition: Relative(20), location: 447 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Const { destination: Relative(19), bit_size: Integer(U32), value: 8 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(19) }, Load { destination: Relative(20), source_pointer: Relative(24) }, BinaryFieldOp { destination: Relative(24), op: Equals, lhs: Relative(20), rhs: Relative(14) }, JumpIf { condition: Relative(24), location: 454 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(25) } }, Const { destination: Relative(24), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(26) }, Mov { destination: Relative(20), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(25) }, IndirectConst { destination_pointer: Relative(20), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(25), source: Relative(24) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(25), rhs: Direct(2) }, Store { destination_pointer: Relative(25), source: Relative(24) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(25) }, Mov { destination: Relative(25), source: Relative(24) }, Store { destination_pointer: Relative(25), source: Relative(2) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(25), rhs: Direct(2) }, Store { destination_pointer: Relative(25), source: Relative(2) }, Mov { destination: Relative(24), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(11) }, Mov { destination: Relative(25), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(25), source: Relative(20) }, JumpIf { condition: Relative(7), location: 509 }, Jump { location: 478 }, Load { destination: Relative(21), source_pointer: Relative(20) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 484 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(21) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 4 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(27) }, Mov { destination: Relative(20), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(26) }, IndirectConst { destination_pointer: Relative(20), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(21) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(21) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(26) }, Mov { destination: Relative(26), source: Relative(21) }, Store { destination_pointer: Relative(26), source: Relative(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(5) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(1) }, Store { destination_pointer: Relative(24), source: Relative(15) }, Store { destination_pointer: Relative(25), source: Relative(20) }, Jump { location: 538 }, Load { destination: Relative(21), source_pointer: Relative(20) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 515 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(21) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(27) }, Mov { destination: Relative(20), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(26) }, IndirectConst { destination_pointer: Relative(20), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(21) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(21) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(26) }, Mov { destination: Relative(26), source: Relative(21) }, Store { destination_pointer: Relative(26), source: Relative(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(1) }, Store { destination_pointer: Relative(24), source: Relative(12) }, Store { destination_pointer: Relative(25), source: Relative(20) }, Jump { location: 538 }, Load { destination: Relative(20), source_pointer: Relative(24) }, Load { destination: Relative(21), source_pointer: Relative(25) }, Load { destination: Relative(23), source_pointer: Relative(21) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(27), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(23) }, Not { destination: Relative(27), source: Relative(27), bit_size: U1 }, JumpIf { condition: Relative(27), location: 546 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(23) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(20) }, Mov { destination: Direct(32772), source: Relative(21) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(27), source: Direct(32774) }, Mov { destination: Relative(28), source: Direct(32775) }, Store { destination_pointer: Relative(28), source: Relative(14) }, Store { destination_pointer: Relative(24), source: Relative(23) }, Store { destination_pointer: Relative(25), source: Relative(27) }, JumpIf { condition: Relative(9), location: 560 }, Jump { location: 579 }, Load { destination: Relative(20), source_pointer: Relative(27) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(20) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 566 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(20) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(23) }, Mov { destination: Direct(32772), source: Relative(27) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(26), source: Direct(32774) }, Mov { destination: Relative(28), source: Direct(32775) }, Store { destination_pointer: Relative(28), source: Relative(8) }, Store { destination_pointer: Relative(24), source: Relative(20) }, Store { destination_pointer: Relative(25), source: Relative(26) }, Jump { location: 579 }, Load { destination: Relative(20), source_pointer: Relative(24) }, Load { destination: Relative(21), source_pointer: Relative(25) }, Load { destination: Relative(23), source_pointer: Relative(21) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(27), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(23) }, Not { destination: Relative(27), source: Relative(27), bit_size: U1 }, JumpIf { condition: Relative(27), location: 587 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(23) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(20) }, Mov { destination: Direct(32772), source: Relative(21) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(27), source: Direct(32774) }, Mov { destination: Relative(28), source: Direct(32775) }, Store { destination_pointer: Relative(28), source: Relative(22) }, Store { destination_pointer: Relative(24), source: Relative(23) }, Store { destination_pointer: Relative(25), source: Relative(27) }, Const { destination: Relative(20), bit_size: Field, value: 50 }, JumpIf { condition: Relative(9), location: 621 }, Jump { location: 602 }, Load { destination: Relative(21), source_pointer: Relative(27) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(21) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 608 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(23) }, Mov { destination: Direct(32772), source: Relative(27) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(28), source: Direct(32774) }, Mov { destination: Relative(29), source: Direct(32775) }, Store { destination_pointer: Relative(29), source: Relative(20) }, Store { destination_pointer: Relative(24), source: Relative(21) }, Store { destination_pointer: Relative(25), source: Relative(28) }, Jump { location: 621 }, Load { destination: Relative(21), source_pointer: Relative(24) }, Load { destination: Relative(23), source_pointer: Relative(25) }, Load { destination: Relative(26), source_pointer: Relative(23) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(27), rhs: Relative(26) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 629 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(26) }, Const { destination: Relative(26), bit_size: Field, value: 60 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(21) }, Mov { destination: Direct(32772), source: Relative(23) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(29), source: Direct(32774) }, Mov { destination: Relative(30), source: Direct(32775) }, Store { destination_pointer: Relative(30), source: Relative(26) }, Store { destination_pointer: Relative(24), source: Relative(28) }, Store { destination_pointer: Relative(25), source: Relative(29) }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(19) }, JumpIf { condition: Relative(21), location: 646 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(23) } }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(6) }, Load { destination: Relative(21), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(21), rhs: Relative(4) }, JumpIf { condition: Relative(23), location: 652 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(16) }, Load { destination: Relative(21), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(21), rhs: Relative(14) }, JumpIf { condition: Relative(23), location: 658 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(19) }, Load { destination: Relative(21), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(21), rhs: Relative(22) }, JumpIf { condition: Relative(23), location: 664 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(13) }, Load { destination: Relative(21), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(21), rhs: Relative(20) }, JumpIf { condition: Relative(23), location: 670 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Const { destination: Relative(21), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(21) }, Load { destination: Relative(23), source_pointer: Relative(24) }, BinaryFieldOp { destination: Relative(21), op: Equals, lhs: Relative(23), rhs: Relative(26) }, JumpIf { condition: Relative(21), location: 677 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Const { destination: Relative(23), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(25) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(24) }, IndirectConst { destination_pointer: Relative(21), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(23) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(23) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(24) }, Mov { destination: Relative(24), source: Relative(23) }, Store { destination_pointer: Relative(24), source: Relative(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(2) }, Mov { destination: Relative(23), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(11) }, Mov { destination: Relative(24), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(21) }, JumpIf { condition: Relative(7), location: 732 }, Jump { location: 701 }, Load { destination: Relative(25), source_pointer: Relative(21) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(27), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(25) }, Not { destination: Relative(27), source: Relative(27), bit_size: U1 }, JumpIf { condition: Relative(27), location: 707 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(25), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(25) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 4 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(28) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(27) }, IndirectConst { destination_pointer: Relative(21), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(25) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(25) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(27) }, Mov { destination: Relative(27), source: Relative(25) }, Store { destination_pointer: Relative(27), source: Relative(2) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(2) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(5) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(1) }, Store { destination_pointer: Relative(23), source: Relative(15) }, Store { destination_pointer: Relative(24), source: Relative(21) }, Jump { location: 761 }, Load { destination: Relative(25), source_pointer: Relative(21) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(27), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(25) }, Not { destination: Relative(27), source: Relative(27), bit_size: U1 }, JumpIf { condition: Relative(27), location: 738 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(25), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(25) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(28) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(27) }, IndirectConst { destination_pointer: Relative(21), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(25) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(25) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(27) }, Mov { destination: Relative(27), source: Relative(25) }, Store { destination_pointer: Relative(27), source: Relative(2) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(2) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(1) }, Store { destination_pointer: Relative(23), source: Relative(12) }, Store { destination_pointer: Relative(24), source: Relative(21) }, Jump { location: 761 }, Load { destination: Relative(21), source_pointer: Relative(23) }, Load { destination: Relative(25), source_pointer: Relative(24) }, Load { destination: Relative(26), source_pointer: Relative(25) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(27), rhs: Relative(26) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 769 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(25), source: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(21) }, Mov { destination: Direct(32772), source: Relative(25) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(28), source: Direct(32774) }, Mov { destination: Relative(29), source: Direct(32775) }, Store { destination_pointer: Relative(29), source: Relative(14) }, Store { destination_pointer: Relative(23), source: Relative(26) }, Store { destination_pointer: Relative(24), source: Relative(28) }, JumpIf { condition: Relative(9), location: 783 }, Jump { location: 802 }, Load { destination: Relative(21), source_pointer: Relative(28) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(27), op: Equals, bit_size: U32, lhs: Relative(25), rhs: Relative(21) }, Not { destination: Relative(27), source: Relative(27), bit_size: U1 }, JumpIf { condition: Relative(27), location: 789 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(26) }, Mov { destination: Direct(32772), source: Relative(28) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(27), source: Direct(32774) }, Mov { destination: Relative(29), source: Direct(32775) }, Store { destination_pointer: Relative(29), source: Relative(8) }, Store { destination_pointer: Relative(23), source: Relative(21) }, Store { destination_pointer: Relative(24), source: Relative(27) }, Jump { location: 802 }, Load { destination: Relative(21), source_pointer: Relative(23) }, Load { destination: Relative(23), source_pointer: Relative(24) }, BinaryIntOp { destination: Relative(24), op: LessThan, bit_size: U32, lhs: Relative(17), rhs: Relative(21) }, Const { destination: Relative(25), bit_size: Integer(U1), value: 1 }, JumpIf { condition: Relative(24), location: 808 }, Call { location: 1728 }, BinaryIntOp { destination: Relative(24), op: Sub, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(21) }, Mov { destination: Direct(32772), source: Relative(23) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1731 }, Mov { destination: Relative(26), source: Direct(32774) }, Mov { destination: Relative(28), source: Direct(32775) }, Load { destination: Relative(27), source_pointer: Relative(28) }, Load { destination: Relative(21), source_pointer: Relative(26) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 822 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(15) }, JumpIf { condition: Relative(21), location: 828 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, BinaryFieldOp { destination: Relative(21), op: Equals, lhs: Relative(27), rhs: Relative(14) }, JumpIf { condition: Relative(21), location: 832 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, BinaryIntOp { destination: Relative(21), op: Sub, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(15) }, Mov { destination: Direct(32772), source: Relative(26) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1731 }, Mov { destination: Relative(24), source: Direct(32774) }, Mov { destination: Relative(28), source: Direct(32775) }, Load { destination: Relative(27), source_pointer: Relative(28) }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(12) }, JumpIf { condition: Relative(26), location: 844 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, BinaryFieldOp { destination: Relative(21), op: Equals, lhs: Relative(27), rhs: Relative(1) }, JumpIf { condition: Relative(21), location: 848 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Const { destination: Relative(26), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(28) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(27) }, IndirectConst { destination_pointer: Relative(21), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(26) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(26) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(27) }, Mov { destination: Relative(27), source: Relative(26) }, Store { destination_pointer: Relative(27), source: Relative(2) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(2) }, Mov { destination: Relative(26), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(11) }, Mov { destination: Relative(27), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(21) }, JumpIf { condition: Relative(7), location: 903 }, Jump { location: 872 }, Load { destination: Relative(23), source_pointer: Relative(21) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(23) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 878 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(23) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 4 }, Const { destination: Relative(29), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(29) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(28) }, IndirectConst { destination_pointer: Relative(21), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(23) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(23) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(28) }, Mov { destination: Relative(28), source: Relative(23) }, Store { destination_pointer: Relative(28), source: Relative(2) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(2) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(5) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(1) }, Store { destination_pointer: Relative(26), source: Relative(15) }, Store { destination_pointer: Relative(27), source: Relative(21) }, Jump { location: 932 }, Load { destination: Relative(23), source_pointer: Relative(21) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(23) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 909 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(23) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(29), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(29) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(28) }, IndirectConst { destination_pointer: Relative(21), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(23) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(23) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(28) }, Mov { destination: Relative(28), source: Relative(23) }, Store { destination_pointer: Relative(28), source: Relative(2) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(2) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(1) }, Store { destination_pointer: Relative(26), source: Relative(12) }, Store { destination_pointer: Relative(27), source: Relative(21) }, Jump { location: 932 }, Load { destination: Relative(21), source_pointer: Relative(26) }, Load { destination: Relative(23), source_pointer: Relative(27) }, Load { destination: Relative(24), source_pointer: Relative(23) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(29), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(24) }, Not { destination: Relative(29), source: Relative(29), bit_size: U1 }, JumpIf { condition: Relative(29), location: 940 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(21) }, Mov { destination: Direct(32772), source: Relative(23) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(29), source: Direct(32774) }, Mov { destination: Relative(30), source: Direct(32775) }, Store { destination_pointer: Relative(30), source: Relative(14) }, Store { destination_pointer: Relative(26), source: Relative(24) }, Store { destination_pointer: Relative(27), source: Relative(29) }, JumpIf { condition: Relative(9), location: 954 }, Jump { location: 989 }, Load { destination: Relative(21), source_pointer: Relative(29) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 960 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(24) }, Mov { destination: Direct(32772), source: Relative(29) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(28), source: Direct(32774) }, Mov { destination: Relative(30), source: Direct(32775) }, Store { destination_pointer: Relative(30), source: Relative(8) }, Load { destination: Relative(24), source_pointer: Relative(28) }, Const { destination: Relative(29), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(29), rhs: Relative(24) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 976 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(21) }, Mov { destination: Direct(32772), source: Relative(28) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(30), source: Direct(32774) }, Mov { destination: Relative(31), source: Direct(32775) }, Store { destination_pointer: Relative(31), source: Relative(22) }, Store { destination_pointer: Relative(26), source: Relative(24) }, Store { destination_pointer: Relative(27), source: Relative(30) }, Jump { location: 989 }, Load { destination: Relative(21), source_pointer: Relative(26) }, Load { destination: Relative(23), source_pointer: Relative(27) }, Load { destination: Relative(24), source_pointer: Relative(23) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(29), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(24) }, Not { destination: Relative(29), source: Relative(29), bit_size: U1 }, JumpIf { condition: Relative(29), location: 997 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(18) }, BinaryIntOp { destination: Relative(29), op: LessThanEquals, bit_size: U32, lhs: Relative(21), rhs: Relative(24) }, JumpIf { condition: Relative(29), location: 1003 }, Call { location: 1767 }, BinaryIntOp { destination: Relative(29), op: LessThan, bit_size: U32, lhs: Relative(18), rhs: Relative(24) }, JumpIf { condition: Relative(29), location: 1006 }, Call { location: 1728 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(30), op: Mul, bit_size: U32, lhs: Relative(30), rhs: Relative(18) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(23) }, Mov { destination: Direct(32772), source: Relative(30) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1770 }, Mov { destination: Relative(29), source: Direct(32774) }, Mov { destination: Relative(31), source: Direct(32775) }, Store { destination_pointer: Relative(31), source: Relative(20) }, Load { destination: Relative(21), source_pointer: Relative(29) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 1022 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(18) }, BinaryIntOp { destination: Relative(30), op: LessThanEquals, bit_size: U32, lhs: Relative(24), rhs: Relative(21) }, JumpIf { condition: Relative(30), location: 1028 }, Call { location: 1767 }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(6), rhs: Relative(21) }, JumpIf { condition: Relative(30), location: 1031 }, Call { location: 1728 }, Const { destination: Relative(21), bit_size: Field, value: 100 }, Const { destination: Relative(32), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(32), op: Mul, bit_size: U32, lhs: Relative(32), rhs: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(29) }, Mov { destination: Direct(32772), source: Relative(32) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1770 }, Mov { destination: Relative(31), source: Direct(32774) }, Mov { destination: Relative(33), source: Direct(32775) }, Store { destination_pointer: Relative(33), source: Relative(21) }, Store { destination_pointer: Relative(26), source: Relative(30) }, Store { destination_pointer: Relative(27), source: Relative(31) }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(30), rhs: Relative(16) }, JumpIf { condition: Relative(24), location: 1048 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(31), rhs: Relative(15) }, Load { destination: Relative(24), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(24), rhs: Relative(20) }, JumpIf { condition: Relative(26), location: 1054 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(31), rhs: Relative(3) }, Load { destination: Relative(24), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(24), rhs: Relative(2) }, JumpIf { condition: Relative(26), location: 1060 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(31), rhs: Relative(19) }, Load { destination: Relative(24), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(24), rhs: Relative(14) }, JumpIf { condition: Relative(19), location: 1066 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(31), rhs: Relative(13) }, Load { destination: Relative(14), source_pointer: Relative(19) }, BinaryFieldOp { destination: Relative(13), op: Equals, lhs: Relative(14), rhs: Relative(21) }, JumpIf { condition: Relative(13), location: 1072 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, Const { destination: Relative(14), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(21) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(19) }, IndirectConst { destination_pointer: Relative(13), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(14) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(14) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(19) }, Mov { destination: Relative(19), source: Relative(14) }, Store { destination_pointer: Relative(19), source: Relative(2) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(2) }, Mov { destination: Relative(14), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(11) }, Mov { destination: Relative(19), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(13) }, JumpIf { condition: Relative(7), location: 1127 }, Jump { location: 1096 }, Load { destination: Relative(21), source_pointer: Relative(13) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 1102 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(21) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 4 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(26) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(24) }, IndirectConst { destination_pointer: Relative(13), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(21) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(21) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(24) }, Mov { destination: Relative(24), source: Relative(21) }, Store { destination_pointer: Relative(24), source: Relative(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(5) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(1) }, Store { destination_pointer: Relative(14), source: Relative(15) }, Store { destination_pointer: Relative(19), source: Relative(13) }, Jump { location: 1156 }, Load { destination: Relative(21), source_pointer: Relative(13) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 1133 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(21) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(26) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(24) }, IndirectConst { destination_pointer: Relative(13), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(21) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(21) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(24) }, Mov { destination: Relative(24), source: Relative(21) }, Store { destination_pointer: Relative(24), source: Relative(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(1) }, Store { destination_pointer: Relative(14), source: Relative(12) }, Store { destination_pointer: Relative(19), source: Relative(13) }, Jump { location: 1156 }, Load { destination: Relative(13), source_pointer: Relative(14) }, Load { destination: Relative(14), source_pointer: Relative(19) }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(11), rhs: Relative(13) }, JumpIf { condition: Relative(19), location: 1161 }, Call { location: 1728 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(23), op: Mul, bit_size: U32, lhs: Relative(23), rhs: Relative(11) }, BinaryIntOp { destination: Relative(19), op: Sub, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(27) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(23) }, Load { destination: Relative(24), source_pointer: Relative(26) }, Mov { destination: Direct(32771), source: Relative(14) }, Mov { destination: Direct(32772), source: Relative(23) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1839 }, Mov { destination: Relative(21), source: Direct(32774) }, Load { destination: Relative(13), source_pointer: Relative(21) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(23), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(13) }, Not { destination: Relative(23), source: Relative(23), bit_size: U1 }, JumpIf { condition: Relative(23), location: 1179 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(13) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(19) }, Mov { destination: Relative(23), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(21) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(24), rhs: Relative(5) }, JumpIf { condition: Relative(27), location: 1191 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, JumpIf { condition: Relative(9), location: 1193 }, Jump { location: 1212 }, Load { destination: Relative(14), source_pointer: Relative(21) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(14) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 1199 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(14) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(19) }, Mov { destination: Direct(32772), source: Relative(21) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(26), source: Direct(32774) }, Mov { destination: Relative(27), source: Direct(32775) }, Store { destination_pointer: Relative(27), source: Relative(8) }, Store { destination_pointer: Relative(13), source: Relative(14) }, Store { destination_pointer: Relative(23), source: Relative(26) }, Jump { location: 1212 }, Load { destination: Relative(8), source_pointer: Relative(13) }, Load { destination: Relative(14), source_pointer: Relative(23) }, Load { destination: Relative(19), source_pointer: Relative(14) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(19) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 1220 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(8) }, Mov { destination: Direct(32772), source: Relative(14) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(24), source: Direct(32774) }, Mov { destination: Relative(26), source: Direct(32775) }, Store { destination_pointer: Relative(26), source: Relative(22) }, Store { destination_pointer: Relative(13), source: Relative(19) }, Store { destination_pointer: Relative(23), source: Relative(24) }, JumpIf { condition: Relative(9), location: 1253 }, Jump { location: 1234 }, Load { destination: Relative(8), source_pointer: Relative(24) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(8) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 1240 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(19) }, Mov { destination: Direct(32772), source: Relative(24) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(21), source: Direct(32774) }, Mov { destination: Relative(22), source: Direct(32775) }, Store { destination_pointer: Relative(22), source: Relative(20) }, Store { destination_pointer: Relative(13), source: Relative(8) }, Store { destination_pointer: Relative(23), source: Relative(21) }, Jump { location: 1253 }, Load { destination: Relative(19), source_pointer: Relative(13) }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(3) }, JumpIf { condition: Relative(13), location: 1258 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Const { destination: Relative(19), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(21) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(20) }, IndirectConst { destination_pointer: Relative(13), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(19) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(19) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(20) }, Mov { destination: Relative(20), source: Relative(19) }, Store { destination_pointer: Relative(20), source: Relative(2) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(2) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(1), rhs: Relative(4) }, JumpIf { condition: Relative(19), location: 1306 }, Jump { location: 1277 }, JumpIf { condition: Relative(9), location: 1300 }, Jump { location: 1279 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(26) }, Mov { destination: Relative(22), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(24) }, IndirectConst { destination_pointer: Relative(22), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(23) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(23) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(24) }, Mov { destination: Relative(24), source: Relative(23) }, Store { destination_pointer: Relative(24), source: Relative(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(4) }, Mov { destination: Relative(20), source: Relative(12) }, Mov { destination: Relative(21), source: Relative(22) }, Jump { location: 1303 }, Mov { destination: Relative(20), source: Relative(11) }, Mov { destination: Relative(21), source: Relative(13) }, Jump { location: 1303 }, Mov { destination: Relative(8), source: Relative(20) }, Mov { destination: Relative(14), source: Relative(21) }, Jump { location: 1309 }, Mov { destination: Relative(8), source: Relative(11) }, Mov { destination: Relative(14), source: Relative(13) }, Jump { location: 1309 }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(17), rhs: Relative(8) }, JumpIf { condition: Relative(20), location: 1312 }, Call { location: 1728 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(12) }, Load { destination: Relative(20), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(21), op: Equals, lhs: Relative(20), rhs: Relative(2) }, JumpIf { condition: Relative(21), location: 1318 }, Const { destination: Relative(22), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(22) } }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(18), rhs: Relative(8) }, JumpIf { condition: Relative(20), location: 1321 }, Call { location: 1728 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(15) }, Load { destination: Relative(20), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(14), op: Equals, lhs: Relative(20), rhs: Relative(2) }, JumpIf { condition: Relative(14), location: 1327 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(11) }, JumpIf { condition: Relative(14), location: 1331 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Load { destination: Relative(8), source_pointer: Relative(13) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(20), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(8) }, Not { destination: Relative(20), source: Relative(20), bit_size: U1 }, JumpIf { condition: Relative(20), location: 1337 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(8) }, Mov { destination: Relative(8), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(11) }, Mov { destination: Relative(20), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(13) }, JumpIf { condition: Relative(19), location: 1378 }, Jump { location: 1347 }, Load { destination: Relative(14), source_pointer: Relative(13) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(22), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(14) }, Not { destination: Relative(22), source: Relative(22), bit_size: U1 }, JumpIf { condition: Relative(22), location: 1353 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(14) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 4 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(23) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(22) }, IndirectConst { destination_pointer: Relative(13), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(14) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(14) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(22) }, Mov { destination: Relative(22), source: Relative(14) }, Store { destination_pointer: Relative(22), source: Relative(2) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(2) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(1) }, Store { destination_pointer: Relative(8), source: Relative(15) }, Store { destination_pointer: Relative(20), source: Relative(13) }, Jump { location: 1407 }, Load { destination: Relative(14), source_pointer: Relative(13) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(22), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(14) }, Not { destination: Relative(22), source: Relative(22), bit_size: U1 }, JumpIf { condition: Relative(22), location: 1384 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(14) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(23) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(22) }, IndirectConst { destination_pointer: Relative(13), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(14) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(14) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(22) }, Mov { destination: Relative(22), source: Relative(14) }, Store { destination_pointer: Relative(22), source: Relative(2) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(2) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(1) }, Store { destination_pointer: Relative(8), source: Relative(12) }, Store { destination_pointer: Relative(20), source: Relative(13) }, Jump { location: 1407 }, Load { destination: Relative(13), source_pointer: Relative(8) }, Load { destination: Relative(8), source_pointer: Relative(20) }, BinaryIntOp { destination: Relative(14), op: LessThan, bit_size: U32, lhs: Relative(11), rhs: Relative(13) }, JumpIf { condition: Relative(14), location: 1412 }, Call { location: 1728 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(3) }, Load { destination: Relative(14), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(14), rhs: Relative(4) }, JumpIf { condition: Relative(8), location: 1418 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(12) }, JumpIf { condition: Relative(8), location: 1422 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, Const { destination: Relative(13), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(20) }, Mov { destination: Relative(8), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(14) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(13) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(13) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(14) }, Mov { destination: Relative(14), source: Relative(13) }, Store { destination_pointer: Relative(14), source: Relative(2) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(2) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(11) }, Mov { destination: Relative(14), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(8) }, JumpIf { condition: Relative(19), location: 1476 }, Jump { location: 1446 }, Mov { destination: Relative(8), source: Relative(17) }, Jump { location: 1448 }, BinaryIntOp { destination: Relative(17), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(3) }, JumpIf { condition: Relative(17), location: 1452 }, Jump { location: 1451 }, Jump { location: 1505 }, Load { destination: Relative(17), source_pointer: Relative(13) }, Load { destination: Relative(19), source_pointer: Relative(14) }, Load { destination: Relative(20), source_pointer: Relative(19) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(22), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(20) }, Not { destination: Relative(22), source: Relative(22), bit_size: U1 }, JumpIf { condition: Relative(22), location: 1460 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(20) }, Cast { destination: Relative(20), source: Relative(8), bit_size: Field }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(17) }, Mov { destination: Direct(32772), source: Relative(19) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(23), source: Direct(32774) }, Mov { destination: Relative(24), source: Direct(32775) }, Store { destination_pointer: Relative(24), source: Relative(20) }, Store { destination_pointer: Relative(13), source: Relative(22) }, Store { destination_pointer: Relative(14), source: Relative(23) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(18) }, Mov { destination: Relative(8), source: Relative(17) }, Jump { location: 1448 }, Load { destination: Relative(17), source_pointer: Relative(8) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(18), rhs: Relative(17) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 1482 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(17) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(20) }, Mov { destination: Relative(8), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(19) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(17) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(17) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(19) }, Mov { destination: Relative(19), source: Relative(17) }, Store { destination_pointer: Relative(19), source: Relative(2) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(2) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(1) }, Store { destination_pointer: Relative(13), source: Relative(12) }, Store { destination_pointer: Relative(14), source: Relative(8) }, Jump { location: 1505 }, Load { destination: Relative(18), source_pointer: Relative(13) }, Load { destination: Relative(13), source_pointer: Relative(14) }, BinaryIntOp { destination: Relative(14), op: LessThan, bit_size: U32, lhs: Relative(11), rhs: Relative(18) }, JumpIf { condition: Relative(14), location: 1510 }, Call { location: 1728 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(3) }, Load { destination: Relative(14), source_pointer: Relative(19) }, BinaryFieldOp { destination: Relative(13), op: Equals, lhs: Relative(14), rhs: Relative(4) }, JumpIf { condition: Relative(13), location: 1516 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(18), rhs: Relative(12) }, JumpIf { condition: Relative(13), location: 1520 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, Const { destination: Relative(13), bit_size: Integer(U32), value: 256 }, Const { destination: Relative(18), bit_size: Integer(U1), value: 0 }, Mov { destination: Relative(14), source: Direct(1) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(19) }, IndirectConst { destination_pointer: Relative(14), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 32 }, BlackBox(ToRadix { input: Relative(1), radix: Relative(13), output_pointer: Relative(19), num_limbs: Relative(20), output_bits: Relative(18) }), BinaryFieldOp { destination: Relative(13), op: Equals, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(20) }, Mov { destination: Relative(1), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(19) }, IndirectConst { destination_pointer: Relative(1), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(18) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(18) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(19) }, Mov { destination: Relative(19), source: Relative(18) }, Store { destination_pointer: Relative(19), source: Relative(2) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(2) }, JumpIf { condition: Relative(7), location: 1561 }, Jump { location: 1548 }, Not { destination: Relative(7), source: Relative(9), bit_size: U1 }, Cast { destination: Relative(14), source: Relative(9), bit_size: Integer(U32) }, Cast { destination: Relative(18), source: Relative(7), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(19), op: Mul, bit_size: U32, lhs: Relative(14), rhs: Relative(11) }, BinaryIntOp { destination: Relative(11), op: Mul, bit_size: U32, lhs: Relative(18), rhs: Relative(12) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(11) }, ConditionalMov { destination: Relative(18), source_a: Relative(1), source_b: Relative(10), condition: Relative(9) }, Mov { destination: Direct(32771), source: Relative(18) }, Call { location: 1892 }, Mov { destination: Relative(11), source: Direct(32772) }, Mov { destination: Relative(8), source: Relative(14) }, Mov { destination: Relative(17), source: Relative(11) }, Jump { location: 1564 }, Mov { destination: Relative(8), source: Relative(11) }, Mov { destination: Relative(17), source: Relative(1) }, Jump { location: 1564 }, Mov { destination: Relative(1), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(1), source: Relative(8) }, Mov { destination: Relative(7), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(17) }, JumpIf { condition: Relative(13), location: 1607 }, Jump { location: 1572 }, Load { destination: Relative(9), source_pointer: Relative(17) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(11), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(9) }, Not { destination: Relative(11), source: Relative(11), bit_size: U1 }, JumpIf { condition: Relative(11), location: 1578 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(9) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(8) }, Mov { destination: Direct(32772), source: Relative(17) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(11), source: Direct(32774) }, Mov { destination: Relative(13), source: Direct(32775) }, Store { destination_pointer: Relative(13), source: Relative(4) }, Load { destination: Relative(8), source_pointer: Relative(11) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(8) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 1594 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(11), source: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(9) }, Mov { destination: Direct(32772), source: Relative(11) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(14), source: Direct(32774) }, Mov { destination: Relative(17), source: Direct(32775) }, Store { destination_pointer: Relative(17), source: Relative(5) }, Store { destination_pointer: Relative(1), source: Relative(8) }, Store { destination_pointer: Relative(7), source: Relative(14) }, Jump { location: 1626 }, Load { destination: Relative(9), source_pointer: Relative(17) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(11), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(9) }, Not { destination: Relative(11), source: Relative(11), bit_size: U1 }, JumpIf { condition: Relative(11), location: 1613 }, Call { location: 1669 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(9) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(8) }, Mov { destination: Direct(32772), source: Relative(17) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1672 }, Mov { destination: Relative(11), source: Direct(32774) }, Mov { destination: Relative(13), source: Direct(32775) }, Store { destination_pointer: Relative(13), source: Relative(4) }, Store { destination_pointer: Relative(1), source: Relative(9) }, Store { destination_pointer: Relative(7), source: Relative(11) }, Jump { location: 1626 }, Load { destination: Relative(8), source_pointer: Relative(1) }, Load { destination: Relative(1), source_pointer: Relative(7) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(3) }, JumpIf { condition: Relative(7), location: 1632 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(12) }, Load { destination: Relative(7), source_pointer: Relative(8) }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(7), rhs: Relative(2) }, JumpIf { condition: Relative(8), location: 1638 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(15) }, Load { destination: Relative(7), source_pointer: Relative(8) }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(7), rhs: Relative(2) }, JumpIf { condition: Relative(8), location: 1644 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(3) }, Load { destination: Relative(2), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(2), rhs: Relative(5) }, JumpIf { condition: Relative(3), location: 1650 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(6) }, Load { destination: Relative(2), source_pointer: Relative(3) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(2), rhs: Relative(4) }, JumpIf { condition: Relative(3), location: 1656 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(6) } }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(16) }, Load { destination: Relative(2), source_pointer: Relative(3) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(2), rhs: Relative(5) }, JumpIf { condition: Relative(1), location: 1662 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 1668 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 15764276373176857197 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 986260048197077973 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32776), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Load { destination: Direct(32778), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32781), op: LessThanEquals, bit_size: U32, lhs: Direct(32780), rhs: Direct(32778) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, JumpIf { condition: Direct(32781), location: 1683 }, Jump { location: 1700 }, JumpIf { condition: Direct(32782), location: 1685 }, Jump { location: 1689 }, Mov { destination: Direct(32774), source: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, Jump { location: 1699 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32784) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32778) }, Jump { location: 1699 }, Jump { location: 1712 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32783), op: Mul, bit_size: U32, lhs: Direct(32780), rhs: Direct(32784) }, Const { destination: Direct(32785), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32785) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32784) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32783) }, Jump { location: 1712 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32772), rhs: Direct(32774) }, JumpIf { condition: Direct(32782), location: 1726 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32777) }, Mov { destination: Direct(32785), source: Direct(32779) }, Mov { destination: Direct(32786), source: Direct(32781) }, BinaryIntOp { destination: Direct(32787), op: Equals, bit_size: U32, lhs: Direct(32785), rhs: Direct(32784) }, JumpIf { condition: Direct(32787), location: 1726 }, Load { destination: Direct(32783), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32786), source: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, Jump { location: 1719 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32777) }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 16431471497789672479 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, BinaryIntOp { destination: Direct(32776), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32777), op: Sub, bit_size: U32, lhs: Direct(32776), rhs: Direct(32773) }, Load { destination: Direct(32778), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32779), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(32781) }, JumpIf { condition: Direct(32779), location: 1739 }, Jump { location: 1743 }, Mov { destination: Direct(32774), source: Direct(32772) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, Jump { location: 1765 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32782) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32781) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32777) }, Mov { destination: Direct(32784), source: Direct(32780) }, Mov { destination: Direct(32785), source: Direct(32781) }, BinaryIntOp { destination: Direct(32786), op: Equals, bit_size: U32, lhs: Direct(32784), rhs: Direct(32783) }, JumpIf { condition: Direct(32786), location: 1764 }, Load { destination: Direct(32782), source_pointer: Direct(32784) }, Store { destination_pointer: Direct(32785), source: Direct(32782) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, Jump { location: 1757 }, Jump { location: 1765 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32777) }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14990209321349310352 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32776), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32777), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Load { destination: Direct(32778), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32781), op: LessThanEquals, bit_size: U32, lhs: Direct(32780), rhs: Direct(32778) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, JumpIf { condition: Direct(32781), location: 1781 }, Jump { location: 1798 }, JumpIf { condition: Direct(32782), location: 1783 }, Jump { location: 1787 }, Mov { destination: Direct(32774), source: Direct(32771) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, Jump { location: 1797 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32784) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32778) }, Jump { location: 1797 }, Jump { location: 1810 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32783), op: Mul, bit_size: U32, lhs: Direct(32780), rhs: Direct(32784) }, Const { destination: Direct(32785), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32785) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32784) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32783) }, Jump { location: 1810 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32771), rhs: Direct(32774) }, JumpIf { condition: Direct(32782), location: 1824 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, Mov { destination: Direct(32785), source: Direct(32779) }, Mov { destination: Direct(32786), source: Direct(32781) }, BinaryIntOp { destination: Direct(32787), op: Equals, bit_size: U32, lhs: Direct(32785), rhs: Direct(32784) }, JumpIf { condition: Direct(32787), location: 1824 }, Load { destination: Direct(32783), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32786), source: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, Jump { location: 1817 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32775), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32785), op: Sub, bit_size: U32, lhs: Direct(32777), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32786), op: Sub, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(32786) }, BinaryIntOp { destination: Direct(32788), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32786) }, BinaryIntOp { destination: Direct(32786), op: LessThan, bit_size: U32, lhs: Direct(32788), rhs: Direct(32783) }, JumpIf { condition: Direct(32786), location: 1838 }, Load { destination: Direct(32789), source_pointer: Direct(32788) }, Store { destination_pointer: Direct(32787), source: Direct(32789) }, BinaryIntOp { destination: Direct(32788), op: Sub, bit_size: U32, lhs: Direct(32788), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Sub, bit_size: U32, lhs: Direct(32787), rhs: Direct(2) }, Jump { location: 1831 }, Return, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32775), source_pointer: Direct(32775) }, BinaryIntOp { destination: Direct(32776), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32773) }, Load { destination: Direct(32777), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Const { destination: Direct(32780), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32780) }, JumpIf { condition: Direct(32778), location: 1848 }, Jump { location: 1854 }, Mov { destination: Direct(32774), source: Direct(32771) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32781) }, Jump { location: 1876 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(32782) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32781) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32781) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, Mov { destination: Direct(32783), source: Direct(32779) }, Mov { destination: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32785), op: Equals, bit_size: U32, lhs: Direct(32783), rhs: Direct(32782) }, JumpIf { condition: Direct(32785), location: 1875 }, Load { destination: Direct(32781), source_pointer: Direct(32783) }, Store { destination_pointer: Direct(32784), source: Direct(32781) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Jump { location: 1868 }, Jump { location: 1876 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32783), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32783) }, Mov { destination: Direct(32786), source: Direct(32781) }, Mov { destination: Direct(32787), source: Direct(32782) }, BinaryIntOp { destination: Direct(32788), op: Equals, bit_size: U32, lhs: Direct(32786), rhs: Direct(32785) }, JumpIf { condition: Direct(32788), location: 1891 }, Load { destination: Direct(32784), source_pointer: Direct(32786) }, Store { destination_pointer: Direct(32787), source: Direct(32784) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Add, bit_size: U32, lhs: Direct(32787), rhs: Direct(2) }, Jump { location: 1884 }, Return, Load { destination: Direct(32773), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32774), op: Equals, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, JumpIf { condition: Direct(32774), location: 1896 }, Jump { location: 1898 }, Mov { destination: Direct(32772), source: Direct(32771) }, Jump { location: 1917 }, Const { destination: Direct(32776), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32776) }, Load { destination: Direct(32775), source_pointer: Direct(32775) }, Const { destination: Direct(32776), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32775), rhs: Direct(32776) }, Mov { destination: Direct(32772), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32775) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32775) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 1915 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 1908 }, IndirectConst { destination_pointer: Direct(32772), bit_size: Integer(U32), value: 1 }, Jump { location: 1917 }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
