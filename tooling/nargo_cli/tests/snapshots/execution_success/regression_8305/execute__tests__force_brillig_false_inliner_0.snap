---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 32
      },
      "visibility": "public"
    },
    "error_types": {
      "14990209321349310352": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _7",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1]",
    "BLACKBOX::RANGE [_0]:32 bits []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 2147483648 ], EXPR [ 4294967296 ]], outputs: [_2, _3]",
    "BLACKBOX::RANGE [_2]:1 bits []",
    "BLACKBOX::RANGE [_3]:32 bits []",
    "EXPR [ (1, _0) (-4294967296, _2) (-1, _3) 2147483648 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ], EXPR [ 4294967296 ]], outputs: [_4, _5]",
    "BLACKBOX::RANGE [_4]:1 bits []",
    "BLACKBOX::RANGE [_5]:32 bits []",
    "EXPR [ (1, _0) (-4294967296, _4) (-1, _5) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _5) 2147483648 ], EXPR [ 4294967296 ]], outputs: [_6, _7]",
    "BLACKBOX::RANGE [_6]:1 bits []",
    "BLACKBOX::RANGE [_7]:32 bits []",
    "EXPR [ (1, _5) (-4294967296, _6) (-1, _7) 2147483648 ]",
    "EXPR [ (1, _2, _6) (-1, _6) 0 ]",
    "EXPR [ (1, _1) (-1, _5) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
