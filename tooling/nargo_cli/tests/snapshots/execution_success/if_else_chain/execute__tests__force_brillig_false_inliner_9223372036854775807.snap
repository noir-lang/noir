---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "c",
        "type": {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _22",
    "private parameters indices : [_0, _1, _2, _3, _4]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 32)] []",
    "BLACKBOX::RANGE [(_1, 32)] []",
    "BLACKBOX::RANGE [(_2, 32)] []",
    "BLACKBOX::RANGE [(_3, 32)] []",
    "BLACKBOX::RANGE [(_4, 32)] []",
    "EXPR [ (1, _0) (-1, _1) (-1, _5) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _5) 0 ]], outputs: [_6]",
    "EXPR [ (1, _5, _6) (1, _7) -1 ]",
    "EXPR [ (1, _5, _7) 0 ]",
    "EXPR [ (1, _1, _7) 0 ]",
    "EXPR [ (1, _0) (-1, _2) (-1, _8) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _8) 0 ]], outputs: [_9]",
    "EXPR [ (1, _8, _9) (1, _10) -1 ]",
    "EXPR [ (1, _8, _10) 0 ]",
    "EXPR [ (-1, _7, _10) (1, _10) (-1, _11) 0 ]",
    "EXPR [ (1, _2, _11) 0 ]",
    "EXPR [ (1, _0) (-1, _3) (-1, _12) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _12) 0 ]], outputs: [_13]",
    "EXPR [ (1, _12, _13) (1, _14) -1 ]",
    "EXPR [ (1, _12, _14) 0 ]",
    "EXPR [ (1, _7, _10) (-1, _7) (-1, _10) (-1, _15) 1 ]",
    "EXPR [ (1, _14, _15) (-1, _16) 0 ]",
    "EXPR [ (1, _3, _16) 0 ]",
    "EXPR [ (1, _0) (-1, _4) (-1, _17) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _17) 0 ]], outputs: [_18]",
    "EXPR [ (1, _17, _18) (1, _19) -1 ]",
    "EXPR [ (1, _17, _19) 0 ]",
    "EXPR [ (-1, _14, _15) (1, _15) (-1, _20) 0 ]",
    "EXPR [ (1, _19, _20) (-1, _21) 0 ]",
    "EXPR [ (1, _4, _21) 0 ]",
    "EXPR [ (-1, _19, _20) (1, _20) (-1, _22) 0 ]",
    "EXPR [ (1, _1, _22) (-10, _22) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "nZTdioQgFIDfxesu1DJzXmVZwsoGQSycWliid9/jXzNzsTB445fad44e1ANNatjvvbbz8kC3rwMNThuj771ZRrnpxcLocVYod/vNKQVD6GUerFU6ZTd0s7sxFfqRZg8/PVZpAzfpYBZXSNkJCAFnbZT/Oqunjf9XG5Fc9pTZ5zbNNimw25ybdwU2wTk5wXWBL9ilNyXp6ZW+Ltk8YVd+1pb4TXf5vMTnV/6uZP8U5/wUiyKfZJ+UHD3a5vVTXrL+Gme/JuzN/4aeHLV7u6qIQaIKtaHloe1CKyBAhQgGF0AiaEQd0cBRB7AICAGVIzyiixABFEdAFLgalEZAFAK1ok0iS2wTeWLnDyVQRNbYH00g8Tx9JZyWg1Hp5Zl3O748RNvvmmfyU7W6ZVTT7pSvRJiD2vwB",
  "file_map": {
    "50": {
      "source": "fn main(a: u32, mut c: [u32; 4]) {\n    if a == c[0] {\n        assert(c[0] == 0);\n    } else if a == c[1] {\n        assert(c[1] == 0);\n    } else if a == c[2] {\n        assert(c[2] == 0);\n    } else if a == c[3] {\n        // expect to match this case\n        assert(c[3] == 0);\n    } else {\n        assert(c[0] == 10);\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_invert"
  ]
}
