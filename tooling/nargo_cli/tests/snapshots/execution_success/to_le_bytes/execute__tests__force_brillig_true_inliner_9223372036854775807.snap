---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "cond",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "array",
        "length": 31,
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 8
        }
      },
      "visibility": "public"
    },
    "error_types": {
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _32",
    "private parameters indices : [_0, _1]",
    "public parameters indices : []",
    "return value indices : [_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ]], outputs: [[_2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32]]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32869 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U1) }, Mov { destination: Relative(1), source: Direct(32836) }, Mov { destination: Relative(2), source: Direct(32837) }, Call { location: 21 }, Call { location: 22 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 32838 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 31 }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(3) }, Mov { destination: Direct(32773), source: Relative(4) }, Call { location: 97 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32838 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 31 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, Return, Call { location: 108 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 256 }, Const { destination: Relative(6), bit_size: Integer(U1), value: 0 }, Mov { destination: Relative(5), source: Direct(1) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 32 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(7) }, IndirectConst { destination_pointer: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 31 }, BlackBox(ToRadix { input: Relative(1), radix: Relative(4), output_pointer: Relative(7), num_limbs: Relative(8), output_bits: Relative(6) }), Const { destination: Relative(9), bit_size: Integer(U32), value: 31 }, Mov { destination: Direct(32771), source: Relative(7) }, Mov { destination: Direct(32772), source: Relative(9) }, Call { location: 114 }, Load { destination: Relative(6), source_pointer: Relative(5) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(6) }, Not { destination: Relative(8), source: Relative(8), bit_size: U1 }, JumpIf { condition: Relative(8), location: 42 }, Call { location: 133 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(6) }, Mov { destination: Relative(6), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(8), bit_size: Field, value: 1 }, Store { destination_pointer: Relative(6), source: Relative(8) }, Mov { destination: Relative(8), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(9), bit_size: Field, value: 0 }, Store { destination_pointer: Relative(8), source: Relative(9) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 31 }, Const { destination: Relative(11), bit_size: Field, value: 256 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 1 }, Mov { destination: Relative(3), source: Relative(9) }, Jump { location: 58 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U32, lhs: Relative(3), rhs: Relative(10) }, JumpIf { condition: Relative(7), location: 83 }, Jump { location: 61 }, Load { destination: Relative(3), source_pointer: Relative(8) }, BinaryFieldOp { destination: Relative(6), op: Equals, lhs: Relative(3), rhs: Relative(1) }, JumpIf { condition: Relative(6), location: 66 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, JumpIf { condition: Relative(2), location: 68 }, Jump { location: 81 }, Const { destination: Relative(3), bit_size: Integer(U1), value: 0 }, Mov { destination: Relative(2), source: Direct(1) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(6) }, IndirectConst { destination_pointer: Relative(2), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 1 }, BlackBox(ToRadix { input: Relative(1), radix: Relative(4), output_pointer: Relative(6), num_limbs: Relative(7), output_bits: Relative(3) }), Const { destination: Relative(8), bit_size: Integer(U32), value: 1 }, Mov { destination: Direct(32771), source: Relative(6) }, Mov { destination: Direct(32772), source: Relative(8) }, Call { location: 114 }, Jump { location: 81 }, Mov { destination: Relative(1), source: Relative(5) }, Return, Load { destination: Relative(7), source_pointer: Relative(8) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(3) }, Load { destination: Relative(9), source_pointer: Relative(14) }, Cast { destination: Relative(13), source: Relative(9), bit_size: Field }, Load { destination: Relative(9), source_pointer: Relative(6) }, BinaryFieldOp { destination: Relative(14), op: Mul, lhs: Relative(13), rhs: Relative(9) }, BinaryFieldOp { destination: Relative(13), op: Add, lhs: Relative(7), rhs: Relative(14) }, Store { destination_pointer: Relative(8), source: Relative(13) }, BinaryFieldOp { destination: Relative(7), op: Mul, lhs: Relative(9), rhs: Relative(11) }, Store { destination_pointer: Relative(6), source: Relative(7) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(12) }, Mov { destination: Relative(3), source: Relative(7) }, Jump { location: 58 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 107 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 100 }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 113 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Const { destination: Direct(32774), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32773), op: Div, bit_size: U32, lhs: Direct(32772), rhs: Direct(32774) }, Mov { destination: Direct(32776), source: Direct(32772) }, Const { destination: Direct(32777), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Direct(32778), op: LessThan, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, Not { destination: Direct(32778), source: Direct(32778), bit_size: U1 }, JumpIf { condition: Direct(32778), location: 132 }, BinaryIntOp { destination: Direct(32776), op: Sub, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32777) }, Load { destination: Direct(32774), source_pointer: Direct(32779) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32776) }, Load { destination: Direct(32775), source_pointer: Direct(32779) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32777) }, Store { destination_pointer: Direct(32779), source: Direct(32775) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32776) }, Store { destination_pointer: Direct(32779), source: Direct(32774) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 118 }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
