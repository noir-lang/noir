---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
fn main(a: u32, mut c: [u32; 4], x: [u8; 5], result: pub [u8; 32]) {
    if 35 == a { assert(false); };
    bar(a as Field);
    if a == 3 { c = test4(); };
    assert(c[1] != 2);
    call_intrinsic(x, result);
}

fn foo() {
    let mut x: Field = 1;
    x = x / 0;
}

fn bar(x: Field) {
    if x == 15 {
        foo();
    }
}

fn call_intrinsic(x: [u8; 5], result: [u8; 32]) {
    let mut digest: [u8; 32] = std::hash::blake3(x);
    digest[0] = 5 as u8;
    digest = std::hash::blake3(x);
    assert(digest == result);
}

fn test4() -> [u32; 4] {
    let b: [u32; 4] = [1, 2, 3, 4];
    b
}
