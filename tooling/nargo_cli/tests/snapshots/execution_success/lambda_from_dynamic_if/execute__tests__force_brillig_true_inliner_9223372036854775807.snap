---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "17454579865077992320": {
        "error_kind": "fmtstring",
        "length": 1,
        "item_types": []
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _0",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U32) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 13 }, Call { location: 14 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 620 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(3) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, Const { destination: Relative(7), bit_size: Field, value: 12 }, Const { destination: Relative(8), bit_size: Field, value: 14 }, Const { destination: Relative(9), bit_size: Integer(U1), value: 0 }, Const { destination: Relative(10), bit_size: Integer(U1), value: 1 }, JumpIf { condition: Relative(4), location: 59 }, Jump { location: 25 }, JumpIf { condition: Relative(6), location: 55 }, Jump { location: 27 }, Const { destination: Relative(1), bit_size: Integer(U8), value: 33 }, Mov { destination: Relative(2), source: Direct(1) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(3) }, IndirectConst { destination_pointer: Relative(2), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Relative(4), source: Relative(3) }, Store { destination_pointer: Relative(4), source: Relative(1) }, Const { destination: Relative(1), bit_size: Field, value: 0 }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U1, lhs: Relative(9), rhs: Relative(10) }, JumpIf { condition: Relative(3), location: 55 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 3 }, Mov { destination: Relative(5), source: Direct(1) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(6) }, Mov { destination: Relative(6), source: Relative(5) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U64), value: 17454579865077992320 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 1 }, Mov { destination: Direct(32771), source: Relative(7) }, Mov { destination: Direct(32772), source: Relative(6) }, Mov { destination: Direct(32773), source: Relative(8) }, Call { location: 626 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(1) }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Trap { revert_data: HeapVector { pointer: Relative(5), size: Relative(4) } }, Mov { destination: Relative(11), source: Relative(8) }, Jump { location: 57 }, Mov { destination: Relative(2), source: Relative(11) }, Jump { location: 61 }, Mov { destination: Relative(2), source: Relative(7) }, Jump { location: 61 }, Const { destination: Relative(11), bit_size: Field, value: 11 }, BinaryFieldOp { destination: Relative(12), op: Equals, lhs: Relative(2), rhs: Relative(11) }, Const { destination: Relative(11), bit_size: Integer(U8), value: 104 }, Const { destination: Relative(13), bit_size: Integer(U8), value: 105 }, Mov { destination: Relative(14), source: Direct(1) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(15) }, IndirectConst { destination_pointer: Relative(14), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Mov { destination: Relative(16), source: Relative(15) }, Store { destination_pointer: Relative(16), source: Relative(11) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(16), rhs: Direct(2) }, Store { destination_pointer: Relative(16), source: Relative(13) }, Const { destination: Relative(15), bit_size: Integer(U8), value: 123 }, Const { destination: Relative(16), bit_size: Integer(U8), value: 34 }, Const { destination: Relative(17), bit_size: Integer(U8), value: 107 }, Const { destination: Relative(18), bit_size: Integer(U8), value: 110 }, Const { destination: Relative(19), bit_size: Integer(U8), value: 100 }, Const { destination: Relative(20), bit_size: Integer(U8), value: 58 }, Const { destination: Relative(21), bit_size: Integer(U8), value: 115 }, Const { destination: Relative(22), bit_size: Integer(U8), value: 116 }, Const { destination: Relative(23), bit_size: Integer(U8), value: 114 }, Const { destination: Relative(24), bit_size: Integer(U8), value: 103 }, Const { destination: Relative(25), bit_size: Integer(U8), value: 44 }, Const { destination: Relative(26), bit_size: Integer(U8), value: 108 }, Const { destination: Relative(27), bit_size: Integer(U8), value: 101 }, Const { destination: Relative(28), bit_size: Integer(U8), value: 50 }, Const { destination: Relative(29), bit_size: Integer(U8), value: 125 }, Mov { destination: Relative(30), source: Direct(1) }, Const { destination: Relative(31), bit_size: Integer(U32), value: 29 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(31) }, IndirectConst { destination_pointer: Relative(30), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Mov { destination: Relative(32), source: Relative(31) }, Store { destination_pointer: Relative(32), source: Relative(15) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(17) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(13) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(18) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(19) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(20) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(21) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(22) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(23) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(13) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(18) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(24) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(25) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(26) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(27) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(18) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(24) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(22) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(11) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(20) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(28) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(29) }, Const { destination: Relative(31), bit_size: Integer(U8), value: 51 }, JumpIf { condition: Relative(12), location: 276 }, Jump { location: 153 }, BinaryFieldOp { destination: Relative(12), op: Equals, lhs: Relative(2), rhs: Relative(7) }, JumpIf { condition: Relative(12), location: 272 }, Jump { location: 156 }, Const { destination: Relative(7), bit_size: Field, value: 13 }, BinaryFieldOp { destination: Relative(12), op: Equals, lhs: Relative(2), rhs: Relative(7) }, Const { destination: Relative(7), bit_size: Integer(U8), value: 98 }, Const { destination: Relative(14), bit_size: Integer(U8), value: 121 }, Mov { destination: Relative(30), source: Direct(1) }, Const { destination: Relative(32), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(32) }, IndirectConst { destination_pointer: Relative(30), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Mov { destination: Relative(33), source: Relative(32) }, Store { destination_pointer: Relative(33), source: Relative(7) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(33), rhs: Direct(2) }, Store { destination_pointer: Relative(33), source: Relative(14) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(33), rhs: Direct(2) }, Store { destination_pointer: Relative(33), source: Relative(27) }, Mov { destination: Relative(7), source: Direct(1) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 29 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(14) }, IndirectConst { destination_pointer: Relative(7), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Mov { destination: Relative(32), source: Relative(14) }, Store { destination_pointer: Relative(32), source: Relative(15) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(17) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(13) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(18) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(19) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(20) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(21) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(22) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(23) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(13) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(18) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(24) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(25) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(26) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(27) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(18) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(24) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(22) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(11) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(16) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(20) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(31) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(29) }, JumpIf { condition: Relative(12), location: 252 }, Jump { location: 234 }, BinaryFieldOp { destination: Relative(12), op: Equals, lhs: Relative(2), rhs: Relative(8) }, JumpIf { condition: Relative(12), location: 248 }, Jump { location: 237 }, Const { destination: Relative(7), bit_size: Field, value: 16 }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(2), rhs: Relative(7) }, JumpIf { condition: Relative(8), location: 247 }, Jump { location: 241 }, Const { destination: Relative(7), bit_size: Field, value: 17 }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(2), rhs: Relative(7) }, JumpIf { condition: Relative(8), location: 246 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(12) } }, Jump { location: 296 }, Jump { location: 296 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(10)), HeapArray(HeapArray { pointer: Relative(2), size: 3 }), HeapArray(HeapArray { pointer: Relative(8), size: 28 }), MemoryAddress(Relative(9))], input_value_types: [Simple(Integer(U1)), Array { value_types: [Simple(Integer(U8))], size: 3 }, Array { value_types: [Simple(Integer(U8))], size: 28 }, Simple(Integer(U1))] }, Jump { location: 296 }, Load { destination: Relative(2), source_pointer: Relative(30) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(2) }, Not { destination: Relative(12), source: Relative(12), bit_size: U1 }, JumpIf { condition: Relative(12), location: 258 }, Call { location: 637 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, Load { destination: Relative(2), source_pointer: Relative(7) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(2) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 266 }, Call { location: 637 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(10)), HeapArray(HeapArray { pointer: Relative(2), size: 3 }), HeapArray(HeapArray { pointer: Relative(14), size: 28 }), MemoryAddress(Relative(9))], input_value_types: [Simple(Integer(U1)), Array { value_types: [Simple(Integer(U8))], size: 3 }, Array { value_types: [Simple(Integer(U8))], size: 28 }, Simple(Integer(U1))] }, Jump { location: 296 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(10)), HeapArray(HeapArray { pointer: Relative(2), size: 2 }), HeapArray(HeapArray { pointer: Relative(7), size: 28 }), MemoryAddress(Relative(9))], input_value_types: [Simple(Integer(U1)), Array { value_types: [Simple(Integer(U8))], size: 2 }, Array { value_types: [Simple(Integer(U8))], size: 28 }, Simple(Integer(U1))] }, Jump { location: 296 }, Load { destination: Relative(2), source_pointer: Relative(14) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(2) }, Not { destination: Relative(8), source: Relative(8), bit_size: U1 }, JumpIf { condition: Relative(8), location: 282 }, Call { location: 637 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(2) }, Load { destination: Relative(2), source_pointer: Relative(30) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(2) }, Not { destination: Relative(12), source: Relative(12), bit_size: U1 }, JumpIf { condition: Relative(12), location: 290 }, Call { location: 637 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(10)), HeapArray(HeapArray { pointer: Relative(2), size: 2 }), HeapArray(HeapArray { pointer: Relative(12), size: 28 }), MemoryAddress(Relative(9))], input_value_types: [Simple(Integer(U1)), Array { value_types: [Simple(Integer(U8))], size: 2 }, Array { value_types: [Simple(Integer(U8))], size: 28 }, Simple(Integer(U1))] }, Jump { location: 296 }, BinaryIntOp { destination: Relative(7), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, BinaryIntOp { destination: Relative(8), op: LessThanEquals, bit_size: U32, lhs: Relative(5), rhs: Relative(1) }, JumpIf { condition: Relative(8), location: 300 }, Call { location: 640 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(3) }, Const { destination: Relative(12), bit_size: Field, value: 5 }, Const { destination: Relative(14), bit_size: Field, value: 7 }, Const { destination: Relative(26), bit_size: Field, value: 9 }, JumpIf { condition: Relative(8), location: 315 }, Jump { location: 306 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(5) }, Not { destination: Relative(30), source: Relative(8), bit_size: U1 }, Cast { destination: Relative(32), source: Relative(8), bit_size: Field }, Cast { destination: Relative(8), source: Relative(30), bit_size: Field }, BinaryFieldOp { destination: Relative(30), op: Mul, lhs: Relative(32), rhs: Relative(14) }, BinaryFieldOp { destination: Relative(32), op: Mul, lhs: Relative(8), rhs: Relative(26) }, BinaryFieldOp { destination: Relative(8), op: Add, lhs: Relative(30), rhs: Relative(32) }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 317 }, Mov { destination: Relative(2), source: Relative(12) }, Jump { location: 317 }, Const { destination: Relative(30), bit_size: Field, value: 4 }, BinaryFieldOp { destination: Relative(32), op: Equals, lhs: Relative(2), rhs: Relative(30) }, Const { destination: Relative(33), bit_size: Field, value: 6 }, Const { destination: Relative(34), bit_size: Field, value: 8 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 2 }, JumpIf { condition: Relative(32), location: 374 }, Jump { location: 324 }, BinaryFieldOp { destination: Relative(36), op: Equals, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(36), location: 370 }, Jump { location: 327 }, BinaryFieldOp { destination: Relative(37), op: Equals, lhs: Relative(2), rhs: Relative(33) }, JumpIf { condition: Relative(37), location: 362 }, Jump { location: 330 }, BinaryFieldOp { destination: Relative(38), op: Equals, lhs: Relative(2), rhs: Relative(14) }, JumpIf { condition: Relative(38), location: 354 }, Jump { location: 333 }, BinaryFieldOp { destination: Relative(39), op: Equals, lhs: Relative(2), rhs: Relative(34) }, JumpIf { condition: Relative(39), location: 346 }, Jump { location: 336 }, BinaryFieldOp { destination: Relative(39), op: Equals, lhs: Relative(2), rhs: Relative(26) }, JumpIf { condition: Relative(39), location: 340 }, Const { destination: Relative(40), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(40) } }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(35) }, BinaryIntOp { destination: Relative(39), op: LessThanEquals, bit_size: U32, lhs: Relative(7), rhs: Relative(2) }, JumpIf { condition: Relative(39), location: 344 }, Call { location: 643 }, Mov { destination: Relative(38), source: Relative(2) }, Jump { location: 352 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(35) }, BinaryIntOp { destination: Relative(39), op: LessThanEquals, bit_size: U32, lhs: Relative(7), rhs: Relative(2) }, JumpIf { condition: Relative(39), location: 350 }, Call { location: 643 }, Mov { destination: Relative(38), source: Relative(2) }, Jump { location: 352 }, Mov { destination: Relative(37), source: Relative(38) }, Jump { location: 360 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(5) }, BinaryIntOp { destination: Relative(38), op: LessThanEquals, bit_size: U32, lhs: Relative(7), rhs: Relative(2) }, JumpIf { condition: Relative(38), location: 358 }, Call { location: 643 }, Mov { destination: Relative(37), source: Relative(2) }, Jump { location: 360 }, Mov { destination: Relative(36), source: Relative(37) }, Jump { location: 368 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(5) }, BinaryIntOp { destination: Relative(37), op: LessThanEquals, bit_size: U32, lhs: Relative(7), rhs: Relative(2) }, JumpIf { condition: Relative(37), location: 366 }, Call { location: 643 }, Mov { destination: Relative(36), source: Relative(2) }, Jump { location: 368 }, Mov { destination: Relative(32), source: Relative(36) }, Jump { location: 372 }, Mov { destination: Relative(32), source: Relative(7) }, Jump { location: 372 }, Mov { destination: Relative(8), source: Relative(32) }, Jump { location: 376 }, Mov { destination: Relative(8), source: Relative(7) }, Jump { location: 376 }, Const { destination: Relative(7), bit_size: Integer(U8), value: 117 }, Const { destination: Relative(32), bit_size: Integer(U8), value: 119 }, Mov { destination: Relative(36), source: Direct(1) }, Const { destination: Relative(37), bit_size: Integer(U32), value: 38 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(37) }, IndirectConst { destination_pointer: Relative(36), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(37), op: Add, bit_size: U32, lhs: Relative(36), rhs: Direct(2) }, Mov { destination: Relative(38), source: Relative(37) }, Store { destination_pointer: Relative(38), source: Relative(15) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(16) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(17) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(13) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(18) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(19) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(16) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(20) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(16) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(7) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(18) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(21) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(13) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(24) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(18) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(27) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(19) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(13) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(18) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(22) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(27) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(24) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(27) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(23) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(16) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(25) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(16) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(32) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(13) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(19) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(22) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(11) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(16) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(20) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(31) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(28) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(38), rhs: Direct(2) }, Store { destination_pointer: Relative(38), source: Relative(29) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(36), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(10)), MemoryAddress(Relative(8)), HeapArray(HeapArray { pointer: Relative(7), size: 37 }), MemoryAddress(Relative(9))], input_value_types: [Simple(Integer(U1)), Simple(Integer(U32)), Array { value_types: [Simple(Integer(U8))], size: 37 }, Simple(Integer(U1))] }, JumpIf { condition: Relative(4), location: 469 }, Jump { location: 461 }, Not { destination: Relative(4), source: Relative(6), bit_size: U1 }, Cast { destination: Relative(7), source: Relative(6), bit_size: Field }, Cast { destination: Relative(6), source: Relative(4), bit_size: Field }, BinaryFieldOp { destination: Relative(4), op: Mul, lhs: Relative(7), rhs: Relative(14) }, BinaryFieldOp { destination: Relative(7), op: Mul, lhs: Relative(6), rhs: Relative(26) }, BinaryFieldOp { destination: Relative(6), op: Add, lhs: Relative(4), rhs: Relative(7) }, Mov { destination: Relative(2), source: Relative(6) }, Jump { location: 471 }, Mov { destination: Relative(2), source: Relative(12) }, Jump { location: 471 }, BinaryFieldOp { destination: Relative(6), op: Equals, lhs: Relative(2), rhs: Relative(30) }, JumpIf { condition: Relative(6), location: 524 }, Jump { location: 474 }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(7), location: 520 }, Jump { location: 477 }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(2), rhs: Relative(33) }, JumpIf { condition: Relative(8), location: 512 }, Jump { location: 480 }, BinaryFieldOp { destination: Relative(11), op: Equals, lhs: Relative(2), rhs: Relative(14) }, JumpIf { condition: Relative(11), location: 504 }, Jump { location: 483 }, BinaryFieldOp { destination: Relative(13), op: Equals, lhs: Relative(2), rhs: Relative(34) }, JumpIf { condition: Relative(13), location: 496 }, Jump { location: 486 }, BinaryFieldOp { destination: Relative(13), op: Equals, lhs: Relative(2), rhs: Relative(26) }, JumpIf { condition: Relative(13), location: 490 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(15) } }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(35) }, BinaryIntOp { destination: Relative(13), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, JumpIf { condition: Relative(13), location: 494 }, Call { location: 643 }, Mov { destination: Relative(11), source: Relative(2) }, Jump { location: 502 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(35) }, BinaryIntOp { destination: Relative(13), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, JumpIf { condition: Relative(13), location: 500 }, Call { location: 643 }, Mov { destination: Relative(11), source: Relative(2) }, Jump { location: 502 }, Mov { destination: Relative(8), source: Relative(11) }, Jump { location: 510 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, BinaryIntOp { destination: Relative(11), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, JumpIf { condition: Relative(11), location: 508 }, Call { location: 643 }, Mov { destination: Relative(8), source: Relative(2) }, Jump { location: 510 }, Mov { destination: Relative(7), source: Relative(8) }, Jump { location: 518 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, BinaryIntOp { destination: Relative(8), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, JumpIf { condition: Relative(8), location: 516 }, Call { location: 643 }, Mov { destination: Relative(7), source: Relative(2) }, Jump { location: 518 }, Mov { destination: Relative(6), source: Relative(7) }, Jump { location: 522 }, Mov { destination: Relative(6), source: Relative(1) }, Jump { location: 522 }, Mov { destination: Relative(4), source: Relative(6) }, Jump { location: 526 }, Mov { destination: Relative(4), source: Relative(1) }, Jump { location: 526 }, Load { destination: Relative(6), source_pointer: Relative(36) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(6) }, Not { destination: Relative(8), source: Relative(8), bit_size: U1 }, JumpIf { condition: Relative(8), location: 532 }, Call { location: 637 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(36), source: Relative(6) }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(36), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(10)), MemoryAddress(Relative(4)), HeapArray(HeapArray { pointer: Relative(6), size: 37 }), MemoryAddress(Relative(9))], input_value_types: [Simple(Integer(U1)), Simple(Integer(U32)), Array { value_types: [Simple(Integer(U8))], size: 37 }, Simple(Integer(U1))] }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, BinaryIntOp { destination: Relative(6), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(4) }, JumpIf { condition: Relative(6), location: 540 }, Call { location: 643 }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, JumpIf { condition: Relative(1), location: 552 }, Jump { location: 543 }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, Not { destination: Relative(3), source: Relative(1), bit_size: U1 }, Cast { destination: Relative(6), source: Relative(1), bit_size: Field }, Cast { destination: Relative(1), source: Relative(3), bit_size: Field }, BinaryFieldOp { destination: Relative(3), op: Mul, lhs: Relative(6), rhs: Relative(14) }, BinaryFieldOp { destination: Relative(6), op: Mul, lhs: Relative(1), rhs: Relative(26) }, BinaryFieldOp { destination: Relative(1), op: Add, lhs: Relative(3), rhs: Relative(6) }, Mov { destination: Relative(2), source: Relative(1) }, Jump { location: 554 }, Mov { destination: Relative(2), source: Relative(12) }, Jump { location: 554 }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(2), rhs: Relative(30) }, JumpIf { condition: Relative(3), location: 607 }, Jump { location: 557 }, BinaryFieldOp { destination: Relative(6), op: Equals, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(6), location: 603 }, Jump { location: 560 }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(2), rhs: Relative(33) }, JumpIf { condition: Relative(7), location: 595 }, Jump { location: 563 }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(2), rhs: Relative(14) }, JumpIf { condition: Relative(8), location: 587 }, Jump { location: 566 }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(2), rhs: Relative(34) }, JumpIf { condition: Relative(8), location: 579 }, Jump { location: 569 }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(2), rhs: Relative(26) }, JumpIf { condition: Relative(8), location: 573 }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(11) } }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(4), rhs: Relative(35) }, BinaryIntOp { destination: Relative(8), op: LessThanEquals, bit_size: U32, lhs: Relative(4), rhs: Relative(2) }, JumpIf { condition: Relative(8), location: 577 }, Call { location: 643 }, Mov { destination: Relative(5), source: Relative(2) }, Jump { location: 585 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(4), rhs: Relative(35) }, BinaryIntOp { destination: Relative(8), op: LessThanEquals, bit_size: U32, lhs: Relative(4), rhs: Relative(2) }, JumpIf { condition: Relative(8), location: 583 }, Call { location: 643 }, Mov { destination: Relative(5), source: Relative(2) }, Jump { location: 585 }, Mov { destination: Relative(7), source: Relative(5) }, Jump { location: 593 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, BinaryIntOp { destination: Relative(8), op: LessThanEquals, bit_size: U32, lhs: Relative(4), rhs: Relative(2) }, JumpIf { condition: Relative(8), location: 591 }, Call { location: 643 }, Mov { destination: Relative(7), source: Relative(2) }, Jump { location: 593 }, Mov { destination: Relative(6), source: Relative(7) }, Jump { location: 601 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, BinaryIntOp { destination: Relative(7), op: LessThanEquals, bit_size: U32, lhs: Relative(4), rhs: Relative(2) }, JumpIf { condition: Relative(7), location: 599 }, Call { location: 643 }, Mov { destination: Relative(6), source: Relative(2) }, Jump { location: 601 }, Mov { destination: Relative(3), source: Relative(6) }, Jump { location: 605 }, Mov { destination: Relative(3), source: Relative(4) }, Jump { location: 605 }, Mov { destination: Relative(1), source: Relative(3) }, Jump { location: 609 }, Mov { destination: Relative(1), source: Relative(4) }, Jump { location: 609 }, Load { destination: Relative(2), source_pointer: Relative(36) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(4), source: Relative(4), bit_size: U1 }, JumpIf { condition: Relative(4), location: 615 }, Call { location: 637 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(36), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(36), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(10)), MemoryAddress(Relative(1)), HeapArray(HeapArray { pointer: Relative(2), size: 37 }), MemoryAddress(Relative(9))], input_value_types: [Simple(Integer(U1)), Simple(Integer(U32)), Array { value_types: [Simple(Integer(U8))], size: 37 }, Simple(Integer(U1))] }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 625 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 636 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 629 }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 2920182694213909827 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 5019202896831570965 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
