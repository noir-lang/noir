---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "to_hash",
        "type": {
          "kind": "array",
          "length": 2,
          "type": {
            "kind": "array",
            "length": 10,
            "type": {
              "kind": "field"
            }
          }
        },
        "visibility": "private"
      },
      {
        "name": "enable",
        "type": {
          "kind": "array",
          "length": 2,
          "type": {
            "kind": "boolean"
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "array",
        "length": 3,
        "type": {
          "kind": "field"
        }
      },
      "visibility": "public"
    },
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _27",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21]",
    "public parameters indices : []",
    "return value indices : [_22, _23, _24]",
    "BLACKBOX::RANGE [(_20, 1)] []",
    "BLACKBOX::RANGE [(_21, 1)] []",
    "CALL func 1: PREDICATE = EXPR [ (1, _20) 0 ]",
    "inputs: [Witness(0), Witness(1), Witness(2), Witness(3), Witness(4), Witness(5), Witness(6), Witness(7), Witness(8), Witness(9)], outputs: [Witness(25)]",
    "CALL func 1: PREDICATE = EXPR [ (1, _21) 0 ]",
    "inputs: [Witness(10), Witness(11), Witness(12), Witness(13), Witness(14), Witness(15), Witness(16), Witness(17), Witness(18), Witness(19)], outputs: [Witness(26)]",
    "CALL func 2: PREDICATE = EXPR [ 1 ]",
    "inputs: [Witness(0), Witness(1), Witness(2), Witness(3), Witness(4), Witness(5), Witness(6), Witness(7), Witness(8), Witness(9), Witness(0), Witness(1), Witness(2), Witness(3), Witness(4), Witness(5), Witness(6), Witness(7), Witness(8), Witness(9)], outputs: [Witness(27)]",
    "EXPR [ (-1, _20, _25) (1, _22) 0 ]",
    "EXPR [ (-1, _21, _26) (1, _23) 0 ]",
    "EXPR [ (1, _24) (-1, _27) 0 ]",
    "func 1",
    "current witness index : _50",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9]",
    "public parameters indices : []",
    "return value indices : [_10]",
    "EXPR [ (-1, _11) 184467440737095516160 ]",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_0, 254), (_1, 254), (_2, 254), (_11, 254)] [_12, _13, _14, _15]",
    "INIT (id: 1, len: 4, witnesses: [_12, _13, _14, _15])",
    "EXPR [ (-1, _16) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _16) 0 ], value: EXPR [ (1, _17) 0 ]) ",
    "INIT (id: 2, len: 4, witnesses: [_12, _13, _14, _15])",
    "MEM (id: 2, write EXPR [ (1, _17) 0 ] at: EXPR [ (1, _16) 0 ]) ",
    "EXPR [ (-1, _18) 1 ]",
    "MEM (id: 1, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _19) 0 ]) ",
    "INIT (id: 3, len: 4, witnesses: [_12, _13, _14, _15])",
    "MEM (id: 3, write EXPR [ (1, _19) 0 ] at: EXPR [ (1, _18) 0 ]) ",
    "EXPR [ (-1, _20) 2 ]",
    "MEM (id: 1, read at: EXPR [ (1, _20) 0 ], value: EXPR [ (1, _21) 0 ]) ",
    "INIT (id: 4, len: 4, witnesses: [_12, _13, _14, _15])",
    "MEM (id: 4, write EXPR [ (1, _21) 0 ] at: EXPR [ (1, _20) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _22) 0 ]) ",
    "INIT (id: 5, len: 4, witnesses: [_12, _13, _14, _15])",
    "MEM (id: 5, write EXPR [ (1, _22) 0 ] at: EXPR [ (1, _18) 0 ]) ",
    "EXPR [ (1, _3) (1, _12) (-1, _23) 0 ]",
    "EXPR [ (1, _4) (1, _13) (-1, _24) 0 ]",
    "EXPR [ (1, _5) (1, _14) (-1, _25) 0 ]",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_23, 254), (_24, 254), (_25, 254), (_15, 254)] [_26, _27, _28, _29]",
    "INIT (id: 6, len: 4, witnesses: [_26, _27, _28, _29])",
    "MEM (id: 6, read at: EXPR [ (1, _16) 0 ], value: EXPR [ (1, _30) 0 ]) ",
    "INIT (id: 7, len: 4, witnesses: [_26, _27, _28, _29])",
    "MEM (id: 7, write EXPR [ (1, _30) 0 ] at: EXPR [ (1, _16) 0 ]) ",
    "MEM (id: 6, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _31) 0 ]) ",
    "INIT (id: 8, len: 4, witnesses: [_26, _27, _28, _29])",
    "MEM (id: 8, write EXPR [ (1, _31) 0 ] at: EXPR [ (1, _18) 0 ]) ",
    "MEM (id: 6, read at: EXPR [ (1, _20) 0 ], value: EXPR [ (1, _32) 0 ]) ",
    "INIT (id: 9, len: 4, witnesses: [_26, _27, _28, _29])",
    "MEM (id: 9, write EXPR [ (1, _32) 0 ] at: EXPR [ (1, _20) 0 ]) ",
    "MEM (id: 6, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _33) 0 ]) ",
    "INIT (id: 10, len: 4, witnesses: [_26, _27, _28, _29])",
    "MEM (id: 10, write EXPR [ (1, _33) 0 ] at: EXPR [ (1, _18) 0 ]) ",
    "EXPR [ (1, _6) (1, _26) (-1, _34) 0 ]",
    "EXPR [ (1, _7) (1, _27) (-1, _35) 0 ]",
    "EXPR [ (1, _8) (1, _28) (-1, _36) 0 ]",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_34, 254), (_35, 254), (_36, 254), (_29, 254)] [_37, _38, _39, _40]",
    "INIT (id: 11, len: 4, witnesses: [_37, _38, _39, _40])",
    "MEM (id: 11, read at: EXPR [ (1, _16) 0 ], value: EXPR [ (1, _41) 0 ]) ",
    "INIT (id: 12, len: 4, witnesses: [_37, _38, _39, _40])",
    "MEM (id: 12, write EXPR [ (1, _41) 0 ] at: EXPR [ (1, _16) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _42) 0 ]) ",
    "INIT (id: 13, len: 4, witnesses: [_37, _38, _39, _40])",
    "MEM (id: 13, write EXPR [ (1, _42) 0 ] at: EXPR [ (1, _18) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _20) 0 ], value: EXPR [ (1, _43) 0 ]) ",
    "INIT (id: 14, len: 4, witnesses: [_37, _38, _39, _40])",
    "MEM (id: 14, write EXPR [ (1, _43) 0 ] at: EXPR [ (1, _20) 0 ]) ",
    "EXPR [ (1, _9) (1, _37) (-1, _44) 0 ]",
    "INIT (id: 15, len: 4, witnesses: [_44, _38, _39, _40])",
    "MEM (id: 15, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _45) 0 ]) ",
    "INIT (id: 16, len: 4, witnesses: [_44, _38, _39, _40])",
    "MEM (id: 16, write EXPR [ (1, _45) 0 ] at: EXPR [ (1, _18) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _20) 0 ], value: EXPR [ (1, _46) 0 ]) ",
    "INIT (id: 17, len: 4, witnesses: [_44, _38, _39, _40])",
    "MEM (id: 17, write EXPR [ (1, _46) 0 ] at: EXPR [ (1, _20) 0 ]) ",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_44, 254), (_38, 254), (_39, 254), (_40, 254)] [_47, _48, _49, _50]",
    "EXPR [ (1, _10) (-1, _47) 0 ]",
    "func 2",
    "current witness index : _94",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19]",
    "public parameters indices : []",
    "return value indices : [_20]",
    "EXPR [ (-1, _21) 368934881474191032320 ]",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_0, 254), (_1, 254), (_2, 254), (_21, 254)] [_22, _23, _24, _25]",
    "INIT (id: 1, len: 4, witnesses: [_22, _23, _24, _25])",
    "EXPR [ (-1, _26) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _26) 0 ], value: EXPR [ (1, _27) 0 ]) ",
    "INIT (id: 2, len: 4, witnesses: [_22, _23, _24, _25])",
    "MEM (id: 2, write EXPR [ (1, _27) 0 ] at: EXPR [ (1, _26) 0 ]) ",
    "EXPR [ (-1, _28) 1 ]",
    "MEM (id: 1, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _29) 0 ]) ",
    "INIT (id: 3, len: 4, witnesses: [_22, _23, _24, _25])",
    "MEM (id: 3, write EXPR [ (1, _29) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (-1, _30) 2 ]",
    "MEM (id: 1, read at: EXPR [ (1, _30) 0 ], value: EXPR [ (1, _31) 0 ]) ",
    "INIT (id: 4, len: 4, witnesses: [_22, _23, _24, _25])",
    "MEM (id: 4, write EXPR [ (1, _31) 0 ] at: EXPR [ (1, _30) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _32) 0 ]) ",
    "INIT (id: 5, len: 4, witnesses: [_22, _23, _24, _25])",
    "MEM (id: 5, write EXPR [ (1, _32) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (1, _3) (1, _22) (-1, _33) 0 ]",
    "EXPR [ (1, _4) (1, _23) (-1, _34) 0 ]",
    "EXPR [ (1, _5) (1, _24) (-1, _35) 0 ]",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_33, 254), (_34, 254), (_35, 254), (_25, 254)] [_36, _37, _38, _39]",
    "INIT (id: 6, len: 4, witnesses: [_36, _37, _38, _39])",
    "MEM (id: 6, read at: EXPR [ (1, _26) 0 ], value: EXPR [ (1, _40) 0 ]) ",
    "INIT (id: 7, len: 4, witnesses: [_36, _37, _38, _39])",
    "MEM (id: 7, write EXPR [ (1, _40) 0 ] at: EXPR [ (1, _26) 0 ]) ",
    "MEM (id: 6, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _41) 0 ]) ",
    "INIT (id: 8, len: 4, witnesses: [_36, _37, _38, _39])",
    "MEM (id: 8, write EXPR [ (1, _41) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "MEM (id: 6, read at: EXPR [ (1, _30) 0 ], value: EXPR [ (1, _42) 0 ]) ",
    "INIT (id: 9, len: 4, witnesses: [_36, _37, _38, _39])",
    "MEM (id: 9, write EXPR [ (1, _42) 0 ] at: EXPR [ (1, _30) 0 ]) ",
    "MEM (id: 6, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _43) 0 ]) ",
    "INIT (id: 10, len: 4, witnesses: [_36, _37, _38, _39])",
    "MEM (id: 10, write EXPR [ (1, _43) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (1, _6) (1, _36) (-1, _44) 0 ]",
    "EXPR [ (1, _7) (1, _37) (-1, _45) 0 ]",
    "EXPR [ (1, _8) (1, _38) (-1, _46) 0 ]",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_44, 254), (_45, 254), (_46, 254), (_39, 254)] [_47, _48, _49, _50]",
    "INIT (id: 11, len: 4, witnesses: [_47, _48, _49, _50])",
    "MEM (id: 11, read at: EXPR [ (1, _26) 0 ], value: EXPR [ (1, _51) 0 ]) ",
    "INIT (id: 12, len: 4, witnesses: [_47, _48, _49, _50])",
    "MEM (id: 12, write EXPR [ (1, _51) 0 ] at: EXPR [ (1, _26) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _52) 0 ]) ",
    "INIT (id: 13, len: 4, witnesses: [_47, _48, _49, _50])",
    "MEM (id: 13, write EXPR [ (1, _52) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _30) 0 ], value: EXPR [ (1, _53) 0 ]) ",
    "INIT (id: 14, len: 4, witnesses: [_47, _48, _49, _50])",
    "MEM (id: 14, write EXPR [ (1, _53) 0 ] at: EXPR [ (1, _30) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _54) 0 ]) ",
    "INIT (id: 15, len: 4, witnesses: [_47, _48, _49, _50])",
    "MEM (id: 15, write EXPR [ (1, _54) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (1, _9) (1, _47) (-1, _55) 0 ]",
    "EXPR [ (1, _10) (1, _48) (-1, _56) 0 ]",
    "EXPR [ (1, _11) (1, _49) (-1, _57) 0 ]",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_55, 254), (_56, 254), (_57, 254), (_50, 254)] [_58, _59, _60, _61]",
    "INIT (id: 16, len: 4, witnesses: [_58, _59, _60, _61])",
    "MEM (id: 16, read at: EXPR [ (1, _26) 0 ], value: EXPR [ (1, _62) 0 ]) ",
    "INIT (id: 17, len: 4, witnesses: [_58, _59, _60, _61])",
    "MEM (id: 17, write EXPR [ (1, _62) 0 ] at: EXPR [ (1, _26) 0 ]) ",
    "MEM (id: 16, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _63) 0 ]) ",
    "INIT (id: 18, len: 4, witnesses: [_58, _59, _60, _61])",
    "MEM (id: 18, write EXPR [ (1, _63) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "MEM (id: 16, read at: EXPR [ (1, _30) 0 ], value: EXPR [ (1, _64) 0 ]) ",
    "INIT (id: 19, len: 4, witnesses: [_58, _59, _60, _61])",
    "MEM (id: 19, write EXPR [ (1, _64) 0 ] at: EXPR [ (1, _30) 0 ]) ",
    "MEM (id: 16, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _65) 0 ]) ",
    "INIT (id: 20, len: 4, witnesses: [_58, _59, _60, _61])",
    "MEM (id: 20, write EXPR [ (1, _65) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (1, _12) (1, _58) (-1, _66) 0 ]",
    "EXPR [ (1, _13) (1, _59) (-1, _67) 0 ]",
    "EXPR [ (1, _14) (1, _60) (-1, _68) 0 ]",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_66, 254), (_67, 254), (_68, 254), (_61, 254)] [_69, _70, _71, _72]",
    "INIT (id: 21, len: 4, witnesses: [_69, _70, _71, _72])",
    "MEM (id: 21, read at: EXPR [ (1, _26) 0 ], value: EXPR [ (1, _73) 0 ]) ",
    "INIT (id: 22, len: 4, witnesses: [_69, _70, _71, _72])",
    "MEM (id: 22, write EXPR [ (1, _73) 0 ] at: EXPR [ (1, _26) 0 ]) ",
    "MEM (id: 21, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _74) 0 ]) ",
    "INIT (id: 23, len: 4, witnesses: [_69, _70, _71, _72])",
    "MEM (id: 23, write EXPR [ (1, _74) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "MEM (id: 21, read at: EXPR [ (1, _30) 0 ], value: EXPR [ (1, _75) 0 ]) ",
    "INIT (id: 24, len: 4, witnesses: [_69, _70, _71, _72])",
    "MEM (id: 24, write EXPR [ (1, _75) 0 ] at: EXPR [ (1, _30) 0 ]) ",
    "MEM (id: 21, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _76) 0 ]) ",
    "INIT (id: 25, len: 4, witnesses: [_69, _70, _71, _72])",
    "MEM (id: 25, write EXPR [ (1, _76) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (1, _15) (1, _69) (-1, _77) 0 ]",
    "EXPR [ (1, _16) (1, _70) (-1, _78) 0 ]",
    "EXPR [ (1, _17) (1, _71) (-1, _79) 0 ]",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_77, 254), (_78, 254), (_79, 254), (_72, 254)] [_80, _81, _82, _83]",
    "INIT (id: 26, len: 4, witnesses: [_80, _81, _82, _83])",
    "MEM (id: 26, read at: EXPR [ (1, _26) 0 ], value: EXPR [ (1, _84) 0 ]) ",
    "INIT (id: 27, len: 4, witnesses: [_80, _81, _82, _83])",
    "MEM (id: 27, write EXPR [ (1, _84) 0 ] at: EXPR [ (1, _26) 0 ]) ",
    "MEM (id: 26, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _85) 0 ]) ",
    "INIT (id: 28, len: 4, witnesses: [_80, _81, _82, _83])",
    "MEM (id: 28, write EXPR [ (1, _85) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "MEM (id: 26, read at: EXPR [ (1, _30) 0 ], value: EXPR [ (1, _86) 0 ]) ",
    "INIT (id: 29, len: 4, witnesses: [_80, _81, _82, _83])",
    "MEM (id: 29, write EXPR [ (1, _86) 0 ] at: EXPR [ (1, _30) 0 ]) ",
    "MEM (id: 26, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _87) 0 ]) ",
    "INIT (id: 30, len: 4, witnesses: [_80, _81, _82, _83])",
    "MEM (id: 30, write EXPR [ (1, _87) 0 ] at: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (1, _18) (1, _80) (-1, _88) 0 ]",
    "EXPR [ (1, _19) (1, _81) (-1, _89) 0 ]",
    "INIT (id: 31, len: 4, witnesses: [_88, _89, _82, _83])",
    "MEM (id: 31, read at: EXPR [ (1, _30) 0 ], value: EXPR [ (1, _90) 0 ]) ",
    "INIT (id: 32, len: 4, witnesses: [_88, _89, _82, _83])",
    "MEM (id: 32, write EXPR [ (1, _90) 0 ] at: EXPR [ (1, _30) 0 ]) ",
    "BLACKBOX::POSEIDON2_PERMUTATION [(_88, 254), (_89, 254), (_82, 254), (_83, 254)] [_91, _92, _93, _94]",
    "EXPR [ (1, _20) (-1, _91) 0 ]"
  ],
  "debug_symbols": "7ZTRjsIgEEX/hec+MAMU8Fc2xlRF06SpprabbIz/vhSKtsnSGGqyPvgyo8VzocP1XsnebLvjpqwPpwtZfV3JtimrqjxuqtOuaMtTbZ9ebxkJXzdtY4x9REbrljoXjalbsqq7qsrId1F17keXc1G73haNXaUZMfXedit4KCvTf7plD5rGUQ58gDmyOy6e57kMvJAJvKBs4AWKlP01BJ7SBF4KPfBS5Sk8U4EXKbyCsL/iOmV/HfZXMN1/bb8Vu7KZOI4gWdmBM1e5xW+9dFMW28oMjjx09W5k0PbnHFaChc/NaWf2XWN6abfWH/ZNDQ5MDDDoqMEhzjOBweDjAcsJj3Ee2d3hyABSFFDpuwLFmAKfmwENCsBQxRREXEHzMEUtUnigGMYINBfLTiBFygwgv58AlEi5h1wFH2I+9tJUAejiiwBYeBNPCsikMUjIwxgko9EjzN2FlOE/AVJHHQ1LDQnLHTn7Gvpxmxqnr/F3+lKbuBkBV9FV5ip3VbiauypdVa5qT9F+WrZD3z+5/cntT26/NLDo8sD699yeE3g28eg7Jd4QeH3zOHgevAB4BfAS4DXAi4BXQa+CwxnQZzqyofO+vyhN17df",
  "file_map": {
    "50": {
      "source": "global NUM_HASHES: u32 = 2;\nglobal HASH_LENGTH: u32 = 10;\n\n#[fold]\npub fn poseidon_hash<let N: u32>(inputs: [Field; N]) -> Field {\n    poseidon::poseidon2::Poseidon2::hash(inputs, inputs.len())\n}\n\nfn main(\n    to_hash: [[Field; HASH_LENGTH]; NUM_HASHES],\n    enable: [bool; NUM_HASHES],\n) -> pub [Field; NUM_HASHES + 1] {\n    let mut result = [0; NUM_HASHES + 1];\n    for i in 0..NUM_HASHES {\n        let enable = enable[i];\n        let to_hash = to_hash[i];\n        if enable {\n            result[i] = poseidon_hash(to_hash);\n        }\n    }\n\n    // We want to make sure that the foldable function with a numeric generic\n    // is monomorphized correctly.\n    let mut double_preimage = [0; 20];\n    for i in 0..HASH_LENGTH * 2 {\n        double_preimage[i] = to_hash[0][i % HASH_LENGTH];\n    }\n    result[NUM_HASHES] = poseidon_hash(double_preimage);\n\n    result\n}\n",
      "path": ""
    },
    "57": {
      "source": "use std::default::Default;\nuse std::hash::Hasher;\n\ncomptime global RATE: u32 = 3;\n\npub struct Poseidon2 {\n    cache: [Field; 3],\n    state: [Field; 4],\n    cache_size: u32,\n    squeeze_mode: bool, // 0 => absorb, 1 => squeeze\n}\n\nimpl Poseidon2 {\n    #[no_predicates]\n    pub fn hash<let N: u32>(input: [Field; N], message_size: u32) -> Field {\n        Poseidon2::hash_internal(input, message_size, message_size != N)\n    }\n\n    pub(crate) fn new(iv: Field) -> Poseidon2 {\n        let mut result =\n            Poseidon2 { cache: [0; 3], state: [0; 4], cache_size: 0, squeeze_mode: false };\n        result.state[RATE] = iv;\n        result\n    }\n\n    fn perform_duplex(&mut self) {\n        // add the cache into sponge state\n        for i in 0..RATE {\n            // We effectively zero-pad the cache by only adding to the state\n            // cache that is less than the specified `cache_size`\n            if i < self.cache_size {\n                self.state[i] += self.cache[i];\n            }\n        }\n        self.state = crate::poseidon2_permutation(self.state, 4);\n    }\n\n    fn absorb(&mut self, input: Field) {\n        assert(!self.squeeze_mode);\n        if self.cache_size == RATE {\n            // If we're absorbing, and the cache is full, apply the sponge permutation to compress the cache\n            self.perform_duplex();\n            self.cache[0] = input;\n            self.cache_size = 1;\n        } else {\n            // If we're absorbing, and the cache is not full, add the input into the cache\n            self.cache[self.cache_size] = input;\n            self.cache_size += 1;\n        }\n    }\n\n    fn squeeze(&mut self) -> Field {\n        assert(!self.squeeze_mode);\n        // If we're in absorb mode, apply sponge permutation to compress the cache.\n        self.perform_duplex();\n        self.squeeze_mode = true;\n\n        // Pop one item off the top of the permutation and return it.\n        self.state[0]\n    }\n\n    fn hash_internal<let N: u32>(\n        input: [Field; N],\n        in_len: u32,\n        is_variable_length: bool,\n    ) -> Field {\n        let two_pow_64 = 18446744073709551616;\n        let iv: Field = (in_len as Field) * two_pow_64;\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..input.len() {\n            if i < in_len {\n                sponge.absorb(input[i]);\n            }\n        }\n\n        // In the case where the hash preimage is variable-length, we append `1` to the end of the input, to distinguish\n        // from fixed-length hashes. (the combination of this additional field element + the hash IV ensures\n        // fixed-length and variable-length hashes do not collide)\n        if is_variable_length {\n            sponge.absorb(1);\n        }\n        sponge.squeeze()\n    }\n}\n\npub struct Poseidon2Hasher {\n    _state: [Field],\n}\n\nimpl Hasher for Poseidon2Hasher {\n    fn finish(self) -> Field {\n        let iv: Field = (self._state.len() as Field) * 18446744073709551616; // iv = (self._state.len() << 64)\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..self._state.len() {\n            sponge.absorb(self._state[i]);\n        }\n        sponge.squeeze()\n    }\n\n    fn write(&mut self, input: Field) {\n        self._state = self._state.push_back(input);\n    }\n}\n\nimpl Default for Poseidon2Hasher {\n    fn default() -> Self {\n        Poseidon2Hasher { _state: &[] }\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main",
    "poseidon_hash",
    "poseidon_hash"
  ],
  "brillig_names": []
}
