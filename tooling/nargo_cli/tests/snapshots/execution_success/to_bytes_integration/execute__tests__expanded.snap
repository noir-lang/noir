---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
fn main(x: Field, a: Field) {
    let y: Field = 2040124_Field;
    let be_byte_array: [u8; 31] = y.to_be_bytes();
    let le_byte_array: [u8; 31] = x.to_le_bytes();
    assert(le_byte_array[0_u32] == 60_u8);
    assert(le_byte_array[0_u32] == be_byte_array[30_u32]);
    assert(le_byte_array[1_u32] == be_byte_array[29_u32]);
    assert(le_byte_array[2_u32] == be_byte_array[28_u32]);
    let z: Field = 0_Field - 1_Field;
    let p_bytes: [u8] = std::field::modulus_le_bytes();
    let z_bytes: [u8; 32] = z.to_le_bytes();
    assert(p_bytes[10_u32] == z_bytes[10_u32]);
    assert(p_bytes[0_u32] == ((z_bytes[0_u32] as u8) + 1_u8));
    let p_bits: [u1] = std::field::modulus_le_bits();
    let z_bits: [u1; 254] = z.to_le_bits();
    assert(z_bits[0_u32] == 0_u1);
    assert(p_bits[100_u32] == z_bits[100_u32]);
    let _: [u1; 254] = a.to_le_bits();
}
