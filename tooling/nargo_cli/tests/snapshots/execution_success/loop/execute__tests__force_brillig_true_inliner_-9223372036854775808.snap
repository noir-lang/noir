---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "six_as_u32",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/91XTUvkQBCtTDqzmx1k3d37/oA9dZjMxr0swurqRU+CeBHixxxEEC8eBCEg+LslWEWeNZUYnbSofamO9eZVddXrDyNqRsTWqW8yMOts/XIjG5DLm4l2DcHcsU3ZjsAfD7jYVMUdkn/N50VqrG/A/Kcpc4asj3AG4PefmOd/1fDrtRBYwenf1P4VnqPOBPOZ/TL/xvNU/SZE/wP2x/8w8h/B2urxrwoTW/g3gJ9o+L25GSb/bMJa2FZaCNSrXPhdGP6Z6D+hxSG+MS3qxDqXY/WNedc12wVejdMx8ezA+JiDY5zGC1+i8D/ZBq6p/w68ug6B9TL9SHo5Al6N0zFD6OUX27egl0B3ab6i4rXVWYbVM/lb3bNrnvfpGWojgTlyYs9GCkPU9EzwOduPvMe15tvqLMPqmeRW9+yG5316Zq23a58hh7wp9D77yzb0u9HqWaxiv5eeVTx/ac8S5duiV6mD2QOJNaHm/emq4eMXa95L3Lhq6mD1xIEf8Tv8/cVYh1siz3lRZvNpOS9n5clJflzqOpGqE75BLW1FLZbo8f7S3KsGl+xbfW6jr75z94BXa63PGS74A2o493n+lRa1LDlOwO8Mv/wO3yyxgde5jSEPC5+o/AV/yLbu0S3PV42c9J3njPyw1pvVg7XuTwe57kH819ZI11oiYy26N2MDb51bgj9ji7V+Sqfn9Dg26tDSaduZeQk5X/C8r04tf5dOrfOyS6eIb9PpFdvn6jQy8uur0whyPYf4+v9pXZ91/vbLjd9tZ6f1TumD3QDs0HdCPiuL47LIsj95dppns6fuhHsN6NPMBRYAAA==",
  "debug_symbols": "pdXLjuowDAbgd+m6iziOc+FVRggVKKNKVUEdeqQj1Hcfp44ZZjGbsOnntP1dCBZ9NOf+uHwehuly/Wp2H4/mOA/jOHwexuupuw/Xic8+GpMPEJsdtA2kDWsEEKyAghNI8M3OMkGIQtpA7oIMCFZAwQkkeCEI3MUxacMZAQTuQgwKTiDBC0HgLp5JG2QEELhLYFBwAgleCAJ3iUza8EYAgbskBgUnkOCFIOTdNWwSgynmNe9iNEUo5j3mHYwcB96RmGSdjKwTFG0Ri65IxZzjXQNjtAAtcpRygVo4LUiLWArIKZ8LvRmcniEtvBZBi6hF/hh+XdtGB+9wn/s+z93LJPJ83rq5n+7NblrGsW3+deOy3fR166bNezfzVd64fjqz3PAyjH2u1vYnbf6OgsUSBqRnnGryLtTkvdN88O/lY6zIW2NL3oJ7L2+rnu+eeXJv5lNFHq3mser3f8k7rMi75/45U5W3oHlra/KYNO9q5o9A55+q5ofwmceqPOn3J/o9f3tedadh/vVuW3OneeiOY1+Wl2U6vVy9/7/pFX033ubrqT8vc587vbwg+fgRbBvCPv+j8QIQWkDcr/nh3w==",
  "file_map": {
    "50": {
      "source": "// Tests a very simple program.\n//\n// The features being tested is basic looping.\nfn main(six_as_u32: u32) {\n    assert_eq(loop_excl(4), six_as_u32);\n    assert_eq(loop_incl(3), six_as_u32);\n    assert(plain_loop() == six_as_u32);\n    assert(never_loop() == 0);\n\n    // Safety: testing context\n    unsafe {\n        assert(basic_break() == true)\n    }\n}\n\nfn loop_excl(x: u32) -> u32 {\n    let mut sum = 0;\n    for i in 0..x {\n        sum = sum + i;\n    }\n    sum\n}\n\nfn loop_incl(x: u32) -> u32 {\n    let mut sum = 0;\n    for i in 0..=x {\n        sum = sum + i;\n    }\n    sum\n}\n\nfn plain_loop() -> u32 {\n    let mut sum = 0;\n    for i in 0..4 {\n        sum = sum + i;\n    }\n    sum\n}\n\nfn never_loop() -> u32 {\n    let mut sum = 0;\n    for i in 4..0 {\n        sum = sum + i;\n    }\n    sum\n}\n\nunconstrained fn basic_break() -> bool {\n    for idx_e in 0..5 {\n        if (idx_e < 5) { break; };\n    }\n    true\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
