---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/9VX227bMAylL0lrp0mANQW2fYVujuW3PGwf4vjyHf3xAbMXcWEVtS+mgpaAITmSTg4PKYlO4GL76fnp+vn0JNOTwq0lrj25ViwzyYglAnS5sBXVAvsZCpIRwf54v2VENKALI4moxdGYoVaD1LIVqjnbSpjqfLTSyspWvbJaD9bYujk3tWik0YMcq0YP48VSBqzREcsgTnBTT7+lPDl9zgmWtFqpWs/zbC+k6TtllerPRnSi7dTQGNmMRhnd9d15wmzlKMa2a0Z7waL5k7vcyp3/fk4B3G5OTl04fEFbxSS8CiTIUvIrvkSWa0Z/Y2m4DuAu1XANvIeBH2OxzGTm/OaM8zpCfB4YdaQHzANcDxqaV9S4b3/OC4LyfYxN/JGR+D3LrQTi3MjAy/NNuVW4tkRBMGPnAb/cKiF+uUVFXFpuFcB3MpTwNcotTp83EKfc2sD9y62C2Re0p5iEn4C/3HriS2S5hc9dbs0aboG/3NrC5y63Suc3Z5y3EeKzY9SRHjA7uH+5xXlBUL772MT3jAGloqcBziHDCuKHawtvPQb2xORvQXC58a0wxwJu48XIXxfwtqSNoQ9iRsD/940126/XK77vC80LnOevmQ0PJZpfOGf+jNjBtb8na2b7TbBwfUxtp9yoImsrn+F9PTdOh2f3ngbmUh19bencDVz3af7K70ttr4dg5vBXxBdqORmn87+795LwxzZfwHOsp3JAt2NbtX1vuvabhw+eTvi9XAT4MMZeFeQ/I+D/37fUStLfeGOoQR5Yl7zznnrtR3M/utS3gTHExPynfNGPwmtfCG6MO+gQBz8YqxfSP3h+Ur1PTBwQD/fsCm4t9cZwrr9nEn5+0ueSBf4LDXPmQH5DPf8Co4YvZOYbAAA=",
  "debug_symbols": "pZLRioMwEEX/Jc8+JGOi1V8pRaKmJRCipLqwiP++k0l1C6VQ7Ms96uQMmZiF9aadb4311+HO6vPC2mCds7fGDZ2e7ODx68J4DFGwWqxrxrZSMwVjYuVpLXYYdTB+YrWfncvYj3YzLbqP2hMnHbDKM2Z8j8SGV+tMfFqzf5u/V0HCQ4Yy33X1uS/k5sMhn4vdlwd8UcFXPhT5Pj8c8RV/c34XfNOdDS9/HzcsKIEyp5SUirKgLClPlFWyHjLauGmBOp69QF8hZIJKKBLKhFNCRQCeIBIgIXUB7FIgVLydcehgdetM3HmcbfbdNgi+Tr/jVtku+hiGzvRzMHHop9uOeRZVBvKyxoP5Aw==",
  "file_map": {
    "50": {
      "source": "// Tests a very simple Brillig function.\n//\n// The features being tested is not instruction on brillig\nfn main(x: Field, y: Field) {\n    // Safety: testing context\n    unsafe {\n        assert(false == not_operator(x as bool));\n        assert(true == not_operator(y as bool));\n    }\n}\n\nunconstrained fn not_operator(x: bool) -> bool {\n    !x\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "not_operator",
    "directive_integer_quotient",
    "directive_invert"
  ]
}
