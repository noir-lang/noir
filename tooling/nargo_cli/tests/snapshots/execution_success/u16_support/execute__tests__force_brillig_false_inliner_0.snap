---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 16
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/9Vc3XbTRhAeS3Ic2QkEnEBaoFCgpfkh0Vp2Ih9uctFz+hxOYt32FfIOve4D9VF602eoN92Jh/E6FPxNjjznCMmj9bfzzXw7lkCiRf/ZcLb9Fo5bsy0Ne287sy0LnxNaNB53EfbFauaAWEUkXAy2K4okkoNEJ9Bvm8qXBJ+01DCJZXE2HE7PB1NXukkxGF9Wo2I4ujyrXOVG1eh6UJXltBpW5+PL8XkxdsNy6urRuJzW3grXAmDVIbAEx7F4SFHi4q4fTJSsqYwTktKiOPnYD7IWZUI4UaaEE2UGLK7HSkTupDVXlIadsigqQ+xBS+SW9duebRuzrRN8+WzrzrbebNviwSz8Ni0uho2IrxPxbUZ8ecTXjfh6Ed8WzUXClmMTBlmEvHDahFrQdb2Bw7ru4LDGmzgsl8Owpq4Lw7pyPRhW5bYI25TATXOwFdZZgsUdbgHX1TaQr0EOnVEOB8gcPgLyJWGa86px9oBYj8GcwfW97TNAbTtf48cRfa+axx1qdg/z8e0Y8H7SbN7OivdTMG82dK/oArH61Oxe4bkC9eh8jfsG2tmlZvcKH9+uAe+9ZvN2Vryf0Xr0ihyI9Zya3Ss8V6Aena/xcwPt7FOze4WPb9+A93fN5u2seH9P69ErNoFYL6jZvcJzBerR+Rq/MNDOS2p2r/DxvTTg/arZvJ0V7x9oPXpFB4j1mprdKzxXoB6dr/FrA+28oWb3Ch/fGwPePzabt7Pi/ZbWo1dsALHeUbN7hecK1KPzNX5noJ331Oxe4eN7b8D7p2bzdla8f6b16BVtINYHwvYKK87Ih1h+oWb3R19f4Bp0XtcfDNbLATW7T/g6HxjwPgTyjj2ZZ/GY6KHAR8VOEQNgO/+HzMdR2B9zcvghIH/iH+OkoRqZf+jD4x4BhXhM6/GDheT8UXFeBU9q6WPQUkafP9MtDd1IjsBc2E4sAz6h+C/eKtgnhFu4p0C+Vjk8pXjDWgX7lLDNAH1Vcxx4I+t8alCfAphH2WAKWmwqFlc8SO1bxXlMmB9U/9Tp1zTsYjVzyCteGa+zDFjel62adPkewLIXSgjLoVqXgspcDDjPHDQr1J/YUb4y+KShXyg5ABa/BGINgVgyp0ORU4v73oEBbkk2iwZ9OY/U5QCHdduUZL2lWdweouL+LMj7SFDk3Kewf/b3n/1Pf/z+F/sZpwx7fjkmERgpMCG5ig2JX83kmdNiDoDxl/wykmV+GNMA//Yfm739ejPH11xI7Hlc7DvbNH/hSo/ZDOf5+FE4ztV3LOpvWJ+iH4mf5+oFrocih7qWLXWc0vIasD9d4pc4LeXvhuNYrmUdMoVzAcmTKxivHfD0S4Gk5o/FQ4RbV20Vz37Y+3oV98SQ4GKodE4yUaMkkhMd8ysV54b4DlLjTwUuRebSmk8iedOaT7/AuaU48/i3inP7ATm31dx67YLmru9bu3p9LosHqNNi1ZodqDizB6wZz9Wj+bVMdoOf/7ya35qnN/M8xN5Sz8R5Of40fO4u4XHxjXHW5xNXl5N6MppcXw+vJjpP3uT6Rc9/NT6rx2V56crx9XTszr40P79lnkfyAdTLIBdzGuDfXVtJ64rjnjrHOcgi32st+Zyo/X1jtV/6tiPnGLMf9jJe5vEk7DmXVv2Y8Y1+4+7uQzo2+GVMC9J31wvE/KSOOaZc5Rwc66QViS9Vc+oY5ZiYfvXf+GXKn/6PsTH98rmdSHz6e3kkVuljbcXWgq6L/J8wYlgdcV6O76ixVjXsR2JqLZl7zyaGuzW1a4Mf7a974nhX8ZS6ugDFwHisgTYtWqLO8Vj9O9fCx+d0LLH+wsaa2RU+zue/s6a3nMhMAAA=",
  "debug_symbols": "tZXBrqJAEEX/pdcs6K4quttfMcag8l5ICBqeTjIx/vtUWxdHF85CMhuOCPdAUQV9dYdud/ne9uPX8cet1le3m/ph6L+3w3HfnvvjqP9eXV02XtwqVM43hmhIbkWKfEeoDd4QDGRgt2KFGBpDNCSDWqRypJZG4Q3BQAa1RIUY1JIU0ZAM+Q5WS7rdKjdXsj1PXVcKeSpNCz61Uzee3Wq8DEPlfrXD5X7Sz6kd7zy3kx6tK9eNB6UKv/qhK79u1d90/T7qY0TYp/SIy2vev89TDshTzp/kY0Ke6/qDPHua84E+ydNcP4ssyzefPD/x8/OTj+7/Of/2+v/of3i07+3V88Lu54Xdzwu7nxd2Py/sfl7Y/fz/up8eL78PL/GN7rX7fnr90uo3z6stGMjABimSyjWGaEiGbPA16MEAEsggXB4yD5uHzsMX4AvwBfgCfAG+AF+AL8AX4AvwEXwEH8FH8BF8BB/BR/ARfAQfw8fwMXwMH8PH8DF8DB/Dx/AJfAKfwCfwCXwCn8An8Al8Al9TfDpATfHpi9QEkEAGBWzACCaw+HSFjMUXb2Xcpr7dDV0ZmjJWl3E/z5Dunn+f5iPzen6ajvvucJm6Mm9Pi7pu1xwqjhubmjWnSurNrQzoHw==",
  "file_map": {
    "50": {
      "source": "fn main(x: u16) {\n    test_u16(x);\n    // Safety: testing context\n    unsafe {\n        test_u16_unconstrained(x);\n    }\n}\n\nunconstrained fn test_u16_unconstrained(x: u16) {\n    test_u16(x)\n}\n\nfn test_u16(x: u16) {\n    let t1: u16 = 1234;\n    let t2: u16 = 4321;\n    let t = t1 + t2;\n\n    let t4 = t - t2;\n    assert(t4 == t1);\n\n    let mut small_int = x as u16;\n    let shift = small_int << (x as u8);\n    assert(shift == 8);\n    assert(shift >> (x as u8) == small_int);\n    assert(shift >> 15 == 0);\n    assert(shift << 15 == 0);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "test_u16_unconstrained",
    "directive_integer_quotient",
    "directive_to_radix",
    "directive_invert"
  ]
}
