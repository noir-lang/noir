---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "kernel_data",
        "type": {
          "kind": "struct",
          "path": "DataToHash",
          "fields": [
            {
              "name": "new_note_hashes",
              "type": {
                "kind": "array",
                "length": 64,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 64,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "public_data_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "PublicDataUpdateRequest",
                  "fields": [
                    {
                      "name": "leaf_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "encrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_contracts",
              "type": {
                "kind": "array",
                "length": 1,
                "type": {
                  "kind": "struct",
                  "path": "NewContractData",
                  "fields": [
                    {
                      "name": "contract_address",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "portal_contract_address",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "array",
        "length": 2,
        "type": {
          "kind": "field"
        }
      },
      "visibility": "public"
    },
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _185",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99, _100, _101, _102, _103, _104, _105, _106, _107, _108, _109, _110, _111, _112, _113, _114, _115, _116, _117, _118, _119, _120, _121, _122, _123, _124, _125, _126, _127, _128, _129, _130, _131, _132, _133, _134, _135, _136, _137, _138, _139, _140, _141, _142, _143, _144, _145, _146, _147, _148, _149, _150, _151, _152, _153, _154, _155, _156, _157, _158, _159, _160, _161, _162, _163, _164, _165, _166, _167, _168, _169, _170, _171, _172, _173, _174, _175, _176, _177, _178, _179, _180, _181, _182, _183]",
    "public parameters indices : []",
    "return value indices : [_184, _185]",
    "BRILLIG CALL func 0: inputs: [[EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ], EXPR [ (1, _2) 0 ], EXPR [ (1, _3) 0 ], EXPR [ (1, _4) 0 ], EXPR [ (1, _5) 0 ], EXPR [ (1, _6) 0 ], EXPR [ (1, _7) 0 ], EXPR [ (1, _8) 0 ], EXPR [ (1, _9) 0 ], EXPR [ (1, _10) 0 ], EXPR [ (1, _11) 0 ], EXPR [ (1, _12) 0 ], EXPR [ (1, _13) 0 ], EXPR [ (1, _14) 0 ], EXPR [ (1, _15) 0 ], EXPR [ (1, _16) 0 ], EXPR [ (1, _17) 0 ], EXPR [ (1, _18) 0 ], EXPR [ (1, _19) 0 ], EXPR [ (1, _20) 0 ], EXPR [ (1, _21) 0 ], EXPR [ (1, _22) 0 ], EXPR [ (1, _23) 0 ], EXPR [ (1, _24) 0 ], EXPR [ (1, _25) 0 ], EXPR [ (1, _26) 0 ], EXPR [ (1, _27) 0 ], EXPR [ (1, _28) 0 ], EXPR [ (1, _29) 0 ], EXPR [ (1, _30) 0 ], EXPR [ (1, _31) 0 ], EXPR [ (1, _32) 0 ], EXPR [ (1, _33) 0 ], EXPR [ (1, _34) 0 ], EXPR [ (1, _35) 0 ], EXPR [ (1, _36) 0 ], EXPR [ (1, _37) 0 ], EXPR [ (1, _38) 0 ], EXPR [ (1, _39) 0 ], EXPR [ (1, _40) 0 ], EXPR [ (1, _41) 0 ], EXPR [ (1, _42) 0 ], EXPR [ (1, _43) 0 ], EXPR [ (1, _44) 0 ], EXPR [ (1, _45) 0 ], EXPR [ (1, _46) 0 ], EXPR [ (1, _47) 0 ], EXPR [ (1, _48) 0 ], EXPR [ (1, _49) 0 ], EXPR [ (1, _50) 0 ], EXPR [ (1, _51) 0 ], EXPR [ (1, _52) 0 ], EXPR [ (1, _53) 0 ], EXPR [ (1, _54) 0 ], EXPR [ (1, _55) 0 ], EXPR [ (1, _56) 0 ], EXPR [ (1, _57) 0 ], EXPR [ (1, _58) 0 ], EXPR [ (1, _59) 0 ], EXPR [ (1, _60) 0 ], EXPR [ (1, _61) 0 ], EXPR [ (1, _62) 0 ], EXPR [ (1, _63) 0 ]], [EXPR [ (1, _64) 0 ], EXPR [ (1, _65) 0 ], EXPR [ (1, _66) 0 ], EXPR [ (1, _67) 0 ], EXPR [ (1, _68) 0 ], EXPR [ (1, _69) 0 ], EXPR [ (1, _70) 0 ], EXPR [ (1, _71) 0 ], EXPR [ (1, _72) 0 ], EXPR [ (1, _73) 0 ], EXPR [ (1, _74) 0 ], EXPR [ (1, _75) 0 ], EXPR [ (1, _76) 0 ], EXPR [ (1, _77) 0 ], EXPR [ (1, _78) 0 ], EXPR [ (1, _79) 0 ], EXPR [ (1, _80) 0 ], EXPR [ (1, _81) 0 ], EXPR [ (1, _82) 0 ], EXPR [ (1, _83) 0 ], EXPR [ (1, _84) 0 ], EXPR [ (1, _85) 0 ], EXPR [ (1, _86) 0 ], EXPR [ (1, _87) 0 ], EXPR [ (1, _88) 0 ], EXPR [ (1, _89) 0 ], EXPR [ (1, _90) 0 ], EXPR [ (1, _91) 0 ], EXPR [ (1, _92) 0 ], EXPR [ (1, _93) 0 ], EXPR [ (1, _94) 0 ], EXPR [ (1, _95) 0 ], EXPR [ (1, _96) 0 ], EXPR [ (1, _97) 0 ], EXPR [ (1, _98) 0 ], EXPR [ (1, _99) 0 ], EXPR [ (1, _100) 0 ], EXPR [ (1, _101) 0 ], EXPR [ (1, _102) 0 ], EXPR [ (1, _103) 0 ], EXPR [ (1, _104) 0 ], EXPR [ (1, _105) 0 ], EXPR [ (1, _106) 0 ], EXPR [ (1, _107) 0 ], EXPR [ (1, _108) 0 ], EXPR [ (1, _109) 0 ], EXPR [ (1, _110) 0 ], EXPR [ (1, _111) 0 ], EXPR [ (1, _112) 0 ], EXPR [ (1, _113) 0 ], EXPR [ (1, _114) 0 ], EXPR [ (1, _115) 0 ], EXPR [ (1, _116) 0 ], EXPR [ (1, _117) 0 ], EXPR [ (1, _118) 0 ], EXPR [ (1, _119) 0 ], EXPR [ (1, _120) 0 ], EXPR [ (1, _121) 0 ], EXPR [ (1, _122) 0 ], EXPR [ (1, _123) 0 ], EXPR [ (1, _124) 0 ], EXPR [ (1, _125) 0 ], EXPR [ (1, _126) 0 ], EXPR [ (1, _127) 0 ]], [EXPR [ (1, _128) 0 ], EXPR [ (1, _129) 0 ], EXPR [ (1, _130) 0 ], EXPR [ (1, _131) 0 ], EXPR [ (1, _132) 0 ], EXPR [ (1, _133) 0 ], EXPR [ (1, _134) 0 ], EXPR [ (1, _135) 0 ], EXPR [ (1, _136) 0 ], EXPR [ (1, _137) 0 ], EXPR [ (1, _138) 0 ], EXPR [ (1, _139) 0 ], EXPR [ (1, _140) 0 ], EXPR [ (1, _141) 0 ], EXPR [ (1, _142) 0 ], EXPR [ (1, _143) 0 ], EXPR [ (1, _144) 0 ], EXPR [ (1, _145) 0 ], EXPR [ (1, _146) 0 ], EXPR [ (1, _147) 0 ], EXPR [ (1, _148) 0 ], EXPR [ (1, _149) 0 ], EXPR [ (1, _150) 0 ], EXPR [ (1, _151) 0 ], EXPR [ (1, _152) 0 ], EXPR [ (1, _153) 0 ], EXPR [ (1, _154) 0 ], EXPR [ (1, _155) 0 ], EXPR [ (1, _156) 0 ], EXPR [ (1, _157) 0 ], EXPR [ (1, _158) 0 ], EXPR [ (1, _159) 0 ], EXPR [ (1, _160) 0 ], EXPR [ (1, _161) 0 ], EXPR [ (1, _162) 0 ], EXPR [ (1, _163) 0 ], EXPR [ (1, _164) 0 ], EXPR [ (1, _165) 0 ], EXPR [ (1, _166) 0 ], EXPR [ (1, _167) 0 ], EXPR [ (1, _168) 0 ], EXPR [ (1, _169) 0 ], EXPR [ (1, _170) 0 ], EXPR [ (1, _171) 0 ], EXPR [ (1, _172) 0 ], EXPR [ (1, _173) 0 ], EXPR [ (1, _174) 0 ], EXPR [ (1, _175) 0 ]], [EXPR [ (1, _176) 0 ], EXPR [ (1, _177) 0 ]], [EXPR [ (1, _178) 0 ], EXPR [ (1, _179) 0 ]], [EXPR [ (1, _180) 0 ], EXPR [ (1, _181) 0 ]], [EXPR [ (1, _182) 0 ], EXPR [ (1, _183) 0 ]]], outputs: [[_184, _185]]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 33029 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 184 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32843), size_address: Relative(8), offset_address: Relative(9) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32843 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 64 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 65 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(10) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(10) }, Mov { destination: Direct(32773), source: Relative(9) }, Call { location: 102 }, Mov { destination: Relative(1), source: Relative(8) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32907 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 64 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 65 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(10) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(10) }, Mov { destination: Direct(32773), source: Relative(9) }, Call { location: 102 }, Mov { destination: Relative(2), source: Relative(8) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 32971 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 48 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 49 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(10) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Mov { destination: Direct(32772), source: Relative(10) }, Mov { destination: Direct(32773), source: Relative(9) }, Call { location: 102 }, Mov { destination: Relative(3), source: Relative(8) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 33019 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 2 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(10) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(4) }, Mov { destination: Direct(32772), source: Relative(10) }, Mov { destination: Direct(32773), source: Relative(9) }, Call { location: 102 }, Mov { destination: Relative(4), source: Relative(8) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 33021 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 2 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(10) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(5) }, Mov { destination: Direct(32772), source: Relative(10) }, Mov { destination: Direct(32773), source: Relative(9) }, Call { location: 102 }, Mov { destination: Relative(5), source: Relative(8) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 33023 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 2 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(10) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(6) }, Mov { destination: Direct(32772), source: Relative(10) }, Mov { destination: Direct(32773), source: Relative(9) }, Call { location: 102 }, Mov { destination: Relative(6), source: Relative(8) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 33025 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 2 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(10) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(7) }, Mov { destination: Direct(32772), source: Relative(10) }, Mov { destination: Direct(32773), source: Relative(9) }, Call { location: 102 }, Mov { destination: Relative(7), source: Relative(8) }, Call { location: 113 }, Call { location: 122 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 33027 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 2 }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(3) }, Mov { destination: Direct(32773), source: Relative(4) }, Call { location: 102 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 33027 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 112 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 105 }, Return, Const { destination: Direct(32835), bit_size: Integer(U32), value: 64 }, Const { destination: Direct(32836), bit_size: Integer(U32), value: 16 }, Const { destination: Direct(32837), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(32838), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(32839), bit_size: Integer(U32), value: 169 }, Const { destination: Direct(32840), bit_size: Integer(U32), value: 165 }, Const { destination: Direct(32841), bit_size: Integer(U32), value: 4 }, Const { destination: Direct(32842), bit_size: Field, value: 340282366920938463463374607431768211456 }, Return, Call { location: 1195 }, Const { destination: Relative(9), bit_size: Field, value: 0 }, Mov { destination: Relative(10), source: Direct(1) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 170 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(11) }, IndirectConst { destination_pointer: Relative(10), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 169 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(11) }, Mov { destination: Relative(13), source: Relative(11) }, BinaryIntOp { destination: Relative(14), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Relative(12) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 138 }, Store { destination_pointer: Relative(13), source: Relative(9) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Jump { location: 132 }, Mov { destination: Relative(11), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(11), source: Relative(10) }, Load { destination: Relative(10), source_pointer: Relative(1) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(10) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 147 }, Call { location: 1201 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(1), source: Relative(10) }, Load { destination: Relative(10), source_pointer: Relative(2) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(10) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 155 }, Call { location: 1201 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(10) }, Load { destination: Relative(10), source_pointer: Relative(3) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(10) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 163 }, Call { location: 1201 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(10) }, Load { destination: Relative(10), source_pointer: Relative(4) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U32, lhs: Relative(15), rhs: Relative(10) }, Not { destination: Relative(16), source: Relative(16), bit_size: U1 }, JumpIf { condition: Relative(16), location: 171 }, Call { location: 1201 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(10) }, Load { destination: Relative(10), source_pointer: Relative(5) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(16), rhs: Relative(10) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 179 }, Call { location: 1201 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(10) }, Load { destination: Relative(10), source_pointer: Relative(6) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(18), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(10) }, Not { destination: Relative(18), source: Relative(18), bit_size: U1 }, JumpIf { condition: Relative(18), location: 187 }, Call { location: 1201 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(10) }, Mov { destination: Relative(10), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 0 }, Store { destination_pointer: Relative(10), source: Relative(18) }, Const { destination: Relative(19), bit_size: Integer(U1), value: 1 }, Mov { destination: Relative(8), source: Relative(18) }, Jump { location: 196 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Direct(32835) }, JumpIf { condition: Relative(12), location: 1172 }, Jump { location: 199 }, Load { destination: Relative(8), source_pointer: Relative(10) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(32835) }, BinaryIntOp { destination: Relative(13), op: LessThanEquals, bit_size: U32, lhs: Relative(8), rhs: Relative(12) }, JumpIf { condition: Relative(13), location: 204 }, Call { location: 1204 }, Store { destination_pointer: Relative(10), source: Relative(12) }, Mov { destination: Relative(1), source: Relative(18) }, Jump { location: 207 }, BinaryIntOp { destination: Relative(8), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Direct(32835) }, JumpIf { condition: Relative(8), location: 1149 }, Jump { location: 210 }, Load { destination: Relative(2), source_pointer: Relative(10) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(32835) }, BinaryIntOp { destination: Relative(12), op: LessThanEquals, bit_size: U32, lhs: Relative(2), rhs: Relative(8) }, JumpIf { condition: Relative(12), location: 215 }, Call { location: 1204 }, Store { destination_pointer: Relative(10), source: Relative(8) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 3 }, Mov { destination: Relative(1), source: Relative(18) }, Jump { location: 219 }, BinaryIntOp { destination: Relative(8), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Direct(32836) }, JumpIf { condition: Relative(8), location: 1106 }, Jump { location: 222 }, Load { destination: Relative(3), source_pointer: Relative(10) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 32 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(8) }, BinaryIntOp { destination: Relative(13), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(12) }, JumpIf { condition: Relative(13), location: 228 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(32838) }, Load { destination: Relative(3), source_pointer: Relative(13) }, Load { destination: Relative(13), source_pointer: Relative(11) }, BinaryIntOp { destination: Relative(14), op: LessThan, bit_size: U32, lhs: Relative(12), rhs: Direct(32839) }, JumpIf { condition: Relative(14), location: 234 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(13) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(14), source: Direct(32773) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(12) }, Store { destination_pointer: Relative(16), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(32838) }, BinaryIntOp { destination: Relative(13), op: LessThanEquals, bit_size: U32, lhs: Relative(12), rhs: Relative(3) }, JumpIf { condition: Relative(13), location: 245 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(32837) }, Load { destination: Relative(13), source_pointer: Relative(15) }, BinaryIntOp { destination: Relative(4), op: LessThan, bit_size: U32, lhs: Relative(3), rhs: Direct(32839) }, JumpIf { condition: Relative(4), location: 250 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(14) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(4), source: Direct(32773) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(3) }, Store { destination_pointer: Relative(16), source: Relative(13) }, Store { destination_pointer: Relative(11), source: Relative(4) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(32837) }, BinaryIntOp { destination: Relative(4), op: LessThanEquals, bit_size: U32, lhs: Relative(12), rhs: Relative(3) }, JumpIf { condition: Relative(4), location: 262 }, Call { location: 1204 }, Store { destination_pointer: Relative(10), source: Relative(3) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(32838) }, Load { destination: Relative(3), source_pointer: Relative(4) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(32837) }, Load { destination: Relative(4), source_pointer: Relative(12) }, Mov { destination: Relative(7), source: Direct(1) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(12) }, IndirectConst { destination_pointer: Relative(7), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Mov { destination: Relative(13), source: Relative(12) }, Store { destination_pointer: Relative(13), source: Relative(3) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(4) }, Mov { destination: Relative(12), source: Direct(1) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(13) }, IndirectConst { destination_pointer: Relative(12), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Mov { destination: Relative(14), source: Relative(13) }, Store { destination_pointer: Relative(14), source: Relative(9) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(9) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(9) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(9) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(9) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(9) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(12) }, Mov { destination: Relative(12), source: Direct(1) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(14) }, IndirectConst { destination_pointer: Relative(12), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Mov { destination: Relative(15), source: Relative(14) }, Store { destination_pointer: Relative(15), source: Relative(9) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(9) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(19) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(9) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(9) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(19) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(9) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(9) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(19) }, Mov { destination: Relative(14), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(12) }, Const { destination: Relative(12), bit_size: Field, value: 3728882899078719075161482178784387565366481897740339799480980287259621149274 }, Const { destination: Relative(15), bit_size: Field, value: -9903063709032878667290627648209915537972247634463802596148419711785767431332 }, Const { destination: Relative(16), bit_size: Integer(U1), value: 0 }, Const { destination: Relative(17), bit_size: Field, value: 2393473289045184898987089634332637236754766663897650125720167164137088869378 }, Const { destination: Relative(20), bit_size: Field, value: -7135402912423807765050323395026152633898511180575289670895350565966806597339 }, Mov { destination: Relative(21), source: Direct(1) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(22) }, IndirectConst { destination_pointer: Relative(21), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Mov { destination: Relative(23), source: Relative(22) }, Store { destination_pointer: Relative(23), source: Relative(12) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(15) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(16) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(17) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(20) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(16) }, Const { destination: Relative(12), bit_size: Field, value: 8680525429001239497728366687280168587232520577698044359798894838135247199343 }, Mov { destination: Relative(1), source: Relative(18) }, Jump { location: 347 }, BinaryIntOp { destination: Relative(15), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Direct(32837) }, JumpIf { condition: Relative(15), location: 1036 }, Jump { location: 350 }, Load { destination: Relative(7), source_pointer: Relative(13) }, Const { destination: Relative(12), bit_size: Field, value: 2 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 5 }, Mov { destination: Direct(32771), source: Relative(7) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 7 }, Call { location: 1210 }, Mov { destination: Relative(17), source: Direct(32773) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(15) }, Store { destination_pointer: Relative(20), source: Relative(12) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 6 }, Mov { destination: Direct(32771), source: Relative(17) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 7 }, Call { location: 1210 }, Mov { destination: Relative(20), source: Direct(32773) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(7) }, Store { destination_pointer: Relative(21), source: Relative(9) }, Store { destination_pointer: Relative(13), source: Relative(20) }, Load { destination: Relative(9), source_pointer: Relative(14) }, Const { destination: Relative(13), bit_size: Field, value: -1094708040843609169356775910874053498301840173462935739639689208799068762676 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 7 }, Mov { destination: Direct(32771), source: Relative(9) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 10 }, Call { location: 1210 }, Mov { destination: Relative(21), source: Direct(32773) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(17) }, Store { destination_pointer: Relative(22), source: Relative(13) }, Const { destination: Relative(9), bit_size: Field, value: -718703907181967287621274717949248537252263842169639534402461291799004475262 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 8 }, Mov { destination: Direct(32771), source: Relative(21) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 10 }, Call { location: 1210 }, Mov { destination: Relative(22), source: Direct(32773) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(13) }, Store { destination_pointer: Relative(23), source: Relative(9) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 9 }, Mov { destination: Direct(32771), source: Relative(22) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 10 }, Call { location: 1210 }, Mov { destination: Relative(21), source: Direct(32773) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(9) }, Store { destination_pointer: Relative(23), source: Relative(16) }, Store { destination_pointer: Relative(14), source: Relative(21) }, Mov { destination: Relative(14), source: Direct(1) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(22) }, IndirectConst { destination_pointer: Relative(14), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, BlackBox(MultiScalarMul { points: HeapVector { pointer: Relative(22), size: Relative(23) }, scalars: HeapVector { pointer: Relative(24), size: Relative(25) }, outputs: HeapArray { pointer: Relative(26), size: 3 } }), BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(32838) }, Load { destination: Relative(20), source_pointer: Relative(21) }, Load { destination: Relative(14), source_pointer: Relative(11) }, Load { destination: Relative(21), source_pointer: Relative(10) }, BinaryIntOp { destination: Relative(22), op: LessThan, bit_size: U32, lhs: Relative(21), rhs: Direct(32839) }, JumpIf { condition: Relative(22), location: 409 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(14) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(22), source: Direct(32773) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Store { destination_pointer: Relative(24), source: Relative(20) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(32838) }, BinaryIntOp { destination: Relative(20), op: LessThanEquals, bit_size: U32, lhs: Relative(21), rhs: Relative(14) }, JumpIf { condition: Relative(20), location: 420 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Direct(32839) }, JumpIf { condition: Relative(20), location: 423 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(22) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(20), source: Direct(32773) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(14) }, Store { destination_pointer: Relative(23), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(32838) }, BinaryIntOp { destination: Relative(21), op: LessThanEquals, bit_size: U32, lhs: Relative(14), rhs: Relative(3) }, JumpIf { condition: Relative(21), location: 434 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(21), op: LessThan, bit_size: U32, lhs: Relative(3), rhs: Direct(32839) }, JumpIf { condition: Relative(21), location: 437 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(20) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(21), source: Direct(32773) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(3) }, Store { destination_pointer: Relative(23), source: Relative(4) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(32837) }, BinaryIntOp { destination: Relative(4), op: LessThanEquals, bit_size: U32, lhs: Relative(14), rhs: Relative(3) }, JumpIf { condition: Relative(4), location: 448 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(32838) }, Load { destination: Relative(4), source_pointer: Relative(14) }, BinaryIntOp { destination: Relative(14), op: LessThan, bit_size: U32, lhs: Relative(3), rhs: Direct(32839) }, JumpIf { condition: Relative(14), location: 453 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(21) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(14), source: Direct(32773) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(3) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(32838) }, BinaryIntOp { destination: Relative(20), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, JumpIf { condition: Relative(20), location: 464 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(32837) }, Load { destination: Relative(20), source_pointer: Relative(21) }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Direct(32839) }, JumpIf { condition: Relative(5), location: 469 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(14) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(4) }, Store { destination_pointer: Relative(22), source: Relative(20) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(32837) }, BinaryIntOp { destination: Relative(14), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, JumpIf { condition: Relative(14), location: 480 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(32838) }, Load { destination: Relative(3), source_pointer: Relative(14) }, BinaryIntOp { destination: Relative(14), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Direct(32839) }, JumpIf { condition: Relative(14), location: 485 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(14), source: Direct(32773) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(4) }, Store { destination_pointer: Relative(21), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(32838) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, JumpIf { condition: Relative(5), location: 496 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(32837) }, Load { destination: Relative(5), source_pointer: Relative(20) }, BinaryIntOp { destination: Relative(6), op: LessThan, bit_size: U32, lhs: Relative(3), rhs: Direct(32839) }, JumpIf { condition: Relative(6), location: 501 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(14) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(3) }, Store { destination_pointer: Relative(21), source: Relative(5) }, Store { destination_pointer: Relative(11), source: Relative(6) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(32837) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, JumpIf { condition: Relative(5), location: 513 }, Call { location: 1204 }, Store { destination_pointer: Relative(10), source: Relative(3) }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Direct(32839) }, JumpIf { condition: Relative(4), location: 518 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, Const { destination: Relative(3), bit_size: Integer(U8), value: 0 }, Mov { destination: Relative(4), source: Direct(1) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 5345 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(5) }, IndirectConst { destination_pointer: Relative(4), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 5344 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(5) }, Mov { destination: Relative(10), source: Relative(5) }, BinaryIntOp { destination: Relative(14), op: LessThan, bit_size: U32, lhs: Relative(10), rhs: Relative(6) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 533 }, Store { destination_pointer: Relative(10), source: Relative(3) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Jump { location: 527 }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(4) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 256 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 5344 }, Mov { destination: Relative(1), source: Relative(18) }, Jump { location: 540 }, BinaryIntOp { destination: Relative(6), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Direct(32840) }, JumpIf { condition: Relative(6), location: 993 }, Jump { location: 543 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 5280 }, Mov { destination: Relative(1), source: Relative(18) }, Jump { location: 546 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Direct(32841) }, JumpIf { condition: Relative(10), location: 942 }, Jump { location: 549 }, Load { destination: Relative(4), source_pointer: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(5) }, IndirectConst { destination_pointer: Relative(3), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 5344 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BlackBox(Blake2s { message: HeapVector { pointer: Relative(5), size: Relative(6) }, output: HeapArray { pointer: Relative(10), size: 32 } }), BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(32838) }, Load { destination: Relative(4), source_pointer: Relative(5) }, Cast { destination: Relative(5), source: Relative(4), bit_size: Integer(U64) }, Const { destination: Relative(4), bit_size: Integer(U64), value: 56 }, BinaryIntOp { destination: Relative(6), op: Shl, bit_size: U64, lhs: Relative(5), rhs: Relative(4) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(32837) }, Load { destination: Relative(5), source_pointer: Relative(10) }, Cast { destination: Relative(10), source: Relative(5), bit_size: Integer(U64) }, Const { destination: Relative(5), bit_size: Integer(U64), value: 48 }, BinaryIntOp { destination: Relative(11), op: Shl, bit_size: U64, lhs: Relative(10), rhs: Relative(5) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U64, lhs: Relative(6), rhs: Relative(11) }, BinaryIntOp { destination: Relative(14), op: LessThanEquals, bit_size: U64, lhs: Relative(6), rhs: Relative(10) }, JumpIf { condition: Relative(14), location: 572 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Load { destination: Relative(6), source_pointer: Relative(11) }, Cast { destination: Relative(2), source: Relative(6), bit_size: Integer(U64) }, Const { destination: Relative(6), bit_size: Integer(U64), value: 40 }, BinaryIntOp { destination: Relative(11), op: Shl, bit_size: U64, lhs: Relative(2), rhs: Relative(6) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U64, lhs: Relative(10), rhs: Relative(11) }, BinaryIntOp { destination: Relative(14), op: LessThanEquals, bit_size: U64, lhs: Relative(10), rhs: Relative(2) }, JumpIf { condition: Relative(14), location: 581 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(32841) }, Load { destination: Relative(10), source_pointer: Relative(11) }, Cast { destination: Relative(11), source: Relative(10), bit_size: Integer(U64) }, Const { destination: Relative(10), bit_size: Integer(U64), value: 32 }, BinaryIntOp { destination: Relative(14), op: Shl, bit_size: U64, lhs: Relative(11), rhs: Relative(10) }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U64, lhs: Relative(2), rhs: Relative(14) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(2), rhs: Relative(11) }, JumpIf { condition: Relative(18), location: 590 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(15) }, Load { destination: Relative(2), source_pointer: Relative(14) }, Cast { destination: Relative(14), source: Relative(2), bit_size: Integer(U64) }, Const { destination: Relative(2), bit_size: Integer(U64), value: 24 }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(14), rhs: Relative(2) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U64, lhs: Relative(11), rhs: Relative(15) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(11), rhs: Relative(14) }, JumpIf { condition: Relative(18), location: 599 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(7) }, Load { destination: Relative(11), source_pointer: Relative(15) }, Cast { destination: Relative(7), source: Relative(11), bit_size: Integer(U64) }, Const { destination: Relative(11), bit_size: Integer(U64), value: 16 }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(7), rhs: Relative(11) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U64, lhs: Relative(14), rhs: Relative(15) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(14), rhs: Relative(7) }, JumpIf { condition: Relative(18), location: 608 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(17) }, Load { destination: Relative(14), source_pointer: Relative(15) }, Cast { destination: Relative(15), source: Relative(14), bit_size: Integer(U64) }, Const { destination: Relative(14), bit_size: Integer(U64), value: 8 }, BinaryIntOp { destination: Relative(17), op: Shl, bit_size: U64, lhs: Relative(15), rhs: Relative(14) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U64, lhs: Relative(7), rhs: Relative(17) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(7), rhs: Relative(15) }, JumpIf { condition: Relative(18), location: 617 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(7), source_pointer: Relative(17) }, Cast { destination: Relative(13), source: Relative(7), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U64, lhs: Relative(15), rhs: Relative(13) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U64, lhs: Relative(15), rhs: Relative(7) }, JumpIf { condition: Relative(17), location: 624 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(9) }, Load { destination: Relative(13), source_pointer: Relative(15) }, Cast { destination: Relative(9), source: Relative(13), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(13), op: Shl, bit_size: U64, lhs: Relative(9), rhs: Relative(4) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(9) }, Load { destination: Relative(15), source_pointer: Relative(17) }, Cast { destination: Relative(9), source: Relative(15), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(9), rhs: Relative(5) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U64, lhs: Relative(13), rhs: Relative(15) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U64, lhs: Relative(13), rhs: Relative(9) }, JumpIf { condition: Relative(17), location: 637 }, Call { location: 1204 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 11 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(15), source_pointer: Relative(17) }, Cast { destination: Relative(13), source: Relative(15), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(13), rhs: Relative(6) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U64, lhs: Relative(9), rhs: Relative(15) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U64, lhs: Relative(9), rhs: Relative(13) }, JumpIf { condition: Relative(17), location: 646 }, Call { location: 1204 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 12 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(9) }, Load { destination: Relative(15), source_pointer: Relative(17) }, Cast { destination: Relative(9), source: Relative(15), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(9), rhs: Relative(10) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U64, lhs: Relative(13), rhs: Relative(15) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U64, lhs: Relative(13), rhs: Relative(9) }, JumpIf { condition: Relative(17), location: 655 }, Call { location: 1204 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 13 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(15), source_pointer: Relative(17) }, Cast { destination: Relative(13), source: Relative(15), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(13), rhs: Relative(2) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U64, lhs: Relative(9), rhs: Relative(15) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U64, lhs: Relative(9), rhs: Relative(13) }, JumpIf { condition: Relative(17), location: 664 }, Call { location: 1204 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 14 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(9) }, Load { destination: Relative(15), source_pointer: Relative(17) }, Cast { destination: Relative(9), source: Relative(15), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(9), rhs: Relative(11) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U64, lhs: Relative(13), rhs: Relative(15) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U64, lhs: Relative(13), rhs: Relative(9) }, JumpIf { condition: Relative(17), location: 673 }, Call { location: 1204 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 15 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(15), source_pointer: Relative(17) }, Cast { destination: Relative(13), source: Relative(15), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(13), rhs: Relative(14) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U64, lhs: Relative(9), rhs: Relative(15) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U64, lhs: Relative(9), rhs: Relative(13) }, JumpIf { condition: Relative(17), location: 682 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(32836) }, Load { destination: Relative(9), source_pointer: Relative(15) }, Cast { destination: Relative(15), source: Relative(9), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U64, lhs: Relative(13), rhs: Relative(15) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U64, lhs: Relative(13), rhs: Relative(9) }, JumpIf { condition: Relative(17), location: 689 }, Call { location: 1204 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 17 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(15), source_pointer: Relative(17) }, Cast { destination: Relative(13), source: Relative(15), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(13), rhs: Relative(4) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 18 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(17), source_pointer: Relative(18) }, Cast { destination: Relative(13), source: Relative(17), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(17), op: Shl, bit_size: U64, lhs: Relative(13), rhs: Relative(5) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U64, lhs: Relative(15), rhs: Relative(17) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(15), rhs: Relative(13) }, JumpIf { condition: Relative(18), location: 703 }, Call { location: 1204 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 19 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(15) }, Load { destination: Relative(17), source_pointer: Relative(18) }, Cast { destination: Relative(15), source: Relative(17), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(17), op: Shl, bit_size: U64, lhs: Relative(15), rhs: Relative(6) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U64, lhs: Relative(13), rhs: Relative(17) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(13), rhs: Relative(15) }, JumpIf { condition: Relative(18), location: 712 }, Call { location: 1204 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 20 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(17), source_pointer: Relative(18) }, Cast { destination: Relative(13), source: Relative(17), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(17), op: Shl, bit_size: U64, lhs: Relative(13), rhs: Relative(10) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U64, lhs: Relative(15), rhs: Relative(17) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(15), rhs: Relative(13) }, JumpIf { condition: Relative(18), location: 721 }, Call { location: 1204 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 21 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(15) }, Load { destination: Relative(17), source_pointer: Relative(18) }, Cast { destination: Relative(15), source: Relative(17), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(17), op: Shl, bit_size: U64, lhs: Relative(15), rhs: Relative(2) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U64, lhs: Relative(13), rhs: Relative(17) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(13), rhs: Relative(15) }, JumpIf { condition: Relative(18), location: 730 }, Call { location: 1204 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 22 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(17), source_pointer: Relative(18) }, Cast { destination: Relative(13), source: Relative(17), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(17), op: Shl, bit_size: U64, lhs: Relative(13), rhs: Relative(11) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U64, lhs: Relative(15), rhs: Relative(17) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(15), rhs: Relative(13) }, JumpIf { condition: Relative(18), location: 739 }, Call { location: 1204 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 23 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(15) }, Load { destination: Relative(17), source_pointer: Relative(18) }, Cast { destination: Relative(15), source: Relative(17), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(17), op: Shl, bit_size: U64, lhs: Relative(15), rhs: Relative(14) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U64, lhs: Relative(13), rhs: Relative(17) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(13), rhs: Relative(15) }, JumpIf { condition: Relative(18), location: 748 }, Call { location: 1204 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 24 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(17), source_pointer: Relative(18) }, Cast { destination: Relative(13), source: Relative(17), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U64, lhs: Relative(15), rhs: Relative(13) }, BinaryIntOp { destination: Relative(18), op: LessThanEquals, bit_size: U64, lhs: Relative(15), rhs: Relative(17) }, JumpIf { condition: Relative(18), location: 756 }, Call { location: 1204 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 25 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(13) }, Load { destination: Relative(15), source_pointer: Relative(18) }, Cast { destination: Relative(13), source: Relative(15), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(15), op: Shl, bit_size: U64, lhs: Relative(13), rhs: Relative(4) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 26 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, Load { destination: Relative(13), source_pointer: Relative(18) }, Cast { destination: Relative(4), source: Relative(13), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(13), op: Shl, bit_size: U64, lhs: Relative(4), rhs: Relative(5) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U64, lhs: Relative(15), rhs: Relative(13) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U64, lhs: Relative(15), rhs: Relative(4) }, JumpIf { condition: Relative(5), location: 770 }, Call { location: 1204 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 27 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(5) }, Load { destination: Relative(13), source_pointer: Relative(15) }, Cast { destination: Relative(5), source: Relative(13), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(13), op: Shl, bit_size: U64, lhs: Relative(5), rhs: Relative(6) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U64, lhs: Relative(4), rhs: Relative(13) }, BinaryIntOp { destination: Relative(6), op: LessThanEquals, bit_size: U64, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 779 }, Call { location: 1204 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 28 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, Load { destination: Relative(6), source_pointer: Relative(13) }, Cast { destination: Relative(4), source: Relative(6), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(6), op: Shl, bit_size: U64, lhs: Relative(4), rhs: Relative(10) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U64, lhs: Relative(5), rhs: Relative(6) }, BinaryIntOp { destination: Relative(10), op: LessThanEquals, bit_size: U64, lhs: Relative(5), rhs: Relative(4) }, JumpIf { condition: Relative(10), location: 788 }, Call { location: 1204 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 29 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(5) }, Load { destination: Relative(6), source_pointer: Relative(10) }, Cast { destination: Relative(5), source: Relative(6), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(6), op: Shl, bit_size: U64, lhs: Relative(5), rhs: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U64, lhs: Relative(4), rhs: Relative(6) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U64, lhs: Relative(4), rhs: Relative(2) }, JumpIf { condition: Relative(5), location: 797 }, Call { location: 1204 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 30 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, Load { destination: Relative(5), source_pointer: Relative(6) }, Cast { destination: Relative(4), source: Relative(5), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(5), op: Shl, bit_size: U64, lhs: Relative(4), rhs: Relative(11) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U64, lhs: Relative(2), rhs: Relative(5) }, BinaryIntOp { destination: Relative(6), op: LessThanEquals, bit_size: U64, lhs: Relative(2), rhs: Relative(4) }, JumpIf { condition: Relative(6), location: 806 }, Call { location: 1204 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 31 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Load { destination: Relative(5), source_pointer: Relative(6) }, Cast { destination: Relative(2), source: Relative(5), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(5), op: Shl, bit_size: U64, lhs: Relative(2), rhs: Relative(14) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U64, lhs: Relative(4), rhs: Relative(5) }, BinaryIntOp { destination: Relative(6), op: LessThanEquals, bit_size: U64, lhs: Relative(4), rhs: Relative(2) }, JumpIf { condition: Relative(6), location: 815 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(8) }, Load { destination: Relative(4), source_pointer: Relative(5) }, Cast { destination: Relative(3), source: Relative(4), bit_size: Integer(U64) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U64, lhs: Relative(2), rhs: Relative(3) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U64, lhs: Relative(2), rhs: Relative(4) }, JumpIf { condition: Relative(5), location: 822 }, Call { location: 1204 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Field, value: 1 }, Store { destination_pointer: Relative(2), source: Relative(3) }, Mov { destination: Relative(5), source: Direct(1) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(6) }, IndirectConst { destination_pointer: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Relative(10), source: Relative(6) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(19) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(16) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 33 }, Mov { destination: Relative(1), source: Direct(32838) }, Jump { location: 898 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Relative(6) }, JumpIf { condition: Relative(10), location: 920 }, Jump { location: 901 }, Load { destination: Relative(1), source_pointer: Relative(2) }, Cast { destination: Relative(2), source: Relative(7), bit_size: Field }, BinaryFieldOp { destination: Relative(3), op: Mul, lhs: Relative(2), rhs: Relative(1) }, Cast { destination: Relative(2), source: Relative(9), bit_size: Field }, BinaryFieldOp { destination: Relative(5), op: Add, lhs: Relative(3), rhs: Relative(2) }, Cast { destination: Relative(2), source: Relative(17), bit_size: Field }, BinaryFieldOp { destination: Relative(3), op: Mul, lhs: Relative(2), rhs: Relative(1) }, Cast { destination: Relative(1), source: Relative(4), bit_size: Field }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(3), rhs: Relative(1) }, Mov { destination: Relative(1), source: Direct(1) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(3) }, IndirectConst { destination_pointer: Relative(1), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Relative(4), source: Relative(3) }, Store { destination_pointer: Relative(4), source: Relative(5) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(2) }, Return, Load { destination: Relative(10), source_pointer: Relative(2) }, BinaryFieldOp { destination: Relative(11), op: Mul, lhs: Relative(10), rhs: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Sub, bit_size: U32, lhs: Relative(8), rhs: Relative(1) }, BinaryIntOp { destination: Relative(13), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, JumpIf { condition: Relative(13), location: 926 }, Call { location: 1232 }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(10), rhs: Relative(8) }, JumpIf { condition: Relative(13), location: 929 }, Call { location: 1207 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(10) }, Load { destination: Relative(13), source_pointer: Relative(15) }, Cast { destination: Relative(10), source: Relative(13), bit_size: Field }, BinaryFieldOp { destination: Relative(13), op: Mul, lhs: Relative(11), rhs: Relative(12) }, BinaryFieldOp { destination: Relative(14), op: Mul, lhs: Relative(10), rhs: Relative(13) }, BinaryFieldOp { destination: Relative(13), op: Sub, lhs: Relative(3), rhs: Relative(10) }, BinaryFieldOp { destination: Relative(10), op: Mul, lhs: Relative(13), rhs: Relative(11) }, BinaryFieldOp { destination: Relative(11), op: Add, lhs: Relative(14), rhs: Relative(10) }, Store { destination_pointer: Relative(2), source: Relative(11) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(32838) }, Mov { destination: Relative(1), source: Relative(10) }, Jump { location: 898 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Direct(32840), rhs: Relative(1) }, Load { destination: Relative(20), source_pointer: Relative(11) }, BinaryIntOp { destination: Relative(21), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Direct(32839) }, JumpIf { condition: Relative(21), location: 947 }, Call { location: 1207 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(14) }, Load { destination: Relative(21), source_pointer: Relative(23) }, Const { destination: Relative(20), bit_size: Integer(U1), value: 0 }, Mov { destination: Relative(14), source: Direct(1) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 17 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(22) }, IndirectConst { destination_pointer: Relative(14), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 16 }, BlackBox(ToRadix { input: Relative(21), radix: Relative(4), output_pointer: Relative(22), num_limbs: Relative(23), output_bits: Relative(20) }), BinaryIntOp { destination: Relative(20), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Direct(32836) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(20) }, BinaryIntOp { destination: Relative(22), op: LessThanEquals, bit_size: U32, lhs: Relative(6), rhs: Relative(21) }, JumpIf { condition: Relative(22), location: 963 }, Call { location: 1204 }, Mov { destination: Relative(10), source: Relative(18) }, Jump { location: 965 }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(10), rhs: Direct(32836) }, JumpIf { condition: Relative(20), location: 971 }, Jump { location: 968 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(32838) }, Mov { destination: Relative(1), source: Relative(10) }, Jump { location: 546 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(10) }, BinaryIntOp { destination: Relative(22), op: LessThanEquals, bit_size: U32, lhs: Relative(21), rhs: Relative(20) }, JumpIf { condition: Relative(22), location: 975 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(10) }, Load { destination: Relative(22), source_pointer: Relative(24) }, Load { destination: Relative(23), source_pointer: Relative(3) }, BinaryIntOp { destination: Relative(24), op: LessThan, bit_size: U32, lhs: Relative(20), rhs: Relative(5) }, JumpIf { condition: Relative(24), location: 982 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(23) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 5345 }, Call { location: 1210 }, Mov { destination: Relative(24), source: Direct(32773) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(20) }, Store { destination_pointer: Relative(26), source: Relative(22) }, Store { destination_pointer: Relative(3), source: Relative(24) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(32838) }, Mov { destination: Relative(10), source: Relative(20) }, Jump { location: 965 }, Load { destination: Relative(10), source_pointer: Relative(11) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(1) }, Load { destination: Relative(14), source_pointer: Relative(21) }, Const { destination: Relative(20), bit_size: Integer(U1), value: 0 }, Mov { destination: Relative(10), source: Direct(1) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(21) }, IndirectConst { destination_pointer: Relative(10), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 32 }, BlackBox(ToRadix { input: Relative(14), radix: Relative(4), output_pointer: Relative(21), num_limbs: Relative(22), output_bits: Relative(20) }), BinaryIntOp { destination: Relative(14), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, Mov { destination: Relative(6), source: Relative(18) }, Jump { location: 1008 }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(6), rhs: Relative(8) }, JumpIf { condition: Relative(20), location: 1014 }, Jump { location: 1011 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(32838) }, Mov { destination: Relative(1), source: Relative(6) }, Jump { location: 540 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(6) }, BinaryIntOp { destination: Relative(21), op: LessThanEquals, bit_size: U32, lhs: Relative(14), rhs: Relative(20) }, JumpIf { condition: Relative(21), location: 1018 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(6) }, Load { destination: Relative(21), source_pointer: Relative(23) }, Load { destination: Relative(22), source_pointer: Relative(3) }, BinaryIntOp { destination: Relative(23), op: LessThan, bit_size: U32, lhs: Relative(20), rhs: Relative(5) }, JumpIf { condition: Relative(23), location: 1025 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(22) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 5345 }, Call { location: 1210 }, Mov { destination: Relative(23), source: Direct(32773) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(20) }, Store { destination_pointer: Relative(25), source: Relative(21) }, Store { destination_pointer: Relative(3), source: Relative(23) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(32838) }, Mov { destination: Relative(6), source: Relative(20) }, Jump { location: 1008 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(1) }, Load { destination: Relative(15), source_pointer: Relative(20) }, Cast { destination: Relative(20), source: Relative(15), bit_size: Integer(U128) }, Cast { destination: Relative(17), source: Relative(20), bit_size: Field }, BinaryFieldOp { destination: Relative(20), op: Sub, lhs: Relative(15), rhs: Relative(17) }, BinaryFieldOp { destination: Relative(22), op: Mul, lhs: Relative(20), rhs: Relative(12) }, BinaryFieldOp { destination: Relative(20), op: Mul, lhs: Direct(32842), rhs: Relative(22) }, BinaryFieldOp { destination: Relative(23), op: Add, lhs: Relative(17), rhs: Relative(20) }, BinaryFieldOp { destination: Relative(20), op: Equals, lhs: Relative(15), rhs: Relative(23) }, JumpIf { condition: Relative(20), location: 1049 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Load { destination: Relative(15), source_pointer: Relative(13) }, BinaryIntOp { destination: Relative(20), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Direct(32837) }, Mov { destination: Direct(32771), source: Relative(15) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 7 }, Call { location: 1210 }, Mov { destination: Relative(23), source: Direct(32773) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(20) }, Store { destination_pointer: Relative(25), source: Relative(17) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(32838) }, Mov { destination: Direct(32771), source: Relative(23) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 7 }, Call { location: 1210 }, Mov { destination: Relative(17), source: Direct(32773) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(15) }, Store { destination_pointer: Relative(24), source: Relative(22) }, Store { destination_pointer: Relative(13), source: Relative(17) }, BinaryIntOp { destination: Relative(15), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(15) }, Load { destination: Relative(17), source_pointer: Relative(22) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(32838) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(20) }, Load { destination: Relative(22), source_pointer: Relative(24) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(32837) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(23) }, Load { destination: Relative(24), source_pointer: Relative(26) }, Load { destination: Relative(23), source_pointer: Relative(14) }, Mov { destination: Direct(32771), source: Relative(23) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 10 }, Call { location: 1210 }, Mov { destination: Relative(25), source: Direct(32773) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Direct(2) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(15) }, Store { destination_pointer: Relative(27), source: Relative(17) }, Mov { destination: Direct(32771), source: Relative(25) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 10 }, Call { location: 1210 }, Mov { destination: Relative(15), source: Direct(32773) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(20) }, Store { destination_pointer: Relative(23), source: Relative(22) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(32838) }, Mov { destination: Direct(32771), source: Relative(15) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 10 }, Call { location: 1210 }, Mov { destination: Relative(20), source: Direct(32773) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(17) }, Store { destination_pointer: Relative(23), source: Relative(24) }, Store { destination_pointer: Relative(14), source: Relative(20) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(32838) }, Mov { destination: Relative(1), source: Relative(15) }, Jump { location: 347 }, Load { destination: Relative(8), source_pointer: Relative(10) }, BinaryIntOp { destination: Relative(12), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Direct(32837) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(12) }, BinaryIntOp { destination: Relative(14), op: LessThanEquals, bit_size: U32, lhs: Relative(8), rhs: Relative(13) }, JumpIf { condition: Relative(14), location: 1112 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(8), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(8) }, Load { destination: Relative(12), source_pointer: Relative(15) }, Load { destination: Relative(14), source_pointer: Relative(11) }, BinaryIntOp { destination: Relative(15), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Direct(32839) }, JumpIf { condition: Relative(15), location: 1120 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(14) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(15), source: Direct(32773) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(13) }, Store { destination_pointer: Relative(17), source: Relative(12) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(32838) }, BinaryIntOp { destination: Relative(14), op: LessThanEquals, bit_size: U32, lhs: Relative(13), rhs: Relative(12) }, JumpIf { condition: Relative(14), location: 1131 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(32837) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(13) }, Load { destination: Relative(8), source_pointer: Relative(16) }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(12), rhs: Direct(32839) }, JumpIf { condition: Relative(13), location: 1138 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(15) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(13), source: Direct(32773) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(12) }, Store { destination_pointer: Relative(16), source: Relative(8) }, Store { destination_pointer: Relative(11), source: Relative(13) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(32838) }, Mov { destination: Relative(1), source: Relative(8) }, Jump { location: 219 }, Load { destination: Relative(8), source_pointer: Relative(10) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(1) }, BinaryIntOp { destination: Relative(13), op: LessThanEquals, bit_size: U32, lhs: Relative(8), rhs: Relative(12) }, JumpIf { condition: Relative(13), location: 1154 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(1) }, Load { destination: Relative(8), source_pointer: Relative(14) }, Load { destination: Relative(13), source_pointer: Relative(11) }, BinaryIntOp { destination: Relative(14), op: LessThan, bit_size: U32, lhs: Relative(12), rhs: Direct(32839) }, JumpIf { condition: Relative(14), location: 1161 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(13) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(14), source: Direct(32773) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(12) }, Store { destination_pointer: Relative(16), source: Relative(8) }, Store { destination_pointer: Relative(11), source: Relative(14) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(32838) }, Mov { destination: Relative(1), source: Relative(8) }, Jump { location: 207 }, Load { destination: Relative(12), source_pointer: Relative(10) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(8) }, BinaryIntOp { destination: Relative(14), op: LessThanEquals, bit_size: U32, lhs: Relative(12), rhs: Relative(13) }, JumpIf { condition: Relative(14), location: 1177 }, Call { location: 1204 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(8) }, Load { destination: Relative(12), source_pointer: Relative(15) }, Load { destination: Relative(14), source_pointer: Relative(11) }, BinaryIntOp { destination: Relative(15), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Direct(32839) }, JumpIf { condition: Relative(15), location: 1184 }, Call { location: 1207 }, Mov { destination: Direct(32771), source: Relative(14) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 170 }, Call { location: 1210 }, Mov { destination: Relative(15), source: Direct(32773) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(13) }, Store { destination_pointer: Relative(17), source: Relative(12) }, Store { destination_pointer: Relative(11), source: Relative(15) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(32838) }, Mov { destination: Relative(8), source: Relative(12) }, Jump { location: 196 }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 1200 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 5019202896831570965 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14225679739041873922 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32775), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32775), location: 1214 }, Jump { location: 1216 }, Mov { destination: Direct(32773), source: Direct(32771) }, Jump { location: 1231 }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 1228 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 1221 }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32774), op: Sub, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Jump { location: 1231 }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 2920182694213909827 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
