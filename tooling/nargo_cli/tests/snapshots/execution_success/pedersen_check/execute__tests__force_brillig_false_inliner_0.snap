---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "salt",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "out_x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "out_y",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "out_hash",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _21",
    "private parameters indices : [_0, _1, _2, _3, _4, _5]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ]], outputs: [_6, _7]",
    "EXPR [ (1, _0) (-1, _6) (-340282366920938463463374607431768211456, _7) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 0 ]], outputs: [_8, _9]",
    "EXPR [ (1, _1) (-1, _8) (-340282366920938463463374607431768211456, _9) 0 ]",
    "BLACKBOX::MULTI_SCALAR_MUL [3728882899078719075161482178784387565366481897740339799480980287259621149274, -9903063709032878667290627648209915537972247634463802596148419711785767431332, 0, 2393473289045184898987089634332637236754766663897650125720167164137088869378, -7135402912423807765050323395026152633898511180575289670895350565966806597339, 0, _6, _7, _8, _9, 1] [_10, _11, _12]",
    "EXPR [ (-1, _3) (1, _10) 0 ]",
    "EXPR [ (-1, _4) (1, _11) 0 ]",
    "BLACKBOX::MULTI_SCALAR_MUL [3728882899078719075161482178784387565366481897740339799480980287259621149274, -9903063709032878667290627648209915537972247634463802596148419711785767431332, 0, 2393473289045184898987089634332637236754766663897650125720167164137088869378, -7135402912423807765050323395026152633898511180575289670895350565966806597339, 0, -1094708040843609169356775910874053498301840173462935739639689208799068762676, -718703907181967287621274717949248537252263842169639534402461291799004475262, 0, _6, _7, _8, _9, 2, 0, 1] [_13, _14, _15]",
    "EXPR [ (-1, _5) (1, _13) 0 ]",
    "BRILLIG CALL func 1: inputs: [EXPR [ (-1, _3) (1, _5) 0 ]], outputs: [_16]",
    "EXPR [ (-1, _3, _16) (1, _5, _16) -1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (8, _0) (1, _1) (1, _2) 0 ]], outputs: [_17, _18]",
    "EXPR [ (8, _0) (1, _1) (1, _2) (-1, _17) (-340282366920938463463374607431768211456, _18) 0 ]",
    "BLACKBOX::MULTI_SCALAR_MUL [3728882899078719075161482178784387565366481897740339799480980287259621149274, -9903063709032878667290627648209915537972247634463802596148419711785767431332, 0, _17, _18, 1] [_19, _20, _21]",
    "EXPR [ (-1, _19) 849707701676507062560416368841861616551813265068666159965855698002224802634 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32839 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 14 }, Call { location: 15 }, Mov { destination: Direct(32837), source: Relative(1) }, Mov { destination: Direct(32838), source: Relative(2) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 2 }, Stop { return_data: HeapVector { pointer: Relative(3), size: Relative(4) } }, Return, Call { location: 24 }, Cast { destination: Relative(3), source: Relative(1), bit_size: Integer(U128) }, Cast { destination: Relative(2), source: Relative(3), bit_size: Field }, BinaryFieldOp { destination: Relative(3), op: Sub, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(1), bit_size: Field, value: 8680525429001239497728366687280168587232520577698044359798894838135247199343 }, BinaryFieldOp { destination: Relative(4), op: Mul, lhs: Relative(3), rhs: Relative(1) }, Mov { destination: Relative(1), source: Relative(2) }, Mov { destination: Relative(2), source: Relative(4) }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 29 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
