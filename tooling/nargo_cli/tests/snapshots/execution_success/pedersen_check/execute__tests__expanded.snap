---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
fn main(x: Field, y: Field, salt: Field, out_x: Field, out_y: Field, out_hash: Field) {
    let res: std::embedded_curve_ops::EmbeddedCurvePoint = std::hash::pedersen_commitment([x, y]);
    assert(res.x == out_x);
    assert(res.y == out_y);
    let res_hash: Field = std::hash::pedersen_hash_with_separator([x, y], 0);
    assert(res_hash == out_hash);
    assert(res_hash != res.x);
    let raw_data: [Field; 2] = [x, y];
    let mut state: Field = 0;
    for i in 0..2 {
        state = (state * 8) + raw_data[i];
    }
    state = state + salt;
    let hash: std::embedded_curve_ops::EmbeddedCurvePoint = std::hash::pedersen_commitment([state]);
    assert(std::hash::pedersen_commitment([43]).x == hash.x);
}
