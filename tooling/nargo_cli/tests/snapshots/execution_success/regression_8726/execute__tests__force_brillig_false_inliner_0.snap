---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 64
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 64
      },
      "visibility": "public"
    },
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _40",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1]",
    "BLACKBOX::RANGE [_0]:64 bits []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 9223372036854775808 })], outputs: [Simple(Witness(2)), Simple(Witness(3))]",
    "BLACKBOX::RANGE [_2]:1 bits []",
    "BLACKBOX::RANGE [_3]:63 bits []",
    "EXPR [ (1, _0) (-9223372036854775808, _2) (-1, _3) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 9223372036854775808 })], outputs: [Simple(Witness(4)), Simple(Witness(5))]",
    "BLACKBOX::RANGE [_4]:1 bits []",
    "BLACKBOX::RANGE [_5]:63 bits []",
    "EXPR [ (1, _0) (-9223372036854775808, _4) (-1, _5) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(0), Witness(2))], linear_combinations: [(1, Witness(0)), (18446744073709551616, Witness(2))], q_c: 0 })], outputs: [Simple(Witness(6))]",
    "EXPR [ (-2, _0, _2) (1, _0) (18446744073709551616, _2) (-1, _7) 0 ]",
    "EXPR [ (1, _6, _7) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(0), Witness(4))], linear_combinations: [(1, Witness(0)), (18446744073709551616, Witness(4))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(7))], q_c: 0 })], outputs: [Simple(Witness(8)), Simple(Witness(9))]",
    "BLACKBOX::RANGE [_8]:64 bits []",
    "BLACKBOX::RANGE [_9]:64 bits []",
    "EXPR [ (1, _7) (-1, _9) (-1, _10) -1 ]",
    "BLACKBOX::RANGE [_10]:64 bits []",
    "EXPR [ (-2, _0, _4) (-1, _7, _8) (1, _0) (18446744073709551616, _4) (-1, _9) 0 ]",
    "EXPR [ (-1, _8) (-1, _11) 9223372036854775808 ]",
    "EXPR [ (-2, _2, _4) (1, _2) (1, _4) (-1, _12) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 0 })], outputs: [Simple(Witness(13))]",
    "EXPR [ (1, _8, _13) (1, _14) -1 ]",
    "EXPR [ (1, _8, _14) 0 ]",
    "EXPR [ (2, _11, _12) (1, _8) (-1, _15) 0 ]",
    "EXPR [ (-1, _14) (-1, _16) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(9))], q_c: 0 })], outputs: [Simple(Witness(17))]",
    "EXPR [ (1, _9, _17) (1, _18) -1 ]",
    "EXPR [ (1, _9, _18) 0 ]",
    "EXPR [ (-2, _4, _9) (18446744073709551616, _4) (1, _9) (-1, _19) 0 ]",
    "EXPR [ (-1, _18) (-1, _20) 1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(1, Witness(15), Witness(16))], linear_combinations: [], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 9223372036854775808 })], outputs: [Simple(Witness(21)), Simple(Witness(22))]",
    "BLACKBOX::RANGE [_21]:1 bits []",
    "BLACKBOX::RANGE [_22]:63 bits []",
    "EXPR [ (1, _15, _16) (-9223372036854775808, _21) (-1, _22) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 9223372036854775808 })], outputs: [Simple(Witness(23)), Simple(Witness(24))]",
    "BLACKBOX::RANGE [_23]:1 bits []",
    "BLACKBOX::RANGE [_24]:63 bits []",
    "EXPR [ (1, _0) (-9223372036854775808, _23) (-1, _24) 0 ]",
    "EXPR [ (-1, _15, _16) (-1, _25) 9223372036854775808 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(1, Witness(15), Witness(16)), (2, Witness(25), Witness(21))], linear_combinations: [], q_c: 0 })], outputs: [Simple(Witness(26))]",
    "EXPR [ (1, _15, _16) (2, _21, _25) (-1, _27) 0 ]",
    "EXPR [ (1, _26, _27) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(0), Witness(23))], linear_combinations: [(1, Witness(0)), (18446744073709551616, Witness(23))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(27))], q_c: 0 })], outputs: [Simple(Witness(28)), Simple(Witness(29))]",
    "BLACKBOX::RANGE [_28]:64 bits []",
    "BLACKBOX::RANGE [_29]:64 bits []",
    "EXPR [ (1, _27) (-1, _29) (-1, _30) -1 ]",
    "BLACKBOX::RANGE [_30]:64 bits []",
    "EXPR [ (-2, _0, _23) (-1, _27, _28) (1, _0) (18446744073709551616, _23) (-1, _29) 0 ]",
    "EXPR [ (-1, _28) (-1, _31) 9223372036854775808 ]",
    "EXPR [ (-2, _21, _23) (1, _21) (1, _23) (-1, _32) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(28))], q_c: 0 })], outputs: [Simple(Witness(33))]",
    "EXPR [ (1, _28, _33) (1, _34) -1 ]",
    "EXPR [ (1, _28, _34) 0 ]",
    "EXPR [ (2, _31, _32) (1, _28) (-1, _35) 0 ]",
    "EXPR [ (-1, _34) (-1, _36) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(29))], q_c: 0 })], outputs: [Simple(Witness(37))]",
    "EXPR [ (1, _29, _37) (1, _38) -1 ]",
    "EXPR [ (1, _29, _38) 0 ]",
    "EXPR [ (-2, _23, _29) (18446744073709551616, _23) (1, _29) (-1, _39) 0 ]",
    "EXPR [ (-1, _38) (-1, _40) 1 ]",
    "EXPR [ (-1, _35, _36) (1, _1) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "jdJNboMwEAXgu3jNIjYz+eEqVYUMmMiSZZADlSrE3WvmQZssKmUzL+C8D5C9qM418732sR8eqvpYVJN8CP5eh6G1kx9ivrushTou6yk5l2+pp/XcGm1ycVJVnEMo1JcNs/zpMdooOdmUV0+FcrHLmcHeB7f9Wou/9un/Kum9S+ffMr/dZrO3+fLS/sxXtvXp5WuVVlV+mpFZyiSZLPMs8yLzKvMmU58QaGvUNfoagIagQWgYGoiGYqCY/R2gGCgGioFioBgoBoqBUmYlf3KpEQZRIgjBiDPigrgibhIEhaAQFIJCUAgKQSEoBIWgMBSGwlAYCkNhKAyFoTAU3pR129rkbRPcfh77ObZPx3P6Ho+V4wCPaWhdNye3ba6s5e3+AQ==",
  "file_map": {
    "50": {
      "source": "fn main(x: i64) -> pub i64 {\n    let y = x / x;\n    x / y\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
