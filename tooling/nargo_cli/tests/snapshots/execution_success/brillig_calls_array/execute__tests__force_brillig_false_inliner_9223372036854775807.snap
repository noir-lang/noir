---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 3,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/9VX227bMAyVLMupMxQdtscBw162Pc6K5Fh+GJABS/uyAf0Fp7G/w5/euBUbhmZcoLVQlIChG3V4eEz5IsWjqcOlQ1+GsQzjb2ROMnNJmEsRBsbCBmub0BavMzMjVhGLo3wHHJMZOUp0v+n9n524Qli2WDvXVqvWWNMUq3rny8KVu7U33pS+3K+8ta13vqp3dVXUxtnWdGVt2+7B/MAtZYhDkZ8zyOk2tHloE7SuZsw5J3HnxPeF8zmT34z8bU40jYWv4uAXi4Dztz/i01wEasGP7lHIZ4t8tmd8rpHPNfGBnCPVhIusqb0U43MGuUDsNE5sJ0k8QfIUJP5SRK1fI0k84EP1gf4l+PRHPpKspf04D1jT/Wkeg10cri/Ij9ZWgvx+oP5Pgn3TjznFPP+HWq0i16r5LM6fechx0Ysne3oeoDnQHHS6wP5kLUdraX8aZxnGKYqDsYCHJv7fw/gqtBnaA/s/MvEzEv+ENzOHNaJYipkD/+xwfQ39D+Ea6usG9oi3O4PcObgS4zrAz6tzWIrBAn+NtFAT+Jr4/wrtoNd/olekM7ECzpmY1ksRvfCPR0byVwyWntArY/TSTGxN/NcTeuk4elngvBDTemmiF9ZoQfKXDFY2oRdXX/QeYL3A/zejlxTj9xNg0vf2cxxShjPl8GeCA1c3NHfcTxkO3LNdE/8tw4F7V8L+4RkG39Zpf7q+CfPFK6zyx58veIdowfyEofia+P8L4yXiL1Demxfy7KrGdLbpmrLZ791d84ngD5YgneaO78qmumsqY2pnWmfK5+LfA9kFQ2kdEQAA",
  "debug_symbols": "pZTLroMgFEX/hTEDXor4K03TUEsbEoKGapObxn+/B0+tddAOdMKSx9qACk9ycefhdvLx2t5JfXiSc/Ih+NsptI3tfRuh9UlYLhSUghLFEQIhSS0BClEgSoQmtQJUCDOhgJQCwBECIRGQUgIKRImAFA2oEGZCyRCQUgEEQiIUAlIMoERoBKSYcaRk3t6pT87l3X3sF95CZ5OLPanjEAIlDxuGadC9s3FibxP0MkpcvAAh8OqDy08jXWz2XZXGvGTF9Fsv1j7/4TP58uVen/MtPl98vc8Xm+YXi6/3+fLr/D++n3qvXwm1z980P6+Kl8+N2eULtl7/EWq28Wl9A8DR4hAHR2v6XR42eXsOLvdle4jNPBSq/V8398zXSZfaxl2G5HLscqdA7EFoKvWREg4tB82pLnOF54qm2hzHvKZ/",
  "file_map": {
    "50": {
      "source": "// Tests a very simple program.\n//\n// The features being tested is brillig calls passing arrays around\nfn main(x: [u32; 3]) {\n    // Safety: testing context\n    unsafe {\n        assert(entry_point(x) == 9);\n        another_entry_point(x);\n    }\n}\n\nunconstrained fn inner(x: [u32; 3]) -> [u32; 3] {\n    [x[0] + 1, x[1] + 1, x[2] + 1]\n}\n\nunconstrained fn entry_point(x: [u32; 3]) -> u32 {\n    let y = inner(x);\n    y[0] + y[1] + y[2]\n}\n\nunconstrained fn nested_fn_that_allocates(value: u32) -> u32 {\n    let x = [value, value, value];\n    let y = inner(x);\n    y[0] + y[1] + y[2]\n}\n\nunconstrained fn another_entry_point(x: [u32; 3]) {\n    assert(x[0] == 1);\n    assert(x[1] == 2);\n    assert(x[2] == 3);\n    assert(nested_fn_that_allocates(1) == 6);\n    // x should be unchanged\n    assert(x[0] == 1);\n    assert(x[1] == 2);\n    assert(x[2] == 3);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "entry_point"
  ]
}
