---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "values",
        "type": {
          "kind": "array",
          "length": 6,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/+1a3bKaQAzeRUDw1GrbFwH5vzsXfYHO9K7tBR71OXiT3rTvWejZaIiRYt04wxwzs7PALl+Sj2z2R7V6lQ9tccy1a2qNal/1BdqeTR3dJrFFrEjKRj0BG50J2DibgI3uBGz0LNqIx/o7c92N+XlbgraEbVm05cm0L9vyvi2rtqzVa/7oiWvZWd8iVmARa2kRa4WwkihP032x2cdJXEebaltmUZpt8zIu46zMdpsySfZlWhbVtiqiKk6TfXzIqmR/+CuFRt8AJ+/ueZckZqbdU5cFguK3qUNTO6jd4mCOQ6LXJn4ZZXnI+GfR/iRE/Arg5yHCFMCP5gbnc3PCp75AHGgl9Z3SVNjPfEl8U8gX0O3K6C400aeIn4roXyjRmIo10Qf2UH7gegl9mpM9mrS5zbkf0OY1fT866fLxF9SPxpaD+n1H1z9U3waH8UEzPkjGVxu/NeB7AvidAL4vhA+8zRk+cRyCfyt1Pmbm5NtwWJh/8GXNvO+S7ybEayzM63GsBeo6XjEXAeGVw8JcO6R/yPTnvgNwsZDhYsPlEfCFyyMhacN5BGzEeUQ4VjbCsZI8YuXExcRjJRGOlfyN5utUmNfiMQaPMvV8nQnHSvWIlaPcLV9L7Inw+l1o//ny6YL9cN3JvFFHmRE+MUfAWYD7k7YQtblNX8/C3LtID8YCOzzS/5u5X5naR+/A+2tGv0/09+xmnmGOKNaMeQb9u1j/aq6fTOli6Ce8o+RiKPrHvlojnaB/pc7jwL2PrRuwybvSVrx+8O5j63Fd7F9pK55X4N0x50BC80WqiT7wQxE/QP+9zoE4Xi+dA9H5a2hNiH2j89jQ3Da0vrSB5RF/6Fl5J+EFf57NfXSbJGNjAfQvlGhsxkO8+gyvwF3A2Lpm2mgscOucgNHDYdEcKTRnp0OcaMa3oT2WsK3ZEK9DtnJr0SXpq9T5uAhk/Bg9LkD/QonyOnh+h/mh4yJkbF0zbTSvcev5kNHDYdFYE/o9Ix8ba6B/TKzh763v48d//y6jZewZtX7sZCgHw7tc3sTroVtzsG8Ry7GINbeIZXPOgrZuTwJj1m36up7N8+gGKcrTHztgT+ipfq5SRL9H+v8y9/isAOpb/iRzKOr4kNSHOqt3u/Sl/kjwFeHpD9P4puapJgAA",
  "debug_symbols": "pZXfiqMwFIffJdde5CQ5+dNXGUqxbWYQxBZHF5biu29Sf+nssjgM8aZfrX6fQU7NQ1zjef44dcP77VMc3h7iPHZ9332c+tulnbrbkH59CJk/ghEHakTgFXaFEweV4FeEJ0gmQWcSqEANGpBBCzrQg2EloUfoEXqEHqWeyWTQgg70YFipJEigAlOPMw3IYOrZTAd6MKzUEiRQgRo0IIPoafR06rnMsNJIkEAFatCADFrQgegZ9Bg9Ro/RY/QYPUaP0ePcW5ZGlGk4TWOMeRj+Go80NPd2jMMkDsPc94341fbz86LPezs8ObVjOisbEYdrYgq+d33M35bmy5bbqnYKsvb00vnnvtfFD6rGDwa+kbrCN1zWb2zN+lkxfNamxte2+IZrfH7d39bc3/ry/BzVPD+nfPGN3/LDtk+urJ+83udvz893fii+knqfT2rX+ut8RS9f7Xt+SoWa++vy/1FG7vPZ7Vv/tv+z+bX/+sd01F668b8NNwmUx2XJ1bFrz33Mp7I8D5dyZTqcft/LmbJ538fbJV7nMebq1w6e3vZvnppAx7y3pgPi0JA1xyWv4w8=",
  "file_map": {
    "50": {
      "source": "struct Header {\n    params: [Field; 3],\n}\n\nstruct MyNote {\n    plain: Field,\n    array: [Field; 2],\n    header: Header,\n}\n\nfn access_nested(notes: [MyNote; 2]) -> Field {\n    notes[0].array[1] + notes[1].array[0] + notes[0].plain + notes[1].header.params[0]\n}\n\nunconstrained fn create_inside_brillig(values: [Field; 6]) -> [MyNote; 2] {\n    let header = Header { params: [values[0], values[1], values[2]] };\n    let note0 = MyNote { array: [values[0], values[1]], plain: values[2], header };\n    let note1 = MyNote { array: [values[3], values[4]], plain: values[5], header };\n    [note0, note1]\n}\n\nfn main(values: [Field; 6]) {\n    // Safety: testing context\n    let notes = unsafe { create_inside_brillig(values) };\n    assert(access_nested(notes) == (2 + 4 + 3 + 1));\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "create_inside_brillig"
  ]
}
