---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [],
    "return_type": {
      "abi_type": {
        "kind": "array",
        "length": 2,
        "type": {
          "kind": "array",
          "length": 1,
          "type": {
            "kind": "string",
            "length": 2
          }
        }
      },
      "visibility": "public"
    },
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _3",
    "private parameters indices : []",
    "public parameters indices : []",
    "return value indices : [_0, _1, _2, _3]",
    "BRILLIG CALL func 0: inputs: [], outputs: [[_0, _1, _2, _3]]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32850 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32846), size_address: Relative(1), offset_address: Relative(2) }, Call { location: 47 }, Call { location: 93 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 32846 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(5) }, Load { destination: Relative(7), source_pointer: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(6) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(11) }, Load { destination: Relative(13), source_pointer: Relative(14) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(12) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 2 }, Mov { destination: Direct(32771), source: Relative(14) }, Mov { destination: Direct(32772), source: Relative(15) }, Mov { destination: Direct(32773), source: Relative(16) }, Call { location: 118 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(5) }, Load { destination: Relative(7), source_pointer: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(6) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(11) }, Load { destination: Relative(13), source_pointer: Relative(14) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(12) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 2 }, Mov { destination: Direct(32771), source: Relative(14) }, Mov { destination: Direct(32772), source: Relative(15) }, Mov { destination: Direct(32773), source: Relative(16) }, Call { location: 118 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32846 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 4 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, Const { destination: Direct(32835), bit_size: Integer(U8), value: 68 }, Const { destination: Direct(32836), bit_size: Integer(U8), value: 83 }, Mov { destination: Direct(32837), source: Direct(1) }, Const { destination: Direct(32838), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32838) }, IndirectConst { destination_pointer: Direct(32837), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32838), op: Add, bit_size: U32, lhs: Direct(32837), rhs: Direct(2) }, Mov { destination: Direct(32839), source: Direct(32838) }, Store { destination_pointer: Direct(32839), source: Direct(32835) }, BinaryIntOp { destination: Direct(32839), op: Add, bit_size: U32, lhs: Direct(32839), rhs: Direct(2) }, Store { destination_pointer: Direct(32839), source: Direct(32836) }, Mov { destination: Direct(32838), source: Direct(1) }, Const { destination: Direct(32839), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32839) }, IndirectConst { destination_pointer: Direct(32838), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32839), op: Add, bit_size: U32, lhs: Direct(32838), rhs: Direct(2) }, Mov { destination: Direct(32840), source: Direct(32839) }, Store { destination_pointer: Direct(32840), source: Direct(32837) }, Const { destination: Direct(32839), bit_size: Integer(U8), value: 69 }, Const { destination: Direct(32840), bit_size: Integer(U8), value: 78 }, Mov { destination: Direct(32841), source: Direct(1) }, Const { destination: Direct(32842), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32842) }, IndirectConst { destination_pointer: Direct(32841), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32842), op: Add, bit_size: U32, lhs: Direct(32841), rhs: Direct(2) }, Mov { destination: Direct(32843), source: Direct(32842) }, Store { destination_pointer: Direct(32843), source: Direct(32839) }, BinaryIntOp { destination: Direct(32843), op: Add, bit_size: U32, lhs: Direct(32843), rhs: Direct(2) }, Store { destination_pointer: Direct(32843), source: Direct(32840) }, Mov { destination: Direct(32842), source: Direct(1) }, Const { destination: Direct(32843), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32843) }, IndirectConst { destination_pointer: Direct(32842), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32843), op: Add, bit_size: U32, lhs: Direct(32842), rhs: Direct(2) }, Mov { destination: Direct(32844), source: Direct(32843) }, Store { destination_pointer: Direct(32844), source: Direct(32841) }, Mov { destination: Direct(32843), source: Direct(1) }, Const { destination: Direct(32844), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32844) }, IndirectConst { destination_pointer: Direct(32843), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32844), op: Add, bit_size: U32, lhs: Direct(32843), rhs: Direct(2) }, Mov { destination: Direct(32845), source: Direct(32844) }, Store { destination_pointer: Direct(32845), source: Direct(32838) }, BinaryIntOp { destination: Direct(32845), op: Add, bit_size: U32, lhs: Direct(32845), rhs: Direct(2) }, Store { destination_pointer: Direct(32845), source: Direct(32842) }, Return, Call { location: 129 }, Load { destination: Relative(1), source_pointer: Direct(32843) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(3), source: Relative(3), bit_size: U1 }, JumpIf { condition: Relative(3), location: 100 }, Call { location: 135 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Direct(32843), source: Relative(1) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 3 }, Mov { destination: Relative(3), source: Direct(0) }, Mov { destination: Relative(4), source: Direct(32843) }, BinaryIntOp { destination: Direct(0), op: Add, bit_size: U32, lhs: Direct(0), rhs: Relative(1) }, Call { location: 138 }, Mov { destination: Direct(0), source: Relative(0) }, Load { destination: Relative(1), source_pointer: Direct(32843) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(1) }, Not { destination: Relative(4), source: Relative(4), bit_size: U1 }, JumpIf { condition: Relative(4), location: 114 }, Call { location: 135 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Direct(32843), source: Relative(1) }, Mov { destination: Relative(1), source: Direct(32843) }, Return, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 128 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 121 }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 134 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Call { location: 129 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(1) }, Mov { destination: Relative(1), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Store { destination_pointer: Relative(1), source: Relative(3) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Jump { location: 148 }, Load { destination: Relative(4), source_pointer: Relative(1) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, JumpIf { condition: Relative(5), location: 183 }, Jump { location: 152 }, Load { destination: Relative(4), source_pointer: Relative(1) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, BinaryIntOp { destination: Relative(6), op: LessThanEquals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 157 }, Call { location: 184 }, Store { destination_pointer: Relative(1), source: Relative(5) }, Load { destination: Relative(4), source_pointer: Relative(2) }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, Load { destination: Relative(5), source_pointer: Relative(6) }, Load { destination: Relative(6), source_pointer: Relative(5) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(6) }, Not { destination: Relative(8), source: Relative(8), bit_size: U1 }, JumpIf { condition: Relative(8), location: 167 }, Call { location: 135 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(6) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 2 }, Call { location: 187 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(3) }, Store { destination_pointer: Relative(8), source: Direct(32841) }, Mov { destination: Direct(32771), source: Relative(4) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 3 }, Call { location: 187 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, Store { destination_pointer: Relative(8), source: Relative(6) }, Store { destination_pointer: Relative(2), source: Relative(5) }, Jump { location: 148 }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 5019202896831570965 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32775), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32775), location: 191 }, Jump { location: 193 }, Mov { destination: Direct(32773), source: Direct(32771) }, Jump { location: 208 }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 205 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 198 }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32774), op: Sub, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Jump { location: 208 }, Return]"
  ],
  "debug_symbols": "pdTNisIwFAXgd8k6i9z8NKmvMohUjVIIbYntwCB997npnPqzGBg6m37G5ByCF3sX53icroe2u/Q3sfu4i2NuU2qvh9SfmrHtO/72LlR5kNJiR5I10EIHK+hhgPWPpCBB9BH6CH2EPoOcRc4iZzmniwZa6GCAnDes05DP26KFDlbQQ867IucrtlKQoIYGWuhgBT0MkPs86xUkqKGBFqLPo8+jz6PP434B9wvlfvMsxTq7w5hjLKN7GSaPeGhy7Eax66aUpPhs0rQcug1Ntzg2mXeVFLE7s1x4aVMsn2b5TKvfo3VAlkf/SLs/x6mukddKbchr7da8cVvy9Zo3ym7IG73e35iwJU+PvDb/zFdv+T2vmlOb3/7dc2nKbXNMEcvL1J1edsevYd1Z3w5D7k/xPOVYmp6vCH58UPBSq7CXwpQVBUm6rGjZ5J+GjC1LWs5aSaHaz+Vq3w==",
  "file_map": {
    "50": {
      "source": "global G_B: [[str<2>; 1]; 2] = [[\"DS\"], [\"EN\"]];\nfn main() -> pub [[str<2>; 1]; 2] {\n    unsafe { func_2(G_B) };\n    G_B\n}\nunconstrained fn func_2(mut b: [[str<2>; 1]; 2]) {\n    let mut idx_d: u32 = 0;\n    loop {\n        if (idx_d == 1) {\n            break\n        } else {\n            idx_d = (idx_d + 1);\n            b[0][0] = G_B[1][0];\n        }\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
