---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 1,
          "type": {
            "kind": "struct",
            "path": "Foo",
            "fields": [
              {
                "name": "a",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "b",
                "type": {
                  "kind": "array",
                  "length": 3,
                  "type": {
                    "kind": "field"
                  }
                }
              },
              {
                "name": "bar",
                "type": {
                  "kind": "struct",
                  "path": "Bar",
                  "fields": [
                    {
                      "name": "inner",
                      "type": {
                        "kind": "array",
                        "length": 3,
                        "type": {
                          "kind": "field"
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "public"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _66",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6]",
    "public parameters indices : [_7]",
    "return value indices : []",
    "INIT (id: 0, len: 7, witnesses: [_0, _1, _2, _3, _4, _5, _6])",
    "BLACKBOX::RANGE [(_7, 32)] []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _7) -3 ]], outputs: [_8]",
    "EXPR [ (1, _7, _8) (-3, _8) (1, _9) -1 ]",
    "EXPR [ (1, _7, _9) (-3, _9) 0 ]",
    "EXPR [ (1, _7, _9) (-3, _9) (-1, _10) 0 ]",
    "BLACKBOX::RANGE [(_10, 32)] []",
    "EXPR [ (7, _9, _10) (1, _9) (-1, _11) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _11) 0 ], value: EXPR [ (1, _12) 0 ]) ",
    "INIT (id: 1, len: 7, witnesses: [_0, _1, _2, _3, _4, _5, _6])",
    "EXPR [ (-1, _9, _12) (5, _9) (1, _12) (-1, _13) 0 ]",
    "MEM (id: 1, write EXPR [ (1, _13) 0 ] at: EXPR [ (1, _11) 0 ]) ",
    "EXPR [ (-1, _14) 0 ]",
    "EXPR [ (-1, _15) 1 ]",
    "EXPR [ (-1, _16) 2 ]",
    "EXPR [ (-1, _17) 3 ]",
    "EXPR [ (-1, _18) 4 ]",
    "EXPR [ (-1, _19) 5 ]",
    "EXPR [ (-1, _20) 6 ]",
    "EXPR [ (-1, _21) 7 ]",
    "INIT (id: 2, len: 8, witnesses: [_14, _15, _16, _17, _18, _19, _20, _21])",
    "EXPR [ (7, _9, _10) (2, _9) (-1, _22) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _22) 0 ], value: EXPR [ (1, _23) 0 ]) ",
    "EXPR [ (-1, _9, _23) (10, _9) (1, _23) (-1, _24) 0 ]",
    "MEM (id: 1, write EXPR [ (1, _24) 0 ] at: EXPR [ (1, _22) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _14) 0 ], value: EXPR [ (1, _25) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _15) 0 ], value: EXPR [ (1, _26) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _16) 0 ], value: EXPR [ (1, _27) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _17) 0 ], value: EXPR [ (1, _28) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _29) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _19) 0 ], value: EXPR [ (1, _30) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _20) 0 ], value: EXPR [ (1, _31) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _21) 0 ], value: EXPR [ (1, _32) 0 ]) ",
    "INIT (id: 3, len: 8, witnesses: [_25, _26, _27, _28, _29, _30, _31, _32])",
    "EXPR [ (7, _9, _10) (3, _9) (-1, _33) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _33) 0 ], value: EXPR [ (1, _34) 0 ]) ",
    "EXPR [ (-1, _9, _34) (15, _9) (1, _34) (-1, _35) 0 ]",
    "MEM (id: 1, write EXPR [ (1, _35) 0 ] at: EXPR [ (1, _33) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _14) 0 ], value: EXPR [ (1, _36) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _15) 0 ], value: EXPR [ (1, _37) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _16) 0 ], value: EXPR [ (1, _38) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _17) 0 ], value: EXPR [ (1, _39) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _40) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _19) 0 ], value: EXPR [ (1, _41) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _20) 0 ], value: EXPR [ (1, _42) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _21) 0 ], value: EXPR [ (1, _43) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _14) 0 ], value: EXPR [ (1, _44) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _15) 0 ], value: EXPR [ (1, _45) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _16) 0 ], value: EXPR [ (1, _46) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _17) 0 ], value: EXPR [ (1, _47) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _48) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _19) 0 ], value: EXPR [ (1, _49) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _20) 0 ], value: EXPR [ (1, _50) 0 ]) ",
    "EXPR [ (1, _7) (-1, _51) -3 ]",
    "BLACKBOX::RANGE [(_51, 32)] []",
    "EXPR [ (-1, _0, _9) (1, _9, _44) (1, _0) (-1, _52) 0 ]",
    "EXPR [ (-1, _1, _9) (1, _9, _45) (1, _1) (-1, _53) 0 ]",
    "EXPR [ (-1, _2, _9) (1, _9, _46) (1, _2) (-1, _54) 0 ]",
    "EXPR [ (-1, _3, _9) (1, _9, _47) (1, _3) (-1, _55) 0 ]",
    "EXPR [ (-1, _4, _9) (1, _9, _48) (1, _4) (-1, _56) 0 ]",
    "EXPR [ (-1, _5, _9) (1, _9, _49) (1, _5) (-1, _57) 0 ]",
    "EXPR [ (-1, _6, _9) (1, _9, _50) (1, _6) (-1, _58) 0 ]",
    "INIT (id: 5, len: 7, witnesses: [_52, _53, _54, _55, _56, _57, _58])",
    "EXPR [ (7, _51) (-1, _59) 1 ]",
    "MEM (id: 5, read at: EXPR [ (1, _59) 0 ], value: EXPR [ (1, _60) 0 ]) ",
    "EXPR [ (1, _59) (-1, _61) 1 ]",
    "MEM (id: 5, read at: EXPR [ (1, _61) 0 ], value: EXPR [ (1, _62) 0 ]) ",
    "EXPR [ (1, _59) (-1, _63) 2 ]",
    "MEM (id: 5, read at: EXPR [ (1, _63) 0 ], value: EXPR [ (1, _64) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [EXPR [ (7, _51) 4294967293 ], EXPR [ 4294967296 ]], outputs: [_65, _66]",
    "BLACKBOX::RANGE [(_66, 32)] []",
    "EXPR [ (7, _51) (-4294967296, _65) (-1, _66) 4294967293 ]",
    "EXPR [ (-1, _65) 0 ]",
    "EXPR [ (1, _60) -5 ]",
    "EXPR [ (1, _62) -10 ]",
    "EXPR [ (1, _64) -15 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "ndPdboIwGMbxe+kxB/btl3gry2IQ60JCgFRYshjvfbV/2fRgyeLJ+wj1+QVCe1HHeFg+9t1wGs9q93ZRh9T1ffex78e2mbtxyHcv10qtl/s5xZhvqYf13JqaFIdZ7Yal7yv12fRL+dN5aoaSc5Py6qZScTjmzOCp6+Pt17X6bW/+ruog97IO25+6+3+/1mu/9i/0Ra8PL1pe6Ru79k39Un99f3Hhqf+er5q2S09fTEl+0UqZMm2ZLlcr5csMamcqtS2zLlNvCE0IYQhLOMITGBpEowiKoAiKoAiKoAiKoAiKoBgUg2JQDIpBMSgGxaAYFINiUSyKRbEoFsWiWBSLYlEsikNxKA7FZSV/TmcJR3giEFuiLuE3hCaEQPEoHsWjeBSP4lECSkAJKCErLoclsuKut22UuubQx/vpPS1D+3CY569pXVmP+5TGNh6XFG/bqKzljfUN",
  "file_map": {
    "50": {
      "source": "// 3 values\nstruct Bar {\n    inner: [Field; 3],\n}\n\n// 7 values\nstruct Foo {\n    a: Field,\n    b: [Field; 3],\n    bar: Bar,\n}\n\nfn main(mut x: [Foo; 1], y: pub u32) {\n    if y == 3 {\n        x[y - 3].b = [5, 10, 15];\n    }\n    assert(x[y - 3].b == [5, 10, 15]);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_invert",
    "directive_integer_quotient"
  ]
}
