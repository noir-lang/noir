---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _0",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 12 }, Call { location: 13 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 130 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Relative(4), op: Add, lhs: Relative(1), rhs: Relative(3) }, Store { destination_pointer: Relative(2), source: Relative(4) }, Const { destination: Relative(1), bit_size: Field, value: 3 }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(4), rhs: Relative(1) }, JumpIf { condition: Relative(5), location: 24 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(6) } }, Mov { destination: Relative(4), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(5), bit_size: Field, value: 7 }, Store { destination_pointer: Relative(4), source: Relative(5) }, Jump { location: 29 }, Mov { destination: Relative(7), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(8), bit_size: Field, value: 2 }, Store { destination_pointer: Relative(7), source: Relative(8) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 5 }, Const { destination: Relative(11), bit_size: Integer(U32), value: 1 }, Mov { destination: Relative(6), source: Relative(9) }, Jump { location: 38 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(6), rhs: Relative(10) }, JumpIf { condition: Relative(12), location: 126 }, Jump { location: 41 }, Store { destination_pointer: Relative(7), source: Relative(3) }, Mov { destination: Relative(6), source: Relative(9) }, Jump { location: 44 }, BinaryIntOp { destination: Relative(3), op: LessThan, bit_size: U32, lhs: Relative(6), rhs: Relative(10) }, JumpIf { condition: Relative(3), location: 122 }, Jump { location: 47 }, Load { destination: Relative(6), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(12), op: Equals, lhs: Relative(6), rhs: Relative(8) }, JumpIf { condition: Relative(12), location: 52 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(13) } }, Mov { destination: Relative(3), source: Relative(9) }, Jump { location: 54 }, BinaryIntOp { destination: Relative(6), op: LessThan, bit_size: U32, lhs: Relative(3), rhs: Relative(10) }, JumpIf { condition: Relative(6), location: 118 }, Jump { location: 57 }, Load { destination: Relative(3), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(6), op: Equals, lhs: Relative(3), rhs: Relative(8) }, JumpIf { condition: Relative(6), location: 62 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, Load { destination: Relative(3), source_pointer: Relative(4) }, BinaryFieldOp { destination: Relative(4), op: Equals, lhs: Relative(3), rhs: Relative(5) }, JumpIf { condition: Relative(4), location: 67 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(6) } }, Load { destination: Relative(3), source_pointer: Relative(2) }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(4), bit_size: Field, value: 0 }, Store { destination_pointer: Relative(2), source: Relative(4) }, Mov { destination: Relative(4), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(9) }, Const { destination: Relative(5), bit_size: Field, value: 10 }, BinaryFieldOp { destination: Relative(6), op: Equals, lhs: Relative(3), rhs: Relative(5) }, Const { destination: Relative(5), bit_size: Field, value: 52 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 69 }, Const { destination: Relative(8), bit_size: Field, value: 12 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 28 }, JumpIf { condition: Relative(6), location: 86 }, Jump { location: 83 }, Store { destination_pointer: Relative(2), source: Relative(8) }, Store { destination_pointer: Relative(4), source: Relative(9) }, Jump { location: 89 }, Store { destination_pointer: Relative(2), source: Relative(5) }, Store { destination_pointer: Relative(4), source: Relative(7) }, Jump { location: 89 }, JumpIf { condition: Relative(6), location: 102 }, Jump { location: 91 }, Load { destination: Relative(5), source_pointer: Relative(2) }, Load { destination: Relative(2), source_pointer: Relative(4) }, BinaryFieldOp { destination: Relative(4), op: Equals, lhs: Relative(5), rhs: Relative(8) }, JumpIf { condition: Relative(4), location: 97 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(6) } }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(9) }, JumpIf { condition: Relative(4), location: 101 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, Jump { location: 113 }, Load { destination: Relative(6), source_pointer: Relative(2) }, Load { destination: Relative(2), source_pointer: Relative(4) }, BinaryFieldOp { destination: Relative(4), op: Equals, lhs: Relative(6), rhs: Relative(5) }, JumpIf { condition: Relative(4), location: 108 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(7) }, JumpIf { condition: Relative(4), location: 112 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, Jump { location: 113 }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(3), rhs: Relative(1) }, JumpIf { condition: Relative(2), location: 117 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(4) } }, Return, Store { destination_pointer: Relative(7), source: Relative(8) }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(11) }, Mov { destination: Relative(3), source: Relative(6) }, Jump { location: 54 }, Store { destination_pointer: Relative(7), source: Relative(8) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(11) }, Mov { destination: Relative(6), source: Relative(3) }, Jump { location: 44 }, Store { destination_pointer: Relative(7), source: Relative(8) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(11) }, Mov { destination: Relative(6), source: Relative(12) }, Jump { location: 38 }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 135 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
