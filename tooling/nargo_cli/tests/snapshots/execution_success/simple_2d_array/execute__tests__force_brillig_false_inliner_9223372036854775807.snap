---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "array_input",
        "type": {
          "kind": "array",
          "length": 2,
          "type": {
            "kind": "array",
            "length": 2,
            "type": {
              "kind": "field"
            }
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : 5",
    "private parameters indices : [0, 1, 2, 3, 4, 5]",
    "public parameters indices : []",
    "return value indices : []",
    "EXPR [ (-1, _0) (1, _2) 0 ]",
    "EXPR [ (-1, _1) (1, _3) 0 ]",
    "EXPR [ (-1, _4) 3 ]",
    "EXPR [ (-1, _5) 3 ]"
  ],
  "debug_symbols": "lY9LCoMwFEX38sYOTFJbcCulSL4SCEnIp1CCe28UAyJOnL1zL+fCKyAky/OkrXIRxncB4zhN2tlKBfotip7alWKiIcGI0KMDaUW9yHPpQGkjYRz65dMBuhSGvgkvfBLwlYAJ2gU8kJNA7gkVWNDG6Hk6flbjLw2aMiN3VNnyQ5t+vjXN98FxKXKQ69LW1fk/",
  "file_map": {
    "50": {
      "source": "// Test accessing a multidimensional array\nfn main(x: Field, y: Field, array_input: [[Field; 2]; 2]) {\n    assert(array_input[0][0] == x);\n    assert(array_input[0][1] == y);\n\n    let arr: [[Field; 2]; 1] = [[3, 3]];\n    assert_eq(arr[0], array_input[1]);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": []
}
