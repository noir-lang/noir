---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _535",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "EXPR [ (1, _0) (-1, _1) -1 ]",
    "EXPR [ (-1, _2) 22 ]",
    "EXPR [ (-1, _3) 23 ]",
    "EXPR [ (-1, _4) 24 ]",
    "EXPR [ (-1, _5) 25 ]",
    "INIT (id: 0, len: 4, witnesses: [_2, _3, _4, _5])",
    "MEM (id: 0, read at: EXPR [ (1, _1) 0 ], value: EXPR [ (1, _6) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -7 })], outputs: [Simple(Witness(7))]",
    "EXPR [ (1, _6, _7) (-7, _7) (1, _8) -1 ]",
    "EXPR [ (1, _6, _8) (-7, _8) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -8 })], outputs: [Simple(Witness(9))]",
    "EXPR [ (1, _6, _9) (-8, _9) (1, _10) -1 ]",
    "EXPR [ (1, _6, _10) (-8, _10) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -10 })], outputs: [Simple(Witness(11))]",
    "EXPR [ (1, _6, _11) (-10, _11) (1, _12) -1 ]",
    "EXPR [ (1, _6, _12) (-10, _12) 0 ]",
    "EXPR [ (1, _8, _10) (-1, _8) (-1, _10) (-1, _13) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _13, _12) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -11 })], outputs: [Simple(Witness(14))]",
    "EXPR [ (1, _6, _14) (-11, _14) (1, _15) -1 ]",
    "EXPR [ (1, _6, _15) (-11, _15) 0 ]",
    "EXPR [ (-1, _12, _13) (1, _13) (-1, _16) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _16, _15) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -16 })], outputs: [Simple(Witness(17))]",
    "EXPR [ (1, _6, _17) (-16, _17) (1, _18) -1 ]",
    "EXPR [ (1, _6, _18) (-16, _18) 0 ]",
    "EXPR [ (-1, _15, _16) (1, _16) (-1, _19) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _19, _18) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -17 })], outputs: [Simple(Witness(20))]",
    "EXPR [ (1, _6, _20) (-17, _20) (1, _21) -1 ]",
    "EXPR [ (1, _6, _21) (-17, _21) 0 ]",
    "EXPR [ (-1, _18, _19) (1, _19) (-1, _22) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _22, _21) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -18 })], outputs: [Simple(Witness(23))]",
    "EXPR [ (1, _6, _23) (-18, _23) (1, _24) -1 ]",
    "EXPR [ (1, _6, _24) (-18, _24) 0 ]",
    "EXPR [ (-1, _21, _22) (1, _22) (-1, _25) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _25, _24) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -19 })], outputs: [Simple(Witness(26))]",
    "EXPR [ (1, _6, _26) (-19, _26) (1, _27) -1 ]",
    "EXPR [ (1, _6, _27) (-19, _27) 0 ]",
    "EXPR [ (-1, _24, _25) (1, _25) (-1, _28) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _28, _27) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -20 })], outputs: [Simple(Witness(29))]",
    "EXPR [ (1, _6, _29) (-20, _29) (1, _30) -1 ]",
    "EXPR [ (1, _6, _30) (-20, _30) 0 ]",
    "EXPR [ (-1, _27, _28) (1, _28) (-1, _31) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _31, _30) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -21 })], outputs: [Simple(Witness(32))]",
    "EXPR [ (1, _6, _32) (-21, _32) (1, _33) -1 ]",
    "EXPR [ (1, _6, _33) (-21, _33) 0 ]",
    "EXPR [ (-1, _30, _31) (1, _31) (-1, _34) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _34, _33) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -22 })], outputs: [Simple(Witness(35))]",
    "EXPR [ (1, _6, _35) (-22, _35) (1, _36) -1 ]",
    "EXPR [ (1, _6, _36) (-22, _36) 0 ]",
    "EXPR [ (-1, _33, _34) (1, _34) (-1, _37) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _37, _36) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -23 })], outputs: [Simple(Witness(38))]",
    "EXPR [ (1, _6, _38) (-23, _38) (1, _39) -1 ]",
    "EXPR [ (1, _6, _39) (-23, _39) 0 ]",
    "EXPR [ (-1, _36, _37) (1, _37) (-1, _40) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _40, _39) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: -24 })], outputs: [Simple(Witness(41))]",
    "EXPR [ (1, _6, _41) (-24, _41) (1, _42) -1 ]",
    "EXPR [ (1, _6, _42) (-24, _42) 0 ]",
    "EXPR [ (-1, _39, _40) (1, _40) (-1, _43) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _43, _42) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _42, _43) (1, _43) (-1, _44) 0 ]",
    "EXPR [ (1, _6, _44) (-25, _44) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _44) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "MEM (id: 0, read at: EXPR [ (1, _0) 0 ], value: EXPR [ (1, _45) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -7 })], outputs: [Simple(Witness(46))]",
    "EXPR [ (1, _45, _46) (-7, _46) (1, _47) -1 ]",
    "EXPR [ (1, _45, _47) (-7, _47) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -8 })], outputs: [Simple(Witness(48))]",
    "EXPR [ (1, _45, _48) (-8, _48) (1, _49) -1 ]",
    "EXPR [ (1, _45, _49) (-8, _49) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -10 })], outputs: [Simple(Witness(50))]",
    "EXPR [ (1, _45, _50) (-10, _50) (1, _51) -1 ]",
    "EXPR [ (1, _45, _51) (-10, _51) 0 ]",
    "EXPR [ (1, _47, _49) (-1, _47) (-1, _49) (-1, _52) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _52, _51) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -11 })], outputs: [Simple(Witness(53))]",
    "EXPR [ (1, _45, _53) (-11, _53) (1, _54) -1 ]",
    "EXPR [ (1, _45, _54) (-11, _54) 0 ]",
    "EXPR [ (-1, _51, _52) (1, _52) (-1, _55) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _55, _54) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -16 })], outputs: [Simple(Witness(56))]",
    "EXPR [ (1, _45, _56) (-16, _56) (1, _57) -1 ]",
    "EXPR [ (1, _45, _57) (-16, _57) 0 ]",
    "EXPR [ (-1, _54, _55) (1, _55) (-1, _58) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _58, _57) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -17 })], outputs: [Simple(Witness(59))]",
    "EXPR [ (1, _45, _59) (-17, _59) (1, _60) -1 ]",
    "EXPR [ (1, _45, _60) (-17, _60) 0 ]",
    "EXPR [ (-1, _57, _58) (1, _58) (-1, _61) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _61, _60) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -18 })], outputs: [Simple(Witness(62))]",
    "EXPR [ (1, _45, _62) (-18, _62) (1, _63) -1 ]",
    "EXPR [ (1, _45, _63) (-18, _63) 0 ]",
    "EXPR [ (-1, _60, _61) (1, _61) (-1, _64) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _64, _63) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -19 })], outputs: [Simple(Witness(65))]",
    "EXPR [ (1, _45, _65) (-19, _65) (1, _66) -1 ]",
    "EXPR [ (1, _45, _66) (-19, _66) 0 ]",
    "EXPR [ (-1, _63, _64) (1, _64) (-1, _67) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _67, _66) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -20 })], outputs: [Simple(Witness(68))]",
    "EXPR [ (1, _45, _68) (-20, _68) (1, _69) -1 ]",
    "EXPR [ (1, _45, _69) (-20, _69) 0 ]",
    "EXPR [ (-1, _66, _67) (1, _67) (-1, _70) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _70, _69) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -21 })], outputs: [Simple(Witness(71))]",
    "EXPR [ (1, _45, _71) (-21, _71) (1, _72) -1 ]",
    "EXPR [ (1, _45, _72) (-21, _72) 0 ]",
    "EXPR [ (-1, _69, _70) (1, _70) (-1, _73) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _73, _72) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -22 })], outputs: [Simple(Witness(74))]",
    "EXPR [ (1, _45, _74) (-22, _74) (1, _75) -1 ]",
    "EXPR [ (1, _45, _75) (-22, _75) 0 ]",
    "EXPR [ (-1, _72, _73) (1, _73) (-1, _76) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _76, _75) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -23 })], outputs: [Simple(Witness(77))]",
    "EXPR [ (1, _45, _77) (-23, _77) (1, _78) -1 ]",
    "EXPR [ (1, _45, _78) (-23, _78) 0 ]",
    "EXPR [ (-1, _75, _76) (1, _76) (-1, _79) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _79, _78) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(45))], q_c: -24 })], outputs: [Simple(Witness(80))]",
    "EXPR [ (1, _45, _80) (-24, _80) (1, _81) -1 ]",
    "EXPR [ (1, _45, _81) (-24, _81) 0 ]",
    "EXPR [ (-1, _78, _79) (1, _79) (-1, _82) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _82, _81) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _81, _82) (1, _82) (-1, _83) 0 ]",
    "EXPR [ (1, _45, _83) (-25, _83) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _83) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "EXPR [ (1, _0) (-1, _84) 2 ]",
    "MEM (id: 0, read at: EXPR [ (1, _84) 0 ], value: EXPR [ (1, _85) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -7 })], outputs: [Simple(Witness(86))]",
    "EXPR [ (1, _85, _86) (-7, _86) (1, _87) -1 ]",
    "EXPR [ (1, _85, _87) (-7, _87) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -8 })], outputs: [Simple(Witness(88))]",
    "EXPR [ (1, _85, _88) (-8, _88) (1, _89) -1 ]",
    "EXPR [ (1, _85, _89) (-8, _89) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -10 })], outputs: [Simple(Witness(90))]",
    "EXPR [ (1, _85, _90) (-10, _90) (1, _91) -1 ]",
    "EXPR [ (1, _85, _91) (-10, _91) 0 ]",
    "EXPR [ (1, _87, _89) (-1, _87) (-1, _89) (-1, _92) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _92, _91) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -11 })], outputs: [Simple(Witness(93))]",
    "EXPR [ (1, _85, _93) (-11, _93) (1, _94) -1 ]",
    "EXPR [ (1, _85, _94) (-11, _94) 0 ]",
    "EXPR [ (-1, _91, _92) (1, _92) (-1, _95) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _95, _94) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -16 })], outputs: [Simple(Witness(96))]",
    "EXPR [ (1, _85, _96) (-16, _96) (1, _97) -1 ]",
    "EXPR [ (1, _85, _97) (-16, _97) 0 ]",
    "EXPR [ (-1, _94, _95) (1, _95) (-1, _98) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _98, _97) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -17 })], outputs: [Simple(Witness(99))]",
    "EXPR [ (1, _85, _99) (-17, _99) (1, _100) -1 ]",
    "EXPR [ (1, _85, _100) (-17, _100) 0 ]",
    "EXPR [ (-1, _97, _98) (1, _98) (-1, _101) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _101, _100) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -18 })], outputs: [Simple(Witness(102))]",
    "EXPR [ (1, _85, _102) (-18, _102) (1, _103) -1 ]",
    "EXPR [ (1, _85, _103) (-18, _103) 0 ]",
    "EXPR [ (-1, _100, _101) (1, _101) (-1, _104) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _104, _103) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -19 })], outputs: [Simple(Witness(105))]",
    "EXPR [ (1, _85, _105) (-19, _105) (1, _106) -1 ]",
    "EXPR [ (1, _85, _106) (-19, _106) 0 ]",
    "EXPR [ (-1, _103, _104) (1, _104) (-1, _107) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _107, _106) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -20 })], outputs: [Simple(Witness(108))]",
    "EXPR [ (1, _85, _108) (-20, _108) (1, _109) -1 ]",
    "EXPR [ (1, _85, _109) (-20, _109) 0 ]",
    "EXPR [ (-1, _106, _107) (1, _107) (-1, _110) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _110, _109) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -21 })], outputs: [Simple(Witness(111))]",
    "EXPR [ (1, _85, _111) (-21, _111) (1, _112) -1 ]",
    "EXPR [ (1, _85, _112) (-21, _112) 0 ]",
    "EXPR [ (-1, _109, _110) (1, _110) (-1, _113) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _113, _112) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -22 })], outputs: [Simple(Witness(114))]",
    "EXPR [ (1, _85, _114) (-22, _114) (1, _115) -1 ]",
    "EXPR [ (1, _85, _115) (-22, _115) 0 ]",
    "EXPR [ (-1, _112, _113) (1, _113) (-1, _116) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _116, _115) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -23 })], outputs: [Simple(Witness(117))]",
    "EXPR [ (1, _85, _117) (-23, _117) (1, _118) -1 ]",
    "EXPR [ (1, _85, _118) (-23, _118) 0 ]",
    "EXPR [ (-1, _115, _116) (1, _116) (-1, _119) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _119, _118) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(85))], q_c: -24 })], outputs: [Simple(Witness(120))]",
    "EXPR [ (1, _85, _120) (-24, _120) (1, _121) -1 ]",
    "EXPR [ (1, _85, _121) (-24, _121) 0 ]",
    "EXPR [ (-1, _118, _119) (1, _119) (-1, _122) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _122, _121) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _121, _122) (1, _122) (-1, _123) 0 ]",
    "EXPR [ (1, _85, _123) (-25, _123) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _123) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "EXPR [ (1, _0) (-1, _124) 1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _124) 0 ], value: EXPR [ (1, _125) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -7 })], outputs: [Simple(Witness(126))]",
    "EXPR [ (1, _125, _126) (-7, _126) (1, _127) -1 ]",
    "EXPR [ (1, _125, _127) (-7, _127) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -8 })], outputs: [Simple(Witness(128))]",
    "EXPR [ (1, _125, _128) (-8, _128) (1, _129) -1 ]",
    "EXPR [ (1, _125, _129) (-8, _129) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -10 })], outputs: [Simple(Witness(130))]",
    "EXPR [ (1, _125, _130) (-10, _130) (1, _131) -1 ]",
    "EXPR [ (1, _125, _131) (-10, _131) 0 ]",
    "EXPR [ (1, _127, _129) (-1, _127) (-1, _129) (-1, _132) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _132, _131) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -11 })], outputs: [Simple(Witness(133))]",
    "EXPR [ (1, _125, _133) (-11, _133) (1, _134) -1 ]",
    "EXPR [ (1, _125, _134) (-11, _134) 0 ]",
    "EXPR [ (-1, _131, _132) (1, _132) (-1, _135) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _135, _134) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -16 })], outputs: [Simple(Witness(136))]",
    "EXPR [ (1, _125, _136) (-16, _136) (1, _137) -1 ]",
    "EXPR [ (1, _125, _137) (-16, _137) 0 ]",
    "EXPR [ (-1, _134, _135) (1, _135) (-1, _138) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _138, _137) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -17 })], outputs: [Simple(Witness(139))]",
    "EXPR [ (1, _125, _139) (-17, _139) (1, _140) -1 ]",
    "EXPR [ (1, _125, _140) (-17, _140) 0 ]",
    "EXPR [ (-1, _137, _138) (1, _138) (-1, _141) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _141, _140) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -18 })], outputs: [Simple(Witness(142))]",
    "EXPR [ (1, _125, _142) (-18, _142) (1, _143) -1 ]",
    "EXPR [ (1, _125, _143) (-18, _143) 0 ]",
    "EXPR [ (-1, _140, _141) (1, _141) (-1, _144) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _144, _143) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -19 })], outputs: [Simple(Witness(145))]",
    "EXPR [ (1, _125, _145) (-19, _145) (1, _146) -1 ]",
    "EXPR [ (1, _125, _146) (-19, _146) 0 ]",
    "EXPR [ (-1, _143, _144) (1, _144) (-1, _147) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _147, _146) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -20 })], outputs: [Simple(Witness(148))]",
    "EXPR [ (1, _125, _148) (-20, _148) (1, _149) -1 ]",
    "EXPR [ (1, _125, _149) (-20, _149) 0 ]",
    "EXPR [ (-1, _146, _147) (1, _147) (-1, _150) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _150, _149) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -21 })], outputs: [Simple(Witness(151))]",
    "EXPR [ (1, _125, _151) (-21, _151) (1, _152) -1 ]",
    "EXPR [ (1, _125, _152) (-21, _152) 0 ]",
    "EXPR [ (-1, _149, _150) (1, _150) (-1, _153) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _153, _152) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -22 })], outputs: [Simple(Witness(154))]",
    "EXPR [ (1, _125, _154) (-22, _154) (1, _155) -1 ]",
    "EXPR [ (1, _125, _155) (-22, _155) 0 ]",
    "EXPR [ (-1, _152, _153) (1, _153) (-1, _156) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _156, _155) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -23 })], outputs: [Simple(Witness(157))]",
    "EXPR [ (1, _125, _157) (-23, _157) (1, _158) -1 ]",
    "EXPR [ (1, _125, _158) (-23, _158) 0 ]",
    "EXPR [ (-1, _155, _156) (1, _156) (-1, _159) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _159, _158) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(125))], q_c: -24 })], outputs: [Simple(Witness(160))]",
    "EXPR [ (1, _125, _160) (-24, _160) (1, _161) -1 ]",
    "EXPR [ (1, _125, _161) (-24, _161) 0 ]",
    "EXPR [ (-1, _158, _159) (1, _159) (-1, _162) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _162, _161) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _161, _162) (1, _162) (-1, _163) 0 ]",
    "EXPR [ (1, _125, _163) (-25, _163) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _163) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 4: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 4294967292 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(164)), Simple(Witness(165))]",
    "BLACKBOX::RANGE [(_165, 32)] []",
    "EXPR [ (1, _1) (-4294967296, _164) (-1, _165) 4294967292 ]",
    "EXPR [ (-1, _164) 0 ]",
    "EXPR [ (-1, _166) 18 ]",
    "EXPR [ (-1, _167) 19 ]",
    "EXPR [ (-1, _168) 20 ]",
    "EXPR [ (-1, _169) 21 ]",
    "INIT (id: 1, len: 4, witnesses: [_166, _167, _168, _169])",
    "MEM (id: 1, read at: EXPR [ (1, _1) 0 ], value: EXPR [ (1, _170) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -7 })], outputs: [Simple(Witness(171))]",
    "EXPR [ (1, _170, _171) (-7, _171) (1, _172) -1 ]",
    "EXPR [ (1, _170, _172) (-7, _172) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -8 })], outputs: [Simple(Witness(173))]",
    "EXPR [ (1, _170, _173) (-8, _173) (1, _174) -1 ]",
    "EXPR [ (1, _170, _174) (-8, _174) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -10 })], outputs: [Simple(Witness(175))]",
    "EXPR [ (1, _170, _175) (-10, _175) (1, _176) -1 ]",
    "EXPR [ (1, _170, _176) (-10, _176) 0 ]",
    "EXPR [ (1, _172, _174) (-1, _172) (-1, _174) (-1, _177) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _177, _176) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -11 })], outputs: [Simple(Witness(178))]",
    "EXPR [ (1, _170, _178) (-11, _178) (1, _179) -1 ]",
    "EXPR [ (1, _170, _179) (-11, _179) 0 ]",
    "EXPR [ (-1, _176, _177) (1, _177) (-1, _180) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _180, _179) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -16 })], outputs: [Simple(Witness(181))]",
    "EXPR [ (1, _170, _181) (-16, _181) (1, _182) -1 ]",
    "EXPR [ (1, _170, _182) (-16, _182) 0 ]",
    "EXPR [ (-1, _179, _180) (1, _180) (-1, _183) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _183, _182) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -17 })], outputs: [Simple(Witness(184))]",
    "EXPR [ (1, _170, _184) (-17, _184) (1, _185) -1 ]",
    "EXPR [ (1, _170, _185) (-17, _185) 0 ]",
    "EXPR [ (-1, _182, _183) (1, _183) (-1, _186) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _186, _185) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -18 })], outputs: [Simple(Witness(187))]",
    "EXPR [ (1, _170, _187) (-18, _187) (1, _188) -1 ]",
    "EXPR [ (1, _170, _188) (-18, _188) 0 ]",
    "EXPR [ (-1, _185, _186) (1, _186) (-1, _189) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _189, _188) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -19 })], outputs: [Simple(Witness(190))]",
    "EXPR [ (1, _170, _190) (-19, _190) (1, _191) -1 ]",
    "EXPR [ (1, _170, _191) (-19, _191) 0 ]",
    "EXPR [ (-1, _188, _189) (1, _189) (-1, _192) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _192, _191) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -20 })], outputs: [Simple(Witness(193))]",
    "EXPR [ (1, _170, _193) (-20, _193) (1, _194) -1 ]",
    "EXPR [ (1, _170, _194) (-20, _194) 0 ]",
    "EXPR [ (-1, _191, _192) (1, _192) (-1, _195) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _195, _194) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -21 })], outputs: [Simple(Witness(196))]",
    "EXPR [ (1, _170, _196) (-21, _196) (1, _197) -1 ]",
    "EXPR [ (1, _170, _197) (-21, _197) 0 ]",
    "EXPR [ (-1, _194, _195) (1, _195) (-1, _198) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _198, _197) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -22 })], outputs: [Simple(Witness(199))]",
    "EXPR [ (1, _170, _199) (-22, _199) (1, _200) -1 ]",
    "EXPR [ (1, _170, _200) (-22, _200) 0 ]",
    "EXPR [ (-1, _197, _198) (1, _198) (-1, _201) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _201, _200) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -23 })], outputs: [Simple(Witness(202))]",
    "EXPR [ (1, _170, _202) (-23, _202) (1, _203) -1 ]",
    "EXPR [ (1, _170, _203) (-23, _203) 0 ]",
    "EXPR [ (-1, _200, _201) (1, _201) (-1, _204) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _204, _203) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(170))], q_c: -24 })], outputs: [Simple(Witness(205))]",
    "EXPR [ (1, _170, _205) (-24, _205) (1, _206) -1 ]",
    "EXPR [ (1, _170, _206) (-24, _206) 0 ]",
    "EXPR [ (-1, _203, _204) (1, _204) (-1, _207) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _207, _206) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _206, _207) (1, _207) (-1, _208) 0 ]",
    "EXPR [ (1, _170, _208) (-25, _208) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _208) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 4: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 4294967292 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(209)), Simple(Witness(210))]",
    "BLACKBOX::RANGE [(_210, 32)] []",
    "EXPR [ (1, _0) (-4294967296, _209) (-1, _210) 4294967292 ]",
    "EXPR [ (-1, _209) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _0) 0 ], value: EXPR [ (1, _211) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -7 })], outputs: [Simple(Witness(212))]",
    "EXPR [ (1, _211, _212) (-7, _212) (1, _213) -1 ]",
    "EXPR [ (1, _211, _213) (-7, _213) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -8 })], outputs: [Simple(Witness(214))]",
    "EXPR [ (1, _211, _214) (-8, _214) (1, _215) -1 ]",
    "EXPR [ (1, _211, _215) (-8, _215) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -10 })], outputs: [Simple(Witness(216))]",
    "EXPR [ (1, _211, _216) (-10, _216) (1, _217) -1 ]",
    "EXPR [ (1, _211, _217) (-10, _217) 0 ]",
    "EXPR [ (1, _213, _215) (-1, _213) (-1, _215) (-1, _218) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _218, _217) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -11 })], outputs: [Simple(Witness(219))]",
    "EXPR [ (1, _211, _219) (-11, _219) (1, _220) -1 ]",
    "EXPR [ (1, _211, _220) (-11, _220) 0 ]",
    "EXPR [ (-1, _217, _218) (1, _218) (-1, _221) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _221, _220) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -16 })], outputs: [Simple(Witness(222))]",
    "EXPR [ (1, _211, _222) (-16, _222) (1, _223) -1 ]",
    "EXPR [ (1, _211, _223) (-16, _223) 0 ]",
    "EXPR [ (-1, _220, _221) (1, _221) (-1, _224) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _224, _223) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -17 })], outputs: [Simple(Witness(225))]",
    "EXPR [ (1, _211, _225) (-17, _225) (1, _226) -1 ]",
    "EXPR [ (1, _211, _226) (-17, _226) 0 ]",
    "EXPR [ (-1, _223, _224) (1, _224) (-1, _227) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _227, _226) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -18 })], outputs: [Simple(Witness(228))]",
    "EXPR [ (1, _211, _228) (-18, _228) (1, _229) -1 ]",
    "EXPR [ (1, _211, _229) (-18, _229) 0 ]",
    "EXPR [ (-1, _226, _227) (1, _227) (-1, _230) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _230, _229) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -19 })], outputs: [Simple(Witness(231))]",
    "EXPR [ (1, _211, _231) (-19, _231) (1, _232) -1 ]",
    "EXPR [ (1, _211, _232) (-19, _232) 0 ]",
    "EXPR [ (-1, _229, _230) (1, _230) (-1, _233) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _233, _232) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -20 })], outputs: [Simple(Witness(234))]",
    "EXPR [ (1, _211, _234) (-20, _234) (1, _235) -1 ]",
    "EXPR [ (1, _211, _235) (-20, _235) 0 ]",
    "EXPR [ (-1, _232, _233) (1, _233) (-1, _236) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _236, _235) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -21 })], outputs: [Simple(Witness(237))]",
    "EXPR [ (1, _211, _237) (-21, _237) (1, _238) -1 ]",
    "EXPR [ (1, _211, _238) (-21, _238) 0 ]",
    "EXPR [ (-1, _235, _236) (1, _236) (-1, _239) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _239, _238) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -22 })], outputs: [Simple(Witness(240))]",
    "EXPR [ (1, _211, _240) (-22, _240) (1, _241) -1 ]",
    "EXPR [ (1, _211, _241) (-22, _241) 0 ]",
    "EXPR [ (-1, _238, _239) (1, _239) (-1, _242) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _242, _241) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -23 })], outputs: [Simple(Witness(243))]",
    "EXPR [ (1, _211, _243) (-23, _243) (1, _244) -1 ]",
    "EXPR [ (1, _211, _244) (-23, _244) 0 ]",
    "EXPR [ (-1, _241, _242) (1, _242) (-1, _245) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _245, _244) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(211))], q_c: -24 })], outputs: [Simple(Witness(246))]",
    "EXPR [ (1, _211, _246) (-24, _246) (1, _247) -1 ]",
    "EXPR [ (1, _211, _247) (-24, _247) 0 ]",
    "EXPR [ (-1, _244, _245) (1, _245) (-1, _248) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _248, _247) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _247, _248) (1, _248) (-1, _249) 0 ]",
    "EXPR [ (1, _211, _249) (-25, _249) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _249) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 4: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(124))], q_c: 4294967292 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(250)), Simple(Witness(251))]",
    "BLACKBOX::RANGE [(_251, 32)] []",
    "EXPR [ (1, _124) (-4294967296, _250) (-1, _251) 4294967292 ]",
    "EXPR [ (-1, _250) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _124) 0 ], value: EXPR [ (1, _252) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -7 })], outputs: [Simple(Witness(253))]",
    "EXPR [ (1, _252, _253) (-7, _253) (1, _254) -1 ]",
    "EXPR [ (1, _252, _254) (-7, _254) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -8 })], outputs: [Simple(Witness(255))]",
    "EXPR [ (1, _252, _255) (-8, _255) (1, _256) -1 ]",
    "EXPR [ (1, _252, _256) (-8, _256) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -10 })], outputs: [Simple(Witness(257))]",
    "EXPR [ (1, _252, _257) (-10, _257) (1, _258) -1 ]",
    "EXPR [ (1, _252, _258) (-10, _258) 0 ]",
    "EXPR [ (1, _254, _256) (-1, _254) (-1, _256) (-1, _259) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _259, _258) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -11 })], outputs: [Simple(Witness(260))]",
    "EXPR [ (1, _252, _260) (-11, _260) (1, _261) -1 ]",
    "EXPR [ (1, _252, _261) (-11, _261) 0 ]",
    "EXPR [ (-1, _258, _259) (1, _259) (-1, _262) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _262, _261) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -16 })], outputs: [Simple(Witness(263))]",
    "EXPR [ (1, _252, _263) (-16, _263) (1, _264) -1 ]",
    "EXPR [ (1, _252, _264) (-16, _264) 0 ]",
    "EXPR [ (-1, _261, _262) (1, _262) (-1, _265) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _265, _264) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -17 })], outputs: [Simple(Witness(266))]",
    "EXPR [ (1, _252, _266) (-17, _266) (1, _267) -1 ]",
    "EXPR [ (1, _252, _267) (-17, _267) 0 ]",
    "EXPR [ (-1, _264, _265) (1, _265) (-1, _268) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _268, _267) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -18 })], outputs: [Simple(Witness(269))]",
    "EXPR [ (1, _252, _269) (-18, _269) (1, _270) -1 ]",
    "EXPR [ (1, _252, _270) (-18, _270) 0 ]",
    "EXPR [ (-1, _267, _268) (1, _268) (-1, _271) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _271, _270) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -19 })], outputs: [Simple(Witness(272))]",
    "EXPR [ (1, _252, _272) (-19, _272) (1, _273) -1 ]",
    "EXPR [ (1, _252, _273) (-19, _273) 0 ]",
    "EXPR [ (-1, _270, _271) (1, _271) (-1, _274) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _274, _273) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -20 })], outputs: [Simple(Witness(275))]",
    "EXPR [ (1, _252, _275) (-20, _275) (1, _276) -1 ]",
    "EXPR [ (1, _252, _276) (-20, _276) 0 ]",
    "EXPR [ (-1, _273, _274) (1, _274) (-1, _277) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _277, _276) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -21 })], outputs: [Simple(Witness(278))]",
    "EXPR [ (1, _252, _278) (-21, _278) (1, _279) -1 ]",
    "EXPR [ (1, _252, _279) (-21, _279) 0 ]",
    "EXPR [ (-1, _276, _277) (1, _277) (-1, _280) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _280, _279) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -22 })], outputs: [Simple(Witness(281))]",
    "EXPR [ (1, _252, _281) (-22, _281) (1, _282) -1 ]",
    "EXPR [ (1, _252, _282) (-22, _282) 0 ]",
    "EXPR [ (-1, _279, _280) (1, _280) (-1, _283) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _283, _282) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -23 })], outputs: [Simple(Witness(284))]",
    "EXPR [ (1, _252, _284) (-23, _284) (1, _285) -1 ]",
    "EXPR [ (1, _252, _285) (-23, _285) 0 ]",
    "EXPR [ (-1, _282, _283) (1, _283) (-1, _286) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _286, _285) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(252))], q_c: -24 })], outputs: [Simple(Witness(287))]",
    "EXPR [ (1, _252, _287) (-24, _287) (1, _288) -1 ]",
    "EXPR [ (1, _252, _288) (-24, _288) 0 ]",
    "EXPR [ (-1, _285, _286) (1, _286) (-1, _289) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _289, _288) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _288, _289) (1, _289) (-1, _290) 0 ]",
    "EXPR [ (1, _252, _290) (-25, _290) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _290) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 4: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(84))], q_c: 4294967292 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(291)), Simple(Witness(292))]",
    "BLACKBOX::RANGE [(_292, 32)] []",
    "EXPR [ (1, _84) (-4294967296, _291) (-1, _292) 4294967292 ]",
    "EXPR [ (-1, _291) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _84) 0 ], value: EXPR [ (1, _293) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -7 })], outputs: [Simple(Witness(294))]",
    "EXPR [ (1, _293, _294) (-7, _294) (1, _295) -1 ]",
    "EXPR [ (1, _293, _295) (-7, _295) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -8 })], outputs: [Simple(Witness(296))]",
    "EXPR [ (1, _293, _296) (-8, _296) (1, _297) -1 ]",
    "EXPR [ (1, _293, _297) (-8, _297) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -10 })], outputs: [Simple(Witness(298))]",
    "EXPR [ (1, _293, _298) (-10, _298) (1, _299) -1 ]",
    "EXPR [ (1, _293, _299) (-10, _299) 0 ]",
    "EXPR [ (1, _295, _297) (-1, _295) (-1, _297) (-1, _300) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _300, _299) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -11 })], outputs: [Simple(Witness(301))]",
    "EXPR [ (1, _293, _301) (-11, _301) (1, _302) -1 ]",
    "EXPR [ (1, _293, _302) (-11, _302) 0 ]",
    "EXPR [ (-1, _299, _300) (1, _300) (-1, _303) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _303, _302) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -16 })], outputs: [Simple(Witness(304))]",
    "EXPR [ (1, _293, _304) (-16, _304) (1, _305) -1 ]",
    "EXPR [ (1, _293, _305) (-16, _305) 0 ]",
    "EXPR [ (-1, _302, _303) (1, _303) (-1, _306) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _306, _305) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -17 })], outputs: [Simple(Witness(307))]",
    "EXPR [ (1, _293, _307) (-17, _307) (1, _308) -1 ]",
    "EXPR [ (1, _293, _308) (-17, _308) 0 ]",
    "EXPR [ (-1, _305, _306) (1, _306) (-1, _309) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _309, _308) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -18 })], outputs: [Simple(Witness(310))]",
    "EXPR [ (1, _293, _310) (-18, _310) (1, _311) -1 ]",
    "EXPR [ (1, _293, _311) (-18, _311) 0 ]",
    "EXPR [ (-1, _308, _309) (1, _309) (-1, _312) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _312, _311) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -19 })], outputs: [Simple(Witness(313))]",
    "EXPR [ (1, _293, _313) (-19, _313) (1, _314) -1 ]",
    "EXPR [ (1, _293, _314) (-19, _314) 0 ]",
    "EXPR [ (-1, _311, _312) (1, _312) (-1, _315) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _315, _314) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -20 })], outputs: [Simple(Witness(316))]",
    "EXPR [ (1, _293, _316) (-20, _316) (1, _317) -1 ]",
    "EXPR [ (1, _293, _317) (-20, _317) 0 ]",
    "EXPR [ (-1, _314, _315) (1, _315) (-1, _318) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _318, _317) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -21 })], outputs: [Simple(Witness(319))]",
    "EXPR [ (1, _293, _319) (-21, _319) (1, _320) -1 ]",
    "EXPR [ (1, _293, _320) (-21, _320) 0 ]",
    "EXPR [ (-1, _317, _318) (1, _318) (-1, _321) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _321, _320) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -22 })], outputs: [Simple(Witness(322))]",
    "EXPR [ (1, _293, _322) (-22, _322) (1, _323) -1 ]",
    "EXPR [ (1, _293, _323) (-22, _323) 0 ]",
    "EXPR [ (-1, _320, _321) (1, _321) (-1, _324) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _324, _323) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -23 })], outputs: [Simple(Witness(325))]",
    "EXPR [ (1, _293, _325) (-23, _325) (1, _326) -1 ]",
    "EXPR [ (1, _293, _326) (-23, _326) 0 ]",
    "EXPR [ (-1, _323, _324) (1, _324) (-1, _327) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _327, _326) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(293))], q_c: -24 })], outputs: [Simple(Witness(328))]",
    "EXPR [ (1, _293, _328) (-24, _328) (1, _329) -1 ]",
    "EXPR [ (1, _293, _329) (-24, _329) 0 ]",
    "EXPR [ (-1, _326, _327) (1, _327) (-1, _330) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _330, _329) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _329, _330) (1, _330) (-1, _331) 0 ]",
    "EXPR [ (1, _293, _331) (-25, _331) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _331) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "EXPR [ (-1, _332) 16 ]",
    "EXPR [ (-1, _333) 17 ]",
    "INIT (id: 2, len: 2, witnesses: [_332, _333])",
    "MEM (id: 2, read at: EXPR [ (1, _1) 0 ], value: EXPR [ (1, _334) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -7 })], outputs: [Simple(Witness(335))]",
    "EXPR [ (1, _334, _335) (-7, _335) (1, _336) -1 ]",
    "EXPR [ (1, _334, _336) (-7, _336) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -8 })], outputs: [Simple(Witness(337))]",
    "EXPR [ (1, _334, _337) (-8, _337) (1, _338) -1 ]",
    "EXPR [ (1, _334, _338) (-8, _338) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -10 })], outputs: [Simple(Witness(339))]",
    "EXPR [ (1, _334, _339) (-10, _339) (1, _340) -1 ]",
    "EXPR [ (1, _334, _340) (-10, _340) 0 ]",
    "EXPR [ (1, _336, _338) (-1, _336) (-1, _338) (-1, _341) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _341, _340) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -11 })], outputs: [Simple(Witness(342))]",
    "EXPR [ (1, _334, _342) (-11, _342) (1, _343) -1 ]",
    "EXPR [ (1, _334, _343) (-11, _343) 0 ]",
    "EXPR [ (-1, _340, _341) (1, _341) (-1, _344) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _344, _343) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -16 })], outputs: [Simple(Witness(345))]",
    "EXPR [ (1, _334, _345) (-16, _345) (1, _346) -1 ]",
    "EXPR [ (1, _334, _346) (-16, _346) 0 ]",
    "EXPR [ (-1, _343, _344) (1, _344) (-1, _347) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _347, _346) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -17 })], outputs: [Simple(Witness(348))]",
    "EXPR [ (1, _334, _348) (-17, _348) (1, _349) -1 ]",
    "EXPR [ (1, _334, _349) (-17, _349) 0 ]",
    "EXPR [ (-1, _346, _347) (1, _347) (-1, _350) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _350, _349) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -18 })], outputs: [Simple(Witness(351))]",
    "EXPR [ (1, _334, _351) (-18, _351) (1, _352) -1 ]",
    "EXPR [ (1, _334, _352) (-18, _352) 0 ]",
    "EXPR [ (-1, _349, _350) (1, _350) (-1, _353) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _353, _352) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -19 })], outputs: [Simple(Witness(354))]",
    "EXPR [ (1, _334, _354) (-19, _354) (1, _355) -1 ]",
    "EXPR [ (1, _334, _355) (-19, _355) 0 ]",
    "EXPR [ (-1, _352, _353) (1, _353) (-1, _356) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _356, _355) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -20 })], outputs: [Simple(Witness(357))]",
    "EXPR [ (1, _334, _357) (-20, _357) (1, _358) -1 ]",
    "EXPR [ (1, _334, _358) (-20, _358) 0 ]",
    "EXPR [ (-1, _355, _356) (1, _356) (-1, _359) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _359, _358) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -21 })], outputs: [Simple(Witness(360))]",
    "EXPR [ (1, _334, _360) (-21, _360) (1, _361) -1 ]",
    "EXPR [ (1, _334, _361) (-21, _361) 0 ]",
    "EXPR [ (-1, _358, _359) (1, _359) (-1, _362) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _362, _361) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -22 })], outputs: [Simple(Witness(363))]",
    "EXPR [ (1, _334, _363) (-22, _363) (1, _364) -1 ]",
    "EXPR [ (1, _334, _364) (-22, _364) 0 ]",
    "EXPR [ (-1, _361, _362) (1, _362) (-1, _365) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _365, _364) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -23 })], outputs: [Simple(Witness(366))]",
    "EXPR [ (1, _334, _366) (-23, _366) (1, _367) -1 ]",
    "EXPR [ (1, _334, _367) (-23, _367) 0 ]",
    "EXPR [ (-1, _364, _365) (1, _365) (-1, _368) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _368, _367) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(334))], q_c: -24 })], outputs: [Simple(Witness(369))]",
    "EXPR [ (1, _334, _369) (-24, _369) (1, _370) -1 ]",
    "EXPR [ (1, _334, _370) (-24, _370) 0 ]",
    "EXPR [ (-1, _367, _368) (1, _368) (-1, _371) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _371, _370) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _370, _371) (1, _371) (-1, _372) 0 ]",
    "EXPR [ (1, _334, _372) (-25, _372) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _372) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "MEM (id: 2, read at: EXPR [ (1, _0) 0 ], value: EXPR [ (1, _373) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -7 })], outputs: [Simple(Witness(374))]",
    "EXPR [ (1, _373, _374) (-7, _374) (1, _375) -1 ]",
    "EXPR [ (1, _373, _375) (-7, _375) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -8 })], outputs: [Simple(Witness(376))]",
    "EXPR [ (1, _373, _376) (-8, _376) (1, _377) -1 ]",
    "EXPR [ (1, _373, _377) (-8, _377) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -10 })], outputs: [Simple(Witness(378))]",
    "EXPR [ (1, _373, _378) (-10, _378) (1, _379) -1 ]",
    "EXPR [ (1, _373, _379) (-10, _379) 0 ]",
    "EXPR [ (1, _375, _377) (-1, _375) (-1, _377) (-1, _380) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _380, _379) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -11 })], outputs: [Simple(Witness(381))]",
    "EXPR [ (1, _373, _381) (-11, _381) (1, _382) -1 ]",
    "EXPR [ (1, _373, _382) (-11, _382) 0 ]",
    "EXPR [ (-1, _379, _380) (1, _380) (-1, _383) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _383, _382) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -16 })], outputs: [Simple(Witness(384))]",
    "EXPR [ (1, _373, _384) (-16, _384) (1, _385) -1 ]",
    "EXPR [ (1, _373, _385) (-16, _385) 0 ]",
    "EXPR [ (-1, _382, _383) (1, _383) (-1, _386) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _386, _385) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -17 })], outputs: [Simple(Witness(387))]",
    "EXPR [ (1, _373, _387) (-17, _387) (1, _388) -1 ]",
    "EXPR [ (1, _373, _388) (-17, _388) 0 ]",
    "EXPR [ (-1, _385, _386) (1, _386) (-1, _389) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _389, _388) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -18 })], outputs: [Simple(Witness(390))]",
    "EXPR [ (1, _373, _390) (-18, _390) (1, _391) -1 ]",
    "EXPR [ (1, _373, _391) (-18, _391) 0 ]",
    "EXPR [ (-1, _388, _389) (1, _389) (-1, _392) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _392, _391) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -19 })], outputs: [Simple(Witness(393))]",
    "EXPR [ (1, _373, _393) (-19, _393) (1, _394) -1 ]",
    "EXPR [ (1, _373, _394) (-19, _394) 0 ]",
    "EXPR [ (-1, _391, _392) (1, _392) (-1, _395) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _395, _394) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -20 })], outputs: [Simple(Witness(396))]",
    "EXPR [ (1, _373, _396) (-20, _396) (1, _397) -1 ]",
    "EXPR [ (1, _373, _397) (-20, _397) 0 ]",
    "EXPR [ (-1, _394, _395) (1, _395) (-1, _398) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _398, _397) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -21 })], outputs: [Simple(Witness(399))]",
    "EXPR [ (1, _373, _399) (-21, _399) (1, _400) -1 ]",
    "EXPR [ (1, _373, _400) (-21, _400) 0 ]",
    "EXPR [ (-1, _397, _398) (1, _398) (-1, _401) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _401, _400) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -22 })], outputs: [Simple(Witness(402))]",
    "EXPR [ (1, _373, _402) (-22, _402) (1, _403) -1 ]",
    "EXPR [ (1, _373, _403) (-22, _403) 0 ]",
    "EXPR [ (-1, _400, _401) (1, _401) (-1, _404) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _404, _403) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -23 })], outputs: [Simple(Witness(405))]",
    "EXPR [ (1, _373, _405) (-23, _405) (1, _406) -1 ]",
    "EXPR [ (1, _373, _406) (-23, _406) 0 ]",
    "EXPR [ (-1, _403, _404) (1, _404) (-1, _407) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _407, _406) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: -24 })], outputs: [Simple(Witness(408))]",
    "EXPR [ (1, _373, _408) (-24, _408) (1, _409) -1 ]",
    "EXPR [ (1, _373, _409) (-24, _409) 0 ]",
    "EXPR [ (-1, _406, _407) (1, _407) (-1, _410) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _410, _409) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _409, _410) (1, _410) (-1, _411) 0 ]",
    "EXPR [ (1, _373, _411) (-25, _411) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _411) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 4: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 4294967294 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(412)), Simple(Witness(413))]",
    "BLACKBOX::RANGE [(_413, 32)] []",
    "EXPR [ (1, _1) (-4294967296, _412) (-1, _413) 4294967294 ]",
    "EXPR [ (-1, _412) 0 ]",
    "EXPR [ (-1, _414) 10 ]",
    "EXPR [ (-1, _415) 11 ]",
    "INIT (id: 3, len: 2, witnesses: [_414, _415])",
    "MEM (id: 3, read at: EXPR [ (1, _1) 0 ], value: EXPR [ (1, _416) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -7 })], outputs: [Simple(Witness(417))]",
    "EXPR [ (1, _416, _417) (-7, _417) (1, _418) -1 ]",
    "EXPR [ (1, _416, _418) (-7, _418) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -8 })], outputs: [Simple(Witness(419))]",
    "EXPR [ (1, _416, _419) (-8, _419) (1, _420) -1 ]",
    "EXPR [ (1, _416, _420) (-8, _420) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -10 })], outputs: [Simple(Witness(421))]",
    "EXPR [ (1, _416, _421) (-10, _421) (1, _422) -1 ]",
    "EXPR [ (1, _416, _422) (-10, _422) 0 ]",
    "EXPR [ (1, _418, _420) (-1, _418) (-1, _420) (-1, _423) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _423, _422) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -11 })], outputs: [Simple(Witness(424))]",
    "EXPR [ (1, _416, _424) (-11, _424) (1, _425) -1 ]",
    "EXPR [ (1, _416, _425) (-11, _425) 0 ]",
    "EXPR [ (-1, _422, _423) (1, _423) (-1, _426) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _426, _425) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -16 })], outputs: [Simple(Witness(427))]",
    "EXPR [ (1, _416, _427) (-16, _427) (1, _428) -1 ]",
    "EXPR [ (1, _416, _428) (-16, _428) 0 ]",
    "EXPR [ (-1, _425, _426) (1, _426) (-1, _429) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _429, _428) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -17 })], outputs: [Simple(Witness(430))]",
    "EXPR [ (1, _416, _430) (-17, _430) (1, _431) -1 ]",
    "EXPR [ (1, _416, _431) (-17, _431) 0 ]",
    "EXPR [ (-1, _428, _429) (1, _429) (-1, _432) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _432, _431) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -18 })], outputs: [Simple(Witness(433))]",
    "EXPR [ (1, _416, _433) (-18, _433) (1, _434) -1 ]",
    "EXPR [ (1, _416, _434) (-18, _434) 0 ]",
    "EXPR [ (-1, _431, _432) (1, _432) (-1, _435) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _435, _434) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -19 })], outputs: [Simple(Witness(436))]",
    "EXPR [ (1, _416, _436) (-19, _436) (1, _437) -1 ]",
    "EXPR [ (1, _416, _437) (-19, _437) 0 ]",
    "EXPR [ (-1, _434, _435) (1, _435) (-1, _438) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _438, _437) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -20 })], outputs: [Simple(Witness(439))]",
    "EXPR [ (1, _416, _439) (-20, _439) (1, _440) -1 ]",
    "EXPR [ (1, _416, _440) (-20, _440) 0 ]",
    "EXPR [ (-1, _437, _438) (1, _438) (-1, _441) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _441, _440) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -21 })], outputs: [Simple(Witness(442))]",
    "EXPR [ (1, _416, _442) (-21, _442) (1, _443) -1 ]",
    "EXPR [ (1, _416, _443) (-21, _443) 0 ]",
    "EXPR [ (-1, _440, _441) (1, _441) (-1, _444) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _444, _443) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -22 })], outputs: [Simple(Witness(445))]",
    "EXPR [ (1, _416, _445) (-22, _445) (1, _446) -1 ]",
    "EXPR [ (1, _416, _446) (-22, _446) 0 ]",
    "EXPR [ (-1, _443, _444) (1, _444) (-1, _447) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _447, _446) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -23 })], outputs: [Simple(Witness(448))]",
    "EXPR [ (1, _416, _448) (-23, _448) (1, _449) -1 ]",
    "EXPR [ (1, _416, _449) (-23, _449) 0 ]",
    "EXPR [ (-1, _446, _447) (1, _447) (-1, _450) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _450, _449) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(416))], q_c: -24 })], outputs: [Simple(Witness(451))]",
    "EXPR [ (1, _416, _451) (-24, _451) (1, _452) -1 ]",
    "EXPR [ (1, _416, _452) (-24, _452) 0 ]",
    "EXPR [ (-1, _449, _450) (1, _450) (-1, _453) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _453, _452) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _452, _453) (1, _453) (-1, _454) 0 ]",
    "EXPR [ (1, _416, _454) (-25, _454) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _454) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 4: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 4294967294 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(455)), Simple(Witness(456))]",
    "BLACKBOX::RANGE [(_456, 32)] []",
    "EXPR [ (1, _0) (-4294967296, _455) (-1, _456) 4294967294 ]",
    "EXPR [ (-1, _455) 0 ]",
    "MEM (id: 3, read at: EXPR [ (1, _0) 0 ], value: EXPR [ (1, _457) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -7 })], outputs: [Simple(Witness(458))]",
    "EXPR [ (1, _457, _458) (-7, _458) (1, _459) -1 ]",
    "EXPR [ (1, _457, _459) (-7, _459) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -8 })], outputs: [Simple(Witness(460))]",
    "EXPR [ (1, _457, _460) (-8, _460) (1, _461) -1 ]",
    "EXPR [ (1, _457, _461) (-8, _461) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -10 })], outputs: [Simple(Witness(462))]",
    "EXPR [ (1, _457, _462) (-10, _462) (1, _463) -1 ]",
    "EXPR [ (1, _457, _463) (-10, _463) 0 ]",
    "EXPR [ (1, _459, _461) (-1, _459) (-1, _461) (-1, _464) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _464, _463) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -11 })], outputs: [Simple(Witness(465))]",
    "EXPR [ (1, _457, _465) (-11, _465) (1, _466) -1 ]",
    "EXPR [ (1, _457, _466) (-11, _466) 0 ]",
    "EXPR [ (-1, _463, _464) (1, _464) (-1, _467) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _467, _466) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -16 })], outputs: [Simple(Witness(468))]",
    "EXPR [ (1, _457, _468) (-16, _468) (1, _469) -1 ]",
    "EXPR [ (1, _457, _469) (-16, _469) 0 ]",
    "EXPR [ (-1, _466, _467) (1, _467) (-1, _470) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _470, _469) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -17 })], outputs: [Simple(Witness(471))]",
    "EXPR [ (1, _457, _471) (-17, _471) (1, _472) -1 ]",
    "EXPR [ (1, _457, _472) (-17, _472) 0 ]",
    "EXPR [ (-1, _469, _470) (1, _470) (-1, _473) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _473, _472) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -18 })], outputs: [Simple(Witness(474))]",
    "EXPR [ (1, _457, _474) (-18, _474) (1, _475) -1 ]",
    "EXPR [ (1, _457, _475) (-18, _475) 0 ]",
    "EXPR [ (-1, _472, _473) (1, _473) (-1, _476) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _476, _475) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -19 })], outputs: [Simple(Witness(477))]",
    "EXPR [ (1, _457, _477) (-19, _477) (1, _478) -1 ]",
    "EXPR [ (1, _457, _478) (-19, _478) 0 ]",
    "EXPR [ (-1, _475, _476) (1, _476) (-1, _479) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _479, _478) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -20 })], outputs: [Simple(Witness(480))]",
    "EXPR [ (1, _457, _480) (-20, _480) (1, _481) -1 ]",
    "EXPR [ (1, _457, _481) (-20, _481) 0 ]",
    "EXPR [ (-1, _478, _479) (1, _479) (-1, _482) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _482, _481) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -21 })], outputs: [Simple(Witness(483))]",
    "EXPR [ (1, _457, _483) (-21, _483) (1, _484) -1 ]",
    "EXPR [ (1, _457, _484) (-21, _484) 0 ]",
    "EXPR [ (-1, _481, _482) (1, _482) (-1, _485) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _485, _484) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -22 })], outputs: [Simple(Witness(486))]",
    "EXPR [ (1, _457, _486) (-22, _486) (1, _487) -1 ]",
    "EXPR [ (1, _457, _487) (-22, _487) 0 ]",
    "EXPR [ (-1, _484, _485) (1, _485) (-1, _488) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _488, _487) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -23 })], outputs: [Simple(Witness(489))]",
    "EXPR [ (1, _457, _489) (-23, _489) (1, _490) -1 ]",
    "EXPR [ (1, _457, _490) (-23, _490) 0 ]",
    "EXPR [ (-1, _487, _488) (1, _488) (-1, _491) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _491, _490) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(457))], q_c: -24 })], outputs: [Simple(Witness(492))]",
    "EXPR [ (1, _457, _492) (-24, _492) (1, _493) -1 ]",
    "EXPR [ (1, _457, _493) (-24, _493) 0 ]",
    "EXPR [ (-1, _490, _491) (1, _491) (-1, _494) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _494, _493) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _493, _494) (1, _494) (-1, _495) 0 ]",
    "EXPR [ (1, _457, _495) (-25, _495) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _495) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 2: inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 6 })], outputs: []",
    "BRILLIG CALL func 2: inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 6 })], outputs: []",
    "EXPR [ (-1, _496) 7 ]",
    "INIT (id: 4, len: 1, witnesses: [_496])",
    "MEM (id: 4, read at: EXPR [ (1, _1) 0 ], value: EXPR [ (1, _497) 0 ]) ",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -7 })], outputs: [Simple(Witness(498))]",
    "EXPR [ (1, _497, _498) (-7, _498) (1, _499) -1 ]",
    "EXPR [ (1, _497, _499) (-7, _499) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -8 })], outputs: [Simple(Witness(500))]",
    "EXPR [ (1, _497, _500) (-8, _500) (1, _501) -1 ]",
    "EXPR [ (1, _497, _501) (-8, _501) 0 ]",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -10 })], outputs: [Simple(Witness(502))]",
    "EXPR [ (1, _497, _502) (-10, _502) (1, _503) -1 ]",
    "EXPR [ (1, _497, _503) (-10, _503) 0 ]",
    "EXPR [ (1, _499, _501) (-1, _499) (-1, _501) (-1, _504) 1 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _504, _503) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -11 })], outputs: [Simple(Witness(505))]",
    "EXPR [ (1, _497, _505) (-11, _505) (1, _506) -1 ]",
    "EXPR [ (1, _497, _506) (-11, _506) 0 ]",
    "EXPR [ (-1, _503, _504) (1, _504) (-1, _507) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _507, _506) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -16 })], outputs: [Simple(Witness(508))]",
    "EXPR [ (1, _497, _508) (-16, _508) (1, _509) -1 ]",
    "EXPR [ (1, _497, _509) (-16, _509) 0 ]",
    "EXPR [ (-1, _506, _507) (1, _507) (-1, _510) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _510, _509) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -17 })], outputs: [Simple(Witness(511))]",
    "EXPR [ (1, _497, _511) (-17, _511) (1, _512) -1 ]",
    "EXPR [ (1, _497, _512) (-17, _512) 0 ]",
    "EXPR [ (-1, _509, _510) (1, _510) (-1, _513) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _513, _512) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -18 })], outputs: [Simple(Witness(514))]",
    "EXPR [ (1, _497, _514) (-18, _514) (1, _515) -1 ]",
    "EXPR [ (1, _497, _515) (-18, _515) 0 ]",
    "EXPR [ (-1, _512, _513) (1, _513) (-1, _516) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _516, _515) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -19 })], outputs: [Simple(Witness(517))]",
    "EXPR [ (1, _497, _517) (-19, _517) (1, _518) -1 ]",
    "EXPR [ (1, _497, _518) (-19, _518) 0 ]",
    "EXPR [ (-1, _515, _516) (1, _516) (-1, _519) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _519, _518) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -20 })], outputs: [Simple(Witness(520))]",
    "EXPR [ (1, _497, _520) (-20, _520) (1, _521) -1 ]",
    "EXPR [ (1, _497, _521) (-20, _521) 0 ]",
    "EXPR [ (-1, _518, _519) (1, _519) (-1, _522) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _522, _521) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -21 })], outputs: [Simple(Witness(523))]",
    "EXPR [ (1, _497, _523) (-21, _523) (1, _524) -1 ]",
    "EXPR [ (1, _497, _524) (-21, _524) 0 ]",
    "EXPR [ (-1, _521, _522) (1, _522) (-1, _525) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _525, _524) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -22 })], outputs: [Simple(Witness(526))]",
    "EXPR [ (1, _497, _526) (-22, _526) (1, _527) -1 ]",
    "EXPR [ (1, _497, _527) (-22, _527) 0 ]",
    "EXPR [ (-1, _524, _525) (1, _525) (-1, _528) 0 ]",
    "BRILLIG CALL func 0: PREDICATE = EXPR [ (1, _528, _527) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 104 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -23 })], outputs: [Simple(Witness(529))]",
    "EXPR [ (1, _497, _529) (-23, _529) (1, _530) -1 ]",
    "EXPR [ (1, _497, _530) (-23, _530) 0 ]",
    "EXPR [ (-1, _527, _528) (1, _528) (-1, _531) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _531, _530) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 121 }, Expression { mul_terms: [], linear_combinations: [], q_c: 101 }])], outputs: []",
    "BRILLIG CALL func 3: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: -24 })], outputs: [Simple(Witness(532))]",
    "EXPR [ (1, _497, _532) (-24, _532) (1, _533) -1 ]",
    "EXPR [ (1, _497, _533) (-24, _533) 0 ]",
    "EXPR [ (-1, _530, _531) (1, _531) (-1, _534) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _534, _533) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 119 }, Expression { mul_terms: [], linear_combinations: [], q_c: 111 }, Expression { mul_terms: [], linear_combinations: [], q_c: 119 }])], outputs: []",
    "EXPR [ (-1, _533, _534) (1, _534) (-1, _535) 0 ]",
    "EXPR [ (1, _497, _535) (-25, _535) 0 ]",
    "BRILLIG CALL func 1: PREDICATE = EXPR [ (1, _535) 0 ]",
    "inputs: [Single(Expression { mul_terms: [], linear_combinations: [], q_c: 1 }), Array([Expression { mul_terms: [], linear_combinations: [], q_c: 98 }, Expression { mul_terms: [], linear_combinations: [], q_c: 105 }, Expression { mul_terms: [], linear_combinations: [], q_c: 103 }])], outputs: []",
    "EXPR [ (1, _1) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32839 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U1) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U8) }, Cast { destination: Direct(32838), source: Direct(32838), bit_size: Integer(U8) }, Mov { destination: Relative(1), source: Direct(32836) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 2 }, Mov { destination: Relative(3), source: Direct(1) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(5) }, IndirectConst { destination_pointer: Relative(3), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(5) }, Mov { destination: Direct(32773), source: Relative(4) }, Call { location: 27 }, Mov { destination: Relative(2), source: Relative(3) }, Call { location: 38 }, Call { location: 39 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32839 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 37 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 30 }, Return, Return, Call { location: 123 }, Const { destination: Relative(3), bit_size: Integer(U8), value: 123 }, Const { destination: Relative(4), bit_size: Integer(U8), value: 34 }, Const { destination: Relative(5), bit_size: Integer(U8), value: 107 }, Const { destination: Relative(6), bit_size: Integer(U8), value: 105 }, Const { destination: Relative(7), bit_size: Integer(U8), value: 110 }, Const { destination: Relative(8), bit_size: Integer(U8), value: 100 }, Const { destination: Relative(9), bit_size: Integer(U8), value: 58 }, Const { destination: Relative(10), bit_size: Integer(U8), value: 115 }, Const { destination: Relative(11), bit_size: Integer(U8), value: 116 }, Const { destination: Relative(12), bit_size: Integer(U8), value: 114 }, Const { destination: Relative(13), bit_size: Integer(U8), value: 103 }, Const { destination: Relative(14), bit_size: Integer(U8), value: 44 }, Const { destination: Relative(15), bit_size: Integer(U8), value: 108 }, Const { destination: Relative(16), bit_size: Integer(U8), value: 101 }, Const { destination: Relative(17), bit_size: Integer(U8), value: 104 }, Const { destination: Relative(18), bit_size: Integer(U8), value: 50 }, Const { destination: Relative(19), bit_size: Integer(U8), value: 125 }, Mov { destination: Relative(20), source: Direct(1) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 29 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(21) }, IndirectConst { destination_pointer: Relative(20), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Mov { destination: Relative(22), source: Relative(21) }, Store { destination_pointer: Relative(22), source: Relative(3) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(5) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(6) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(7) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(8) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(9) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(10) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(11) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(12) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(6) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(7) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(13) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(14) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(15) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(16) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(7) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(13) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(11) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(17) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(9) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(18) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(19) }, Const { destination: Relative(3), bit_size: Integer(U1), value: 0 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(1)), HeapArray(HeapArray { pointer: Relative(4), size: 2 }), HeapArray(HeapArray { pointer: Relative(5), size: 28 }), MemoryAddress(Relative(3))], input_value_types: [Simple(Integer(U1)), Array { value_types: [Simple(Integer(U8))], size: 2 }, Array { value_types: [Simple(Integer(U8))], size: 28 }, Simple(Integer(U1))] }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 128 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]",
    "unconstrained func 1",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32840 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 4 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U1) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U8) }, Cast { destination: Direct(32838), source: Direct(32838), bit_size: Integer(U8) }, Cast { destination: Direct(32839), source: Direct(32839), bit_size: Integer(U8) }, Mov { destination: Relative(1), source: Direct(32836) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 3 }, Mov { destination: Relative(3), source: Direct(1) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(5) }, IndirectConst { destination_pointer: Relative(3), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(5) }, Mov { destination: Direct(32773), source: Relative(4) }, Call { location: 28 }, Mov { destination: Relative(2), source: Relative(3) }, Call { location: 39 }, Call { location: 40 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32840 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 38 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 31 }, Return, Return, Call { location: 124 }, Const { destination: Relative(3), bit_size: Integer(U8), value: 123 }, Const { destination: Relative(4), bit_size: Integer(U8), value: 34 }, Const { destination: Relative(5), bit_size: Integer(U8), value: 107 }, Const { destination: Relative(6), bit_size: Integer(U8), value: 105 }, Const { destination: Relative(7), bit_size: Integer(U8), value: 110 }, Const { destination: Relative(8), bit_size: Integer(U8), value: 100 }, Const { destination: Relative(9), bit_size: Integer(U8), value: 58 }, Const { destination: Relative(10), bit_size: Integer(U8), value: 115 }, Const { destination: Relative(11), bit_size: Integer(U8), value: 116 }, Const { destination: Relative(12), bit_size: Integer(U8), value: 114 }, Const { destination: Relative(13), bit_size: Integer(U8), value: 103 }, Const { destination: Relative(14), bit_size: Integer(U8), value: 44 }, Const { destination: Relative(15), bit_size: Integer(U8), value: 108 }, Const { destination: Relative(16), bit_size: Integer(U8), value: 101 }, Const { destination: Relative(17), bit_size: Integer(U8), value: 104 }, Const { destination: Relative(18), bit_size: Integer(U8), value: 51 }, Const { destination: Relative(19), bit_size: Integer(U8), value: 125 }, Mov { destination: Relative(20), source: Direct(1) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 29 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(21) }, IndirectConst { destination_pointer: Relative(20), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Mov { destination: Relative(22), source: Relative(21) }, Store { destination_pointer: Relative(22), source: Relative(3) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(5) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(6) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(7) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(8) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(9) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(10) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(11) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(12) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(6) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(7) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(13) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(14) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(15) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(16) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(7) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(13) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(11) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(17) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(4) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(9) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(18) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(19) }, Const { destination: Relative(3), bit_size: Integer(U1), value: 0 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(1)), HeapArray(HeapArray { pointer: Relative(4), size: 3 }), HeapArray(HeapArray { pointer: Relative(5), size: 28 }), MemoryAddress(Relative(3))], input_value_types: [Simple(Integer(U1)), Array { value_types: [Simple(Integer(U8))], size: 3 }, Array { value_types: [Simple(Integer(U8))], size: 28 }, Simple(Integer(U1))] }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 129 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]",
    "unconstrained func 2",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U1) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U8) }, Mov { destination: Relative(1), source: Direct(32836) }, Mov { destination: Relative(2), source: Direct(32837) }, Call { location: 15 }, Call { location: 16 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 116 }, Const { destination: Relative(3), bit_size: Integer(U8), value: 123 }, Const { destination: Relative(4), bit_size: Integer(U8), value: 34 }, Const { destination: Relative(5), bit_size: Integer(U8), value: 107 }, Const { destination: Relative(6), bit_size: Integer(U8), value: 105 }, Const { destination: Relative(7), bit_size: Integer(U8), value: 110 }, Const { destination: Relative(8), bit_size: Integer(U8), value: 100 }, Const { destination: Relative(9), bit_size: Integer(U8), value: 58 }, Const { destination: Relative(10), bit_size: Integer(U8), value: 117 }, Const { destination: Relative(11), bit_size: Integer(U8), value: 115 }, Const { destination: Relative(12), bit_size: Integer(U8), value: 103 }, Const { destination: Relative(13), bit_size: Integer(U8), value: 101 }, Const { destination: Relative(14), bit_size: Integer(U8), value: 116 }, Const { destination: Relative(15), bit_size: Integer(U8), value: 114 }, Const { destination: Relative(16), bit_size: Integer(U8), value: 44 }, Const { destination: Relative(17), bit_size: Integer(U8), value: 119 }, Const { destination: Relative(18), bit_size: Integer(U8), value: 104 }, Const { destination: Relative(19), bit_size: Integer(U8), value: 56 }, Const { destination: Relative(20), bit_size: Integer(U8), value: 125 }, Mov { destination: Relative(21), source: Direct(1) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 37 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(22) }, IndirectConst { destination_pointer: Relative(21), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Mov { destination: Relative(23), source: Relative(22) }, Store { destination_pointer: Relative(23), source: Relative(3) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(4) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(5) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(6) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(7) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(8) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(4) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(9) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(4) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(10) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(7) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(11) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(6) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(12) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(7) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(13) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(8) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(6) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(7) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(14) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(13) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(12) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(13) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(15) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(4) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(16) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(4) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(17) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(6) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(8) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(14) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(18) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(4) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(9) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(19) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(20) }, Const { destination: Relative(3), bit_size: Integer(U1), value: 0 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, ForeignCall { function: \"print\", destinations: [], destination_value_types: [], inputs: [MemoryAddress(Relative(1)), MemoryAddress(Relative(2)), HeapArray(HeapArray { pointer: Relative(4), size: 36 }), MemoryAddress(Relative(3))], input_value_types: [Simple(Integer(U1)), Simple(Integer(U8)), Array { value_types: [Simple(Integer(U8))], size: 36 }, Simple(Integer(U1))] }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 121 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]",
    "unconstrained func 3",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]",
    "unconstrained func 4",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "7Z3Rjhw3zoXfxde5KJESKeVVgiBwEm9gwHACx17gh5F3/5tk8XiBRddwp6K73EyddNznU8+QfdSl6tLXN7+++/nLbz+9//iv3/988/0PX9/8/On9hw/vf/vpw++/vP38/vePj0e/vjnsR3/8bN+96S0OFAeOQ4/DiIPEQeMw47D8MMJlhMsIlxEuI1xGuIxwGeEywmWEi4SLhIuEi4SLhIuEi4SLhIuEi4SLhouGi4aLhouGi4aLhouGi4aLhssMlxkuM1xmuMxwmeEyw2WGywyXGS4rXFa4rHBZ4bLCZYXLCpcVLitcVri04ziP7TzSeeTz2M/jOI9yHvU8zvN4+rXTr51+7fRrp187/drp106/dvq1hx/ZccWRjvP48KO/HsIr65+S+qek/qeSas9Kyo4UpUVWWvmk8zkxBIoRUAyAgk+Bp6BTwCnYFC4ULhQuHC4cLhwuHC4cLhwuHC4cLhwuHC7/vKv+0wLeAnS2AJ0tQH89ajhT+KfPn969s3r+j1h+hPUfbz+9+/j5zfcfv3z48N2bf7/98MX/0Z9/vP3ox89vPz3+7/Hdm3cff30cH4b/ev/hnam/vvv27OP5U+dq55MXMZ5OVH2+dj2fr/N4xfPbWOfzm3Q8f5TH37jj+ePZ8/vF89vEAOigVzlQ/v4f8nVjaOubw3zmoDf/Cnr1V6A0aKMfz0awbtbR1Qg6c46gd3rF76CNb6U0lJ85NNr5IoTwIvRpKbS+cwgLDTGOp7XUZOMQai3V5sYh0IF6JmrPhkDHziH0gSGM9ZqCJhI4PG9K4p0vQr4N4XlB086eOjp66hjPh6A7hyB4hz/0aUrRzrfHQ9FTx3r65sZt5xDWREq1p23Nd8vxKuw1n9/W07c2Hrez+tqiFNZ8P2357hsk30/LfuwcQy0uO20dQykve985huIcVHaOoZaYfWtN1gJvbK3JWmyPrTVZi7yxtSZrmTe21mQt9MbWmqylnmz8iE2UvwXi13xEpqPj+U+LSfh2al5blFJTxu3UlLsVeT2GUmrK3DmGWmrqsXUMpdRU2jmGWmpq3zmGWmrq1pqspaZurclaas6tNVlLzbm1JmupObfWZC0159aarKXmnBtTE2cuSNtrUrM3PP/pC1jtdmpeW5RSc/H9M7t3K/J6DKXUXLJzDLXUXHPrGGrnZo9j5yCKZ2cP2jmIWm62Y2tZ1oLz8Z6+dRCl5HwsMO4cRC06H6uaWwdRys7WthZmLTxb21qYtfRstxdxruIPvwduz1vjag2nuhh26UHy7X1C6bUelTWMRu12irbbCyEvjKK4wtm3jqL4dyXZO4paltLcOopimPKxdRTFNOW91VmMU95bncU85b3VWQxU3ludxUTte6uzGKl9b3UWM/X2Qs/F75JbNgj3i9+D3H/vvfQoZuoLHqVM7et+pt5e7nlhFLVMvb3gcz2K4t/19pLPC6OoZertRZ/rURQz9fayz/Uoipkqe6uzmKmytzqLmSp7q7OYqbK3OouZKnurs5ipurc6i5l6exnoKlM7PqfO5/1xtQhUfe+99Chm6gsepUzV+1cWtduLQS+Mopapt5eDrkdR/LveXhB6YRS1TL29JHQ9iuolubJ1FMVMnXurs5ipa291FjN17a3OYqauvdVZzNS1tzqLmbr2VmctU+nYeMERz2yQ3vT5COj2e++1Ry1TX/IoXb9+3L/uiG4vE70wilKm0u11outRFP+utxeKXhhFKVPp9krR9ShqmUq3l4quR1H8pkvbW53Fr6q0vdVZy1SivdVZ/MIK7a3O4ndWaG911jKVaG91FjOVNl6O1Cnfsvp4nql895u2lw6NB2qCLyrz2gMfuB8ez997+f41SXR7peiFUdQS9fZK0fUoiol6e6XohVHUEvX2StH1KIqJenul6HoUxUTte6uzmKh9b3UWE7Xvrc5ioo691VlM1LG3OouJOvZWZzFRx8YrlLrkDQP6uhjBvJ+H1x61PJTjfh7K3W/3vjCKWh4Kbx1FMQ+vrj7/O0ZRy0PRraMo5qGsraMo5qHurc5iHure6izmoe6tzuotEfZWZzEPdW91FvNw7q3OYh7OjTdH6BjC4OddOi8qU1qWlVyc952XZ+a+3Y6p83qtR+VOQHS1SlRN1Hm7Nq9HUUvU1baOopioi/eOopaoa2wdRTFRl24dRTFR197qrCUqH3urs5aofOytzlqi8rG3OmuJysfe6izeaujYW53Fuw21ti9RB2ebDpHnI+CbiXrpUEzUlzwqicpXa0TVexa1u7X5wihKicptbR1FLVGZ2t5RlBKVb98f7noUtURlGltHUUtUpr3VWUxU2ludxUTlvdVZTFTeW53FROW91VlMVN5bndX79619iSozn6/H899D35jpiijUi97oGz+nT8wq5njNjSn+8/nP+6r/DVneb9dj/xuyvK+toyhm+Wh7R1HL8sFbR1HM8jG2jqKY5WNvdRazfOytzmKWy97qLGa57K3OYpbL3uosZrnsrc5ilsvGLF+aRbFUX5FjS/Itb83nr+Dqu0PVHLu9JvTCKGo5dntN6HoUxRy7vSb0wihqOXZ7Teh6FMUcu70mdD2KYo7NvdVZzLG5tzqLOTb3Vmcxx+be6izm2NpbncUcW3urs5hjr1sV+vHxX29/ef/pv7a6Y9+WTHwHqcdP9p/dfw7/Kf5T/X74038u/2nb+tihxYHiwHHocRhxkDjY/kBHbE+lsT2VxvZUGttT6bk9Fcf+VBr7U2nsT6WxP5We+1ON2KBKY4MqjQ2qNDao0nODKo0dqjR2qNLYoUpjhyo9d6hasUWVxhZVGltUaWxRpbFFlZ267OHTw6eHTw8f26PKrmju4dPDZ4TPCB/bpMrefEb4jPAZ4TPCx3apssuuR/iM8JHwkfCxbarskmQJHwkfCR8JH9unym5vI+Ej4WMbVdnpc9upyi7jta2q7NOz7VXlx34ex3mU86jncZ7HFUfbssqP7Tya34pdq/y/T795+s3Tz3auspMa8/Sbp986/dbpZ9tX2amHdfqt02+dfuv0sz2s7A11nX7r9PNtrEK0FGap505W8UhPMVJICvNd53ZW8Ug6t3Ru6WzVb5+KfU+reCSdWzq3dLY+sA+vvrdbPJLOlM6UztYQ9hmzUTpTOlM6UzpbZwwX6UzpzOnM6WwtYrO1xunM6Wx9Yh+jmnWKzaWa9YrNUZs1i32qaNYuLqxhQrQUlIJT9BQjhaTQFObs7x3pPNJ5pPNIZ+sjm9C3kc4jnUc6j3T2hrKXM9JZ0lnSWdLZO8v+OpLOks6SzpLO3mIu0lnTWdNZ09k6Tf19MJ01nTWdNZ2t3SyVmqbzTOeZzjOdredsAtdmOs90nuk809kaz+ZZbabzSueVziudrfumi3Re6bzSeaWzteD0d/bTmY4jRbNwMvFwtm8Tk/WgfaGXrActWcl6MISk0BQzxTqF9WCIloJScApzNnpL55bOLZ1bOlsPLk+gdKZ0pnSmdLYetCsSiNKZ0pnSmdLZd1C0KweI05rTmtOa09o3UzxcpTenN6c3p7fvq2gr8dTTu6d3T++e3r7F4uG5mt49vXt69/T23RZtZZtGeo/0Huk90ts3XrQVaBrpPdJ7pPdIb9+D0YNe0lvSW9Jb0tu3Y/TIl/SW9PZdGZvPDmzfQQt08r0ZXfn2jKEaFPkHElMM1aEGlEAplDFsQkC+c6Mr37wxVIMiKIbqUANKoBTKGfbaJhgLjAXGAsP3eLRVRVpgLDAWGAsM3/KRfPaUDD4OqAZFUM6w6dLR8diAEiiFMga7AqOB0cBoYPimqLYowQ2MBkYDo4HhW53aihU3MAgMAoPA8J1P2aeIYBAYBAaB4Ruh2tSGCQwGg8FgMHxf1O4KDAaDwWAwfJtUm+4wg9HB8P1SbZLDvmVq9xktQ3WoAWUM+yYK+w6qNpFh30Q11ErlW6mGalAExVAdakAJlM/IbaQDjAGGgCFg+HarNgliAUPAEDAEDO9zmwmxgCFgKBgKhvf58Ik+GAqGgqFgeJ8PV2AoGBOMCYb3uU2VeIIxwZhgTDC8z+3sME8wJhgLjAWG97mlKC8wFhgLjAWG97n4ZxowVjL6cUA1KGe4YjzWoQaUQBnDZlX9mHgMDO9zm0Z173ObI3Xv81AM1aGMYZtDdO9z9c9gCjWhVirv81ANiqAYqkMNKGfYSAkMAoPAYDC8z6d/FASDwWAwGAzvc5tpdQaDwWAwOhje5zbd6h2MDkYHo4PhfT5dgdHB6GAMMLzPbSrWBxgDjAHGAMP73E4s9AHGAGOAIWB4n1s6dwFDwBAwBAzvc5urdQFDwBAwFAzv8+UKDAVDwVAwvM9t1tYVDAXD+pxsltatz8lmYN36/FQExVD9Tewn1K3P/VvX3fr8VAo1oVaqdUA1KIJiqA7lDBvpAmOBscBYyRiHM5aphscIiqE6lDFsDjcOwWMKNaHAsD4nm8eNBkYDo4HRwGjOcAVGA6OB0cDwLc9thjcIDAKDwCAwyBn2ygkMAoPAIDCsz8mydjAYDAaDwWBYn5PN0gaDwWAwGAxGd4YrMDoYHYwORneGvfIORgfD+tz3wxrW52SnfIb1+akaFEEZw+ZXw/r8VANKoBRqQq1UckA1KIJyho1PwBAwBAwBQ5xhr1LAUDAUDAVDnWGvXMFQMBQMBcP63HcxGQrGBGOCMcHwPu+uwJhgTDAmGN7nNksbE4wFxgJjgeF9bvO1scBYYCwwFhje55awYyVDjgOqQRGUMWxuJkfHYwNKoBTKGMMVGA2MBkYDw/vc5mbSwGhgeJ/bPEy8z21+Jd7ndu5fvM9deZ+HalAExVAdakAJlEI5w06EEhgMBoPBYHif22kuYTAYDAaDwfA+t/sqCYPRwehgdDC8z+2OmNLB6GB0MDoY3ufqCowBxgBjgOF9bmsNMsAYYAwwBhje53ZHRhlgCBgChoDhfW7zNREwBAwBQ8DwPre7LYqAoWAoGAqG9/l0BYaCoWAoGN7ndhdDUTAmGN7ndndB8T63W3uJ93moDjWgjGHzK/E+DzWhVirvc7uGX7zPQxEUQ3WoASVQCjWh1qnU+9zOnenR8BhBMVSHMoadZNND8JhCTSgwvM+XLxOA0cBoYDQwvM/tbnTawGhgNDAaGN7nyxUYBAaBQWD4mW67y5sSGAQGgUFg+OluuxuaMhgMBoPBYLAz7JUzGAwGg8FgdGfYK+9gdDA6GB2M7gxXYHQwOhgdDOtztkUzHWAMMKzP2b5WodbnbHfXUuvzUwmUQtnCgM2+1Prcr5FVOaAaFEExVIcaUAKlUBPKGTZSBUPBUDAUDF+FsjNtqmAoGAqGguHrUXb/KJ1gTDAmGBMMX5myBTudYEwwJhgTDF+jsuU7XWAsMBYYCwxfrbLFPF1gLDAWGAsMX7eypb15JGMeDYqgGMoYNq+bx8BjAqVQE8oZ3RbtwGhgNDAaGL6Mxa7AaGA0MBoYvpZld+iZBAaBYX3Oduec6etZdg3C9AUtu4PM9D63GdT0Ja1QCmWM7i4rlfd5qAZFUAzVoQaUQCmUM2z0DEYHo4PRwbA+93tnzA5GB6OD0cGwPme7M8rsYAwwBhgDDO9zu4vJHGAMMAYYAwzv8+EKDAFDwBAwvM/t7h5TwBAwBAwBw/vccnUKGAqGgqFgeJ/bjGwqGAqGgqFgeJ/bjGwqGBOMCcYEw/tcXIExwZhgTDC8z21GNicYC4xYj7ZX6X3u+yf+++2n929//vDuzzfff7WrLL58/CUvqXj85+f/+yP/z8+f3n/48P63n/749Psv73798umdXX6RV158tYstfnh8vGP9MS6n+MFO+z8Wb+1ijYZ/ML/j+e0f9Mc/WPYPyP5BPPhorceJ4h//sss8/h8=",
  "file_map": {
    "22": {
      "source": "pub mod hash;\npub mod aes128;\npub mod array;\npub mod slice;\npub mod ecdsa_secp256k1;\npub mod ecdsa_secp256r1;\npub mod embedded_curve_ops;\npub mod field;\npub mod collections;\npub mod compat;\npub mod convert;\npub mod option;\npub mod string;\npub mod test;\npub mod cmp;\npub mod ops;\npub mod default;\npub mod prelude;\npub mod runtime;\npub mod meta;\npub mod append;\npub mod mem;\npub mod panic;\npub mod hint;\n\nuse convert::AsPrimitive;\n\n// Oracle calls are required to be wrapped in an unconstrained function\n// Thus, the only argument to the `println` oracle is expected to always be an ident\n#[oracle(print)]\nunconstrained fn print_oracle<T>(with_newline: bool, input: T) {}\n\nunconstrained fn print_unconstrained<T>(with_newline: bool, input: T) {\n    print_oracle(with_newline, input);\n}\n\npub fn println<T>(input: T) {\n    // Safety: a print statement cannot be constrained\n    unsafe {\n        print_unconstrained(true, input);\n    }\n}\n\npub fn print<T>(input: T) {\n    // Safety: a print statement cannot be constrained\n    unsafe {\n        print_unconstrained(false, input);\n    }\n}\n\npub fn verify_proof<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n) {\n    verify_proof_internal(verification_key, proof, public_inputs, key_hash, 0);\n}\n\npub fn verify_proof_with_type<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n    proof_type: u32,\n) {\n    if !crate::runtime::is_unconstrained() {\n        crate::assert_constant(proof_type);\n    }\n    verify_proof_internal(verification_key, proof, public_inputs, key_hash, proof_type);\n}\n\n#[foreign(recursive_aggregation)]\nfn verify_proof_internal<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n    proof_type: u32,\n) {}\n\n// Asserts that the given value is known at compile-time.\n// Useful for debugging for-loop bounds.\n#[builtin(assert_constant)]\npub fn assert_constant<T>(x: T) {}\n\n// Asserts that the given value is both true and known at compile-time.\n// The message can be a string, a format string, or any value, as long as it is known at compile-time\n#[builtin(static_assert)]\npub fn static_assert<T>(predicate: bool, message: T) {}\n\n#[deprecated(\"wrapping operations should be done with the Wrapping traits. E.g: x.wrapping_add(y)\")]\npub fn wrapping_add<T>(x: T, y: T) -> T\nwhere\n    T: AsPrimitive<Field>,\n    Field: AsPrimitive<T>,\n{\n    AsPrimitive::as_(x.as_() + y.as_())\n}\n#[deprecated(\"wrapping operations should be done with the Wrapping traits. E.g: x.wrapping_sub(y)\")]\npub fn wrapping_sub<T>(x: T, y: T) -> T\nwhere\n    T: AsPrimitive<Field>,\n    Field: AsPrimitive<T>,\n{\n    //340282366920938463463374607431768211456 is 2^128, it is used to avoid underflow\n    AsPrimitive::as_(x.as_() + 340282366920938463463374607431768211456 - y.as_())\n}\n#[deprecated(\"wrapping operations should be done with the Wrapping traits. E.g: x.wrapping_mul(y)\")]\npub fn wrapping_mul<T>(x: T, y: T) -> T\nwhere\n    T: AsPrimitive<Field>,\n    Field: AsPrimitive<T>,\n{\n    AsPrimitive::as_(x.as_() * y.as_())\n}\n\n#[builtin(as_witness)]\npub fn as_witness(x: Field) {}\n\nmod tests {\n    use super::ops::arith::WrappingMul;\n\n    #[test(should_fail_with = \"custom message\")]\n    fn test_static_assert_custom_message() {\n        super::static_assert(1 == 2, \"custom message\");\n    }\n\n    #[test]\n    fn test_wrapping_mul() {\n        let zero: u128 = 0;\n        let one: u128 = 1;\n        let two_pow_64: u128 = 0x10000000000000000;\n        let u128_max: u128 = 0xffffffffffffffffffffffffffffffff;\n\n        // 1*0==0\n        assert_eq(zero, zero.wrapping_mul(one));\n\n        // 0*1==0\n        assert_eq(zero, one.wrapping_mul(zero));\n\n        // 1*1==1\n        assert_eq(one, one.wrapping_mul(one));\n\n        // 0 * ( 1 << 64 ) ==  0\n        assert_eq(zero, zero.wrapping_mul(two_pow_64));\n\n        // ( 1 << 64 ) * 0 == 0\n        assert_eq(zero, two_pow_64.wrapping_mul(zero));\n\n        // 1 * ( 1 << 64 ) == 1 << 64\n        assert_eq(two_pow_64, two_pow_64.wrapping_mul(one));\n\n        // ( 1 << 64 ) * 1 == 1 << 64\n        assert_eq(two_pow_64, one.wrapping_mul(two_pow_64));\n\n        // ( 1 << 64 ) * ( 1 << 64 ) == 1 << 64\n        assert_eq(zero, two_pow_64.wrapping_mul(two_pow_64));\n        // -1 * -1 == 1\n        assert_eq(one, u128_max.wrapping_mul(u128_max));\n    }\n}\n",
      "path": "std/lib.nr"
    },
    "50": {
      "source": "// Many parts of the code here are regressions from issue #5503 (https://github.com/noir-lang/noir/issues/5503)\nfn main(x: u32) {\n    lambdas_in_array_literal(x - 1);\n    lambdas_in_array_literal(x);\n    lambdas_in_array_literal(x + 2);\n    lambdas_in_array_literal(x + 1);\n\n    lambdas_in_slice_literal(x - 1);\n    lambdas_in_slice_literal(x);\n    lambdas_in_slice_literal(x + 1);\n    lambdas_in_slice_literal(x + 2);\n\n    functions_in_array_literal(x - 1);\n    functions_in_array_literal(x);\n    functions_in_slice_literal(x - 1);\n    functions_in_slice_literal(x);\n\n    let example_lambda: fn(u8) -> u8 = |x| x + 1;\n    let lambdas: [fn(u8) -> u8; 8] = [example_lambda; 8];\n    println(lambdas[0](5));\n    // Dynamic dispatch\n    println(lambdas[x - 1](5));\n\n    let lambdas: [fn(()) -> (); 1] = [|_: ()| {}];\n    lambdas[0](());\n    lambdas[x - 1](());\n\n    // Also check against slices\n    let lambdas: [fn(()) -> ()] = &[|_: ()| {}];\n    lambdas[0](());\n    lambdas[x - 1](());\n}\n\nfn lambdas_in_array_literal(x: u32) {\n    let xs = [|| println(\"hi\"), || println(\"bye\"), || println(\"wow\"), || println(\"big\")];\n    (xs[x])();\n}\n\nfn lambdas_in_slice_literal(x: u32) {\n    let xs = &[|| println(\"hi\"), || println(\"bye\"), || println(\"big\"), || println(\"wow\")];\n    (xs[x])();\n}\n\nfn functions_in_array_literal(x: u32) {\n    let xs = [foo, bar];\n    (xs[x])();\n}\n\nfn functions_in_slice_literal(x: u32) {\n    let xs = &[baz, qux];\n    (xs[x])();\n}\n\nfn foo() {\n    println(\"hi\");\n}\nfn bar() {\n    println(\"bye\");\n}\nfn baz() {\n    println(\"hi\");\n}\nfn qux() {\n    println(\"bye\");\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "print_unconstrained",
    "print_unconstrained",
    "print_unconstrained",
    "directive_invert",
    "directive_integer_quotient"
  ]
}
