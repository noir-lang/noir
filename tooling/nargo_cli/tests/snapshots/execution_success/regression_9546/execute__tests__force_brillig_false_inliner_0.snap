---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "private"
      },
      {
        "name": "b",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 16
      },
      "visibility": "public"
    },
    "error_types": {
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _6",
    "private parameters indices : [_0, _1]",
    "public parameters indices : []",
    "return value indices : [_2]",
    "BLACKBOX::RANGE [(_0, 16)] []",
    "BLACKBOX::RANGE [(_1, 16)] []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) -52075 ]], outputs: [_3]",
    "EXPR [ (1, _1, _3) (-52075, _3) (1, _4) -1 ]",
    "EXPR [ (1, _1, _4) (-52075, _4) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) -28165 ]], outputs: [_5]",
    "EXPR [ (1, _1, _5) (-28165, _5) (1, _6) -1 ]",
    "EXPR [ (1, _1, _6) (-28165, _6) 0 ]",
    "EXPR [ (-1, _4, _6) 0 ]",
    "EXPR [ (1, _2) -56866 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "nZHBDoMgDIbfpWcOOuc0vsqyGMRqSAgQBJPF+O6rRDY9LFl2+aH9+wEtC/TYhbGVejATNPcFOieVkmOrjOBeGk3ZZWWQwtY7RErBwSfKcofaQ6ODUgxmrkIsmizXcfXckZsxQN3TSgcOUuG2W9mHzr6j1WVn6+INlz/TeVbueJ6X//BFlfi6OvEPiriQ7jQvuFAhgyLqNWoJDXVwi1pFraHZWpm5k7xTuM95CFocxu6fNjnpY6wzAvvgcLsyevSIFw==",
  "file_map": {
    "50": {
      "source": "fn main(a: i16, mut b: i16) -> pub i16 {\n    for _ in 0..7 {\n        if b == -13461 {\n            b = if b == 28165 {\n                (((8724006435340102799_i64 >> 4976821465038191667_i64) as i16) + 9004_i16)\n            } else {\n                a\n            };\n        };\n        b = -8670_i16;\n    }\n    b\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_invert"
  ]
}
