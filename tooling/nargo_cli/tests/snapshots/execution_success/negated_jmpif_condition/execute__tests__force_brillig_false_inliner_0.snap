---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _2",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: -10 })], outputs: [Simple(Witness(1))]",
    "EXPR [ (1, _0, _1) (-10, _1) (1, _2) -1 ]",
    "EXPR [ (1, _0, _2) (-10, _2) 0 ]",
    "EXPR [ (-2, _2) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "nZHBCoMwDIbfJece6py4+SpjSK1RCqUttR0M8d0XS930MBi7JE3+fAn8naHHLo6tMoOdoLnN0HmltRpbbaUIyhrqzguDrWyDR6QW7HSinPBoAjQmas3gIXRMQ5MTJuUgPKmcAZqeMi0clMb1tbAPzb+jVZHZ6vKGq5/pusx0ff6Dvp4zXXB+wO9UCan8wSzgNMigSPGUYglNuaz7vRKdxmzpEI3cORyeblO2P3DeSuyjx/VA0ujkCw==",
  "file_map": {
    "50": {
      "source": "fn main(mut x: Field) {\n    let mut q = 0;\n\n    if x != 10 {\n        q = 2;\n    }\n\n    assert(q == 2);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_invert"
  ]
}
