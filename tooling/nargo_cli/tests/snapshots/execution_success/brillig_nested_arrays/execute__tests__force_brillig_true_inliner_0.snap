---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "",
  "hash": "17433092157360781648",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "16761564377371454734": {
        "error_kind": "string",
        "string": "Array index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/91avW4TQRDeu/OF3DkIC3gQn+3YpouE+e14AIojPxU0UNK4oKalpKOl4pWQkHgItMpO8vnzdxdH3gWJkaK1b+bmf2bXO8ncJWThz8MgrLnbBqM5Cet4P2gi8hqn1DNLpOeGkzPXDYb7HdaK3vf4IqLBFcmNyX85nr2phH0R9Z9WwDMB/4nxH6ThP74T+LxYb/J3JPeu2yxefMdwmGMvA+4w4O3zw/C5In4p4o46xfbbA6F/DrZ5eLy+9kckuVf1sorPe2K8n8TnPTXeT+PznhnvZ/F5Hxvv5/F5z4fusibeBX5WR8W1qKv8StwHZhnJc26zDziSX7ukfa/JSJ7pw/7JyXel0HVEOA9Wm5nAFeJZ3sNrFZGX1d5dt20/5wLaGnNP2zUXTH7tkuZm0+fXgfCr+e5A6DoinAfOhQMh50DIUbxW600dUGeOH+r3L+Jn8muXNJ+aPr+qujDf3RG6jgjnwfaUTOAK8Szv4WV7COeQ8fdQCf0i+muxa/xMfu2S5lPT51dVF+a7Q6HriHAerOdlAleIZ3kHL+5B+/IqIvHyYOeHGHqVkfRCGxOfLxZc0wgqXw4IV5HNiKsBh+d9hoK+o71e9gfgy3SsK+aG6c0+9HAS1vF+0Josi30p9BgQzmhfkX6J+sT4PvB1JCvxmWWu+rUjfRBULphuPp4/wufb5oLl970Oe9EXqeLA/Xrgtvs16pa77f0M67SkZ6/BTz/hHeTp3G5n30Lok3h/XXK/QVD9piBcTTYjbgi42/Yis/e2vQhzrCJaoy8FLfcLo30b1tR3KKpfmKwh2DJYx5e/WF7WiYdife0HjgvKL4n+ffiO+WDrYA89LxZtczFtL9rj9uxsdtqynxz5Ce8Q+HeRil/iuE65F+Q36JW43ud8Tirddm9C+SXRfwyr//4L6LlPFm6zjsx2pFdnNbTb9LH9A/v14d/xV9Onq/KX6VOn0ecqftZbMX54ZqwBj/SfwqriVwsb++I3FPRot+lj8cN9ZEj+Okzjr0mfbaXQVeH4Xq9y2/tbCp2PAr+uGsUcQPrPYVUxVjHDfZJjfCTo0W6uUfTVEfHC+Zmyh2XnPbqqmkvdM1XN5UIfrrkvYY3RM1X80G6jV2fuIfG6yb/cYxPV6Jzzo8u/uGch/dewKv+qvt3n30rQo93sX/R9Rf5KdKaY9O3h6kzBe/g31+0vlRPqN0uff5FmQP7KAIfvsmzzmXPbMVPfUSb/zk40l9k623XFoQA80n8Pq4oDnr377m1ZB6RX9yH3hL/4Xp5nbhgzvtfMxHtdszyOmYfEtbLzLM/k1x12ncTRp+mrM9WX1L1K172BB57fqDxSM0PFaxWR15P1pj3qf3D+Rr2iPOd0Ltiz2iXNzabPr7nwK89B8d0R4TxwLqj5sZoZKl6r9aYO3CM8JL433zl+/8tcnmd5+8zSeZb3D2bpO8/y/pdZuvW8TOAK8axrls49aF9eWSReHniWt49eRSS90EZ1TrHY+nNK7PvKdjFdnk5mp4s3x9N2Or/xvjK2/PPlo7Pxo4vztmmaydn4/Cb5fwBY0lVbjSwAAA==",
  "debug_symbols": "tdphayIxEMbx77KvfZHMJJOkX+U4im1tEcQW2x4cpd/91lK9npsq/+H2jbiyv1F4ZrM65m24W928Plyvt/ePz8PVj7dh83i7fFk/bsejt/fFcLNbbzbrh+uvLw9h/yDx4/znp+V2f/j8sty9DFdNy2JYbe/2z+ro79eb1XCVw/vPxSCChWKRsMhYGBYFi4pFo0IDFjhz7Wde9SBqOhWKRcIiY2FYFCwqFo2KFLDoZh5DOoQ+Pj1NPYnDqMMkh8kOYw5THKY6TOMmh77J9WhyOzXRYcRh1GGSw2SHMYcpDlMdpnFjjj4wRx+Yow/M0Qfm6ANz9IE5+sC+6YN6vE6jyKmpDtO4KcFhosOIw6jDJIfJDmMXTYqnpjhMdZjGTQ0O0++DaPlo6un9p4rDqMMkh8kOYw5THKY6TOOmBYdx9EFz9EFz9EFz9EH7pg/acY0X/Wc9WExONk2f55qF0/I2b/kyb/k6b/k2a/kYwsz148z1Zeb6OnP99D/rlzapn2eubzPXL/PWj93Pn8PhNp9DnZDuR5LQPonEMiGVk4aJBE4iJ8KJcpI4yZwYJzx94ekLT195+srTV56+8vSVp688feXpK09fL6UvNiENkxQ4iZwIJ8pJ4qSfvhyJTnLpTzLPk8JJ5aRh0p9inieRE+FEOUmc8PQzTz/z9DNPP/P0jadvPH27lH6aXJWmnCROMifGSeGkcnJp5Z+ScmnlN52QfvpmB9LihAgnykniJHNinBROLt33p6Q/DNR2+P2iLU+IcpI4yZwYJ4WTyknDpD8EPE8iJzz9/gQw6aEt03QZ7w8Az5PMiXFSOKmcNEqkPyI7TyIn3fRTO5I2JcpJ4iRzYpwUTionDZMYOIl0piRROFFOEieZE+OkcFI5aZj0R2rnCU9fePrC0xeevvD0hacvMP338ejXcrde3mxWn5sz71+3t1/2ar78flqdbNt82j3eru5ed6v9Bs6/ezc/Lu84fikb/8/d3x/24YmGxThVHt9nfK8/",
  "file_map": {
    "50": {
      "source": "struct Header {\n    params: [Field; 3],\n}\n\nstruct MyNote {\n    plain: Field,\n    array: [Field; 2],\n    header: Header,\n}\n\nunconstrained fn access_nested(notes: [MyNote; 2], x: Field, y: Field) -> Field {\n    notes[x].array[y] + notes[y].array[x] + notes[x].plain + notes[y].header.params[x]\n}\n\nunconstrained fn create_inside_brillig() -> [MyNote; 2] {\n    let header = Header { params: [1, 2, 3] };\n    let note0 = MyNote { array: [1, 2], plain: 3, header };\n    let note1 = MyNote { array: [4, 5], plain: 6, header };\n    [note0, note1]\n}\n\nunconstrained fn assert_inside_brillig(notes: [MyNote; 2], x: Field, y: Field) {\n    assert(access_nested(notes, x, y) == (2 + 4 + 3 + 1));\n}\n\nunconstrained fn create_and_assert_inside_brillig(x: Field, y: Field) {\n    assert_inside_brillig(create_inside_brillig(), x, y);\n}\n\nfn main(x: Field, y: Field) {\n    // Safety: testing context\n    unsafe {\n        let header = Header { params: [1, 2, 3] };\n        let note0 = MyNote { array: [1, 2], plain: 3, header };\n        let note1 = MyNote { array: [4, 5], plain: 6, header };\n\n        assert(access_nested([note0, note1], x, y) == (2 + 4 + 3 + 1));\n\n        let notes = create_inside_brillig();\n        assert_inside_brillig(notes, x, y);\n        create_and_assert_inside_brillig(x, y);\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
