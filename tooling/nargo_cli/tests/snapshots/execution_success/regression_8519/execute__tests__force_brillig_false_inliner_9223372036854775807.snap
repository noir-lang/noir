---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "unsigned",
        "width": 128
      },
      "visibility": "public"
    },
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _8",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(0))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 340282366920938463463374607431768211456 })], outputs: [Simple(Witness(2)), Simple(Witness(3))]",
    "BLACKBOX::RANGE [(_2, 126)] []",
    "EXPR [ (-1, _3) (-1, _4) 340282366920938463463374607431768211455 ]",
    "BLACKBOX::RANGE [(_4, 129)] []",
    "EXPR [ (-1, _0) (-340282366920938463463374607431768211456, _2) (-1, _3) 0 ]",
    "EXPR [ (1, _2) (-1, _5) 20746827117051438823981594372716013474 ]",
    "BLACKBOX::RANGE [(_5, 126)] []",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(2))], q_c: 64323764613183177041862057485226039389 })], outputs: [Simple(Witness(6))]",
    "EXPR [ (-1, _2, _6) (64323764613183177041862057485226039389, _6) (1, _7) -1 ]",
    "EXPR [ (-1, _2, _7) (64323764613183177041862057485226039389, _7) 0 ]",
    "EXPR [ (-1, _3, _7) (-1, _7, _7) (53438638232309528389504892708671455233, _7) (-1, _8) 0 ]",
    "BLACKBOX::RANGE [(_8, 129)] []",
    "EXPR [ (1, _3) -53438638232309528388129535304893203149 ]",
    "EXPR [ (1, _1) -53438638232309528388129535304893203149 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "nZHBCoMwDIbfJece1KlTX2UMqRqlUKrUdjDEd1+MuulhMHb50+Tv14RmggYr35XKtP0IxW2CyiqtVVfqvpZO9Yaq0yxgT0tnEakEB5+oQVo0DgrjtRbwkNrzpXGQhqOTltxAAJqGIj3YKo3LaRYfOviOxvHGxukbTn6m071zmv9BZ8lGh9G5+Z0yWSt7+iwIoIgEhKwR64U1Zk1YU9Yra8aar9QGr3RI+GVeBrNKVhq3XbTe1IfVuOewO/vyBtvX2HiLy2Ts0awv",
  "file_map": {
    "50": {
      "source": "fn main(a: Field) -> pub u128 {\n    let c = -a;\n    let c = c as u128;\n    assert_eq(c, 53438638232309528388129535304893203149);\n    c\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
