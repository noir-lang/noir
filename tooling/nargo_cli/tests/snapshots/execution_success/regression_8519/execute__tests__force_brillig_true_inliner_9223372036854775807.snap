---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "unsigned",
        "width": 128
      },
      "visibility": "public"
    },
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _1",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 })], outputs: [Simple(Witness(1))]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 13 }, Call { location: 14 }, Mov { destination: Direct(32837), source: Relative(1) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, Return, Call { location: 26 }, Const { destination: Relative(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Relative(3), op: Sub, lhs: Relative(2), rhs: Relative(1) }, Cast { destination: Relative(2), source: Relative(3), bit_size: Integer(U128) }, Cast { destination: Relative(1), source: Relative(2), bit_size: Field }, Cast { destination: Relative(2), source: Relative(1), bit_size: Integer(U128) }, Const { destination: Relative(1), bit_size: Integer(U128), value: 53438638232309528388129535304893203149 }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U128, lhs: Relative(2), rhs: Relative(1) }, JumpIf { condition: Relative(3), location: 25 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(4) } }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 31 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "nZHRroMgDIbfpddcCCpn81WWxaDWhYSgYXCSE8O7nyK6uYsly276Udr/L6ELDNiFW6vtON2huSzQOW2MvrVm6pXXk6XbBYoUeA0NZ8Blxg80gnDKOK8Q1FgSeIbIKDMqQowMdufWO8RkfBhFD5iVQ+uhscEYBr/KhLXpPiu70itH1YIB2oFIhqM2mE6RPdXFe2lVbdpKPsT1x2q5T5bnL9SnelNz8Tr8SpnqtXv595iMnFadwS0dg+0PVf8375V9b7ObehyCw+R0WB7Fi5Cs5NeYpv0D",
  "file_map": {
    "50": {
      "source": "fn main(a: Field) -> pub u128 {\n    let c = -a;\n    let c = c as u128;\n    assert_eq(c, 53438638232309528388129535304893203149);\n    c\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
