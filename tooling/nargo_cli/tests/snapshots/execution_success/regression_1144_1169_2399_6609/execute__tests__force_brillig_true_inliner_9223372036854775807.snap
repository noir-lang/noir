---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "z",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "u",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "private"
      },
      {
        "name": "v",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "986260048197077973": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "1998584279744703196": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "13301295855638053177": {
        "error_kind": "string",
        "string": "Attempt to divide with overflow"
      },
      "14990209321349310352": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "15764276373176857197": {
        "error_kind": "string",
        "string": "Stack too deep"
      },
      "16431471497789672479": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _7",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [[EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ], EXPR [ (1, _2) 0 ], EXPR [ (1, _3) 0 ], EXPR [ (1, _4) 0 ]], EXPR [ (1, _5) 0 ], EXPR [ (1, _6) 0 ], EXPR [ (1, _7) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32844 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 8 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(5), offset_address: Relative(6) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U8) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U8) }, Cast { destination: Direct(32838), source: Direct(32838), bit_size: Integer(U8) }, Cast { destination: Direct(32839), source: Direct(32839), bit_size: Integer(U8) }, Cast { destination: Direct(32840), source: Direct(32840), bit_size: Integer(U8) }, Cast { destination: Direct(32842), source: Direct(32842), bit_size: Integer(U16) }, Cast { destination: Direct(32843), source: Direct(32843), bit_size: Integer(U16) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32836 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 5 }, Mov { destination: Relative(5), source: Direct(1) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(7) }, IndirectConst { destination_pointer: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(7) }, Mov { destination: Direct(32773), source: Relative(6) }, Call { location: 33 }, Mov { destination: Relative(1), source: Relative(5) }, Mov { destination: Relative(2), source: Direct(32841) }, Mov { destination: Relative(3), source: Direct(32842) }, Mov { destination: Relative(4), source: Direct(32843) }, Call { location: 44 }, Call { location: 46 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32844 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 43 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 36 }, Return, Const { destination: Direct(32835), bit_size: Integer(U32), value: 16 }, Return, Call { location: 874 }, Cast { destination: Relative(6), source: Relative(2), bit_size: Integer(U32) }, Cast { destination: Relative(5), source: Relative(6), bit_size: Field }, Cast { destination: Relative(6), source: Relative(5), bit_size: Integer(U32) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 5 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(6) }, Const { destination: Relative(8), bit_size: Integer(U1), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U1, lhs: Relative(7), rhs: Relative(8) }, JumpIf { condition: Relative(9), location: 57 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, Const { destination: Relative(7), bit_size: Integer(U8), value: 0 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 17 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(9) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 16 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(9) }, Mov { destination: Relative(11), source: Relative(9) }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(11), rhs: Relative(10) }, Not { destination: Relative(12), source: Relative(12), bit_size: U1 }, JumpIf { condition: Relative(12), location: 72 }, Store { destination_pointer: Relative(11), source: Relative(7) }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(11), rhs: Direct(2) }, Jump { location: 66 }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(8) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, Load { destination: Relative(10), source_pointer: Relative(11) }, Const { destination: Relative(11), bit_size: Integer(U8), value: 4 }, BinaryIntOp { destination: Relative(12), op: Shr, bit_size: U8, lhs: Relative(10), rhs: Relative(11) }, Const { destination: Relative(14), bit_size: Integer(U8), value: 16 }, BinaryIntOp { destination: Relative(15), op: Div, bit_size: U8, lhs: Relative(12), rhs: Relative(14) }, BinaryIntOp { destination: Relative(16), op: Mul, bit_size: U8, lhs: Relative(15), rhs: Relative(14) }, BinaryIntOp { destination: Relative(13), op: Sub, bit_size: U8, lhs: Relative(12), rhs: Relative(16) }, Cast { destination: Relative(14), source: Relative(13), bit_size: Integer(U1) }, Cast { destination: Relative(12), source: Relative(14), bit_size: Integer(U8) }, Cast { destination: Relative(13), source: Relative(12), bit_size: Integer(U1) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(16), bit_size: Integer(U1), value: 1 }, JumpIf { condition: Relative(13), location: 151 }, Jump { location: 92 }, Mov { destination: Relative(10), source: Relative(14) }, Jump { location: 94 }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(10), rhs: Relative(15) }, JumpIf { condition: Relative(13), location: 98 }, Jump { location: 97 }, Jump { location: 199 }, BinaryIntOp { destination: Relative(13), op: Sub, bit_size: U32, lhs: Relative(6), rhs: Relative(8) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U32, lhs: Relative(8), rhs: Relative(6) }, JumpIf { condition: Relative(17), location: 102 }, Call { location: 880 }, BinaryIntOp { destination: Relative(17), op: LessThan, bit_size: U32, lhs: Relative(10), rhs: Relative(13) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(8) }, JumpIf { condition: Relative(17), location: 106 }, Jump { location: 149 }, BinaryIntOp { destination: Relative(17), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Relative(5) }, JumpIf { condition: Relative(17), location: 109 }, Call { location: 883 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(13) }, Load { destination: Relative(17), source_pointer: Relative(19) }, BinaryIntOp { destination: Relative(18), op: Mul, bit_size: U32, lhs: Relative(15), rhs: Relative(10) }, BinaryIntOp { destination: Relative(19), op: Shr, bit_size: U8, lhs: Relative(17), rhs: Relative(11) }, Const { destination: Relative(21), bit_size: Integer(U8), value: 16 }, BinaryIntOp { destination: Relative(22), op: Div, bit_size: U8, lhs: Relative(19), rhs: Relative(21) }, BinaryIntOp { destination: Relative(23), op: Mul, bit_size: U8, lhs: Relative(22), rhs: Relative(21) }, BinaryIntOp { destination: Relative(20), op: Sub, bit_size: U8, lhs: Relative(19), rhs: Relative(23) }, Load { destination: Relative(19), source_pointer: Relative(9) }, BinaryIntOp { destination: Relative(21), op: LessThan, bit_size: U32, lhs: Relative(18), rhs: Direct(32835) }, JumpIf { condition: Relative(21), location: 122 }, Call { location: 883 }, Mov { destination: Direct(32771), source: Relative(19) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 17 }, Call { location: 886 }, Mov { destination: Relative(21), source: Direct(32773) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(18) }, Store { destination_pointer: Relative(23), source: Relative(20) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(8) }, BinaryIntOp { destination: Relative(20), op: LessThanEquals, bit_size: U32, lhs: Relative(18), rhs: Relative(19) }, JumpIf { condition: Relative(20), location: 133 }, Call { location: 908 }, Const { destination: Relative(20), bit_size: Integer(U8), value: 16 }, BinaryIntOp { destination: Relative(22), op: Div, bit_size: U8, lhs: Relative(17), rhs: Relative(20) }, BinaryIntOp { destination: Relative(23), op: Mul, bit_size: U8, lhs: Relative(22), rhs: Relative(20) }, BinaryIntOp { destination: Relative(18), op: Sub, bit_size: U8, lhs: Relative(17), rhs: Relative(23) }, BinaryIntOp { destination: Relative(17), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Direct(32835) }, JumpIf { condition: Relative(17), location: 140 }, Call { location: 883 }, Mov { destination: Direct(32771), source: Relative(21) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 17 }, Call { location: 886 }, Mov { destination: Relative(17), source: Direct(32773) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(19) }, Store { destination_pointer: Relative(22), source: Relative(18) }, Store { destination_pointer: Relative(9), source: Relative(17) }, Jump { location: 149 }, Mov { destination: Relative(10), source: Relative(13) }, Jump { location: 94 }, Const { destination: Relative(18), bit_size: Integer(U8), value: 16 }, BinaryIntOp { destination: Relative(19), op: Div, bit_size: U8, lhs: Relative(10), rhs: Relative(18) }, BinaryIntOp { destination: Relative(20), op: Mul, bit_size: U8, lhs: Relative(19), rhs: Relative(18) }, BinaryIntOp { destination: Relative(17), op: Sub, bit_size: U8, lhs: Relative(10), rhs: Relative(20) }, Mov { destination: Relative(10), source: Direct(1) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 17 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(18) }, IndirectConst { destination_pointer: Relative(10), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Mov { destination: Relative(19), source: Relative(18) }, Store { destination_pointer: Relative(19), source: Relative(17) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, Store { destination_pointer: Relative(9), source: Relative(10) }, Mov { destination: Relative(13), source: Relative(8) }, Jump { location: 195 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Relative(5) }, JumpIf { condition: Relative(10), location: 828 }, Jump { location: 198 }, Jump { location: 199 }, Load { destination: Relative(6), source_pointer: Relative(9) }, Const { destination: Relative(9), bit_size: Field, value: 2 }, BinaryFieldOp { destination: Relative(10), op: Mul, lhs: Relative(9), rhs: Relative(2) }, Cast { destination: Relative(2), source: Relative(12), bit_size: Field }, BinaryFieldOp { destination: Relative(11), op: Add, lhs: Relative(10), rhs: Relative(2) }, BinaryFieldOp { destination: Relative(2), op: Sub, lhs: Relative(11), rhs: Relative(9) }, Const { destination: Relative(9), bit_size: Field, value: 5 }, BinaryFieldOp { destination: Relative(10), op: Equals, lhs: Relative(2), rhs: Relative(9) }, JumpIf { condition: Relative(10), location: 210 }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(11) } }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(8) }, Load { destination: Relative(2), source_pointer: Relative(9) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(15) }, Load { destination: Relative(9), source_pointer: Relative(10) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(10) }, Load { destination: Relative(11), source_pointer: Relative(12) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(10) }, Load { destination: Relative(12), source_pointer: Relative(13) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(5) }, Load { destination: Relative(10), source_pointer: Relative(13) }, Mov { destination: Relative(6), source: Direct(1) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(13) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Mov { destination: Relative(15), source: Relative(13) }, Store { destination_pointer: Relative(15), source: Relative(2) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(9) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(11) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(12) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(10) }, Const { destination: Relative(2), bit_size: Integer(U8), value: 15 }, Const { destination: Relative(9), bit_size: Integer(U8), value: 1 }, Const { destination: Relative(10), bit_size: Integer(U8), value: 12 }, Const { destination: Relative(11), bit_size: Integer(U8), value: 11 }, Const { destination: Relative(12), bit_size: Integer(U8), value: 8 }, Mov { destination: Relative(13), source: Direct(1) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(15) }, IndirectConst { destination_pointer: Relative(13), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Mov { destination: Relative(17), source: Relative(15) }, Store { destination_pointer: Relative(17), source: Relative(2) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(9) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(10) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(11) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(12) }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(16) }, Mov { destination: Relative(1), source: Relative(14) }, Jump { location: 262 }, BinaryIntOp { destination: Relative(9), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, JumpIf { condition: Relative(9), location: 815 }, Jump { location: 265 }, Load { destination: Relative(5), source_pointer: Relative(2) }, JumpIf { condition: Relative(5), location: 269 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, Const { destination: Relative(2), bit_size: Integer(U8), value: 184 }, Const { destination: Relative(5), bit_size: Integer(U8), value: 143 }, Const { destination: Relative(6), bit_size: Integer(U8), value: 97 }, Const { destination: Relative(9), bit_size: Integer(U8), value: 230 }, Const { destination: Relative(10), bit_size: Integer(U8), value: 251 }, Const { destination: Relative(11), bit_size: Integer(U8), value: 218 }, Const { destination: Relative(12), bit_size: Integer(U8), value: 131 }, Const { destination: Relative(13), bit_size: Integer(U8), value: 255 }, Const { destination: Relative(15), bit_size: Integer(U8), value: 250 }, Const { destination: Relative(17), bit_size: Integer(U8), value: 190 }, Const { destination: Relative(18), bit_size: Integer(U8), value: 54 }, Const { destination: Relative(19), bit_size: Integer(U8), value: 65 }, Const { destination: Relative(20), bit_size: Integer(U8), value: 18 }, Const { destination: Relative(21), bit_size: Integer(U8), value: 19 }, Const { destination: Relative(22), bit_size: Integer(U8), value: 116 }, Const { destination: Relative(23), bit_size: Integer(U8), value: 128 }, Const { destination: Relative(24), bit_size: Integer(U8), value: 57 }, Const { destination: Relative(25), bit_size: Integer(U8), value: 24 }, Mov { destination: Relative(26), source: Direct(1) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(27) }, IndirectConst { destination_pointer: Relative(26), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Mov { destination: Relative(28), source: Relative(27) }, Store { destination_pointer: Relative(28), source: Relative(2) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(5) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(6) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(9) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(10) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(11) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(12) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(10) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(13) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(15) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(17) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(18) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(19) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(20) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(21) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(22) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(23) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(24) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(23) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(25) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(7) }, Mov { destination: Relative(27), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(28), bit_size: Integer(U8), value: 148 }, Mov { destination: Relative(29), source: Direct(1) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(30) }, IndirectConst { destination_pointer: Relative(29), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, Mov { destination: Relative(31), source: Relative(30) }, Store { destination_pointer: Relative(31), source: Relative(28) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(31), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(7) }, Store { destination_pointer: Relative(27), source: Relative(29) }, Const { destination: Relative(29), bit_size: Integer(U32), value: 32 }, Mov { destination: Relative(1), source: Relative(8) }, Jump { location: 432 }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Relative(29) }, JumpIf { condition: Relative(30), location: 796 }, Jump { location: 435 }, Load { destination: Relative(26), source_pointer: Relative(27) }, Load { destination: Relative(27), source_pointer: Relative(26) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(31), op: Equals, bit_size: U32, lhs: Relative(30), rhs: Relative(27) }, Not { destination: Relative(31), source: Relative(31), bit_size: U1 }, JumpIf { condition: Relative(31), location: 442 }, Call { location: 911 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(27) }, Mov { destination: Relative(27), source: Direct(1) }, Const { destination: Relative(31), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(31) }, IndirectConst { destination_pointer: Relative(27), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Mov { destination: Relative(32), source: Relative(31) }, Store { destination_pointer: Relative(32), source: Relative(28) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(2) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(5) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(6) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(9) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(10) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(11) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(12) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(10) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(13) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(15) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(17) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(18) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(19) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(20) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(21) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(22) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(23) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(24) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(23) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(25) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(7) }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(16) }, Mov { destination: Relative(1), source: Relative(14) }, Jump { location: 518 }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Relative(29) }, JumpIf { condition: Relative(5), location: 783 }, Jump { location: 521 }, Load { destination: Relative(1), source_pointer: Relative(2) }, JumpIf { condition: Relative(1), location: 525 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, Const { destination: Relative(1), bit_size: Integer(U16), value: 65523 }, Const { destination: Relative(12), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U16, lhs: Relative(12), rhs: Relative(3) }, Const { destination: Relative(13), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(14), op: Sub, bit_size: U16, lhs: Relative(13), rhs: Relative(3) }, JumpIf { condition: Relative(7), location: 532 }, Jump { location: 534 }, Mov { destination: Relative(8), source: Relative(14) }, Jump { location: 536 }, Mov { destination: Relative(8), source: Relative(3) }, Jump { location: 536 }, Const { destination: Relative(12), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(9), op: LessThan, bit_size: U16, lhs: Relative(12), rhs: Relative(1) }, Const { destination: Relative(13), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(14), op: Sub, bit_size: U16, lhs: Relative(13), rhs: Relative(1) }, JumpIf { condition: Relative(9), location: 542 }, Jump { location: 544 }, Mov { destination: Relative(10), source: Relative(14) }, Jump { location: 546 }, Mov { destination: Relative(10), source: Relative(1) }, Jump { location: 546 }, BinaryIntOp { destination: Relative(5), op: Div, bit_size: U16, lhs: Relative(8), rhs: Relative(10) }, BinaryIntOp { destination: Relative(11), op: Xor, bit_size: U1, lhs: Relative(7), rhs: Relative(9) }, JumpIf { condition: Relative(11), location: 550 }, Jump { location: 552 }, Const { destination: Relative(12), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(5), op: Sub, bit_size: U16, lhs: Relative(12), rhs: Relative(5) }, JumpIf { condition: Relative(11), location: 558 }, Const { destination: Relative(13), bit_size: Integer(U16), value: 32768 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U16, lhs: Relative(5), rhs: Relative(13) }, JumpIf { condition: Relative(12), location: 558 }, JumpIf { condition: Relative(12), location: 558 }, Call { location: 914 }, BinaryIntOp { destination: Relative(6), op: Mul, bit_size: U16, lhs: Relative(5), rhs: Relative(1) }, BinaryIntOp { destination: Relative(2), op: Sub, bit_size: U16, lhs: Relative(3), rhs: Relative(6) }, Const { destination: Relative(1), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U16, lhs: Relative(2), rhs: Relative(1) }, JumpIf { condition: Relative(5), location: 565 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(6) } }, Const { destination: Relative(12), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U16, lhs: Relative(12), rhs: Relative(3) }, Const { destination: Relative(14), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(15), op: Sub, bit_size: U16, lhs: Relative(14), rhs: Relative(3) }, JumpIf { condition: Relative(7), location: 571 }, Jump { location: 573 }, Mov { destination: Relative(8), source: Relative(15) }, Jump { location: 575 }, Mov { destination: Relative(8), source: Relative(3) }, Jump { location: 575 }, Const { destination: Relative(12), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(9), op: LessThan, bit_size: U16, lhs: Relative(12), rhs: Relative(4) }, Const { destination: Relative(14), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(15), op: Sub, bit_size: U16, lhs: Relative(14), rhs: Relative(4) }, JumpIf { condition: Relative(9), location: 581 }, Jump { location: 583 }, Mov { destination: Relative(10), source: Relative(15) }, Jump { location: 585 }, Mov { destination: Relative(10), source: Relative(4) }, Jump { location: 585 }, BinaryIntOp { destination: Relative(5), op: Div, bit_size: U16, lhs: Relative(8), rhs: Relative(10) }, BinaryIntOp { destination: Relative(11), op: Xor, bit_size: U1, lhs: Relative(7), rhs: Relative(9) }, JumpIf { condition: Relative(11), location: 589 }, Jump { location: 591 }, Const { destination: Relative(12), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(5), op: Sub, bit_size: U16, lhs: Relative(12), rhs: Relative(5) }, JumpIf { condition: Relative(11), location: 597 }, Const { destination: Relative(14), bit_size: Integer(U16), value: 32768 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U16, lhs: Relative(5), rhs: Relative(14) }, JumpIf { condition: Relative(12), location: 597 }, JumpIf { condition: Relative(12), location: 597 }, Call { location: 914 }, BinaryIntOp { destination: Relative(6), op: Mul, bit_size: U16, lhs: Relative(5), rhs: Relative(4) }, BinaryIntOp { destination: Relative(2), op: Sub, bit_size: U16, lhs: Relative(3), rhs: Relative(6) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U16, lhs: Relative(2), rhs: Relative(1) }, JumpIf { condition: Relative(5), location: 603 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(6) } }, Const { destination: Relative(2), bit_size: Integer(U16), value: 65525 }, Const { destination: Relative(15), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(8), op: LessThan, bit_size: U16, lhs: Relative(15), rhs: Relative(3) }, Const { destination: Relative(16), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(17), op: Sub, bit_size: U16, lhs: Relative(16), rhs: Relative(3) }, JumpIf { condition: Relative(8), location: 610 }, Jump { location: 612 }, Mov { destination: Relative(9), source: Relative(17) }, Jump { location: 614 }, Mov { destination: Relative(9), source: Relative(3) }, Jump { location: 614 }, Const { destination: Relative(15), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U16, lhs: Relative(15), rhs: Relative(2) }, Const { destination: Relative(16), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(17), op: Sub, bit_size: U16, lhs: Relative(16), rhs: Relative(2) }, JumpIf { condition: Relative(10), location: 620 }, Jump { location: 622 }, Mov { destination: Relative(11), source: Relative(17) }, Jump { location: 624 }, Mov { destination: Relative(11), source: Relative(2) }, Jump { location: 624 }, BinaryIntOp { destination: Relative(6), op: Div, bit_size: U16, lhs: Relative(9), rhs: Relative(11) }, BinaryIntOp { destination: Relative(12), op: Xor, bit_size: U1, lhs: Relative(8), rhs: Relative(10) }, JumpIf { condition: Relative(12), location: 628 }, Jump { location: 630 }, Const { destination: Relative(15), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(6), op: Sub, bit_size: U16, lhs: Relative(15), rhs: Relative(6) }, JumpIf { condition: Relative(12), location: 636 }, Const { destination: Relative(16), bit_size: Integer(U16), value: 32768 }, BinaryIntOp { destination: Relative(15), op: LessThan, bit_size: U16, lhs: Relative(6), rhs: Relative(16) }, JumpIf { condition: Relative(15), location: 636 }, JumpIf { condition: Relative(15), location: 636 }, Call { location: 914 }, BinaryIntOp { destination: Relative(7), op: Mul, bit_size: U16, lhs: Relative(6), rhs: Relative(2) }, BinaryIntOp { destination: Relative(5), op: Sub, bit_size: U16, lhs: Relative(3), rhs: Relative(7) }, Const { destination: Relative(6), bit_size: Integer(U16), value: 4 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U16, lhs: Relative(5), rhs: Relative(6) }, JumpIf { condition: Relative(7), location: 643 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, BinaryIntOp { destination: Relative(5), op: Sub, bit_size: U16, lhs: Relative(1), rhs: Relative(3) }, Mov { destination: Relative(1), source: Relative(5) }, Cast { destination: Relative(5), source: Relative(1), bit_size: Integer(U16) }, Cast { destination: Relative(7), source: Relative(3), bit_size: Integer(U16) }, Const { destination: Relative(8), bit_size: Integer(U16), value: 32768 }, BinaryIntOp { destination: Relative(9), op: LessThan, bit_size: U16, lhs: Relative(7), rhs: Relative(8) }, Not { destination: Relative(7), source: Relative(9), bit_size: U1 }, BinaryIntOp { destination: Relative(9), op: LessThan, bit_size: U16, lhs: Relative(5), rhs: Relative(8) }, BinaryIntOp { destination: Relative(5), op: Mul, bit_size: U1, lhs: Relative(9), rhs: Relative(7) }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U1, lhs: Relative(5), rhs: Relative(7) }, JumpIf { condition: Relative(9), location: 655 }, Call { location: 880 }, Const { destination: Relative(18), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U16, lhs: Relative(18), rhs: Relative(1) }, Const { destination: Relative(19), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(20), op: Sub, bit_size: U16, lhs: Relative(19), rhs: Relative(1) }, JumpIf { condition: Relative(10), location: 661 }, Jump { location: 663 }, Mov { destination: Relative(11), source: Relative(20) }, Jump { location: 665 }, Mov { destination: Relative(11), source: Relative(1) }, Jump { location: 665 }, Const { destination: Relative(18), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U16, lhs: Relative(18), rhs: Relative(2) }, Const { destination: Relative(19), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(20), op: Sub, bit_size: U16, lhs: Relative(19), rhs: Relative(2) }, JumpIf { condition: Relative(12), location: 671 }, Jump { location: 673 }, Mov { destination: Relative(15), source: Relative(20) }, Jump { location: 675 }, Mov { destination: Relative(15), source: Relative(2) }, Jump { location: 675 }, BinaryIntOp { destination: Relative(7), op: Div, bit_size: U16, lhs: Relative(11), rhs: Relative(15) }, BinaryIntOp { destination: Relative(17), op: Xor, bit_size: U1, lhs: Relative(10), rhs: Relative(12) }, JumpIf { condition: Relative(17), location: 679 }, Jump { location: 681 }, Const { destination: Relative(18), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(7), op: Sub, bit_size: U16, lhs: Relative(18), rhs: Relative(7) }, JumpIf { condition: Relative(17), location: 687 }, Const { destination: Relative(19), bit_size: Integer(U16), value: 32768 }, BinaryIntOp { destination: Relative(18), op: LessThan, bit_size: U16, lhs: Relative(7), rhs: Relative(19) }, JumpIf { condition: Relative(18), location: 687 }, JumpIf { condition: Relative(18), location: 687 }, Call { location: 914 }, BinaryIntOp { destination: Relative(9), op: Mul, bit_size: U16, lhs: Relative(7), rhs: Relative(2) }, BinaryIntOp { destination: Relative(5), op: Sub, bit_size: U16, lhs: Relative(1), rhs: Relative(9) }, Const { destination: Relative(2), bit_size: Integer(U16), value: 65532 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U16, lhs: Relative(5), rhs: Relative(2) }, JumpIf { condition: Relative(7), location: 694 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, Const { destination: Relative(5), bit_size: Integer(U16), value: 2 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U16, lhs: Relative(4), rhs: Relative(5) }, Mov { destination: Relative(5), source: Relative(7) }, Cast { destination: Relative(7), source: Relative(5), bit_size: Integer(U16) }, Cast { destination: Relative(9), source: Relative(4), bit_size: Integer(U16) }, BinaryIntOp { destination: Relative(4), op: LessThan, bit_size: U16, lhs: Relative(9), rhs: Relative(8) }, BinaryIntOp { destination: Relative(9), op: LessThan, bit_size: U16, lhs: Relative(7), rhs: Relative(8) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U1, lhs: Relative(9), rhs: Relative(4) }, BinaryIntOp { destination: Relative(8), op: Mul, bit_size: U1, lhs: Relative(7), rhs: Relative(4) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U1, lhs: Relative(8), rhs: Relative(4) }, JumpIf { condition: Relative(7), location: 706 }, Call { location: 908 }, Const { destination: Relative(17), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(9), op: LessThan, bit_size: U16, lhs: Relative(17), rhs: Relative(3) }, Const { destination: Relative(18), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(20), op: Sub, bit_size: U16, lhs: Relative(18), rhs: Relative(3) }, JumpIf { condition: Relative(9), location: 712 }, Jump { location: 714 }, Mov { destination: Relative(10), source: Relative(20) }, Jump { location: 716 }, Mov { destination: Relative(10), source: Relative(3) }, Jump { location: 716 }, Const { destination: Relative(17), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(11), op: LessThan, bit_size: U16, lhs: Relative(17), rhs: Relative(5) }, Const { destination: Relative(18), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(20), op: Sub, bit_size: U16, lhs: Relative(18), rhs: Relative(5) }, JumpIf { condition: Relative(11), location: 722 }, Jump { location: 724 }, Mov { destination: Relative(12), source: Relative(20) }, Jump { location: 726 }, Mov { destination: Relative(12), source: Relative(5) }, Jump { location: 726 }, BinaryIntOp { destination: Relative(7), op: Div, bit_size: U16, lhs: Relative(10), rhs: Relative(12) }, BinaryIntOp { destination: Relative(15), op: Xor, bit_size: U1, lhs: Relative(9), rhs: Relative(11) }, JumpIf { condition: Relative(15), location: 730 }, Jump { location: 732 }, Const { destination: Relative(17), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(7), op: Sub, bit_size: U16, lhs: Relative(17), rhs: Relative(7) }, JumpIf { condition: Relative(15), location: 738 }, Const { destination: Relative(18), bit_size: Integer(U16), value: 32768 }, BinaryIntOp { destination: Relative(17), op: LessThan, bit_size: U16, lhs: Relative(7), rhs: Relative(18) }, JumpIf { condition: Relative(17), location: 738 }, JumpIf { condition: Relative(17), location: 738 }, Call { location: 914 }, BinaryIntOp { destination: Relative(8), op: Mul, bit_size: U16, lhs: Relative(7), rhs: Relative(5) }, BinaryIntOp { destination: Relative(4), op: Sub, bit_size: U16, lhs: Relative(3), rhs: Relative(8) }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U16, lhs: Relative(6), rhs: Relative(4) }, JumpIf { condition: Relative(3), location: 744 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, Const { destination: Relative(12), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U16, lhs: Relative(12), rhs: Relative(1) }, Const { destination: Relative(15), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(17), op: Sub, bit_size: U16, lhs: Relative(15), rhs: Relative(1) }, JumpIf { condition: Relative(7), location: 750 }, Jump { location: 752 }, Mov { destination: Relative(8), source: Relative(17) }, Jump { location: 754 }, Mov { destination: Relative(8), source: Relative(1) }, Jump { location: 754 }, Const { destination: Relative(12), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(9), op: LessThan, bit_size: U16, lhs: Relative(12), rhs: Relative(5) }, Const { destination: Relative(15), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(17), op: Sub, bit_size: U16, lhs: Relative(15), rhs: Relative(5) }, JumpIf { condition: Relative(9), location: 760 }, Jump { location: 762 }, Mov { destination: Relative(10), source: Relative(17) }, Jump { location: 764 }, Mov { destination: Relative(10), source: Relative(5) }, Jump { location: 764 }, BinaryIntOp { destination: Relative(4), op: Div, bit_size: U16, lhs: Relative(8), rhs: Relative(10) }, BinaryIntOp { destination: Relative(11), op: Xor, bit_size: U1, lhs: Relative(7), rhs: Relative(9) }, JumpIf { condition: Relative(11), location: 768 }, Jump { location: 770 }, Const { destination: Relative(12), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(4), op: Sub, bit_size: U16, lhs: Relative(12), rhs: Relative(4) }, JumpIf { condition: Relative(11), location: 776 }, Const { destination: Relative(15), bit_size: Integer(U16), value: 32768 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U16, lhs: Relative(4), rhs: Relative(15) }, JumpIf { condition: Relative(12), location: 776 }, JumpIf { condition: Relative(12), location: 776 }, Call { location: 914 }, BinaryIntOp { destination: Relative(6), op: Mul, bit_size: U16, lhs: Relative(4), rhs: Relative(5) }, BinaryIntOp { destination: Relative(3), op: Sub, bit_size: U16, lhs: Relative(1), rhs: Relative(6) }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U16, lhs: Relative(2), rhs: Relative(3) }, JumpIf { condition: Relative(1), location: 782 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(4) } }, Return, Load { destination: Relative(5), source_pointer: Relative(2) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(1) }, Load { destination: Relative(6), source_pointer: Relative(9) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(1) }, Load { destination: Relative(7), source_pointer: Relative(10) }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U8, lhs: Relative(6), rhs: Relative(7) }, BinaryIntOp { destination: Relative(6), op: Mul, bit_size: U1, lhs: Relative(5), rhs: Relative(9) }, Store { destination_pointer: Relative(2), source: Relative(6) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, Mov { destination: Relative(1), source: Relative(5) }, Jump { location: 518 }, BinaryIntOp { destination: Relative(30), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, BinaryIntOp { destination: Relative(31), op: LessThan, bit_size: U32, lhs: Relative(30), rhs: Relative(29) }, JumpIf { condition: Relative(31), location: 800 }, Call { location: 883 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(30) }, Load { destination: Relative(31), source_pointer: Relative(33) }, Load { destination: Relative(30), source_pointer: Relative(27) }, Mov { destination: Direct(32771), source: Relative(30) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 886 }, Mov { destination: Relative(32), source: Direct(32773) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, BinaryIntOp { destination: Relative(34), op: Add, bit_size: U32, lhs: Relative(33), rhs: Relative(1) }, Store { destination_pointer: Relative(34), source: Relative(31) }, Store { destination_pointer: Relative(27), source: Relative(32) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, Mov { destination: Relative(1), source: Relative(30) }, Jump { location: 432 }, Load { destination: Relative(9), source_pointer: Relative(2) }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(1) }, Load { destination: Relative(10), source_pointer: Relative(12) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(1) }, Load { destination: Relative(11), source_pointer: Relative(15) }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U8, lhs: Relative(10), rhs: Relative(11) }, BinaryIntOp { destination: Relative(10), op: Mul, bit_size: U1, lhs: Relative(9), rhs: Relative(12) }, Store { destination_pointer: Relative(2), source: Relative(10) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, Mov { destination: Relative(1), source: Relative(9) }, Jump { location: 262 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Relative(6) }, JumpIf { condition: Relative(10), location: 831 }, Jump { location: 871 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(13) }, Load { destination: Relative(10), source_pointer: Relative(18) }, BinaryIntOp { destination: Relative(17), op: Mul, bit_size: U32, lhs: Relative(15), rhs: Relative(13) }, BinaryIntOp { destination: Relative(18), op: Sub, bit_size: U32, lhs: Relative(17), rhs: Relative(8) }, BinaryIntOp { destination: Relative(19), op: LessThanEquals, bit_size: U32, lhs: Relative(8), rhs: Relative(17) }, JumpIf { condition: Relative(19), location: 839 }, Call { location: 880 }, BinaryIntOp { destination: Relative(19), op: Shr, bit_size: U8, lhs: Relative(10), rhs: Relative(11) }, Const { destination: Relative(21), bit_size: Integer(U8), value: 16 }, BinaryIntOp { destination: Relative(22), op: Div, bit_size: U8, lhs: Relative(19), rhs: Relative(21) }, BinaryIntOp { destination: Relative(23), op: Mul, bit_size: U8, lhs: Relative(22), rhs: Relative(21) }, BinaryIntOp { destination: Relative(20), op: Sub, bit_size: U8, lhs: Relative(19), rhs: Relative(23) }, Load { destination: Relative(19), source_pointer: Relative(9) }, BinaryIntOp { destination: Relative(21), op: LessThan, bit_size: U32, lhs: Relative(18), rhs: Direct(32835) }, JumpIf { condition: Relative(21), location: 848 }, Call { location: 883 }, Mov { destination: Direct(32771), source: Relative(19) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 17 }, Call { location: 886 }, Mov { destination: Relative(21), source: Direct(32773) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(18) }, Store { destination_pointer: Relative(23), source: Relative(20) }, Const { destination: Relative(19), bit_size: Integer(U8), value: 16 }, BinaryIntOp { destination: Relative(20), op: Div, bit_size: U8, lhs: Relative(10), rhs: Relative(19) }, BinaryIntOp { destination: Relative(22), op: Mul, bit_size: U8, lhs: Relative(20), rhs: Relative(19) }, BinaryIntOp { destination: Relative(18), op: Sub, bit_size: U8, lhs: Relative(10), rhs: Relative(22) }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(17), rhs: Direct(32835) }, JumpIf { condition: Relative(10), location: 862 }, Call { location: 883 }, Mov { destination: Direct(32771), source: Relative(21) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 17 }, Call { location: 886 }, Mov { destination: Relative(10), source: Direct(32773) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(17) }, Store { destination_pointer: Relative(20), source: Relative(18) }, Store { destination_pointer: Relative(9), source: Relative(10) }, Jump { location: 871 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(8) }, Mov { destination: Relative(13), source: Relative(10) }, Jump { location: 195 }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 879 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 15764276373176857197 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 1998584279744703196 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 16431471497789672479 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32775), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32775), location: 890 }, Jump { location: 892 }, Mov { destination: Direct(32773), source: Direct(32771) }, Jump { location: 907 }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 904 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 897 }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32774), op: Sub, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Jump { location: 907 }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14990209321349310352 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 986260048197077973 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 13301295855638053177 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
