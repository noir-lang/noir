---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "bn254_modulus_be_bytes",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "bn254_modulus_be_bits",
        "type": {
          "kind": "array",
          "length": 254,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 1
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : 285",
    "private parameters indices : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285]",
    "public parameters indices : []",
    "return value indices : []",
    "EXPR [ (-1, _0) 48 ]",
    "EXPR [ (-1, _1) 100 ]",
    "EXPR [ (-1, _2) 78 ]",
    "EXPR [ (-1, _3) 114 ]",
    "EXPR [ (-1, _4) 225 ]",
    "EXPR [ (-1, _5) 49 ]",
    "EXPR [ (-1, _6) 160 ]",
    "EXPR [ (-1, _7) 41 ]",
    "EXPR [ (-1, _8) 184 ]",
    "EXPR [ (-1, _9) 80 ]",
    "EXPR [ (-1, _10) 69 ]",
    "EXPR [ (-1, _11) 182 ]",
    "EXPR [ (-1, _12) 129 ]",
    "EXPR [ (-1, _13) 129 ]",
    "EXPR [ (-1, _14) 88 ]",
    "EXPR [ (-1, _15) 93 ]",
    "EXPR [ (-1, _16) 40 ]",
    "EXPR [ (-1, _17) 51 ]",
    "EXPR [ (-1, _18) 232 ]",
    "EXPR [ (-1, _19) 72 ]",
    "EXPR [ (-1, _20) 121 ]",
    "EXPR [ (-1, _21) 185 ]",
    "EXPR [ (-1, _22) 112 ]",
    "EXPR [ (-1, _23) 145 ]",
    "EXPR [ (-1, _24) 67 ]",
    "EXPR [ (-1, _25) 225 ]",
    "EXPR [ (-1, _26) 245 ]",
    "EXPR [ (-1, _27) 147 ]",
    "EXPR [ (-1, _28) 240 ]",
    "EXPR [ (-1, _29) 0 ]",
    "EXPR [ (-1, _30) 0 ]",
    "EXPR [ (-1, _31) 1 ]",
    "EXPR [ (-1, _32) 1 ]",
    "EXPR [ (-1, _33) 1 ]",
    "EXPR [ (-1, _34) 0 ]",
    "EXPR [ (-1, _35) 0 ]",
    "EXPR [ (-1, _36) 0 ]",
    "EXPR [ (-1, _37) 0 ]",
    "EXPR [ (-1, _38) 0 ]",
    "EXPR [ (-1, _39) 1 ]",
    "EXPR [ (-1, _40) 1 ]",
    "EXPR [ (-1, _41) 0 ]",
    "EXPR [ (-1, _42) 0 ]",
    "EXPR [ (-1, _43) 1 ]",
    "EXPR [ (-1, _44) 0 ]",
    "EXPR [ (-1, _45) 0 ]",
    "EXPR [ (-1, _46) 0 ]",
    "EXPR [ (-1, _47) 1 ]",
    "EXPR [ (-1, _48) 0 ]",
    "EXPR [ (-1, _49) 0 ]",
    "EXPR [ (-1, _50) 1 ]",
    "EXPR [ (-1, _51) 1 ]",
    "EXPR [ (-1, _52) 1 ]",
    "EXPR [ (-1, _53) 0 ]",
    "EXPR [ (-1, _54) 0 ]",
    "EXPR [ (-1, _55) 1 ]",
    "EXPR [ (-1, _56) 1 ]",
    "EXPR [ (-1, _57) 1 ]",
    "EXPR [ (-1, _58) 0 ]",
    "EXPR [ (-1, _59) 0 ]",
    "EXPR [ (-1, _60) 1 ]",
    "EXPR [ (-1, _61) 0 ]",
    "EXPR [ (-1, _62) 1 ]",
    "EXPR [ (-1, _63) 1 ]",
    "EXPR [ (-1, _64) 1 ]",
    "EXPR [ (-1, _65) 0 ]",
    "EXPR [ (-1, _66) 0 ]",
    "EXPR [ (-1, _67) 0 ]",
    "EXPR [ (-1, _68) 0 ]",
    "EXPR [ (-1, _69) 1 ]",
    "EXPR [ (-1, _70) 0 ]",
    "EXPR [ (-1, _71) 0 ]",
    "EXPR [ (-1, _72) 1 ]",
    "EXPR [ (-1, _73) 1 ]",
    "EXPR [ (-1, _74) 0 ]",
    "EXPR [ (-1, _75) 0 ]",
    "EXPR [ (-1, _76) 0 ]",
    "EXPR [ (-1, _77) 1 ]",
    "EXPR [ (-1, _78) 1 ]",
    "EXPR [ (-1, _79) 0 ]",
    "EXPR [ (-1, _80) 1 ]",
    "EXPR [ (-1, _81) 0 ]",
    "EXPR [ (-1, _82) 0 ]",
    "EXPR [ (-1, _83) 0 ]",
    "EXPR [ (-1, _84) 0 ]",
    "EXPR [ (-1, _85) 0 ]",
    "EXPR [ (-1, _86) 0 ]",
    "EXPR [ (-1, _87) 0 ]",
    "EXPR [ (-1, _88) 1 ]",
    "EXPR [ (-1, _89) 0 ]",
    "EXPR [ (-1, _90) 1 ]",
    "EXPR [ (-1, _91) 0 ]",
    "EXPR [ (-1, _92) 0 ]",
    "EXPR [ (-1, _93) 1 ]",
    "EXPR [ (-1, _94) 1 ]",
    "EXPR [ (-1, _95) 0 ]",
    "EXPR [ (-1, _96) 1 ]",
    "EXPR [ (-1, _97) 1 ]",
    "EXPR [ (-1, _98) 1 ]",
    "EXPR [ (-1, _99) 0 ]",
    "EXPR [ (-1, _100) 0 ]",
    "EXPR [ (-1, _101) 0 ]",
    "EXPR [ (-1, _102) 0 ]",
    "EXPR [ (-1, _103) 1 ]",
    "EXPR [ (-1, _104) 0 ]",
    "EXPR [ (-1, _105) 1 ]",
    "EXPR [ (-1, _106) 0 ]",
    "EXPR [ (-1, _107) 0 ]",
    "EXPR [ (-1, _108) 0 ]",
    "EXPR [ (-1, _109) 0 ]",
    "EXPR [ (-1, _110) 0 ]",
    "EXPR [ (-1, _111) 1 ]",
    "EXPR [ (-1, _112) 0 ]",
    "EXPR [ (-1, _113) 0 ]",
    "EXPR [ (-1, _114) 0 ]",
    "EXPR [ (-1, _115) 1 ]",
    "EXPR [ (-1, _116) 0 ]",
    "EXPR [ (-1, _117) 1 ]",
    "EXPR [ (-1, _118) 1 ]",
    "EXPR [ (-1, _119) 0 ]",
    "EXPR [ (-1, _120) 1 ]",
    "EXPR [ (-1, _121) 1 ]",
    "EXPR [ (-1, _122) 0 ]",
    "EXPR [ (-1, _123) 1 ]",
    "EXPR [ (-1, _124) 1 ]",
    "EXPR [ (-1, _125) 0 ]",
    "EXPR [ (-1, _126) 1 ]",
    "EXPR [ (-1, _127) 0 ]",
    "EXPR [ (-1, _128) 0 ]",
    "EXPR [ (-1, _129) 0 ]",
    "EXPR [ (-1, _130) 0 ]",
    "EXPR [ (-1, _131) 0 ]",
    "EXPR [ (-1, _132) 0 ]",
    "EXPR [ (-1, _133) 1 ]",
    "EXPR [ (-1, _134) 1 ]",
    "EXPR [ (-1, _135) 0 ]",
    "EXPR [ (-1, _136) 0 ]",
    "EXPR [ (-1, _137) 0 ]",
    "EXPR [ (-1, _138) 0 ]",
    "EXPR [ (-1, _139) 0 ]",
    "EXPR [ (-1, _140) 0 ]",
    "EXPR [ (-1, _141) 1 ]",
    "EXPR [ (-1, _142) 0 ]",
    "EXPR [ (-1, _143) 1 ]",
    "EXPR [ (-1, _144) 0 ]",
    "EXPR [ (-1, _145) 1 ]",
    "EXPR [ (-1, _146) 1 ]",
    "EXPR [ (-1, _147) 0 ]",
    "EXPR [ (-1, _148) 0 ]",
    "EXPR [ (-1, _149) 0 ]",
    "EXPR [ (-1, _150) 0 ]",
    "EXPR [ (-1, _151) 1 ]",
    "EXPR [ (-1, _152) 0 ]",
    "EXPR [ (-1, _153) 1 ]",
    "EXPR [ (-1, _154) 1 ]",
    "EXPR [ (-1, _155) 1 ]",
    "EXPR [ (-1, _156) 0 ]",
    "EXPR [ (-1, _157) 1 ]",
    "EXPR [ (-1, _158) 0 ]",
    "EXPR [ (-1, _159) 0 ]",
    "EXPR [ (-1, _160) 1 ]",
    "EXPR [ (-1, _161) 0 ]",
    "EXPR [ (-1, _162) 1 ]",
    "EXPR [ (-1, _163) 0 ]",
    "EXPR [ (-1, _164) 0 ]",
    "EXPR [ (-1, _165) 0 ]",
    "EXPR [ (-1, _166) 0 ]",
    "EXPR [ (-1, _167) 0 ]",
    "EXPR [ (-1, _168) 1 ]",
    "EXPR [ (-1, _169) 1 ]",
    "EXPR [ (-1, _170) 0 ]",
    "EXPR [ (-1, _171) 0 ]",
    "EXPR [ (-1, _172) 1 ]",
    "EXPR [ (-1, _173) 1 ]",
    "EXPR [ (-1, _174) 1 ]",
    "EXPR [ (-1, _175) 1 ]",
    "EXPR [ (-1, _176) 1 ]",
    "EXPR [ (-1, _177) 0 ]",
    "EXPR [ (-1, _178) 1 ]",
    "EXPR [ (-1, _179) 0 ]",
    "EXPR [ (-1, _180) 0 ]",
    "EXPR [ (-1, _181) 0 ]",
    "EXPR [ (-1, _182) 0 ]",
    "EXPR [ (-1, _183) 1 ]",
    "EXPR [ (-1, _184) 0 ]",
    "EXPR [ (-1, _185) 0 ]",
    "EXPR [ (-1, _186) 1 ]",
    "EXPR [ (-1, _187) 0 ]",
    "EXPR [ (-1, _188) 0 ]",
    "EXPR [ (-1, _189) 0 ]",
    "EXPR [ (-1, _190) 0 ]",
    "EXPR [ (-1, _191) 1 ]",
    "EXPR [ (-1, _192) 1 ]",
    "EXPR [ (-1, _193) 1 ]",
    "EXPR [ (-1, _194) 1 ]",
    "EXPR [ (-1, _195) 0 ]",
    "EXPR [ (-1, _196) 0 ]",
    "EXPR [ (-1, _197) 1 ]",
    "EXPR [ (-1, _198) 1 ]",
    "EXPR [ (-1, _199) 0 ]",
    "EXPR [ (-1, _200) 1 ]",
    "EXPR [ (-1, _201) 1 ]",
    "EXPR [ (-1, _202) 1 ]",
    "EXPR [ (-1, _203) 0 ]",
    "EXPR [ (-1, _204) 0 ]",
    "EXPR [ (-1, _205) 1 ]",
    "EXPR [ (-1, _206) 0 ]",
    "EXPR [ (-1, _207) 1 ]",
    "EXPR [ (-1, _208) 1 ]",
    "EXPR [ (-1, _209) 1 ]",
    "EXPR [ (-1, _210) 0 ]",
    "EXPR [ (-1, _211) 0 ]",
    "EXPR [ (-1, _212) 0 ]",
    "EXPR [ (-1, _213) 0 ]",
    "EXPR [ (-1, _214) 1 ]",
    "EXPR [ (-1, _215) 0 ]",
    "EXPR [ (-1, _216) 0 ]",
    "EXPR [ (-1, _217) 1 ]",
    "EXPR [ (-1, _218) 0 ]",
    "EXPR [ (-1, _219) 0 ]",
    "EXPR [ (-1, _220) 0 ]",
    "EXPR [ (-1, _221) 1 ]",
    "EXPR [ (-1, _222) 0 ]",
    "EXPR [ (-1, _223) 1 ]",
    "EXPR [ (-1, _224) 0 ]",
    "EXPR [ (-1, _225) 0 ]",
    "EXPR [ (-1, _226) 0 ]",
    "EXPR [ (-1, _227) 0 ]",
    "EXPR [ (-1, _228) 1 ]",
    "EXPR [ (-1, _229) 1 ]",
    "EXPR [ (-1, _230) 1 ]",
    "EXPR [ (-1, _231) 1 ]",
    "EXPR [ (-1, _232) 1 ]",
    "EXPR [ (-1, _233) 0 ]",
    "EXPR [ (-1, _234) 0 ]",
    "EXPR [ (-1, _235) 0 ]",
    "EXPR [ (-1, _236) 0 ]",
    "EXPR [ (-1, _237) 1 ]",
    "EXPR [ (-1, _238) 1 ]",
    "EXPR [ (-1, _239) 1 ]",
    "EXPR [ (-1, _240) 1 ]",
    "EXPR [ (-1, _241) 1 ]",
    "EXPR [ (-1, _242) 0 ]",
    "EXPR [ (-1, _243) 1 ]",
    "EXPR [ (-1, _244) 0 ]",
    "EXPR [ (-1, _245) 1 ]",
    "EXPR [ (-1, _246) 1 ]",
    "EXPR [ (-1, _247) 0 ]",
    "EXPR [ (-1, _248) 0 ]",
    "EXPR [ (-1, _249) 1 ]",
    "EXPR [ (-1, _250) 0 ]",
    "EXPR [ (-1, _251) 0 ]",
    "EXPR [ (-1, _252) 1 ]",
    "EXPR [ (-1, _253) 1 ]",
    "EXPR [ (-1, _254) 1 ]",
    "EXPR [ (-1, _255) 1 ]",
    "EXPR [ (-1, _256) 1 ]",
    "EXPR [ (-1, _257) 1 ]",
    "EXPR [ (-1, _258) 0 ]",
    "EXPR [ (-1, _259) 0 ]",
    "EXPR [ (-1, _260) 0 ]",
    "EXPR [ (-1, _261) 0 ]",
    "EXPR [ (-1, _262) 0 ]",
    "EXPR [ (-1, _263) 0 ]",
    "EXPR [ (-1, _264) 0 ]",
    "EXPR [ (-1, _265) 0 ]",
    "EXPR [ (-1, _266) 0 ]",
    "EXPR [ (-1, _267) 0 ]",
    "EXPR [ (-1, _268) 0 ]",
    "EXPR [ (-1, _269) 0 ]",
    "EXPR [ (-1, _270) 0 ]",
    "EXPR [ (-1, _271) 0 ]",
    "EXPR [ (-1, _272) 0 ]",
    "EXPR [ (-1, _273) 0 ]",
    "EXPR [ (-1, _274) 0 ]",
    "EXPR [ (-1, _275) 0 ]",
    "EXPR [ (-1, _276) 0 ]",
    "EXPR [ (-1, _277) 0 ]",
    "EXPR [ (-1, _278) 0 ]",
    "EXPR [ (-1, _279) 0 ]",
    "EXPR [ (-1, _280) 0 ]",
    "EXPR [ (-1, _281) 0 ]",
    "EXPR [ (-1, _282) 0 ]",
    "EXPR [ (-1, _283) 0 ]",
    "EXPR [ (-1, _284) 0 ]",
    "EXPR [ (-1, _285) 1 ]"
  ],
  "debug_symbols": "ldtNahtZAIXRvdTYA92r+vVWmibIthwEQjay3dCY7L2VkEBoMjkzvXrcmnxocqA+h6fjw8fXL6fL88vbcP/X53B+eTy8n14ut9PnsPvx6O31cPl+ens/XN+H+3Fd74bj5Wm4n8Z8uxueT+fj7ffu2993Q3RQHex1MOpg0sGsg0UHqw42DuepuXU4drh2OHe4dzh4uHg4ebh5uXn9/83Ny83LzcvNy83LzcvNy8333HzPzfd/bL6mPxfrtP5/sefFyIuJFzMvFl6svNh0Me54EV5w85Gbj9x85OYjNx+5+cjNR24+cfOJm0/cfOLmEzefuPnEzSduPnHziZvP3Hzm5jM3n7n5zM1nbj5z85mbz9x85uYLN1+4+cLNF26+cPOFmy/cfOHmCzdfuPnKzVduvnLzlZuv3Hzl5is3X7n5ys1Xbr5x842bb9x84+YbN9+4+cbNN26+cfONm2e380l8Up/sfTL6ZPLJ7JPFJ6tPvH68frx+vH68frx+vH68frx+vH68fr1+vX69fr1+vX69fr1+vX69fr3+3uvvvb5DXVzq4lQXt7o41sW1Ls51ca+Lg11c7OJkFze7ONrF1S7OdnG3i8NdXO7idBe3uzjexfUuzndxv4sDXlzw4oQXN7w44sUVL854cceLQ15c8uKUF7e8OObFNS/OeXHPi4NeXPTipBc3vTjqxVUvznpx14vDXlz24rQXt7047sV1L857cd+LA19c+OLEFze+OPLFlS/OfHHni0NfXPri1Be3vrr11a2vbn1166tbX9366tZXt7669dWtr259deurW1/d+urWV7e+uvXVra9ufXXrq1tf3frq1le3vrr11a2vbn1166tbX9366tZXt7669dWtr259deurW1/d+urWV7e+uvXVra9ufXXrq1tf3frq1le3vrr11a2vbn1166tbX9366tZXt7669dWtr259deurW1/d+urWV7e+uvXVra9ufXXrq1tf3frq1le3vrr11a2vbn1166tbX9366tZXt7669dWtr259deurW1/V+m6Hh+vpfD59/fL7F4q3x/8crqfDw/n48/j8cXn87fb939dfN7/2r9eXx+PTx/X4/U0/7m6v/w8=",
  "file_map": {
    "50": {
      "source": "fn main(bn254_modulus_be_bytes: [u8; 32], bn254_modulus_be_bits: [u1; 254]) {\n    let modulus_size = std::field::modulus_num_bits();\n    // NOTE: The constraints used in this circuit will only work when testing nargo with the plonk bn254 backend\n    assert(modulus_size == 254);\n\n    assert_reverse(\n        std::field::modulus_be_bytes(),\n        std::field::modulus_le_bytes(),\n    );\n\n    let modulus_be_byte_array = std::field::modulus_be_bytes();\n    for i in 0..32 {\n        assert(modulus_be_byte_array[i] == bn254_modulus_be_bytes[i]);\n    }\n    let modulus_le_byte_array = std::field::modulus_le_bytes();\n    for i in 0..32 {\n        assert(modulus_le_byte_array[i] == bn254_modulus_be_bytes[31 - i]);\n    }\n\n    let modulus_be_bits = std::field::modulus_be_bits();\n    for i in 0..254 {\n        assert(modulus_be_bits[i] == bn254_modulus_be_bits[i]);\n    }\n    let modulus_le_bits = std::field::modulus_le_bits();\n    for i in 0..254 {\n        assert(modulus_le_bits[i] == bn254_modulus_be_bits[253 - i]);\n    }\n}\n\nfn assert_reverse(forwards: [u8], backwards: [u8]) {\n    for i in 0..32 {\n        assert_eq(forwards[i], backwards[31 - i]);\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": []
}
