---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "bn254_modulus_be_bytes",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "bn254_modulus_be_bits",
        "type": {
          "kind": "array",
          "length": 254,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 1
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _285",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99, _100, _101, _102, _103, _104, _105, _106, _107, _108, _109, _110, _111, _112, _113, _114, _115, _116, _117, _118, _119, _120, _121, _122, _123, _124, _125, _126, _127, _128, _129, _130, _131, _132, _133, _134, _135, _136, _137, _138, _139, _140, _141, _142, _143, _144, _145, _146, _147, _148, _149, _150, _151, _152, _153, _154, _155, _156, _157, _158, _159, _160, _161, _162, _163, _164, _165, _166, _167, _168, _169, _170, _171, _172, _173, _174, _175, _176, _177, _178, _179, _180, _181, _182, _183, _184, _185, _186, _187, _188, _189, _190, _191, _192, _193, _194, _195, _196, _197, _198, _199, _200, _201, _202, _203, _204, _205, _206, _207, _208, _209, _210, _211, _212, _213, _214, _215, _216, _217, _218, _219, _220, _221, _222, _223, _224, _225, _226, _227, _228, _229, _230, _231, _232, _233, _234, _235, _236, _237, _238, _239, _240, _241, _242, _243, _244, _245, _246, _247, _248, _249, _250, _251, _252, _253, _254, _255, _256, _257, _258, _259, _260, _261, _262, _263, _264, _265, _266, _267, _268, _269, _270, _271, _272, _273, _274, _275, _276, _277, _278, _279, _280, _281, _282, _283, _284, _285]",
    "public parameters indices : []",
    "return value indices : []",
    "EXPR [ (-1, _0) 48 ]",
    "EXPR [ (-1, _1) 100 ]",
    "EXPR [ (-1, _2) 78 ]",
    "EXPR [ (-1, _3) 114 ]",
    "EXPR [ (-1, _4) 225 ]",
    "EXPR [ (-1, _5) 49 ]",
    "EXPR [ (-1, _6) 160 ]",
    "EXPR [ (-1, _7) 41 ]",
    "EXPR [ (-1, _8) 184 ]",
    "EXPR [ (-1, _9) 80 ]",
    "EXPR [ (-1, _10) 69 ]",
    "EXPR [ (-1, _11) 182 ]",
    "EXPR [ (-1, _12) 129 ]",
    "EXPR [ (-1, _13) 129 ]",
    "EXPR [ (-1, _14) 88 ]",
    "EXPR [ (-1, _15) 93 ]",
    "EXPR [ (-1, _16) 40 ]",
    "EXPR [ (-1, _17) 51 ]",
    "EXPR [ (-1, _18) 232 ]",
    "EXPR [ (-1, _19) 72 ]",
    "EXPR [ (-1, _20) 121 ]",
    "EXPR [ (-1, _21) 185 ]",
    "EXPR [ (-1, _22) 112 ]",
    "EXPR [ (-1, _23) 145 ]",
    "EXPR [ (-1, _24) 67 ]",
    "EXPR [ (-1, _25) 225 ]",
    "EXPR [ (-1, _26) 245 ]",
    "EXPR [ (-1, _27) 147 ]",
    "EXPR [ (-1, _28) 240 ]",
    "EXPR [ (-1, _29) 0 ]",
    "EXPR [ (-1, _30) 0 ]",
    "EXPR [ (-1, _31) 1 ]",
    "EXPR [ (-1, _32) 1 ]",
    "EXPR [ (-1, _33) 1 ]",
    "EXPR [ (-1, _34) 0 ]",
    "EXPR [ (-1, _35) 0 ]",
    "EXPR [ (-1, _36) 0 ]",
    "EXPR [ (-1, _37) 0 ]",
    "EXPR [ (-1, _38) 0 ]",
    "EXPR [ (-1, _39) 1 ]",
    "EXPR [ (-1, _40) 1 ]",
    "EXPR [ (-1, _41) 0 ]",
    "EXPR [ (-1, _42) 0 ]",
    "EXPR [ (-1, _43) 1 ]",
    "EXPR [ (-1, _44) 0 ]",
    "EXPR [ (-1, _45) 0 ]",
    "EXPR [ (-1, _46) 0 ]",
    "EXPR [ (-1, _47) 1 ]",
    "EXPR [ (-1, _48) 0 ]",
    "EXPR [ (-1, _49) 0 ]",
    "EXPR [ (-1, _50) 1 ]",
    "EXPR [ (-1, _51) 1 ]",
    "EXPR [ (-1, _52) 1 ]",
    "EXPR [ (-1, _53) 0 ]",
    "EXPR [ (-1, _54) 0 ]",
    "EXPR [ (-1, _55) 1 ]",
    "EXPR [ (-1, _56) 1 ]",
    "EXPR [ (-1, _57) 1 ]",
    "EXPR [ (-1, _58) 0 ]",
    "EXPR [ (-1, _59) 0 ]",
    "EXPR [ (-1, _60) 1 ]",
    "EXPR [ (-1, _61) 0 ]",
    "EXPR [ (-1, _62) 1 ]",
    "EXPR [ (-1, _63) 1 ]",
    "EXPR [ (-1, _64) 1 ]",
    "EXPR [ (-1, _65) 0 ]",
    "EXPR [ (-1, _66) 0 ]",
    "EXPR [ (-1, _67) 0 ]",
    "EXPR [ (-1, _68) 0 ]",
    "EXPR [ (-1, _69) 1 ]",
    "EXPR [ (-1, _70) 0 ]",
    "EXPR [ (-1, _71) 0 ]",
    "EXPR [ (-1, _72) 1 ]",
    "EXPR [ (-1, _73) 1 ]",
    "EXPR [ (-1, _74) 0 ]",
    "EXPR [ (-1, _75) 0 ]",
    "EXPR [ (-1, _76) 0 ]",
    "EXPR [ (-1, _77) 1 ]",
    "EXPR [ (-1, _78) 1 ]",
    "EXPR [ (-1, _79) 0 ]",
    "EXPR [ (-1, _80) 1 ]",
    "EXPR [ (-1, _81) 0 ]",
    "EXPR [ (-1, _82) 0 ]",
    "EXPR [ (-1, _83) 0 ]",
    "EXPR [ (-1, _84) 0 ]",
    "EXPR [ (-1, _85) 0 ]",
    "EXPR [ (-1, _86) 0 ]",
    "EXPR [ (-1, _87) 0 ]",
    "EXPR [ (-1, _88) 1 ]",
    "EXPR [ (-1, _89) 0 ]",
    "EXPR [ (-1, _90) 1 ]",
    "EXPR [ (-1, _91) 0 ]",
    "EXPR [ (-1, _92) 0 ]",
    "EXPR [ (-1, _93) 1 ]",
    "EXPR [ (-1, _94) 1 ]",
    "EXPR [ (-1, _95) 0 ]",
    "EXPR [ (-1, _96) 1 ]",
    "EXPR [ (-1, _97) 1 ]",
    "EXPR [ (-1, _98) 1 ]",
    "EXPR [ (-1, _99) 0 ]",
    "EXPR [ (-1, _100) 0 ]",
    "EXPR [ (-1, _101) 0 ]",
    "EXPR [ (-1, _102) 0 ]",
    "EXPR [ (-1, _103) 1 ]",
    "EXPR [ (-1, _104) 0 ]",
    "EXPR [ (-1, _105) 1 ]",
    "EXPR [ (-1, _106) 0 ]",
    "EXPR [ (-1, _107) 0 ]",
    "EXPR [ (-1, _108) 0 ]",
    "EXPR [ (-1, _109) 0 ]",
    "EXPR [ (-1, _110) 0 ]",
    "EXPR [ (-1, _111) 1 ]",
    "EXPR [ (-1, _112) 0 ]",
    "EXPR [ (-1, _113) 0 ]",
    "EXPR [ (-1, _114) 0 ]",
    "EXPR [ (-1, _115) 1 ]",
    "EXPR [ (-1, _116) 0 ]",
    "EXPR [ (-1, _117) 1 ]",
    "EXPR [ (-1, _118) 1 ]",
    "EXPR [ (-1, _119) 0 ]",
    "EXPR [ (-1, _120) 1 ]",
    "EXPR [ (-1, _121) 1 ]",
    "EXPR [ (-1, _122) 0 ]",
    "EXPR [ (-1, _123) 1 ]",
    "EXPR [ (-1, _124) 1 ]",
    "EXPR [ (-1, _125) 0 ]",
    "EXPR [ (-1, _126) 1 ]",
    "EXPR [ (-1, _127) 0 ]",
    "EXPR [ (-1, _128) 0 ]",
    "EXPR [ (-1, _129) 0 ]",
    "EXPR [ (-1, _130) 0 ]",
    "EXPR [ (-1, _131) 0 ]",
    "EXPR [ (-1, _132) 0 ]",
    "EXPR [ (-1, _133) 1 ]",
    "EXPR [ (-1, _134) 1 ]",
    "EXPR [ (-1, _135) 0 ]",
    "EXPR [ (-1, _136) 0 ]",
    "EXPR [ (-1, _137) 0 ]",
    "EXPR [ (-1, _138) 0 ]",
    "EXPR [ (-1, _139) 0 ]",
    "EXPR [ (-1, _140) 0 ]",
    "EXPR [ (-1, _141) 1 ]",
    "EXPR [ (-1, _142) 0 ]",
    "EXPR [ (-1, _143) 1 ]",
    "EXPR [ (-1, _144) 0 ]",
    "EXPR [ (-1, _145) 1 ]",
    "EXPR [ (-1, _146) 1 ]",
    "EXPR [ (-1, _147) 0 ]",
    "EXPR [ (-1, _148) 0 ]",
    "EXPR [ (-1, _149) 0 ]",
    "EXPR [ (-1, _150) 0 ]",
    "EXPR [ (-1, _151) 1 ]",
    "EXPR [ (-1, _152) 0 ]",
    "EXPR [ (-1, _153) 1 ]",
    "EXPR [ (-1, _154) 1 ]",
    "EXPR [ (-1, _155) 1 ]",
    "EXPR [ (-1, _156) 0 ]",
    "EXPR [ (-1, _157) 1 ]",
    "EXPR [ (-1, _158) 0 ]",
    "EXPR [ (-1, _159) 0 ]",
    "EXPR [ (-1, _160) 1 ]",
    "EXPR [ (-1, _161) 0 ]",
    "EXPR [ (-1, _162) 1 ]",
    "EXPR [ (-1, _163) 0 ]",
    "EXPR [ (-1, _164) 0 ]",
    "EXPR [ (-1, _165) 0 ]",
    "EXPR [ (-1, _166) 0 ]",
    "EXPR [ (-1, _167) 0 ]",
    "EXPR [ (-1, _168) 1 ]",
    "EXPR [ (-1, _169) 1 ]",
    "EXPR [ (-1, _170) 0 ]",
    "EXPR [ (-1, _171) 0 ]",
    "EXPR [ (-1, _172) 1 ]",
    "EXPR [ (-1, _173) 1 ]",
    "EXPR [ (-1, _174) 1 ]",
    "EXPR [ (-1, _175) 1 ]",
    "EXPR [ (-1, _176) 1 ]",
    "EXPR [ (-1, _177) 0 ]",
    "EXPR [ (-1, _178) 1 ]",
    "EXPR [ (-1, _179) 0 ]",
    "EXPR [ (-1, _180) 0 ]",
    "EXPR [ (-1, _181) 0 ]",
    "EXPR [ (-1, _182) 0 ]",
    "EXPR [ (-1, _183) 1 ]",
    "EXPR [ (-1, _184) 0 ]",
    "EXPR [ (-1, _185) 0 ]",
    "EXPR [ (-1, _186) 1 ]",
    "EXPR [ (-1, _187) 0 ]",
    "EXPR [ (-1, _188) 0 ]",
    "EXPR [ (-1, _189) 0 ]",
    "EXPR [ (-1, _190) 0 ]",
    "EXPR [ (-1, _191) 1 ]",
    "EXPR [ (-1, _192) 1 ]",
    "EXPR [ (-1, _193) 1 ]",
    "EXPR [ (-1, _194) 1 ]",
    "EXPR [ (-1, _195) 0 ]",
    "EXPR [ (-1, _196) 0 ]",
    "EXPR [ (-1, _197) 1 ]",
    "EXPR [ (-1, _198) 1 ]",
    "EXPR [ (-1, _199) 0 ]",
    "EXPR [ (-1, _200) 1 ]",
    "EXPR [ (-1, _201) 1 ]",
    "EXPR [ (-1, _202) 1 ]",
    "EXPR [ (-1, _203) 0 ]",
    "EXPR [ (-1, _204) 0 ]",
    "EXPR [ (-1, _205) 1 ]",
    "EXPR [ (-1, _206) 0 ]",
    "EXPR [ (-1, _207) 1 ]",
    "EXPR [ (-1, _208) 1 ]",
    "EXPR [ (-1, _209) 1 ]",
    "EXPR [ (-1, _210) 0 ]",
    "EXPR [ (-1, _211) 0 ]",
    "EXPR [ (-1, _212) 0 ]",
    "EXPR [ (-1, _213) 0 ]",
    "EXPR [ (-1, _214) 1 ]",
    "EXPR [ (-1, _215) 0 ]",
    "EXPR [ (-1, _216) 0 ]",
    "EXPR [ (-1, _217) 1 ]",
    "EXPR [ (-1, _218) 0 ]",
    "EXPR [ (-1, _219) 0 ]",
    "EXPR [ (-1, _220) 0 ]",
    "EXPR [ (-1, _221) 1 ]",
    "EXPR [ (-1, _222) 0 ]",
    "EXPR [ (-1, _223) 1 ]",
    "EXPR [ (-1, _224) 0 ]",
    "EXPR [ (-1, _225) 0 ]",
    "EXPR [ (-1, _226) 0 ]",
    "EXPR [ (-1, _227) 0 ]",
    "EXPR [ (-1, _228) 1 ]",
    "EXPR [ (-1, _229) 1 ]",
    "EXPR [ (-1, _230) 1 ]",
    "EXPR [ (-1, _231) 1 ]",
    "EXPR [ (-1, _232) 1 ]",
    "EXPR [ (-1, _233) 0 ]",
    "EXPR [ (-1, _234) 0 ]",
    "EXPR [ (-1, _235) 0 ]",
    "EXPR [ (-1, _236) 0 ]",
    "EXPR [ (-1, _237) 1 ]",
    "EXPR [ (-1, _238) 1 ]",
    "EXPR [ (-1, _239) 1 ]",
    "EXPR [ (-1, _240) 1 ]",
    "EXPR [ (-1, _241) 1 ]",
    "EXPR [ (-1, _242) 0 ]",
    "EXPR [ (-1, _243) 1 ]",
    "EXPR [ (-1, _244) 0 ]",
    "EXPR [ (-1, _245) 1 ]",
    "EXPR [ (-1, _246) 1 ]",
    "EXPR [ (-1, _247) 0 ]",
    "EXPR [ (-1, _248) 0 ]",
    "EXPR [ (-1, _249) 1 ]",
    "EXPR [ (-1, _250) 0 ]",
    "EXPR [ (-1, _251) 0 ]",
    "EXPR [ (-1, _252) 1 ]",
    "EXPR [ (-1, _253) 1 ]",
    "EXPR [ (-1, _254) 1 ]",
    "EXPR [ (-1, _255) 1 ]",
    "EXPR [ (-1, _256) 1 ]",
    "EXPR [ (-1, _257) 1 ]",
    "EXPR [ (-1, _258) 0 ]",
    "EXPR [ (-1, _259) 0 ]",
    "EXPR [ (-1, _260) 0 ]",
    "EXPR [ (-1, _261) 0 ]",
    "EXPR [ (-1, _262) 0 ]",
    "EXPR [ (-1, _263) 0 ]",
    "EXPR [ (-1, _264) 0 ]",
    "EXPR [ (-1, _265) 0 ]",
    "EXPR [ (-1, _266) 0 ]",
    "EXPR [ (-1, _267) 0 ]",
    "EXPR [ (-1, _268) 0 ]",
    "EXPR [ (-1, _269) 0 ]",
    "EXPR [ (-1, _270) 0 ]",
    "EXPR [ (-1, _271) 0 ]",
    "EXPR [ (-1, _272) 0 ]",
    "EXPR [ (-1, _273) 0 ]",
    "EXPR [ (-1, _274) 0 ]",
    "EXPR [ (-1, _275) 0 ]",
    "EXPR [ (-1, _276) 0 ]",
    "EXPR [ (-1, _277) 0 ]",
    "EXPR [ (-1, _278) 0 ]",
    "EXPR [ (-1, _279) 0 ]",
    "EXPR [ (-1, _280) 0 ]",
    "EXPR [ (-1, _281) 0 ]",
    "EXPR [ (-1, _282) 0 ]",
    "EXPR [ (-1, _283) 0 ]",
    "EXPR [ (-1, _284) 0 ]",
    "EXPR [ (-1, _285) 1 ]"
  ],
  "debug_symbols": "pdbBattAFIXhd9HaC58jjTTKq5QSHEcpBmMbxS6UkHevovOnTReB0m7mJlbmJ5j7gV6ax+nh9u3+cHo6Pzd3X16ah/lwPB6+3R/P+931cD4tn768bpr3X++v8zQtHzUfni+3Lrt5Ol2bu9PteNw033fH2/pHz5fdaZ3X3bw83W6a6fS4zCX4dDhObz+9bn7f3n5+tajncun063r56/tdrf91v7Yd92up/3Jf/uT+1+W33f4w//GNN9vmbrmg9fR6tuvZrWdZz349h/Ws6znmFpdzW7mu3FcCSkFJKA0lolScivkfUnEqTsWpOBWn4lScSptKm0q7VJbvsW0zuoyS0WcMGTVjXEe3zVBGKl0qXSpdKl0qXSpdKl0qJZWSSkmlpFJSKamUVEoqJZWSSp9Kn0qfSp9Kn0qfSp9Kn0qfSp/KkMqQypDKkMqQypDKkMqQypDKkEpNpaZSU6mp1FRqKjWVmkpNpaYypjKmMqYypjKmMqYypjKmMqYypqLtlimmmS2zYxZmzxyYlUlP9ERP9ERP9ERP9ERP9ETP9EzP9EzP9EzP9EzP9EyvpdfSY7nFdov1FvstFlxsuFhxseNiycWWizUXey4WXWy6WHWx62LZxbaLdRf7LhZebLxYebHzYunF1ou1F3svFl9svlh9sfti+cX2i/UX+y8ACAGCgDAgEAgFgoFwICAICYKCsCAwCA2Cg/AgQAgRgoQwIVAIFYKFcCFgCBmChrAhcAgdgofwYXwYH8aH8WF8GB/Gh/FhfBgfxofxYXwYH8aH8WF8GB/Gh/FhfBgfxofxYXwYH8aH8WF8GB/Gh/FhfBgfxofxYXwYH8aH8WF8GB/Gh/FhfBgfxofxYXwYH8aH8WF8GB/Gh/FhfBgfxofxYXwYH8aH8WF8GB/Gh/FhfBgfxofxYXwYH8aH8WF8GB/Gh/FhfBgfxofxYXx49fH69iozH3YPx4k3wKfbaf/hhfD64/L+5P2V8TKf99PjbZ7eXmXWZ8vLzU8=",
  "file_map": {
    "50": {
      "source": "fn main(bn254_modulus_be_bytes: [u8; 32], bn254_modulus_be_bits: [u1; 254]) {\n    let modulus_size = std::field::modulus_num_bits();\n    // NOTE: The constraints used in this circuit will only work when testing nargo with the plonk bn254 backend\n    assert(modulus_size == 254);\n\n    assert_reverse(\n        std::field::modulus_be_bytes(),\n        std::field::modulus_le_bytes(),\n    );\n\n    let modulus_be_byte_array = std::field::modulus_be_bytes();\n    for i in 0..32 {\n        assert(modulus_be_byte_array[i] == bn254_modulus_be_bytes[i]);\n    }\n    let modulus_le_byte_array = std::field::modulus_le_bytes();\n    for i in 0..32 {\n        assert(modulus_le_byte_array[i] == bn254_modulus_be_bytes[31 - i]);\n    }\n\n    let modulus_be_bits = std::field::modulus_be_bits();\n    for i in 0..254 {\n        assert(modulus_be_bits[i] == bn254_modulus_be_bits[i]);\n    }\n    let modulus_le_bits = std::field::modulus_le_bits();\n    for i in 0..254 {\n        assert(modulus_le_bits[i] == bn254_modulus_be_bits[253 - i]);\n    }\n}\n\nfn assert_reverse(forwards: [u8], backwards: [u8]) {\n    for i in 0..32 {\n        assert_eq(forwards[i], backwards[31 - i]);\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": []
}
