---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "bn254_modulus_be_bytes",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "bn254_modulus_be_bits",
        "type": {
          "kind": "array",
          "length": 254,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 1
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "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",
  "debug_symbols": "td3RbpXHFUfxd/E1F2f2npm9J69SVREhNLKEIAJSqYry7rVbTFHPAbRW4huEDX8+rLWJnZ8vzu93P7/+6bdffrx/+493H+5++Nvvd2/evXr58f7d24e3fv/jxd1P7+/fvLn/5ccv3313efwhc/5n8OHXl28f3/7w8eX7j3c/5KVf3L1++/PDz7If/oB/3L95fffDuvzx9xcPk8Unm0+KT5pPDp7MC58MPgk+ST7h9SevP3n9yetPXn/y+ovXX7z+4vUXr794/cXrL15/8fqL11+8/ub1N6+/ef3N629ef/P6m9ffvP7m9TevX7x+8frF6xevX7x+8frF6xevX7x+8frN6zev37x+8/rN6zev37x+8/rN6zevf3j9w+sfXv/w+ofXP7z+4fUPr394/YPrz8uFTwafBJ8kn0w+WXyy+aT4pPmE1x+8/uD1B68/eP3B6w9ef/D6g9cfvP7g9YPXD14/eP3g9YPXD14/eP3g9YPXD14/ef3k9ZPXT16fW9/k1je59U1ufZNb3/yK9c3Pk7qafMX6vjkZfBJ8knwy+WTxyeaT4pPmE15/8fqL11+8/uL1F6+/eP3F6y9ef/H6i9ffvP7m9Tevv3n9zetvXn/z+pvX37z+5vWL1y9ev3j94vWL1y9ev3j94vWL1y9ev3n95vWb129ev3n95vWb129ev3n95vUPr394/cPrH17/8PqH1z+8/uH1D69/cP11ufDJ4JPgk+STySeLTzafFJ80n/D6g9cfvP7g9QevP3j92wwVPZ8mvb6cvLj6reNynn7vw0/31Z9/s/vD13SfNg9fd/3/5LaN7Lx8muyMq8nNG6759DeryqvJ5pPik+aTgye31eLbk8EnwSfJJ5NPeP3J609ef/L6k9dfvP7i9Revv3j9xesvXn/x+ovXX7z+4vU3r795/c3rb15/8/qb19+8/ub1N6+/ef3i9YvXL16/eP3i9YvXL16/eP3i9YvXb16/ef3m9ZvXb16/ef3m9ZvXb16/ef3D6x9e//D6h9c/vP7h9Q+vf3j9w+sfXH9fLnwy+CT4JPlk8snik80nxSfNJ7z+4PUHrz94/cHrD15/8PqD1x+8/uD1B68fvH7w+sHrB68fvH7w+sHrB68fvH7w+snrJ6+fvH7y+snrc+vb3Po2t77NrW9z69vc+ja3vs2tb3Pr29z6Nre+za1vc+vb3Po2t77NrW9z69vc+ja3vs2tb3Pr29z6Nre+za1vc+vb3Po2t77NrW9z69vc+ja3vs2tb3Pr29z6Nre+za1vc+vb3Po2t77NrW9z69vc+ja3vs2tb3Pr29z6Nre+za1vc+vb3Po2t77NrW9z69vc+ja3vs2tb3Pr29z6Nre+za1vc+vb3Po2t77NrW9z6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+4tZX3PqKW19x6ytufcWtr7j1Fbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z62tufc2tr7n1Nbe+5tbX3PqaW19z6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63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",
  "file_map": {
    "50": {
      "source": "fn main(bn254_modulus_be_bytes: [u8; 32], bn254_modulus_be_bits: [u1; 254]) {\n    let modulus_size = std::field::modulus_num_bits();\n    // NOTE: The constraints used in this circuit will only work when testing nargo with the plonk bn254 backend\n    assert(modulus_size == 254);\n\n    assert_reverse(\n        std::field::modulus_be_bytes(),\n        std::field::modulus_le_bytes(),\n    );\n\n    let modulus_be_byte_array = std::field::modulus_be_bytes();\n    for i in 0..32 {\n        assert(modulus_be_byte_array[i] == bn254_modulus_be_bytes[i]);\n    }\n    let modulus_le_byte_array = std::field::modulus_le_bytes();\n    for i in 0..32 {\n        assert(modulus_le_byte_array[i] == bn254_modulus_be_bytes[31 - i]);\n    }\n\n    let modulus_be_bits = std::field::modulus_be_bits();\n    for i in 0..254 {\n        assert(modulus_be_bits[i] == bn254_modulus_be_bits[i]);\n    }\n    let modulus_le_bits = std::field::modulus_le_bits();\n    for i in 0..254 {\n        assert(modulus_le_bits[i] == bn254_modulus_be_bits[253 - i]);\n    }\n}\n\nfn assert_reverse(forwards: [u8], backwards: [u8]) {\n    for i in 0..32 {\n        assert_eq(forwards[i], backwards[31 - i]);\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
