---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "string",
        "length": 2
      },
      "visibility": "public"
    },
    "error_types": {
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _14",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1, _2]",
    "BLACKBOX::RANGE [(_0, 1)] []",
    "EXPR [ (-3, _0) (-1, _3) 68 ]",
    "EXPR [ (-3, _0) (-1, _4) 100 ]",
    "EXPR [ (-3, _0) (-1, _5) 69 ]",
    "EXPR [ (-3, _0) (-1, _6) 101 ]",
    "EXPR [ (67, _0) (-1, _7) 0 ]",
    "EXPR [ (99, _0) (-1, _8) 0 ]",
    "INIT (id: 0, len: 6, witnesses: [_3, _4, _5, _6, _7, _8])",
    "EXPR [ (-1, _9) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _10) 0 ]) ",
    "EXPR [ (-1, _11) 1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _11) 0 ], value: EXPR [ (1, _12) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [EXPR [ (-1, _0) 4294967296 ], EXPR [ 4294967296 ]], outputs: [_13, _14]",
    "BLACKBOX::RANGE [(_14, 32)] []",
    "EXPR [ (-1, _0) (-4294967296, _13) (-1, _14) 4294967296 ]",
    "EXPR [ (-1, _13) 0 ]",
    "EXPR [ (1, _1) (-1, _7) 0 ]",
    "EXPR [ (1, _2) (-1, _8) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "nZHRDoIwDEX/pc972CaK+CvGkAHFLFkGmZuJIfy7pYDKg4nx5d6t3Wlu1gEarNK1tL7tbnA6D1AF65y9lq6rTbSdp+owClivZQyIVIKPPlG9CegjnHxyTsDduMSPbr3x7NEE6koB6BtyGthah9NpFG9afkdVXiywKt74/mdey8PCa5n/xWcv/rjhL3QztQ2bHwNFQQVo1h1rxrpnPbDmrEfWglXJ2WZaEa7JdrNls9EEPU5BgzWVw2U/bfL1x7rio18760L70NXYpIBTUO5R9Cc=",
  "file_map": {
    "50": {
      "source": "fn main(a: bool) -> pub str<2> {\n    let (_, d) = {\n        let b: [str<2>] = if a {\n            &[\"Aa\", \"Bb\", \"Cc\"]\n        } else {\n            &[\"Dd\", \"Ee\"]\n        };\n        b.pop_front()\n    };\n    d[1]\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient"
  ]
}
