---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "pub_key_x",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "pub_key_y",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "signature",
        "type": {
          "kind": "array",
          "length": 64,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "hashed_message",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "active",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _160",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99, _100, _101, _102, _103, _104, _105, _106, _107, _108, _109, _110, _111, _112, _113, _114, _115, _116, _117, _118, _119, _120, _121, _122, _123, _124, _125, _126, _127, _128, _129, _130, _131, _132, _133, _134, _135, _136, _137, _138, _139, _140, _141, _142, _143, _144, _145, _146, _147, _148, _149, _150, _151, _152, _153, _154, _155, _156, _157, _158, _159, _160]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [[EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ], EXPR [ (1, _2) 0 ], EXPR [ (1, _3) 0 ], EXPR [ (1, _4) 0 ], EXPR [ (1, _5) 0 ], EXPR [ (1, _6) 0 ], EXPR [ (1, _7) 0 ], EXPR [ (1, _8) 0 ], EXPR [ (1, _9) 0 ], EXPR [ (1, _10) 0 ], EXPR [ (1, _11) 0 ], EXPR [ (1, _12) 0 ], EXPR [ (1, _13) 0 ], EXPR [ (1, _14) 0 ], EXPR [ (1, _15) 0 ], EXPR [ (1, _16) 0 ], EXPR [ (1, _17) 0 ], EXPR [ (1, _18) 0 ], EXPR [ (1, _19) 0 ], EXPR [ (1, _20) 0 ], EXPR [ (1, _21) 0 ], EXPR [ (1, _22) 0 ], EXPR [ (1, _23) 0 ], EXPR [ (1, _24) 0 ], EXPR [ (1, _25) 0 ], EXPR [ (1, _26) 0 ], EXPR [ (1, _27) 0 ], EXPR [ (1, _28) 0 ], EXPR [ (1, _29) 0 ], EXPR [ (1, _30) 0 ], EXPR [ (1, _31) 0 ]], [EXPR [ (1, _32) 0 ], EXPR [ (1, _33) 0 ], EXPR [ (1, _34) 0 ], EXPR [ (1, _35) 0 ], EXPR [ (1, _36) 0 ], EXPR [ (1, _37) 0 ], EXPR [ (1, _38) 0 ], EXPR [ (1, _39) 0 ], EXPR [ (1, _40) 0 ], EXPR [ (1, _41) 0 ], EXPR [ (1, _42) 0 ], EXPR [ (1, _43) 0 ], EXPR [ (1, _44) 0 ], EXPR [ (1, _45) 0 ], EXPR [ (1, _46) 0 ], EXPR [ (1, _47) 0 ], EXPR [ (1, _48) 0 ], EXPR [ (1, _49) 0 ], EXPR [ (1, _50) 0 ], EXPR [ (1, _51) 0 ], EXPR [ (1, _52) 0 ], EXPR [ (1, _53) 0 ], EXPR [ (1, _54) 0 ], EXPR [ (1, _55) 0 ], EXPR [ (1, _56) 0 ], EXPR [ (1, _57) 0 ], EXPR [ (1, _58) 0 ], EXPR [ (1, _59) 0 ], EXPR [ (1, _60) 0 ], EXPR [ (1, _61) 0 ], EXPR [ (1, _62) 0 ], EXPR [ (1, _63) 0 ]], [EXPR [ (1, _64) 0 ], EXPR [ (1, _65) 0 ], EXPR [ (1, _66) 0 ], EXPR [ (1, _67) 0 ], EXPR [ (1, _68) 0 ], EXPR [ (1, _69) 0 ], EXPR [ (1, _70) 0 ], EXPR [ (1, _71) 0 ], EXPR [ (1, _72) 0 ], EXPR [ (1, _73) 0 ], EXPR [ (1, _74) 0 ], EXPR [ (1, _75) 0 ], EXPR [ (1, _76) 0 ], EXPR [ (1, _77) 0 ], EXPR [ (1, _78) 0 ], EXPR [ (1, _79) 0 ], EXPR [ (1, _80) 0 ], EXPR [ (1, _81) 0 ], EXPR [ (1, _82) 0 ], EXPR [ (1, _83) 0 ], EXPR [ (1, _84) 0 ], EXPR [ (1, _85) 0 ], EXPR [ (1, _86) 0 ], EXPR [ (1, _87) 0 ], EXPR [ (1, _88) 0 ], EXPR [ (1, _89) 0 ], EXPR [ (1, _90) 0 ], EXPR [ (1, _91) 0 ], EXPR [ (1, _92) 0 ], EXPR [ (1, _93) 0 ], EXPR [ (1, _94) 0 ], EXPR [ (1, _95) 0 ], EXPR [ (1, _96) 0 ], EXPR [ (1, _97) 0 ], EXPR [ (1, _98) 0 ], EXPR [ (1, _99) 0 ], EXPR [ (1, _100) 0 ], EXPR [ (1, _101) 0 ], EXPR [ (1, _102) 0 ], EXPR [ (1, _103) 0 ], EXPR [ (1, _104) 0 ], EXPR [ (1, _105) 0 ], EXPR [ (1, _106) 0 ], EXPR [ (1, _107) 0 ], EXPR [ (1, _108) 0 ], EXPR [ (1, _109) 0 ], EXPR [ (1, _110) 0 ], EXPR [ (1, _111) 0 ], EXPR [ (1, _112) 0 ], EXPR [ (1, _113) 0 ], EXPR [ (1, _114) 0 ], EXPR [ (1, _115) 0 ], EXPR [ (1, _116) 0 ], EXPR [ (1, _117) 0 ], EXPR [ (1, _118) 0 ], EXPR [ (1, _119) 0 ], EXPR [ (1, _120) 0 ], EXPR [ (1, _121) 0 ], EXPR [ (1, _122) 0 ], EXPR [ (1, _123) 0 ], EXPR [ (1, _124) 0 ], EXPR [ (1, _125) 0 ], EXPR [ (1, _126) 0 ], EXPR [ (1, _127) 0 ]], [EXPR [ (1, _128) 0 ], EXPR [ (1, _129) 0 ], EXPR [ (1, _130) 0 ], EXPR [ (1, _131) 0 ], EXPR [ (1, _132) 0 ], EXPR [ (1, _133) 0 ], EXPR [ (1, _134) 0 ], EXPR [ (1, _135) 0 ], EXPR [ (1, _136) 0 ], EXPR [ (1, _137) 0 ], EXPR [ (1, _138) 0 ], EXPR [ (1, _139) 0 ], EXPR [ (1, _140) 0 ], EXPR [ (1, _141) 0 ], EXPR [ (1, _142) 0 ], EXPR [ (1, _143) 0 ], EXPR [ (1, _144) 0 ], EXPR [ (1, _145) 0 ], EXPR [ (1, _146) 0 ], EXPR [ (1, _147) 0 ], EXPR [ (1, _148) 0 ], EXPR [ (1, _149) 0 ], EXPR [ (1, _150) 0 ], EXPR [ (1, _151) 0 ], EXPR [ (1, _152) 0 ], EXPR [ (1, _153) 0 ], EXPR [ (1, _154) 0 ], EXPR [ (1, _155) 0 ], EXPR [ (1, _156) 0 ], EXPR [ (1, _157) 0 ], EXPR [ (1, _158) 0 ], EXPR [ (1, _159) 0 ]], EXPR [ (1, _160) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32997 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 161 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(6), offset_address: Relative(7) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U8) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U8) }, Cast { destination: Direct(32838), source: Direct(32838), bit_size: Integer(U8) }, Cast { destination: Direct(32839), source: Direct(32839), bit_size: Integer(U8) }, Cast { destination: Direct(32840), source: Direct(32840), bit_size: Integer(U8) }, Cast { destination: Direct(32841), source: Direct(32841), bit_size: Integer(U8) }, Cast { destination: Direct(32842), source: Direct(32842), bit_size: Integer(U8) }, Cast { destination: Direct(32843), source: Direct(32843), bit_size: Integer(U8) }, Cast { destination: Direct(32844), source: Direct(32844), bit_size: Integer(U8) }, Cast { destination: Direct(32845), source: Direct(32845), bit_size: Integer(U8) }, Cast { destination: Direct(32846), source: Direct(32846), bit_size: Integer(U8) }, Cast { destination: Direct(32847), source: Direct(32847), bit_size: Integer(U8) }, Cast { destination: Direct(32848), source: Direct(32848), bit_size: Integer(U8) }, Cast { destination: Direct(32849), source: Direct(32849), bit_size: Integer(U8) }, Cast { destination: Direct(32850), source: Direct(32850), bit_size: Integer(U8) }, Cast { destination: Direct(32851), source: Direct(32851), bit_size: Integer(U8) }, Cast { destination: Direct(32852), source: Direct(32852), bit_size: Integer(U8) }, Cast { destination: Direct(32853), source: Direct(32853), bit_size: Integer(U8) }, Cast { destination: Direct(32854), source: Direct(32854), bit_size: Integer(U8) }, Cast { destination: Direct(32855), source: Direct(32855), bit_size: Integer(U8) }, Cast { destination: Direct(32856), source: Direct(32856), bit_size: Integer(U8) }, Cast { destination: Direct(32857), source: Direct(32857), bit_size: Integer(U8) }, Cast { destination: Direct(32858), source: Direct(32858), bit_size: Integer(U8) }, Cast { destination: Direct(32859), source: Direct(32859), bit_size: Integer(U8) }, Cast { destination: Direct(32860), source: Direct(32860), bit_size: Integer(U8) }, Cast { destination: Direct(32861), source: Direct(32861), bit_size: Integer(U8) }, Cast { destination: Direct(32862), source: Direct(32862), bit_size: Integer(U8) }, Cast { destination: Direct(32863), source: Direct(32863), bit_size: Integer(U8) }, Cast { destination: Direct(32864), source: Direct(32864), bit_size: Integer(U8) }, Cast { destination: Direct(32865), source: Direct(32865), bit_size: Integer(U8) }, Cast { destination: Direct(32866), source: Direct(32866), bit_size: Integer(U8) }, Cast { destination: Direct(32867), source: Direct(32867), bit_size: Integer(U8) }, Cast { destination: Direct(32868), source: Direct(32868), bit_size: Integer(U8) }, Cast { destination: Direct(32869), source: Direct(32869), bit_size: Integer(U8) }, Cast { destination: Direct(32870), source: Direct(32870), bit_size: Integer(U8) }, Cast { destination: Direct(32871), source: Direct(32871), bit_size: Integer(U8) }, Cast { destination: Direct(32872), source: Direct(32872), bit_size: Integer(U8) }, Cast { destination: Direct(32873), source: Direct(32873), bit_size: Integer(U8) }, Cast { destination: Direct(32874), source: Direct(32874), bit_size: Integer(U8) }, Cast { destination: Direct(32875), source: Direct(32875), bit_size: Integer(U8) }, Cast { destination: Direct(32876), source: Direct(32876), bit_size: Integer(U8) }, Cast { destination: Direct(32877), source: Direct(32877), bit_size: Integer(U8) }, Cast { destination: Direct(32878), source: Direct(32878), bit_size: Integer(U8) }, Cast { destination: Direct(32879), source: Direct(32879), bit_size: Integer(U8) }, Cast { destination: Direct(32880), source: Direct(32880), bit_size: Integer(U8) }, Cast { destination: Direct(32881), source: Direct(32881), bit_size: Integer(U8) }, Cast { destination: Direct(32882), source: Direct(32882), bit_size: Integer(U8) }, Cast { destination: Direct(32883), source: Direct(32883), bit_size: Integer(U8) }, Cast { destination: Direct(32884), source: Direct(32884), bit_size: Integer(U8) }, Cast { destination: Direct(32885), source: Direct(32885), bit_size: Integer(U8) }, Cast { destination: Direct(32886), source: Direct(32886), bit_size: Integer(U8) }, Cast { destination: Direct(32887), source: Direct(32887), bit_size: Integer(U8) }, Cast { destination: Direct(32888), source: Direct(32888), bit_size: Integer(U8) }, Cast { destination: Direct(32889), source: Direct(32889), bit_size: Integer(U8) }, Cast { destination: Direct(32890), source: Direct(32890), bit_size: Integer(U8) }, Cast { destination: Direct(32891), source: Direct(32891), bit_size: Integer(U8) }, Cast { destination: Direct(32892), source: Direct(32892), bit_size: Integer(U8) }, Cast { destination: Direct(32893), source: Direct(32893), bit_size: Integer(U8) }, Cast { destination: Direct(32894), source: Direct(32894), bit_size: Integer(U8) }, Cast { destination: Direct(32895), source: Direct(32895), bit_size: Integer(U8) }, Cast { destination: Direct(32896), source: Direct(32896), bit_size: Integer(U8) }, Cast { destination: Direct(32897), source: Direct(32897), bit_size: Integer(U8) }, Cast { destination: Direct(32898), source: Direct(32898), bit_size: Integer(U8) }, Cast { destination: Direct(32899), source: Direct(32899), bit_size: Integer(U8) }, Cast { destination: Direct(32900), source: Direct(32900), bit_size: Integer(U8) }, Cast { destination: Direct(32901), source: Direct(32901), bit_size: Integer(U8) }, Cast { destination: Direct(32902), source: Direct(32902), bit_size: Integer(U8) }, Cast { destination: Direct(32903), source: Direct(32903), bit_size: Integer(U8) }, Cast { destination: Direct(32904), source: Direct(32904), bit_size: Integer(U8) }, Cast { destination: Direct(32905), source: Direct(32905), bit_size: Integer(U8) }, Cast { destination: Direct(32906), source: Direct(32906), bit_size: Integer(U8) }, Cast { destination: Direct(32907), source: Direct(32907), bit_size: Integer(U8) }, Cast { destination: Direct(32908), source: Direct(32908), bit_size: Integer(U8) }, Cast { destination: Direct(32909), source: Direct(32909), bit_size: Integer(U8) }, Cast { destination: Direct(32910), source: Direct(32910), bit_size: Integer(U8) }, Cast { destination: Direct(32911), source: Direct(32911), bit_size: Integer(U8) }, Cast { destination: Direct(32912), source: Direct(32912), bit_size: Integer(U8) }, Cast { destination: Direct(32913), source: Direct(32913), bit_size: Integer(U8) }, Cast { destination: Direct(32914), source: Direct(32914), bit_size: Integer(U8) }, Cast { destination: Direct(32915), source: Direct(32915), bit_size: Integer(U8) }, Cast { destination: Direct(32916), source: Direct(32916), bit_size: Integer(U8) }, Cast { destination: Direct(32917), source: Direct(32917), bit_size: Integer(U8) }, Cast { destination: Direct(32918), source: Direct(32918), bit_size: Integer(U8) }, Cast { destination: Direct(32919), source: Direct(32919), bit_size: Integer(U8) }, Cast { destination: Direct(32920), source: Direct(32920), bit_size: Integer(U8) }, Cast { destination: Direct(32921), source: Direct(32921), bit_size: Integer(U8) }, Cast { destination: Direct(32922), source: Direct(32922), bit_size: Integer(U8) }, Cast { destination: Direct(32923), source: Direct(32923), bit_size: Integer(U8) }, Cast { destination: Direct(32924), source: Direct(32924), bit_size: Integer(U8) }, Cast { destination: Direct(32925), source: Direct(32925), bit_size: Integer(U8) }, Cast { destination: Direct(32926), source: Direct(32926), bit_size: Integer(U8) }, Cast { destination: Direct(32927), source: Direct(32927), bit_size: Integer(U8) }, Cast { destination: Direct(32928), source: Direct(32928), bit_size: Integer(U8) }, Cast { destination: Direct(32929), source: Direct(32929), bit_size: Integer(U8) }, Cast { destination: Direct(32930), source: Direct(32930), bit_size: Integer(U8) }, Cast { destination: Direct(32931), source: Direct(32931), bit_size: Integer(U8) }, Cast { destination: Direct(32932), source: Direct(32932), bit_size: Integer(U8) }, Cast { destination: Direct(32933), source: Direct(32933), bit_size: Integer(U8) }, Cast { destination: Direct(32934), source: Direct(32934), bit_size: Integer(U8) }, Cast { destination: Direct(32935), source: Direct(32935), bit_size: Integer(U8) }, Cast { destination: Direct(32936), source: Direct(32936), bit_size: Integer(U8) }, Cast { destination: Direct(32937), source: Direct(32937), bit_size: Integer(U8) }, Cast { destination: Direct(32938), source: Direct(32938), bit_size: Integer(U8) }, Cast { destination: Direct(32939), source: Direct(32939), bit_size: Integer(U8) }, Cast { destination: Direct(32940), source: Direct(32940), bit_size: Integer(U8) }, Cast { destination: Direct(32941), source: Direct(32941), bit_size: Integer(U8) }, Cast { destination: Direct(32942), source: Direct(32942), bit_size: Integer(U8) }, Cast { destination: Direct(32943), source: Direct(32943), bit_size: Integer(U8) }, Cast { destination: Direct(32944), source: Direct(32944), bit_size: Integer(U8) }, Cast { destination: Direct(32945), source: Direct(32945), bit_size: Integer(U8) }, Cast { destination: Direct(32946), source: Direct(32946), bit_size: Integer(U8) }, Cast { destination: Direct(32947), source: Direct(32947), bit_size: Integer(U8) }, Cast { destination: Direct(32948), source: Direct(32948), bit_size: Integer(U8) }, Cast { destination: Direct(32949), source: Direct(32949), bit_size: Integer(U8) }, Cast { destination: Direct(32950), source: Direct(32950), bit_size: Integer(U8) }, Cast { destination: Direct(32951), source: Direct(32951), bit_size: Integer(U8) }, Cast { destination: Direct(32952), source: Direct(32952), bit_size: Integer(U8) }, Cast { destination: Direct(32953), source: Direct(32953), bit_size: Integer(U8) }, Cast { destination: Direct(32954), source: Direct(32954), bit_size: Integer(U8) }, Cast { destination: Direct(32955), source: Direct(32955), bit_size: Integer(U8) }, Cast { destination: Direct(32956), source: Direct(32956), bit_size: Integer(U8) }, Cast { destination: Direct(32957), source: Direct(32957), bit_size: Integer(U8) }, Cast { destination: Direct(32958), source: Direct(32958), bit_size: Integer(U8) }, Cast { destination: Direct(32959), source: Direct(32959), bit_size: Integer(U8) }, Cast { destination: Direct(32960), source: Direct(32960), bit_size: Integer(U8) }, Cast { destination: Direct(32961), source: Direct(32961), bit_size: Integer(U8) }, Cast { destination: Direct(32962), source: Direct(32962), bit_size: Integer(U8) }, Cast { destination: Direct(32963), source: Direct(32963), bit_size: Integer(U8) }, Cast { destination: Direct(32964), source: Direct(32964), bit_size: Integer(U8) }, Cast { destination: Direct(32965), source: Direct(32965), bit_size: Integer(U8) }, Cast { destination: Direct(32966), source: Direct(32966), bit_size: Integer(U8) }, Cast { destination: Direct(32967), source: Direct(32967), bit_size: Integer(U8) }, Cast { destination: Direct(32968), source: Direct(32968), bit_size: Integer(U8) }, Cast { destination: Direct(32969), source: Direct(32969), bit_size: Integer(U8) }, Cast { destination: Direct(32970), source: Direct(32970), bit_size: Integer(U8) }, Cast { destination: Direct(32971), source: Direct(32971), bit_size: Integer(U8) }, Cast { destination: Direct(32972), source: Direct(32972), bit_size: Integer(U8) }, Cast { destination: Direct(32973), source: Direct(32973), bit_size: Integer(U8) }, Cast { destination: Direct(32974), source: Direct(32974), bit_size: Integer(U8) }, Cast { destination: Direct(32975), source: Direct(32975), bit_size: Integer(U8) }, Cast { destination: Direct(32976), source: Direct(32976), bit_size: Integer(U8) }, Cast { destination: Direct(32977), source: Direct(32977), bit_size: Integer(U8) }, Cast { destination: Direct(32978), source: Direct(32978), bit_size: Integer(U8) }, Cast { destination: Direct(32979), source: Direct(32979), bit_size: Integer(U8) }, Cast { destination: Direct(32980), source: Direct(32980), bit_size: Integer(U8) }, Cast { destination: Direct(32981), source: Direct(32981), bit_size: Integer(U8) }, Cast { destination: Direct(32982), source: Direct(32982), bit_size: Integer(U8) }, Cast { destination: Direct(32983), source: Direct(32983), bit_size: Integer(U8) }, Cast { destination: Direct(32984), source: Direct(32984), bit_size: Integer(U8) }, Cast { destination: Direct(32985), source: Direct(32985), bit_size: Integer(U8) }, Cast { destination: Direct(32986), source: Direct(32986), bit_size: Integer(U8) }, Cast { destination: Direct(32987), source: Direct(32987), bit_size: Integer(U8) }, Cast { destination: Direct(32988), source: Direct(32988), bit_size: Integer(U8) }, Cast { destination: Direct(32989), source: Direct(32989), bit_size: Integer(U8) }, Cast { destination: Direct(32990), source: Direct(32990), bit_size: Integer(U8) }, Cast { destination: Direct(32991), source: Direct(32991), bit_size: Integer(U8) }, Cast { destination: Direct(32992), source: Direct(32992), bit_size: Integer(U8) }, Cast { destination: Direct(32993), source: Direct(32993), bit_size: Integer(U8) }, Cast { destination: Direct(32994), source: Direct(32994), bit_size: Integer(U8) }, Cast { destination: Direct(32995), source: Direct(32995), bit_size: Integer(U8) }, Cast { destination: Direct(32996), source: Direct(32996), bit_size: Integer(U1) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32836 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 32 }, Mov { destination: Relative(6), source: Direct(1) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(8) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(8) }, Mov { destination: Direct(32773), source: Relative(7) }, Call { location: 221 }, Mov { destination: Relative(1), source: Relative(6) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32868 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 32 }, Mov { destination: Relative(6), source: Direct(1) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(8) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(8) }, Mov { destination: Direct(32773), source: Relative(7) }, Call { location: 221 }, Mov { destination: Relative(2), source: Relative(6) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 32900 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 64 }, Mov { destination: Relative(6), source: Direct(1) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 65 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(8) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Mov { destination: Direct(32772), source: Relative(8) }, Mov { destination: Direct(32773), source: Relative(7) }, Call { location: 221 }, Mov { destination: Relative(3), source: Relative(6) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 32964 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 32 }, Mov { destination: Relative(6), source: Direct(1) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(8) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(4) }, Mov { destination: Direct(32772), source: Relative(8) }, Mov { destination: Direct(32773), source: Relative(7) }, Call { location: 221 }, Mov { destination: Relative(4), source: Relative(6) }, Mov { destination: Relative(5), source: Direct(32996) }, Call { location: 232 }, Call { location: 233 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32997 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 231 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 224 }, Return, Return, Call { location: 248 }, JumpIf { condition: Relative(5), location: 236 }, Jump { location: 247 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 32 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BlackBox(EcdsaSecp256r1 { hashed_msg: HeapVector { pointer: Relative(6), size: Relative(7) }, public_key_x: HeapArray { pointer: Relative(8), size: 32 }, public_key_y: HeapArray { pointer: Relative(9), size: 32 }, signature: HeapArray { pointer: Relative(10), size: 64 }, result: Relative(5) }), Const { destination: Relative(1), bit_size: Integer(U1), value: 1 }, JumpIf { condition: Relative(5), location: 246 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, Jump { location: 247 }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 253 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "dZDdbsMgDIXfxddc8JMsXV6liiKSOBUSIhGFSVPEu890ztpd9IYPY46PdQ5YcMq30YV1u0N/PWCKznt3G/022+S2QK8HyHpo8wG9EsSOeWF+/rKRTMXUTMNsmC2xFAGnx5giYrV4MaVVdhsxJOhD9l7Al/X58em+2/BgspG6UgCGhUgDV+ex3op4quV7qeo6Fhtt/uQt6Qeq7OzivxhKnRSdnTxyueYwv3TT9352zhj3uM245Ih10jNLSuSqtRLaqEGAkrVsLkK3ZijV/Qc=",
  "file_map": {
    "50": {
      "source": "fn main(\n    pub_key_x: [u8; 32],\n    pub_key_y: [u8; 32],\n    signature: [u8; 64], // r || s\n    hashed_message: [u8; 32],\n    active: bool,\n) {\n    if active {\n        assert(std::ecdsa_secp256r1::verify_signature(\n            pub_key_x,\n            pub_key_y,\n            signature,\n            hashed_message,\n        ));\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
