---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _0",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U32) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 13 }, Call { location: 14 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 1573 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(4), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Relative(3) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(1) }, JumpIf { condition: Relative(5), location: 20 }, Call { location: 1579 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Relative(6), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, BinaryIntOp { destination: Relative(7), op: LessThanEquals, bit_size: U32, lhs: Relative(5), rhs: Relative(1) }, JumpIf { condition: Relative(7), location: 25 }, Call { location: 1579 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(9) }, Mov { destination: Relative(1), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(8) }, IndirectConst { destination_pointer: Relative(1), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(7) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(7) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, Mov { destination: Relative(7), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Store { destination_pointer: Relative(7), source: Relative(8) }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(1) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 5 }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 47 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, JumpIf { condition: Relative(10), location: 1549 }, Jump { location: 50 }, Load { destination: Relative(2), source_pointer: Relative(7) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, JumpIf { condition: Relative(7), location: 55 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, Load { destination: Relative(2), source_pointer: Relative(9) }, Load { destination: Relative(7), source_pointer: Relative(2) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(9), rhs: Relative(7) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 62 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(7) }, Mov { destination: Relative(7), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, Const { destination: Relative(11), bit_size: Integer(U1), value: 1 }, JumpIf { condition: Relative(10), location: 70 }, Call { location: 1585 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(13) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(4) }, Load { destination: Relative(10), source_pointer: Relative(13) }, Const { destination: Relative(12), bit_size: Field, value: 4 }, BinaryFieldOp { destination: Relative(13), op: Equals, lhs: Relative(10), rhs: Relative(12) }, JumpIf { condition: Relative(13), location: 79 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(6), rhs: Relative(1) }, JumpIf { condition: Relative(10), location: 82 }, Call { location: 1585 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(14) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(6) }, Load { destination: Relative(10), source_pointer: Relative(14) }, Const { destination: Relative(13), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Relative(14), op: Equals, lhs: Relative(10), rhs: Relative(13) }, JumpIf { condition: Relative(14), location: 91 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(15) } }, Const { destination: Relative(10), bit_size: Field, value: 0 }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(14), source: Direct(32772) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(16) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(6) }, Store { destination_pointer: Relative(16), source: Relative(10) }, Store { destination_pointer: Relative(7), source: Relative(14) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(17) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(4) }, Load { destination: Relative(15), source_pointer: Relative(17) }, BinaryFieldOp { destination: Relative(16), op: Equals, lhs: Relative(15), rhs: Relative(12) }, JumpIf { condition: Relative(16), location: 108 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(17) } }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(5) }, Load { destination: Relative(15), source_pointer: Relative(16) }, BinaryFieldOp { destination: Relative(16), op: Equals, lhs: Relative(15), rhs: Relative(10) }, JumpIf { condition: Relative(16), location: 114 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(17) } }, Const { destination: Relative(15), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(16), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(15) }, Const { destination: Relative(17), bit_size: Field, value: 2 }, JumpIf { condition: Relative(16), location: 128 }, Jump { location: 119 }, Mov { destination: Direct(32771), source: Relative(14) }, Call { location: 1588 }, Mov { destination: Relative(9), source: Direct(32772) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(4) }, Store { destination_pointer: Relative(19), source: Relative(10) }, Store { destination_pointer: Relative(7), source: Relative(9) }, Jump { location: 151 }, Mov { destination: Direct(32771), source: Relative(14) }, Call { location: 1588 }, Mov { destination: Relative(9), source: Direct(32772) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(4) }, Store { destination_pointer: Relative(19), source: Relative(17) }, BinaryIntOp { destination: Relative(18), op: Sub, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, BinaryIntOp { destination: Relative(19), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, JumpIf { condition: Relative(19), location: 139 }, Call { location: 1579 }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(18), rhs: Relative(1) }, JumpIf { condition: Relative(19), location: 142 }, Call { location: 1585 }, Mov { destination: Direct(32771), source: Relative(9) }, Call { location: 1588 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(18) }, Store { destination_pointer: Relative(21), source: Relative(17) }, Store { destination_pointer: Relative(7), source: Relative(19) }, Jump { location: 151 }, Load { destination: Relative(9), source_pointer: Relative(7) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(7) }, Load { destination: Relative(18), source_pointer: Relative(19) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(18), rhs: Relative(17) }, JumpIf { condition: Relative(19), location: 159 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Const { destination: Relative(18), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(18) }, Load { destination: Relative(19), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(9), op: Equals, lhs: Relative(19), rhs: Relative(17) }, JumpIf { condition: Relative(9), location: 166 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Load { destination: Relative(9), source_pointer: Relative(2) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(20), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(9) }, Not { destination: Relative(20), source: Relative(20), bit_size: U1 }, JumpIf { condition: Relative(20), location: 172 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(9) }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(14) }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(15), rhs: Relative(4) }, JumpIf { condition: Relative(20), location: 189 }, Jump { location: 180 }, Mov { destination: Direct(32771), source: Relative(14) }, Call { location: 1588 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(22) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(4) }, Store { destination_pointer: Relative(22), source: Relative(10) }, Store { destination_pointer: Relative(9), source: Relative(19) }, Jump { location: 212 }, Mov { destination: Direct(32771), source: Relative(14) }, Call { location: 1588 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(22) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(4) }, Store { destination_pointer: Relative(22), source: Relative(17) }, BinaryIntOp { destination: Relative(21), op: Sub, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, BinaryIntOp { destination: Relative(22), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, JumpIf { condition: Relative(22), location: 200 }, Call { location: 1579 }, BinaryIntOp { destination: Relative(22), op: LessThan, bit_size: U32, lhs: Relative(21), rhs: Relative(1) }, JumpIf { condition: Relative(22), location: 203 }, Call { location: 1585 }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 1588 }, Mov { destination: Relative(22), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Store { destination_pointer: Relative(24), source: Relative(17) }, Store { destination_pointer: Relative(9), source: Relative(22) }, Jump { location: 212 }, Load { destination: Relative(19), source_pointer: Relative(9) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(18) }, Load { destination: Relative(9), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(9), rhs: Relative(10) }, JumpIf { condition: Relative(19), location: 219 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Load { destination: Relative(9), source_pointer: Relative(2) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(9) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 225 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(9) }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(1) }, Store { destination_pointer: Relative(21), source: Relative(14) }, Const { destination: Relative(22), bit_size: Field, value: 10 }, Const { destination: Relative(23), bit_size: Field, value: 15 }, Const { destination: Relative(24), bit_size: Field, value: 22 }, JumpIf { condition: Relative(16), location: 248 }, Jump { location: 238 }, Mov { destination: Direct(32771), source: Relative(14) }, Call { location: 1588 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(4) }, Store { destination_pointer: Relative(26), source: Relative(10) }, Store { destination_pointer: Relative(9), source: Relative(1) }, Store { destination_pointer: Relative(21), source: Relative(19) }, Jump { location: 315 }, Mov { destination: Direct(32771), source: Relative(14) }, Call { location: 1588 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(4) }, Store { destination_pointer: Relative(26), source: Relative(17) }, Store { destination_pointer: Relative(9), source: Relative(1) }, Store { destination_pointer: Relative(21), source: Relative(19) }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(6), rhs: Relative(3) }, JumpIf { condition: Relative(14), location: 270 }, Jump { location: 260 }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 1588 }, Mov { destination: Relative(14), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(4) }, Store { destination_pointer: Relative(26), source: Relative(24) }, Store { destination_pointer: Relative(9), source: Relative(1) }, Store { destination_pointer: Relative(21), source: Relative(14) }, Jump { location: 315 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, JumpIf { condition: Relative(14), location: 1545 }, Jump { location: 273 }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 1588 }, Mov { destination: Relative(14), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(4) }, Store { destination_pointer: Relative(26), source: Relative(22) }, Load { destination: Relative(19), source_pointer: Relative(14) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(25), rhs: Relative(19) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 286 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(14) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(26), source: Direct(32774) }, Mov { destination: Relative(27), source: Direct(32775) }, Store { destination_pointer: Relative(27), source: Relative(23) }, Store { destination_pointer: Relative(9), source: Relative(19) }, Store { destination_pointer: Relative(21), source: Relative(26) }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(7) }, JumpIf { condition: Relative(14), location: 302 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Jump { location: 303 }, Load { destination: Relative(14), source_pointer: Relative(9) }, Load { destination: Relative(19), source_pointer: Relative(21) }, BinaryIntOp { destination: Relative(25), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(14) }, JumpIf { condition: Relative(25), location: 308 }, Call { location: 1585 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(18) }, Load { destination: Relative(14), source_pointer: Relative(25) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(14), rhs: Relative(22) }, JumpIf { condition: Relative(19), location: 314 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(25) } }, Jump { location: 315 }, Load { destination: Relative(14), source_pointer: Relative(9) }, Load { destination: Relative(19), source_pointer: Relative(21) }, BinaryIntOp { destination: Relative(25), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(14) }, JumpIf { condition: Relative(25), location: 320 }, Call { location: 1585 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(18) }, Load { destination: Relative(25), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(25), rhs: Relative(22) }, JumpIf { condition: Relative(26), location: 326 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, BinaryIntOp { destination: Relative(25), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(7) }, JumpIf { condition: Relative(25), location: 330 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Const { destination: Relative(14), bit_size: Integer(U32), value: 8 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(14) }, Load { destination: Relative(25), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(25), rhs: Relative(23) }, JumpIf { condition: Relative(26), location: 337 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, Load { destination: Relative(25), source_pointer: Relative(19) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(27), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(25) }, Not { destination: Relative(27), source: Relative(27), bit_size: U1 }, JumpIf { condition: Relative(27), location: 343 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(25), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(25) }, Const { destination: Relative(25), bit_size: Field, value: 20 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(7) }, Mov { destination: Direct(32772), source: Relative(19) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(28), source: Direct(32774) }, Mov { destination: Relative(29), source: Direct(32775) }, Store { destination_pointer: Relative(29), source: Relative(25) }, Store { destination_pointer: Relative(9), source: Relative(27) }, Store { destination_pointer: Relative(21), source: Relative(28) }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(27), rhs: Relative(18) }, JumpIf { condition: Relative(9), location: 360 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, Const { destination: Relative(9), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(28), rhs: Relative(9) }, Load { destination: Relative(19), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(21), op: Equals, lhs: Relative(19), rhs: Relative(25) }, JumpIf { condition: Relative(21), location: 367 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, Load { destination: Relative(19), source_pointer: Relative(2) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(27), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(19) }, Not { destination: Relative(27), source: Relative(27), bit_size: U1 }, JumpIf { condition: Relative(27), location: 373 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(3) }, BinaryIntOp { destination: Relative(27), op: LessThanEquals, bit_size: U32, lhs: Relative(6), rhs: Relative(19) }, JumpIf { condition: Relative(27), location: 379 }, Call { location: 1670 }, Mov { destination: Relative(27), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(28), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(1) }, JumpIf { condition: Relative(28), location: 384 }, Call { location: 1585 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(19) }, Load { destination: Relative(28), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(29), op: Equals, lhs: Relative(28), rhs: Relative(17) }, JumpIf { condition: Relative(29), location: 392 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(30) } }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(28), source: Direct(32772) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(28), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(19) }, Store { destination_pointer: Relative(30), source: Relative(10) }, Store { destination_pointer: Relative(27), source: Relative(28) }, Const { destination: Relative(31), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(28), rhs: Relative(31) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(4) }, Load { destination: Relative(29), source_pointer: Relative(31) }, BinaryFieldOp { destination: Relative(30), op: Equals, lhs: Relative(29), rhs: Relative(12) }, JumpIf { condition: Relative(30), location: 408 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(28), rhs: Relative(1) }, Load { destination: Relative(29), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(30), op: Equals, lhs: Relative(29), rhs: Relative(10) }, JumpIf { condition: Relative(30), location: 414 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, Const { destination: Relative(29), bit_size: Field, value: 5 }, JumpIf { condition: Relative(16), location: 426 }, Jump { location: 417 }, Mov { destination: Direct(32771), source: Relative(28) }, Call { location: 1588 }, Mov { destination: Relative(5), source: Direct(32772) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Store { destination_pointer: Relative(21), source: Relative(10) }, Store { destination_pointer: Relative(27), source: Relative(5) }, Jump { location: 466 }, Mov { destination: Direct(32771), source: Relative(28) }, Call { location: 1588 }, Mov { destination: Relative(21), source: Direct(32772) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(4) }, Store { destination_pointer: Relative(30), source: Relative(17) }, Store { destination_pointer: Relative(27), source: Relative(21) }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(3) }, JumpIf { condition: Relative(26), location: 457 }, Jump { location: 437 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(19), location: 440 }, Jump { location: 449 }, Mov { destination: Direct(32771), source: Relative(21) }, Call { location: 1588 }, Mov { destination: Relative(5), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Store { destination_pointer: Relative(24), source: Relative(29) }, Store { destination_pointer: Relative(27), source: Relative(5) }, Jump { location: 449 }, Load { destination: Relative(5), source_pointer: Relative(27) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(18) }, Load { destination: Relative(19), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(19), rhs: Relative(29) }, JumpIf { condition: Relative(5), location: 456 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Jump { location: 466 }, Mov { destination: Direct(32771), source: Relative(21) }, Call { location: 1588 }, Mov { destination: Relative(5), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Store { destination_pointer: Relative(26), source: Relative(24) }, Store { destination_pointer: Relative(27), source: Relative(5) }, Jump { location: 466 }, Load { destination: Relative(5), source_pointer: Relative(27) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(18) }, Load { destination: Relative(19), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(19), rhs: Relative(29) }, JumpIf { condition: Relative(5), location: 473 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Load { destination: Relative(5), source_pointer: Relative(2) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(5) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 479 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(5) }, Mov { destination: Relative(5), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(2) }, JumpIf { condition: Relative(16), location: 490 }, Jump { location: 486 }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(12), rhs: Relative(10) }, JumpIf { condition: Relative(1), location: 490 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(4) }, Store { destination_pointer: Relative(24), source: Relative(17) }, Store { destination_pointer: Relative(5), source: Relative(19) }, Jump { location: 499 }, Load { destination: Relative(19), source_pointer: Relative(5) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(18) }, Load { destination: Relative(5), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(5), rhs: Relative(17) }, JumpIf { condition: Relative(19), location: 506 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Const { destination: Relative(5), bit_size: Field, value: 3 }, Mov { destination: Relative(19), source: Direct(1) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(21) }, IndirectConst { destination_pointer: Relative(19), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Mov { destination: Relative(24), source: Relative(21) }, Store { destination_pointer: Relative(24), source: Relative(10) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(13) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(17) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(5) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(12) }, Mov { destination: Relative(5), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(19) }, JumpIf { condition: Relative(16), location: 535 }, Jump { location: 527 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(4) }, Load { destination: Relative(21), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(21), rhs: Relative(10) }, JumpIf { condition: Relative(19), location: 534 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Jump { location: 551 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(4) }, Load { destination: Relative(21), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(24), op: Equals, lhs: Relative(21), rhs: Relative(12) }, JumpIf { condition: Relative(24), location: 542 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Mov { destination: Direct(32771), source: Relative(19) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 6 }, Call { location: 1673 }, Mov { destination: Relative(21), source: Direct(32773) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(4) }, Store { destination_pointer: Relative(26), source: Relative(17) }, Store { destination_pointer: Relative(5), source: Relative(21) }, Jump { location: 551 }, Load { destination: Relative(19), source_pointer: Relative(5) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(1) }, Load { destination: Relative(5), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(5), rhs: Relative(17) }, JumpIf { condition: Relative(19), location: 558 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Load { destination: Relative(5), source_pointer: Relative(2) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(5) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 564 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(5) }, Mov { destination: Relative(5), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(2) }, JumpIf { condition: Relative(20), location: 1541 }, Jump { location: 571 }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(4) }, Store { destination_pointer: Relative(24), source: Relative(17) }, Store { destination_pointer: Relative(5), source: Relative(19) }, Jump { location: 580 }, Load { destination: Relative(19), source_pointer: Relative(5) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(18) }, Load { destination: Relative(5), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(5), rhs: Relative(17) }, JumpIf { condition: Relative(19), location: 587 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Load { destination: Relative(5), source_pointer: Relative(2) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(5) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 593 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(5) }, Mov { destination: Relative(5), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(2) }, JumpIf { condition: Relative(16), location: 607 }, Jump { location: 603 }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(12), rhs: Relative(10) }, JumpIf { condition: Relative(1), location: 607 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(16), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Store { destination_pointer: Relative(24), source: Relative(17) }, Load { destination: Relative(19), source_pointer: Relative(16) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(19) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 620 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(16), source: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(16) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(26), source: Direct(32774) }, Mov { destination: Relative(27), source: Direct(32775) }, Store { destination_pointer: Relative(27), source: Relative(22) }, BinaryIntOp { destination: Relative(16), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(19) }, JumpIf { condition: Relative(16), location: 633 }, Call { location: 1585 }, Mov { destination: Direct(32771), source: Relative(26) }, Call { location: 1588 }, Mov { destination: Relative(16), source: Direct(32772) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(4) }, Store { destination_pointer: Relative(28), source: Relative(22) }, BinaryIntOp { destination: Relative(26), op: Sub, bit_size: U32, lhs: Relative(19), rhs: Relative(3) }, BinaryIntOp { destination: Relative(27), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(19) }, JumpIf { condition: Relative(27), location: 644 }, Call { location: 1579 }, BinaryIntOp { destination: Relative(27), op: LessThan, bit_size: U32, lhs: Relative(26), rhs: Relative(19) }, JumpIf { condition: Relative(27), location: 647 }, Call { location: 1585 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(28), rhs: Relative(26) }, Load { destination: Relative(27), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(27), rhs: Relative(22) }, JumpIf { condition: Relative(26), location: 655 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(7) }, JumpIf { condition: Relative(26), location: 659 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, Mov { destination: Direct(32771), source: Relative(16) }, Call { location: 1588 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(27) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(4) }, Store { destination_pointer: Relative(27), source: Relative(25) }, Const { destination: Relative(16), bit_size: Field, value: 30 }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 1588 }, Mov { destination: Relative(26), source: Direct(32772) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(4) }, Store { destination_pointer: Relative(28), source: Relative(16) }, Load { destination: Relative(19), source_pointer: Relative(26) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(27), rhs: Relative(19) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 680 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(19) }, Const { destination: Relative(19), bit_size: Field, value: 11 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(7) }, Mov { destination: Direct(32772), source: Relative(26) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1695 }, Mov { destination: Relative(30), source: Direct(32774) }, Mov { destination: Relative(31), source: Direct(32775) }, Store { destination_pointer: Relative(31), source: Relative(19) }, BinaryIntOp { destination: Relative(26), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(28) }, JumpIf { condition: Relative(26), location: 694 }, Call { location: 1585 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(26) }, Load { destination: Relative(31), source_pointer: Relative(32) }, BinaryFieldOp { destination: Relative(32), op: Equals, lhs: Relative(31), rhs: Relative(19) }, JumpIf { condition: Relative(32), location: 701 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(18) }, JumpIf { condition: Relative(19), location: 705 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(14) }, Load { destination: Relative(19), source_pointer: Relative(28) }, BinaryFieldOp { destination: Relative(28), op: Equals, lhs: Relative(19), rhs: Relative(16) }, JumpIf { condition: Relative(28), location: 711 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, Load { destination: Relative(19), source_pointer: Relative(30) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(31), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(19) }, Not { destination: Relative(31), source: Relative(31), bit_size: U1 }, JumpIf { condition: Relative(31), location: 717 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(19) }, Const { destination: Relative(19), bit_size: Field, value: 12 }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(18) }, Mov { destination: Direct(32772), source: Relative(30) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1695 }, Mov { destination: Relative(32), source: Direct(32774) }, Mov { destination: Relative(33), source: Direct(32775) }, Store { destination_pointer: Relative(33), source: Relative(19) }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(31) }, JumpIf { condition: Relative(30), location: 731 }, Call { location: 1585 }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(26) }, Load { destination: Relative(30), source_pointer: Relative(33) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(30), rhs: Relative(19) }, JumpIf { condition: Relative(26), location: 737 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(31), rhs: Relative(14) }, JumpIf { condition: Relative(26), location: 741 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(30) } }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(9) }, Load { destination: Relative(26), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(30), op: Equals, lhs: Relative(26), rhs: Relative(16) }, JumpIf { condition: Relative(30), location: 747 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, Load { destination: Relative(26), source_pointer: Relative(32) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(31), op: Equals, bit_size: U32, lhs: Relative(30), rhs: Relative(26) }, Not { destination: Relative(31), source: Relative(31), bit_size: U1 }, JumpIf { condition: Relative(31), location: 753 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Sub, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(14) }, Mov { destination: Direct(32772), source: Relative(32) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1750 }, Mov { destination: Relative(31), source: Direct(32774) }, Mov { destination: Relative(34), source: Direct(32775) }, Load { destination: Relative(33), source_pointer: Relative(34) }, Load { destination: Relative(32), source_pointer: Relative(31) }, Const { destination: Relative(34), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(35), op: Equals, bit_size: U32, lhs: Relative(34), rhs: Relative(32) }, Not { destination: Relative(35), source: Relative(35), bit_size: U1 }, JumpIf { condition: Relative(35), location: 769 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(32) }, BinaryFieldOp { destination: Relative(32), op: Equals, lhs: Relative(33), rhs: Relative(22) }, JumpIf { condition: Relative(32), location: 775 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(35) } }, BinaryIntOp { destination: Relative(32), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(18) }, JumpIf { condition: Relative(32), location: 779 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, BinaryIntOp { destination: Relative(26), op: Sub, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Const { destination: Relative(36), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(35), op: Add, bit_size: U32, lhs: Relative(31), rhs: Relative(36) }, Load { destination: Relative(32), source_pointer: Relative(35) }, Mov { destination: Direct(32771), source: Relative(18) }, Mov { destination: Direct(32772), source: Relative(31) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1786 }, Mov { destination: Relative(33), source: Direct(32774) }, BinaryFieldOp { destination: Relative(31), op: Equals, lhs: Relative(32), rhs: Relative(19) }, JumpIf { condition: Relative(31), location: 792 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(35) } }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(7) }, JumpIf { condition: Relative(19), location: 796 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, Const { destination: Relative(19), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Relative(26), op: Sub, bit_size: U32, lhs: Relative(4), rhs: Relative(19) }, BinaryIntOp { destination: Relative(31), op: LessThanEquals, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, JumpIf { condition: Relative(31), location: 801 }, Call { location: 1579 }, BinaryIntOp { destination: Relative(31), op: LessThan, bit_size: U32, lhs: Relative(26), rhs: Relative(18) }, JumpIf { condition: Relative(31), location: 804 }, Call { location: 1585 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(35), op: Mul, bit_size: U32, lhs: Relative(35), rhs: Relative(26) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(33) }, Mov { destination: Direct(32772), source: Relative(35) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1828 }, Mov { destination: Relative(32), source: Direct(32774) }, Mov { destination: Relative(36), source: Direct(32775) }, Store { destination_pointer: Relative(36), source: Relative(25) }, BinaryIntOp { destination: Relative(26), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(31) }, JumpIf { condition: Relative(26), location: 817 }, Call { location: 1585 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(1) }, Load { destination: Relative(19), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(19), rhs: Relative(25) }, JumpIf { condition: Relative(26), location: 823 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(7), rhs: Relative(31) }, JumpIf { condition: Relative(19), location: 826 }, Call { location: 1585 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(9) }, Load { destination: Relative(19), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(19), rhs: Relative(16) }, JumpIf { condition: Relative(26), location: 832 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(31), rhs: Relative(18) }, JumpIf { condition: Relative(19), location: 836 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Load { destination: Relative(19), source_pointer: Relative(32) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(31), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(19) }, Not { destination: Relative(31), source: Relative(31), bit_size: U1 }, JumpIf { condition: Relative(31), location: 842 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Sub, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, BinaryIntOp { destination: Relative(31), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, JumpIf { condition: Relative(31), location: 848 }, Call { location: 1579 }, BinaryIntOp { destination: Relative(3), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(18) }, JumpIf { condition: Relative(3), location: 851 }, Call { location: 1585 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(33), op: Mul, bit_size: U32, lhs: Relative(33), rhs: Relative(19) }, BinaryIntOp { destination: Relative(3), op: Sub, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Const { destination: Relative(37), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(37) }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(36), rhs: Relative(33) }, Load { destination: Relative(35), source_pointer: Relative(36) }, Mov { destination: Direct(32771), source: Relative(32) }, Mov { destination: Direct(32772), source: Relative(33) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1897 }, Mov { destination: Relative(31), source: Direct(32774) }, Load { destination: Relative(19), source_pointer: Relative(31) }, Const { destination: Relative(32), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(33), op: Equals, bit_size: U32, lhs: Relative(32), rhs: Relative(19) }, Not { destination: Relative(33), source: Relative(33), bit_size: U1 }, JumpIf { condition: Relative(33), location: 869 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(19) }, Store { destination_pointer: Relative(5), source: Relative(3) }, Store { destination_pointer: Relative(21), source: Relative(31) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(35), rhs: Relative(13) }, JumpIf { condition: Relative(19), location: 877 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(7) }, JumpIf { condition: Relative(13), location: 881 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, Jump { location: 882 }, Load { destination: Relative(3), source_pointer: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(21) }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(7) }, JumpIf { condition: Relative(13), location: 888 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(14) }, Load { destination: Relative(3), source_pointer: Relative(13) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(3), rhs: Relative(16) }, JumpIf { condition: Relative(5), location: 894 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(13) } }, Load { destination: Relative(3), source_pointer: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 900 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(1) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(2) }, JumpIf { condition: Relative(20), location: 1537 }, Jump { location: 910 }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(5), source: Direct(32772) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Store { destination_pointer: Relative(21), source: Relative(17) }, Load { destination: Relative(19), source_pointer: Relative(5) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(19) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 923 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(5) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(24), source: Direct(32774) }, Mov { destination: Relative(26), source: Direct(32775) }, Store { destination_pointer: Relative(26), source: Relative(22) }, Store { destination_pointer: Relative(3), source: Relative(19) }, Store { destination_pointer: Relative(13), source: Relative(24) }, Jump { location: 936 }, Load { destination: Relative(5), source_pointer: Relative(3) }, Load { destination: Relative(19), source_pointer: Relative(13) }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(7) }, JumpIf { condition: Relative(21), location: 942 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(14) }, Load { destination: Relative(5), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(21), op: Equals, lhs: Relative(5), rhs: Relative(22) }, JumpIf { condition: Relative(21), location: 948 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Load { destination: Relative(5), source_pointer: Relative(19) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(5) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 954 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(7) }, Mov { destination: Direct(32772), source: Relative(19) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(24), source: Direct(32774) }, Mov { destination: Relative(26), source: Direct(32775) }, Store { destination_pointer: Relative(26), source: Relative(25) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Store { destination_pointer: Relative(13), source: Relative(24) }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(18) }, JumpIf { condition: Relative(3), location: 970 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(13) } }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(9) }, Load { destination: Relative(3), source_pointer: Relative(5) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(3), rhs: Relative(25) }, JumpIf { condition: Relative(5), location: 976 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(13) } }, Load { destination: Relative(3), source_pointer: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 982 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(1) }, Mov { destination: Relative(13), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(2) }, JumpIf { condition: Relative(20), location: 1533 }, Jump { location: 992 }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(5), source: Direct(32772) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(12) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(4) }, Store { destination_pointer: Relative(12), source: Relative(17) }, Load { destination: Relative(10), source_pointer: Relative(5) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(10) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 1005 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(5) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(19), source: Direct(32774) }, Mov { destination: Relative(20), source: Direct(32775) }, Store { destination_pointer: Relative(20), source: Relative(22) }, Store { destination_pointer: Relative(3), source: Relative(10) }, Store { destination_pointer: Relative(13), source: Relative(19) }, Jump { location: 1018 }, Load { destination: Relative(5), source_pointer: Relative(3) }, Load { destination: Relative(10), source_pointer: Relative(13) }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(7) }, JumpIf { condition: Relative(12), location: 1024 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(14) }, Load { destination: Relative(5), source_pointer: Relative(12) }, BinaryFieldOp { destination: Relative(12), op: Equals, lhs: Relative(5), rhs: Relative(22) }, JumpIf { condition: Relative(12), location: 1030 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, Const { destination: Relative(5), bit_size: Integer(U32), value: 20 }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(12), location: 1034 }, Jump { location: 1053 }, Load { destination: Relative(5), source_pointer: Relative(10) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(20), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(5) }, Not { destination: Relative(20), source: Relative(20), bit_size: U1 }, JumpIf { condition: Relative(20), location: 1040 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(7) }, Mov { destination: Direct(32772), source: Relative(10) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(20), source: Direct(32774) }, Mov { destination: Relative(21), source: Direct(32775) }, Store { destination_pointer: Relative(21), source: Relative(25) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Store { destination_pointer: Relative(13), source: Relative(20) }, Jump { location: 1053 }, Load { destination: Relative(5), source_pointer: Relative(3) }, Load { destination: Relative(7), source_pointer: Relative(13) }, Load { destination: Relative(10), source_pointer: Relative(7) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(20), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(10) }, Not { destination: Relative(20), source: Relative(20), bit_size: U1 }, JumpIf { condition: Relative(20), location: 1061 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(5) }, Mov { destination: Direct(32772), source: Relative(7) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(20), source: Direct(32774) }, Mov { destination: Relative(21), source: Direct(32775) }, Store { destination_pointer: Relative(21), source: Relative(23) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(18) }, JumpIf { condition: Relative(5), location: 1075 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(9) }, Load { destination: Relative(5), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(5), rhs: Relative(23) }, JumpIf { condition: Relative(7), location: 1081 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, Load { destination: Relative(5), source_pointer: Relative(20) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(5) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 1087 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(18) }, Mov { destination: Direct(32772), source: Relative(20) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(9), source: Direct(32774) }, Mov { destination: Relative(10), source: Direct(32775) }, Store { destination_pointer: Relative(10), source: Relative(25) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Store { destination_pointer: Relative(13), source: Relative(9) }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(14) }, JumpIf { condition: Relative(3), location: 1103 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(15) }, Load { destination: Relative(3), source_pointer: Relative(5) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(3), rhs: Relative(25) }, JumpIf { condition: Relative(5), location: 1109 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, Load { destination: Relative(3), source_pointer: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 1115 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(1) }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(2) }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(6) }, Cast { destination: Relative(13), source: Relative(4), bit_size: Field }, Cast { destination: Relative(20), source: Relative(6), bit_size: Field }, Const { destination: Relative(6), bit_size: Field, value: 50 }, JumpIf { condition: Relative(10), location: 1171 }, Jump { location: 1129 }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(5), source: Direct(32772) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(17) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(4) }, Store { destination_pointer: Relative(17), source: Relative(6) }, Load { destination: Relative(7), source_pointer: Relative(5) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(7) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 1142 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(7) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(5) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(19), source: Direct(32774) }, Mov { destination: Relative(21), source: Direct(32775) }, Store { destination_pointer: Relative(21), source: Relative(20) }, Load { destination: Relative(5), source_pointer: Relative(19) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(22), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(5) }, Not { destination: Relative(22), source: Relative(22), bit_size: U1 }, JumpIf { condition: Relative(22), location: 1158 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(7) }, Mov { destination: Direct(32772), source: Relative(19) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(22), source: Direct(32774) }, Mov { destination: Relative(24), source: Direct(32775) }, Store { destination_pointer: Relative(24), source: Relative(13) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Store { destination_pointer: Relative(9), source: Relative(22) }, Jump { location: 1197 }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(5), source: Direct(32772) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(4) }, Store { destination_pointer: Relative(19), source: Relative(17) }, Load { destination: Relative(7), source_pointer: Relative(5) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(7) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 1184 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(7) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(5) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(19), source: Direct(32774) }, Mov { destination: Relative(21), source: Direct(32775) }, Store { destination_pointer: Relative(21), source: Relative(13) }, Store { destination_pointer: Relative(3), source: Relative(7) }, Store { destination_pointer: Relative(9), source: Relative(19) }, Jump { location: 1197 }, Load { destination: Relative(5), source_pointer: Relative(3) }, Load { destination: Relative(7), source_pointer: Relative(9) }, Load { destination: Relative(17), source_pointer: Relative(7) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(17) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 1205 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(17) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(5) }, Mov { destination: Direct(32772), source: Relative(7) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(21), source: Direct(32774) }, Mov { destination: Relative(22), source: Direct(32775) }, Store { destination_pointer: Relative(22), source: Relative(16) }, Store { destination_pointer: Relative(3), source: Relative(17) }, Store { destination_pointer: Relative(9), source: Relative(21) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(14) }, JumpIf { condition: Relative(5), location: 1221 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, JumpIf { condition: Relative(12), location: 1223 }, Jump { location: 1242 }, Load { destination: Relative(5), source_pointer: Relative(21) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(5) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 1229 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(14) }, Mov { destination: Direct(32772), source: Relative(21) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(17), source: Direct(32774) }, Mov { destination: Relative(19), source: Direct(32775) }, Store { destination_pointer: Relative(19), source: Relative(25) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Store { destination_pointer: Relative(9), source: Relative(17) }, Jump { location: 1242 }, Load { destination: Relative(5), source_pointer: Relative(3) }, Load { destination: Relative(7), source_pointer: Relative(9) }, Load { destination: Relative(14), source_pointer: Relative(7) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(14) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 1250 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(14) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(5) }, Mov { destination: Direct(32772), source: Relative(7) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(19), source: Direct(32774) }, Mov { destination: Relative(21), source: Direct(32775) }, Store { destination_pointer: Relative(21), source: Relative(23) }, Store { destination_pointer: Relative(3), source: Relative(14) }, Store { destination_pointer: Relative(9), source: Relative(19) }, JumpIf { condition: Relative(12), location: 1283 }, Jump { location: 1264 }, Load { destination: Relative(5), source_pointer: Relative(19) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(5) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 1270 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(14) }, Mov { destination: Direct(32772), source: Relative(19) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(17), source: Direct(32774) }, Mov { destination: Relative(21), source: Direct(32775) }, Store { destination_pointer: Relative(21), source: Relative(6) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Store { destination_pointer: Relative(9), source: Relative(17) }, Jump { location: 1283 }, Load { destination: Relative(5), source_pointer: Relative(3) }, Load { destination: Relative(7), source_pointer: Relative(9) }, Load { destination: Relative(14), source_pointer: Relative(7) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(14) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 1291 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(14), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(14) }, Const { destination: Relative(14), bit_size: Field, value: 60 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(5) }, Mov { destination: Direct(32772), source: Relative(7) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(21), source: Direct(32774) }, Mov { destination: Relative(22), source: Direct(32775) }, Store { destination_pointer: Relative(22), source: Relative(14) }, Store { destination_pointer: Relative(3), source: Relative(19) }, Store { destination_pointer: Relative(9), source: Relative(21) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 11 }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(3) }, JumpIf { condition: Relative(5), location: 1309 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, JumpIf { condition: Relative(5), location: 1312 }, Call { location: 1585 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(9) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(4) }, Load { destination: Relative(5), source_pointer: Relative(9) }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(5), rhs: Relative(6) }, JumpIf { condition: Relative(7), location: 1320 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(15) }, Load { destination: Relative(5), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(5), rhs: Relative(16) }, JumpIf { condition: Relative(7), location: 1326 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(3) }, Load { destination: Relative(5), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(5), rhs: Relative(23) }, JumpIf { condition: Relative(3), location: 1332 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, Const { destination: Relative(3), bit_size: Integer(U32), value: 12 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(3) }, Load { destination: Relative(5), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(5), rhs: Relative(6) }, JumpIf { condition: Relative(3), location: 1339 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, Const { destination: Relative(3), bit_size: Integer(U32), value: 13 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(3) }, Load { destination: Relative(5), source_pointer: Relative(6) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(5), rhs: Relative(14) }, JumpIf { condition: Relative(3), location: 1346 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(6) } }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(1) }, Mov { destination: Relative(5), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(2) }, JumpIf { condition: Relative(10), location: 1428 }, Jump { location: 1354 }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1588 }, Mov { destination: Relative(6), source: Direct(32772) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(9) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(4) }, Store { destination_pointer: Relative(9), source: Relative(29) }, Load { destination: Relative(2), source_pointer: Relative(6) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(2) }, Not { destination: Relative(7), source: Relative(7), bit_size: U1 }, JumpIf { condition: Relative(7), location: 1367 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(6) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(7), source: Direct(32774) }, Mov { destination: Relative(9), source: Direct(32775) }, Store { destination_pointer: Relative(9), source: Relative(20) }, Load { destination: Relative(1), source_pointer: Relative(7) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(6), rhs: Relative(1) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 1383 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(7) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(9), source: Direct(32774) }, Mov { destination: Relative(10), source: Direct(32775) }, Store { destination_pointer: Relative(10), source: Relative(13) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(18) }, JumpIf { condition: Relative(2), location: 1397 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, Load { destination: Relative(1), source_pointer: Relative(9) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(7), source: Relative(7), bit_size: U1 }, JumpIf { condition: Relative(7), location: 1403 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(18) }, Mov { destination: Direct(32772), source: Relative(9) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1750 }, Mov { destination: Relative(7), source: Direct(32774) }, Mov { destination: Relative(14), source: Direct(32775) }, Load { destination: Relative(10), source_pointer: Relative(14) }, Load { destination: Relative(9), source_pointer: Relative(7) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(9) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 1419 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(9) }, BinaryFieldOp { destination: Relative(9), op: Equals, lhs: Relative(10), rhs: Relative(13) }, JumpIf { condition: Relative(9), location: 1425 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(15) } }, Store { destination_pointer: Relative(3), source: Relative(1) }, Store { destination_pointer: Relative(5), source: Relative(7) }, Jump { location: 1447 }, Load { destination: Relative(4), source_pointer: Relative(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(6), rhs: Relative(4) }, Not { destination: Relative(7), source: Relative(7), bit_size: U1 }, JumpIf { condition: Relative(7), location: 1434 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(4) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(2) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(7), source: Direct(32774) }, Mov { destination: Relative(9), source: Direct(32775) }, Store { destination_pointer: Relative(9), source: Relative(13) }, Store { destination_pointer: Relative(3), source: Relative(4) }, Store { destination_pointer: Relative(5), source: Relative(7) }, Jump { location: 1447 }, Load { destination: Relative(1), source_pointer: Relative(3) }, Load { destination: Relative(2), source_pointer: Relative(5) }, Load { destination: Relative(4), source_pointer: Relative(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(6), rhs: Relative(4) }, Not { destination: Relative(7), source: Relative(7), bit_size: U1 }, JumpIf { condition: Relative(7), location: 1455 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(4) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(2) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(7), source: Direct(32774) }, Mov { destination: Relative(9), source: Direct(32775) }, Store { destination_pointer: Relative(9), source: Relative(16) }, Store { destination_pointer: Relative(3), source: Relative(4) }, Store { destination_pointer: Relative(5), source: Relative(7) }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(18) }, JumpIf { condition: Relative(1), location: 1471 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, JumpIf { condition: Relative(12), location: 1473 }, Jump { location: 1492 }, Load { destination: Relative(1), source_pointer: Relative(7) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(4), source: Relative(4), bit_size: U1 }, JumpIf { condition: Relative(4), location: 1479 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(18) }, Mov { destination: Direct(32772), source: Relative(7) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(4), source: Direct(32774) }, Mov { destination: Relative(6), source: Direct(32775) }, Store { destination_pointer: Relative(6), source: Relative(25) }, Store { destination_pointer: Relative(3), source: Relative(1) }, Store { destination_pointer: Relative(5), source: Relative(4) }, Jump { location: 1492 }, Load { destination: Relative(1), source_pointer: Relative(3) }, Load { destination: Relative(2), source_pointer: Relative(5) }, BinaryIntOp { destination: Relative(3), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(1) }, JumpIf { condition: Relative(3), location: 1497 }, Call { location: 1585 }, BinaryIntOp { destination: Relative(3), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(2) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1750 }, Mov { destination: Relative(4), source: Direct(32774) }, Mov { destination: Relative(6), source: Direct(32775) }, Load { destination: Relative(5), source_pointer: Relative(6) }, Load { destination: Relative(1), source_pointer: Relative(4) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(6), source: Relative(6), bit_size: U1 }, JumpIf { condition: Relative(6), location: 1511 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(1) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(5), rhs: Relative(16) }, JumpIf { condition: Relative(1), location: 1517 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(6) } }, BinaryIntOp { destination: Relative(1), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(3) }, JumpIf { condition: Relative(1), location: 1520 }, Call { location: 1585 }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Mov { destination: Direct(32772), source: Relative(4) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1750 }, Mov { destination: Relative(5), source: Direct(32774) }, Mov { destination: Relative(7), source: Direct(32775) }, Load { destination: Relative(6), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(6), rhs: Relative(20) }, JumpIf { condition: Relative(3), location: 1532 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(4) } }, Return, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(12), rhs: Relative(10) }, JumpIf { condition: Relative(1), location: 1537 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(12), rhs: Relative(10) }, JumpIf { condition: Relative(1), location: 1541 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(12), rhs: Relative(10) }, JumpIf { condition: Relative(1), location: 1545 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(17), rhs: Relative(24) }, JumpIf { condition: Relative(1), location: 1549 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, Load { destination: Relative(10), source_pointer: Relative(7) }, Load { destination: Relative(11), source_pointer: Relative(9) }, Load { destination: Relative(12), source_pointer: Relative(11) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(12) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 1557 }, Call { location: 1582 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(11), source: Relative(12) }, Cast { destination: Relative(12), source: Relative(2), bit_size: Field }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Mov { destination: Direct(32772), source: Relative(11) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1614 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(16), source: Direct(32775) }, Store { destination_pointer: Relative(16), source: Relative(12) }, Store { destination_pointer: Relative(7), source: Relative(14) }, Store { destination_pointer: Relative(9), source: Relative(15) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(3) }, Mov { destination: Relative(2), source: Relative(10) }, Jump { location: 47 }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 1578 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 2920182694213909827 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14225679739041873922 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32773), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32774), op: Equals, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, JumpIf { condition: Direct(32774), location: 1592 }, Jump { location: 1594 }, Mov { destination: Direct(32772), source: Direct(32771) }, Jump { location: 1613 }, Const { destination: Direct(32776), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32776) }, Load { destination: Direct(32775), source_pointer: Direct(32775) }, Const { destination: Direct(32776), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32775), rhs: Direct(32776) }, Mov { destination: Direct(32772), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32775) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32775) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 1611 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 1604 }, IndirectConst { destination_pointer: Direct(32772), bit_size: Integer(U32), value: 1 }, Jump { location: 1613 }, Return, Load { destination: Direct(32776), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Load { destination: Direct(32778), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32781), op: LessThanEquals, bit_size: U32, lhs: Direct(32780), rhs: Direct(32778) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, JumpIf { condition: Direct(32781), location: 1625 }, Jump { location: 1642 }, JumpIf { condition: Direct(32782), location: 1627 }, Jump { location: 1631 }, Mov { destination: Direct(32774), source: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, Jump { location: 1641 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32784) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32778) }, Jump { location: 1641 }, Jump { location: 1654 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32783), op: Mul, bit_size: U32, lhs: Direct(32780), rhs: Direct(32784) }, Const { destination: Direct(32785), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32785) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32784) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32783) }, Jump { location: 1654 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32772), rhs: Direct(32774) }, JumpIf { condition: Direct(32782), location: 1668 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32777) }, Mov { destination: Direct(32785), source: Direct(32779) }, Mov { destination: Direct(32786), source: Direct(32781) }, BinaryIntOp { destination: Direct(32787), op: Equals, bit_size: U32, lhs: Direct(32785), rhs: Direct(32784) }, JumpIf { condition: Direct(32787), location: 1668 }, Load { destination: Direct(32783), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32786), source: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, Jump { location: 1661 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32777) }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 5019202896831570965 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32775), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32775), location: 1677 }, Jump { location: 1679 }, Mov { destination: Direct(32773), source: Direct(32771) }, Jump { location: 1694 }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 1691 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 1684 }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32774), op: Sub, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Jump { location: 1694 }, Return, Load { destination: Direct(32776), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Load { destination: Direct(32778), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32781), op: LessThanEquals, bit_size: U32, lhs: Direct(32780), rhs: Direct(32778) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, JumpIf { condition: Direct(32781), location: 1706 }, Jump { location: 1723 }, JumpIf { condition: Direct(32782), location: 1708 }, Jump { location: 1712 }, Mov { destination: Direct(32774), source: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, Jump { location: 1722 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32784) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32778) }, Jump { location: 1722 }, Jump { location: 1735 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32783), op: Mul, bit_size: U32, lhs: Direct(32780), rhs: Direct(32784) }, Const { destination: Direct(32785), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32785) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32784) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32783) }, Jump { location: 1735 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32782), rhs: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32783) }, BinaryIntOp { destination: Direct(32783), op: LessThan, bit_size: U32, lhs: Direct(32785), rhs: Direct(32779) }, JumpIf { condition: Direct(32783), location: 1748 }, Load { destination: Direct(32786), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32784), source: Direct(32786) }, BinaryIntOp { destination: Direct(32785), op: Sub, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32784), op: Sub, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Jump { location: 1741 }, Mov { destination: Direct(32775), source: Direct(32781) }, Return, BinaryIntOp { destination: Direct(32776), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32777), op: Sub, bit_size: U32, lhs: Direct(32776), rhs: Direct(32773) }, Load { destination: Direct(32778), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32779), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(32781) }, JumpIf { condition: Direct(32779), location: 1758 }, Jump { location: 1762 }, Mov { destination: Direct(32774), source: Direct(32772) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, Jump { location: 1784 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32782) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32781) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32777) }, Mov { destination: Direct(32784), source: Direct(32780) }, Mov { destination: Direct(32785), source: Direct(32781) }, BinaryIntOp { destination: Direct(32786), op: Equals, bit_size: U32, lhs: Direct(32784), rhs: Direct(32783) }, JumpIf { condition: Direct(32786), location: 1783 }, Load { destination: Direct(32782), source_pointer: Direct(32784) }, Store { destination_pointer: Direct(32785), source: Direct(32782) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, Jump { location: 1776 }, Jump { location: 1784 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32777) }, Return, Load { destination: Direct(32775), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32776), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Load { destination: Direct(32777), source_pointer: Direct(32779) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Sub, bit_size: U32, lhs: Direct(32776), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32775), rhs: Direct(2) }, JumpIf { condition: Direct(32780), location: 1796 }, Jump { location: 1804 }, BinaryIntOp { destination: Direct(32774), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32777), op: Sub, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32779) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, Jump { location: 1827 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32782) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32781) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32779) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32779) }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32782), rhs: Direct(32779) }, Mov { destination: Direct(32785), source: Direct(32782) }, Mov { destination: Direct(32786), source: Direct(32781) }, BinaryIntOp { destination: Direct(32787), op: Equals, bit_size: U32, lhs: Direct(32785), rhs: Direct(32784) }, JumpIf { condition: Direct(32787), location: 1826 }, Load { destination: Direct(32783), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32786), source: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, Jump { location: 1819 }, Jump { location: 1827 }, Return, Load { destination: Direct(32776), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32777), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Load { destination: Direct(32778), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32781), op: LessThanEquals, bit_size: U32, lhs: Direct(32780), rhs: Direct(32778) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, JumpIf { condition: Direct(32781), location: 1839 }, Jump { location: 1856 }, JumpIf { condition: Direct(32782), location: 1841 }, Jump { location: 1845 }, Mov { destination: Direct(32774), source: Direct(32771) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, Jump { location: 1855 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32784) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32778) }, Jump { location: 1855 }, Jump { location: 1868 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32783), op: Mul, bit_size: U32, lhs: Direct(32780), rhs: Direct(32784) }, Const { destination: Direct(32785), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32785) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32784) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32783) }, Jump { location: 1868 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32771), rhs: Direct(32774) }, JumpIf { condition: Direct(32782), location: 1882 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, Mov { destination: Direct(32785), source: Direct(32779) }, Mov { destination: Direct(32786), source: Direct(32781) }, BinaryIntOp { destination: Direct(32787), op: Equals, bit_size: U32, lhs: Direct(32785), rhs: Direct(32784) }, JumpIf { condition: Direct(32787), location: 1882 }, Load { destination: Direct(32783), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32786), source: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, Jump { location: 1875 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32775), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32785), op: Sub, bit_size: U32, lhs: Direct(32777), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32786), op: Sub, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(32786) }, BinaryIntOp { destination: Direct(32788), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32786) }, BinaryIntOp { destination: Direct(32786), op: LessThan, bit_size: U32, lhs: Direct(32788), rhs: Direct(32783) }, JumpIf { condition: Direct(32786), location: 1896 }, Load { destination: Direct(32789), source_pointer: Direct(32788) }, Store { destination_pointer: Direct(32787), source: Direct(32789) }, BinaryIntOp { destination: Direct(32788), op: Sub, bit_size: U32, lhs: Direct(32788), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Sub, bit_size: U32, lhs: Direct(32787), rhs: Direct(2) }, Jump { location: 1889 }, Return, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32775), source_pointer: Direct(32775) }, BinaryIntOp { destination: Direct(32776), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32773) }, Load { destination: Direct(32777), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Const { destination: Direct(32780), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32780) }, JumpIf { condition: Direct(32778), location: 1906 }, Jump { location: 1912 }, Mov { destination: Direct(32774), source: Direct(32771) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32781) }, Jump { location: 1934 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(32782) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32781) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32781) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, Mov { destination: Direct(32783), source: Direct(32779) }, Mov { destination: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32785), op: Equals, bit_size: U32, lhs: Direct(32783), rhs: Direct(32782) }, JumpIf { condition: Direct(32785), location: 1933 }, Load { destination: Direct(32781), source_pointer: Direct(32783) }, Store { destination_pointer: Direct(32784), source: Direct(32781) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Jump { location: 1926 }, Jump { location: 1934 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32783), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32783) }, Mov { destination: Direct(32786), source: Direct(32781) }, Mov { destination: Direct(32787), source: Direct(32782) }, BinaryIntOp { destination: Direct(32788), op: Equals, bit_size: U32, lhs: Direct(32786), rhs: Direct(32785) }, JumpIf { condition: Direct(32788), location: 1949 }, Load { destination: Direct(32784), source_pointer: Direct(32786) }, Store { destination_pointer: Direct(32787), source: Direct(32784) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Add, bit_size: U32, lhs: Direct(32787), rhs: Direct(2) }, Jump { location: 1942 }, Return]"
  ],
  "debug_symbols": "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",
  "file_map": {
    "50": {
      "source": "fn main(x: u32) {\n    // The parameters to this function must come directly from witness values (inputs to main).\n    regression_dynamic_slice_index(x - 1, x - 4);\n}\n\nfn regression_dynamic_slice_index(x: u32, y: u32) {\n    let mut slice = &[];\n    for i in 0..5 {\n        slice = slice.push_back(i as Field);\n    }\n    assert(slice.len() == 5);\n\n    dynamic_slice_index_set_if(slice, x, y);\n    dynamic_slice_index_set_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_if(slice, x, y + 1);\n    dynamic_slice_index_if(slice, x);\n    dynamic_array_index_if([0, 1, 2, 3, 4], x);\n    dynamic_slice_index_else(slice, x);\n\n    dynamic_slice_merge_if(slice, x);\n    dynamic_slice_merge_else(slice, x);\n    dynamic_slice_merge_two_ifs(slice, x);\n    dynamic_slice_merge_mutate_between_ifs(slice, x, y);\n    dynamic_slice_merge_push_then_pop(slice, x, y);\n}\n\nfn dynamic_slice_index_set_if(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[3] == 2);\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_index_set_else(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 > 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 0);\n}\n// This tests the case of missing a store instruction in the else branch\n// of merging slices\nfn dynamic_slice_index_if(mut slice: [Field], x: u32) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    } else {\n        assert(slice[x] == 0);\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_array_index_if(mut array: [Field; 5], x: u32) {\n    if x as u32 < 10 {\n        assert(array[x] == 4);\n        array[x] = array[x] - 2;\n    } else {\n        assert(array[x] == 0);\n    }\n    assert(array[4] == 2);\n}\n// This tests the case of missing a store instruction in the then branch\n// of merging slices\nfn dynamic_slice_index_else(mut slice: [Field], x: u32) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_merge_if(mut slice: [Field], x: u32) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n\n        slice = slice.push_back(10);\n        // Having an array set here checks whether we appropriately\n        // handle a slice length that is not yet resolving to a constant\n        // during flattening\n        slice[x] = 10;\n        assert(slice[slice.len() - 1] == 10);\n        assert(slice.len() == 6);\n\n        slice[x] = 20;\n        slice[x] = slice[x] + 10;\n\n        slice = slice.push_front(11);\n        assert(slice[0] == 11);\n        assert(slice.len() == 7);\n        assert(slice[5] == 30);\n\n        slice = slice.push_front(12);\n        assert(slice[0] == 12);\n        assert(slice.len() == 8);\n        assert(slice[6] == 30);\n\n        let (popped_slice, last_elem) = slice.pop_back();\n        assert(last_elem == 10);\n        assert(popped_slice.len() == 7);\n\n        let (first_elem, rest_of_slice) = popped_slice.pop_front();\n        assert(first_elem == 12);\n        assert(rest_of_slice.len() == 6);\n\n        slice = rest_of_slice.insert(x as u32 - 2, 20);\n        assert(slice[2] == 20);\n        assert(slice[6] == 30);\n        assert(slice.len() == 7);\n\n        let (removed_slice, removed_elem) = slice.remove(x as u32 - 1);\n        // The deconstructed tuple assigns to the slice but is not seen outside of the if statement\n        // without a direct assignment\n        slice = removed_slice;\n\n        assert(removed_elem == 1);\n        assert(slice.len() == 6);\n    } else {\n        assert(slice[x] == 0);\n        slice = slice.push_back(20);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 30);\n}\n\nfn dynamic_slice_merge_else(mut slice: [Field], x: u32) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_else(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        if y != 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 5 {\n                // We should not hit this case\n                assert(slice[x] == 22);\n            } else {\n                slice[x] = 10;\n                slice = slice.push_back(15);\n                assert(slice.len() == 6);\n            }\n            assert(slice[4] == 10);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 10);\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_if(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 2);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[2] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        // TODO: this panics as we have a load for the slice in flattening\n        if y == 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 4 {\n                slice[x] = 5;\n            }\n            assert(slice[4] == 5);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 5);\n}\n\nfn dynamic_slice_merge_two_ifs(mut slice: [Field], x: u32) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 8);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_merge_mutate_between_ifs(mut slice: [Field], x: u32, y: u32) {\n    if x != y {\n        slice[x] = 50;\n        slice = slice.push_back(y as Field);\n        slice = slice.push_back(x as Field);\n    } else {\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(x as Field);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 8);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    if x != 20 {\n        slice = slice.push_back(50);\n    }\n\n    slice = slice.push_back(60);\n    assert(slice.len() == 11);\n    assert(slice[x] == 50);\n    assert(slice[slice.len() - 4] == 30);\n    assert(slice[slice.len() - 3] == 15);\n    assert(slice[slice.len() - 2] == 50);\n    assert(slice[slice.len() - 1] == 60);\n}\n\nfn dynamic_slice_merge_push_then_pop(mut slice: [Field], x: u32, y: u32) {\n    if x != y {\n        slice[x] = 5;\n        slice = slice.push_back(y as Field);\n        slice = slice.push_back(x as Field);\n        assert(slice.len() == 7);\n\n        let (popped_slice, elem) = slice.pop_back();\n        assert(slice.len() == 7);\n        assert(elem == x as Field);\n        slice = popped_slice;\n    } else {\n        slice = slice.push_back(x as Field);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 7);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    let (slice, elem) = slice.pop_back();\n    assert(elem == 30);\n\n    let (_, elem) = slice.pop_back();\n    assert(elem == y as Field);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
