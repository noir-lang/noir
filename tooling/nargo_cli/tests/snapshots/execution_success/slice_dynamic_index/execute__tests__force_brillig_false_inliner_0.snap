---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _782",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 4294967290 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(1)), Simple(Witness(2))]",
    "BLACKBOX::RANGE [(_2, 32)] []",
    "EXPR [ (1, _0) (-4294967296, _1) (-1, _2) 4294967290 ]",
    "EXPR [ (-1, _1) 0 ]",
    "EXPR [ (-1, _3) 0 ]",
    "EXPR [ (-1, _4) 1 ]",
    "EXPR [ (-1, _5) 2 ]",
    "EXPR [ (-1, _6) 3 ]",
    "EXPR [ (-1, _7) 4 ]",
    "INIT (id: 0, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _0) (-1, _8) -1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _9) 0 ]) ",
    "EXPR [ (1, _9) -4 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 4294967287 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(10)), Simple(Witness(11))]",
    "BLACKBOX::RANGE [(_11, 32)] []",
    "EXPR [ (1, _0) (-4294967296, _10) (-1, _11) 4294967287 ]",
    "EXPR [ (-1, _10) 0 ]",
    "EXPR [ (1, _0) (-1, _12) -4 ]",
    "MEM (id: 0, read at: EXPR [ (1, _12) 0 ], value: EXPR [ (1, _13) 0 ]) ",
    "EXPR [ (1, _13) -1 ]",
    "INIT (id: 1, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "MEM (id: 1, write EXPR [ (1, _3) 0 ] at: EXPR [ (1, _12) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _14) 0 ]) ",
    "EXPR [ (1, _14) -4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _15) 0 ]) ",
    "EXPR [ (1, _15) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(16)), Simple(Witness(17))]",
    "BLACKBOX::RANGE [(_16, 222)] []",
    "BLACKBOX::RANGE [(_17, 32)] []",
    "EXPR [ (1, _8) (-4294967296, _16) (-1, _17) 0 ]",
    "EXPR [ (-1, _16) (-1, _18) 5096253676302562286669017222071363378443840053029366383258766538131 ]",
    "BLACKBOX::RANGE [(_18, 222)] []",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(16))], q_c: 5096253676302562286669017222071363378443840053029366383258766538131 })], outputs: [Simple(Witness(19))]",
    "EXPR [ (-1, _16, _19) (5096253676302562286669017222071363378443840053029366383258766538131, _19) (1, _20) -1 ]",
    "EXPR [ (-1, _16, _20) (5096253676302562286669017222071363378443840053029366383258766538131, _20) 0 ]",
    "EXPR [ (1, _17, _20) (1, _20, _20) (268435454, _20) (-1, _21) 0 ]",
    "BLACKBOX::RANGE [(_21, 32)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(17))], q_c: 4294967286 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(22)), Simple(Witness(23))]",
    "BLACKBOX::RANGE [(_22, 1)] []",
    "BLACKBOX::RANGE [(_23, 32)] []",
    "EXPR [ (1, _17) (-4294967296, _22) (-1, _23) 4294967286 ]",
    "EXPR [ (-1, _8, _22) (1, _8) (-1, _24) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _24) 0 ], value: EXPR [ (1, _25) 0 ]) ",
    "EXPR [ (-1, _22, _25) (4, _22) (1, _25) -4 ]",
    "EXPR [ (-1, _8, _22) (1, _8) (-1, _26) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _26) 0 ], value: EXPR [ (1, _27) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _28) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _29) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _30) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _31) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _32) 0 ]) ",
    "INIT (id: 2, len: 5, witnesses: [_28, _29, _30, _31, _32])",
    "EXPR [ (-1, _22, _25) (2, _22) (1, _25) (-1, _591) 0 ]",
    "EXPR [ (1, _22, _27) (-1, _33) (1, _591) -2 ]",
    "MEM (id: 2, write EXPR [ (1, _33) 0 ] at: EXPR [ (1, _26) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967290 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(34)), Simple(Witness(35))]",
    "BLACKBOX::RANGE [(_34, 1)] []",
    "BLACKBOX::RANGE [(_35, 32)] []",
    "EXPR [ (1, _8) (-4294967296, _34) (-1, _35) 4294967290 ]",
    "EXPR [ (1, _22, _34) (-1, _34) 0 ]",
    "EXPR [ (-1, _8, _22) (1, _8) (1, _22) (-1, _36) -1 ]",
    "MEM (id: 2, read at: EXPR [ (1, _36) 0 ], value: EXPR [ (1, _37) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _38) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _39) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _40) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _41) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _42) 0 ]) ",
    "INIT (id: 3, len: 5, witnesses: [_38, _39, _40, _41, _42])",
    "EXPR [ (1, _22, _37) (-1, _43) (1, _591) -2 ]",
    "MEM (id: 3, write EXPR [ (1, _43) 0 ] at: EXPR [ (1, _36) 0 ]) ",
    "EXPR [ (-3, _22) (-1, _44) 3 ]",
    "MEM (id: 3, read at: EXPR [ (1, _44) 0 ], value: EXPR [ (1, _45) 0 ]) ",
    "EXPR [ (-3, _22) (-1, _46) 3 ]",
    "MEM (id: 1, read at: EXPR [ (1, _46) 0 ], value: EXPR [ (1, _47) 0 ]) ",
    "EXPR [ (-4, _22) (-1, _48) 4 ]",
    "MEM (id: 3, read at: EXPR [ (1, _48) 0 ], value: EXPR [ (1, _49) 0 ]) ",
    "EXPR [ (-4, _22) (-1, _50) 4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _50) 0 ], value: EXPR [ (1, _51) 0 ]) ",
    "EXPR [ (1, _8, _22) (-1, _52) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _52) 0 ], value: EXPR [ (1, _53) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _54) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _55) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _56) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _57) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _58) 0 ]) ",
    "INIT (id: 4, len: 5, witnesses: [_54, _55, _56, _57, _58])",
    "EXPR [ (-1, _22, _53) (1, _53) (-1, _59) 0 ]",
    "MEM (id: 4, write EXPR [ (1, _59) 0 ] at: EXPR [ (1, _52) 0 ]) ",
    "EXPR [ (3, _22) (-1, _60) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _60) 0 ], value: EXPR [ (1, _61) 0 ]) ",
    "EXPR [ (-1, _22) (-1, _62) 1 ]",
    "EXPR [ (-1, _22, _45) (1, _22, _47) (1, _45) (-1, _63) 0 ]",
    "EXPR [ (4, _22) (-1, _64) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _64) 0 ], value: EXPR [ (1, _65) 0 ]) ",
    "EXPR [ (1, _22, _51) (-1, _595) 0 ]",
    "EXPR [ (-1, _22, _49) (1, _49) (-1, _66) (1, _595) 0 ]",
    "EXPR [ (1, _22, _61) (1, _62, _63) -2 ]",
    "EXPR [ (1, _22, _65) (-1, _598) 0 ]",
    "EXPR [ (1, _62, _66) (1, _598) -2 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(17))], q_c: 4294967306 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(67)), Simple(Witness(68))]",
    "BLACKBOX::RANGE [(_68, 32)] []",
    "EXPR [ (-1, _17) (-4294967296, _67) (-1, _68) 4294967306 ]",
    "EXPR [ (-1, _8, _67) (1, _8) (-1, _69) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _69) 0 ], value: EXPR [ (1, _70) 0 ]) ",
    "EXPR [ (-1, _67, _70) (4, _67) (1, _70) -4 ]",
    "EXPR [ (-1, _8, _67) (1, _8) (-1, _71) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _71) 0 ], value: EXPR [ (1, _72) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _73) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _74) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _75) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _76) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _77) 0 ]) ",
    "INIT (id: 5, len: 5, witnesses: [_73, _74, _75, _76, _77])",
    "EXPR [ (-1, _67, _70) (2, _67) (1, _70) (-1, _600) 0 ]",
    "EXPR [ (1, _67, _72) (-1, _78) (1, _600) -2 ]",
    "MEM (id: 5, write EXPR [ (1, _78) 0 ] at: EXPR [ (1, _71) 0 ]) ",
    "EXPR [ (1, _34, _67) (-1, _34) 0 ]",
    "EXPR [ (-1, _8, _67) (1, _8) (1, _67) (-1, _79) -1 ]",
    "MEM (id: 5, read at: EXPR [ (1, _79) 0 ], value: EXPR [ (1, _80) 0 ]) ",
    "EXPR [ (1, _67, _80) (-1, _81) (1, _600) -2 ]",
    "MEM (id: 5, write EXPR [ (1, _81) 0 ] at: EXPR [ (1, _79) 0 ]) ",
    "EXPR [ (-4, _67) (-1, _82) 4 ]",
    "MEM (id: 5, read at: EXPR [ (1, _82) 0 ], value: EXPR [ (1, _83) 0 ]) ",
    "EXPR [ (-4, _67) (-1, _84) 4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _84) 0 ], value: EXPR [ (1, _85) 0 ]) ",
    "EXPR [ (1, _8, _67) (-1, _86) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _86) 0 ], value: EXPR [ (1, _87) 0 ]) ",
    "EXPR [ (-1, _67, _87) (1, _87) (-1, _88) 0 ]",
    "MEM (id: 1, write EXPR [ (1, _88) 0 ] at: EXPR [ (1, _86) 0 ]) ",
    "EXPR [ (4, _67) (-1, _89) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _89) 0 ], value: EXPR [ (1, _90) 0 ]) ",
    "EXPR [ (-1, _67) (-1, _91) 1 ]",
    "EXPR [ (-1, _67, _83) (1, _67, _85) (1, _83) (-1, _92) 0 ]",
    "EXPR [ (1, _67, _90) (1, _91, _92) 0 ]",
    "EXPR [ (4, _62) (-1, _93) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _93) 0 ], value: EXPR [ (1, _94) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(12))], q_c: -1 })], outputs: [Simple(Witness(95))]",
    "EXPR [ (1, _12, _95) (-1, _95) (1, _96) -1 ]",
    "EXPR [ (1, _12, _96) (-1, _96) 0 ]",
    "EXPR [ (-1, _62, _96) (1, _62) (-1, _97) 0 ]",
    "EXPR [ (1, _8, _97) (-1, _98) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _98) 0 ], value: EXPR [ (1, _99) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _100) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _101) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _102) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _103) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _104) 0 ]) ",
    "INIT (id: 6, len: 5, witnesses: [_100, _101, _102, _103, _104])",
    "EXPR [ (1, _25, _97) (-1, _97, _99) (18, _97) (1, _99) (-1, _105) 0 ]",
    "MEM (id: 6, write EXPR [ (1, _105) 0 ] at: EXPR [ (1, _98) 0 ]) ",
    "EXPR [ (4, _97) (-1, _106) 0 ]",
    "MEM (id: 6, read at: EXPR [ (1, _106) 0 ], value: EXPR [ (1, _107) 0 ]) ",
    "EXPR [ (-1, _97) (-1, _108) 1 ]",
    "EXPR [ (1, _62, _94) (-1, _109) (1, _595) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: -5 })], outputs: [Simple(Witness(110))]",
    "EXPR [ (1, _8, _110) (-5, _110) (1, _111) -1 ]",
    "EXPR [ (1, _8, _111) (-5, _111) 0 ]",
    "EXPR [ (1, _62, _96) (-1, _112) 0 ]",
    "EXPR [ (1, _25) (-1, _113) -2 ]",
    "EXPR [ (1, _111, _112) (-1, _114) 0 ]",
    "EXPR [ (1, _113, _114) (-22, _114) 0 ]",
    "EXPR [ (-1, _111, _112) (1, _112) (-1, _115) 0 ]",
    "EXPR [ (1, _8, _115) (-1, _116) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _116) 0 ], value: EXPR [ (1, _117) 0 ]) ",
    "EXPR [ (-1, _115, _117) (10, _115) (1, _117) (-1, _118) 0 ]",
    "MEM (id: 2, write EXPR [ (1, _118) 0 ] at: EXPR [ (1, _116) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _119) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _120) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _121) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _122) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _123) 0 ]) ",
    "EXPR [ (-1, _124) 15 ]",
    "EXPR [ (-1, _115) (-1, _125) 1 ]",
    "EXPR [ (-5, _22, _97) (-5, _62, _97) (5, _22) (5, _62) (5, _97) (-1, _126) 0 ]",
    "EXPR [ (1, _97, _107) (1, _108, _109) (-1, _127) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-1, Witness(125), Witness(126))], linear_combinations: [(-6, Witness(115))], q_c: 4294967300 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(128)), Simple(Witness(129))]",
    "BLACKBOX::RANGE [(_128, 1)] []",
    "BLACKBOX::RANGE [(_129, 32)] []",
    "EXPR [ (-1, _125, _126) (-6, _115) (-4294967296, _128) (-1, _129) 4294967300 ]",
    "EXPR [ (-1, _112, _128) 0 ]",
    "EXPR [ (1, _115, _123) (1, _125, _127) (-1, _130) 0 ]",
    "EXPR [ (1, _112, _130) (-10, _112) 0 ]",
    "EXPR [ (1, _125, _126) (6, _115) (-1, _131) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-1, Witness(62), Witness(131))], linear_combinations: [(-5, Witness(22))], q_c: 4294967300 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(132)), Simple(Witness(133))]",
    "BLACKBOX::RANGE [(_133, 32)] []",
    "EXPR [ (-1, _62, _131) (-5, _22) (-4294967296, _132) (-1, _133) 4294967300 ]",
    "EXPR [ (-1, _132) 0 ]",
    "EXPR [ (1, _62, _130) (1, _598) -10 ]",
    "EXPR [ (1, _62, _131) (5, _22) -6 ]",
    "EXPR [ (15, _62, _115) -15 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(12))], q_c: 4294967292 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(134)), Simple(Witness(135))]",
    "BLACKBOX::RANGE [(_135, 32)] []",
    "EXPR [ (1, _12) (-4294967296, _134) (-1, _135) 4294967292 ]",
    "EXPR [ (-1, _134) 0 ]",
    "EXPR [ (1, _12) (-1, _136) 1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _136) 0 ], value: EXPR [ (1, _137) 0 ]) ",
    "EXPR [ (1, _137) -2 ]",
    "INIT (id: 8, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "MEM (id: 8, write EXPR [ (1, _3) 0 ] at: EXPR [ (1, _136) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _138) 0 ]) ",
    "EXPR [ (1, _138) -4 ]",
    "MEM (id: 8, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _139) 0 ]) ",
    "EXPR [ (1, _139) 0 ]",
    "EXPR [ (1, _8, _62) (-1, _140) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _140) 0 ], value: EXPR [ (1, _141) 0 ]) ",
    "EXPR [ (1, _8, _62) (-1, _142) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _142) 0 ], value: EXPR [ (1, _143) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _144) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _145) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _146) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _147) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _148) 0 ]) ",
    "INIT (id: 9, len: 5, witnesses: [_144, _145, _146, _147, _148])",
    "EXPR [ (1, _62, _141) (-1, _62, _143) (-2, _62) (1, _143) (-1, _149) 0 ]",
    "MEM (id: 9, write EXPR [ (1, _149) 0 ] at: EXPR [ (1, _142) 0 ]) ",
    "EXPR [ (4, _62) (-1, _150) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _150) 0 ], value: EXPR [ (1, _151) 0 ]) ",
    "EXPR [ (4, _62) (-1, _152) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _152) 0 ], value: EXPR [ (1, _153) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(136))], q_c: -1 })], outputs: [Simple(Witness(154))]",
    "EXPR [ (1, _136, _154) (-1, _154) (1, _155) -1 ]",
    "EXPR [ (1, _136, _155) (-1, _155) 0 ]",
    "EXPR [ (1, _62, _155) (-1, _156) 0 ]",
    "EXPR [ (1, _8, _156) (-1, _157) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _157) 0 ], value: EXPR [ (1, _158) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _159) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _160) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _161) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _162) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _163) 0 ]) ",
    "INIT (id: 10, len: 5, witnesses: [_159, _160, _161, _162, _163])",
    "EXPR [ (1, _141, _156) (-1, _156, _158) (18, _156) (1, _158) (-1, _164) 0 ]",
    "MEM (id: 10, write EXPR [ (1, _164) 0 ] at: EXPR [ (1, _157) 0 ]) ",
    "EXPR [ (4, _156) (-1, _165) 0 ]",
    "MEM (id: 10, read at: EXPR [ (1, _165) 0 ], value: EXPR [ (1, _166) 0 ]) ",
    "EXPR [ (-1, _156) (-1, _167) 1 ]",
    "EXPR [ (1, _22, _153) (1, _62, _151) (-1, _168) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: -4 })], outputs: [Simple(Witness(169))]",
    "EXPR [ (1, _8, _169) (-4, _169) (1, _170) -1 ]",
    "EXPR [ (1, _8, _170) (-4, _170) 0 ]",
    "EXPR [ (-1, _62, _155) (1, _62) (-1, _171) 0 ]",
    "EXPR [ (1, _170, _171) (-1, _172) 0 ]",
    "EXPR [ (1, _8, _172) (-1, _173) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _173) 0 ], value: EXPR [ (1, _174) 0 ]) ",
    "EXPR [ (-1, _172, _174) (5, _172) (1, _174) (-1, _175) 0 ]",
    "MEM (id: 9, write EXPR [ (1, _175) 0 ] at: EXPR [ (1, _173) 0 ]) ",
    "EXPR [ (4, _172) (-1, _176) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _176) 0 ], value: EXPR [ (1, _177) 0 ]) ",
    "EXPR [ (-1, _172) (-1, _178) 1 ]",
    "EXPR [ (1, _156, _166) (1, _167, _168) (-1, _179) 0 ]",
    "EXPR [ (1, _172, _177) (1, _178, _179) (-1, _180) 0 ]",
    "EXPR [ (1, _171, _180) (-5, _171) 0 ]",
    "EXPR [ (1, _8, _22) (-1, _181) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _181) 0 ], value: EXPR [ (1, _182) 0 ]) ",
    "EXPR [ (-1, _22, _182) (1, _182) (-1, _183) 0 ]",
    "MEM (id: 8, write EXPR [ (1, _183) 0 ] at: EXPR [ (1, _181) 0 ]) ",
    "EXPR [ (4, _22) (-1, _184) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _184) 0 ], value: EXPR [ (1, _185) 0 ]) ",
    "EXPR [ (1, _22, _185) (1, _62, _180) -5 ]",
    "EXPR [ (1, _8, _62) (-1, _186) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _186) 0 ], value: EXPR [ (1, _187) 0 ]) ",
    "EXPR [ (1, _62, _187) (4, _22) -4 ]",
    "EXPR [ (1, _8, _62) (-1, _188) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _188) 0 ], value: EXPR [ (1, _189) 0 ]) ",
    "INIT (id: 11, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _62, _187) (-1, _62, _189) (-2, _62) (1, _189) (-1, _190) 0 ]",
    "MEM (id: 11, write EXPR [ (1, _190) 0 ] at: EXPR [ (1, _188) 0 ]) ",
    "EXPR [ (4, _62) (-1, _191) 0 ]",
    "MEM (id: 11, read at: EXPR [ (1, _191) 0 ], value: EXPR [ (1, _192) 0 ]) ",
    "EXPR [ (1, _8, _22) (-1, _193) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _193) 0 ], value: EXPR [ (1, _194) 0 ]) ",
    "EXPR [ (1, _22, _194) 0 ]",
    "EXPR [ (1, _62, _192) (4, _22) -2 ]",
    "INIT (id: 12, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _8, _62) (-1, _195) 0 ]",
    "MEM (id: 12, read at: EXPR [ (1, _195) 0 ], value: EXPR [ (1, _196) 0 ]) ",
    "EXPR [ (1, _62, _196) (4, _22) -4 ]",
    "EXPR [ (1, _8, _62) (-1, _197) 0 ]",
    "MEM (id: 12, read at: EXPR [ (1, _197) 0 ], value: EXPR [ (1, _198) 0 ]) ",
    "INIT (id: 13, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _62, _196) (-1, _62, _198) (-2, _62) (1, _198) (-1, _199) 0 ]",
    "MEM (id: 13, write EXPR [ (1, _199) 0 ] at: EXPR [ (1, _197) 0 ]) ",
    "MEM (id: 13, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _200) 0 ]) ",
    "EXPR [ (1, _8, _22) (-1, _201) 0 ]",
    "MEM (id: 12, read at: EXPR [ (1, _201) 0 ], value: EXPR [ (1, _202) 0 ]) ",
    "EXPR [ (1, _22, _202) 0 ]",
    "EXPR [ (1, _62, _200) (4, _22) -2 ]",
    "EXPR [ (1, _8, _91) (-1, _203) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _203) 0 ], value: EXPR [ (1, _204) 0 ]) ",
    "EXPR [ (1, _91, _204) 0 ]",
    "EXPR [ (1, _8, _67) (-1, _205) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _205) 0 ], value: EXPR [ (1, _206) 0 ]) ",
    "EXPR [ (1, _67, _206) (-4, _67) 0 ]",
    "EXPR [ (1, _8, _67) (-1, _207) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _207) 0 ], value: EXPR [ (1, _208) 0 ]) ",
    "INIT (id: 14, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _67, _206) (-1, _67, _208) (-2, _67) (1, _208) (-1, _209) 0 ]",
    "MEM (id: 14, write EXPR [ (1, _209) 0 ] at: EXPR [ (1, _207) 0 ]) ",
    "EXPR [ (4, _67) (-1, _210) 0 ]",
    "MEM (id: 14, read at: EXPR [ (1, _210) 0 ], value: EXPR [ (1, _211) 0 ]) ",
    "EXPR [ (1, _67, _211) (4, _91) -2 ]",
    "MEM (id: 11, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _212) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _213) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _214) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _215) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _216) 0 ]) ",
    "EXPR [ (-1, _217) 10 ]",
    "INIT (id: 15, len: 6, witnesses: [_212, _213, _214, _215, _216, _217])",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967290 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(218)), Simple(Witness(219))]",
    "BLACKBOX::RANGE [(_218, 1)] []",
    "BLACKBOX::RANGE [(_219, 32)] []",
    "EXPR [ (1, _8) (-4294967296, _218) (-1, _219) 4294967290 ]",
    "EXPR [ (-1, _62, _218) 0 ]",
    "EXPR [ (1, _8, _62) (-1, _220) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _220) 0 ], value: EXPR [ (1, _221) 0 ]) ",
    "EXPR [ (-1, _62, _221) (10, _62) (1, _221) (-1, _222) 0 ]",
    "MEM (id: 15, write EXPR [ (1, _222) 0 ] at: EXPR [ (1, _220) 0 ]) ",
    "EXPR [ (5, _62) (-1, _223) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _223) 0 ], value: EXPR [ (1, _224) 0 ]) ",
    "EXPR [ (1, _62, _224) (-10, _62) 0 ]",
    "EXPR [ (1, _8, _62) (-1, _225) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _225) 0 ], value: EXPR [ (1, _226) 0 ]) ",
    "EXPR [ (-1, _62, _226) (20, _62) (1, _226) (-1, _227) 0 ]",
    "MEM (id: 15, write EXPR [ (1, _227) 0 ] at: EXPR [ (1, _225) 0 ]) ",
    "EXPR [ (1, _8, _62) (-1, _228) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _228) 0 ], value: EXPR [ (1, _229) 0 ]) ",
    "EXPR [ (-1, _62, _229) (30, _62) (1, _229) (-1, _230) 0 ]",
    "MEM (id: 15, write EXPR [ (1, _230) 0 ] at: EXPR [ (1, _228) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _231) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _232) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _233) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _234) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _235) 0 ]) ",
    "EXPR [ (-1, _236) 5 ]",
    "MEM (id: 15, read at: EXPR [ (1, _236) 0 ], value: EXPR [ (1, _237) 0 ]) ",
    "EXPR [ (-1, _238) 11 ]",
    "EXPR [ (1, _62, _235) (-30, _62) 0 ]",
    "EXPR [ (-1, _239) 12 ]",
    "INIT (id: 17, len: 8, witnesses: [_239, _238, _231, _232, _233, _234, _235, _237])",
    "EXPR [ (1, _62, _235) (-30, _62) 0 ]",
    "EXPR [ (-1, _240) 7 ]",
    "MEM (id: 17, read at: EXPR [ (1, _240) 0 ], value: EXPR [ (1, _241) 0 ]) ",
    "INIT (id: 18, len: 8, witnesses: [_239, _238, _231, _232, _233, _234, _235, _237])",
    "EXPR [ (1, _62, _241) (-10, _62) 0 ]",
    "MEM (id: 18, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _242) 0 ]) ",
    "INIT (id: 19, len: 7, witnesses: [_238, _231, _232, _233, _234, _235, _237])",
    "EXPR [ (1, _62, _242) (-12, _62) 0 ]",
    "EXPR [ (1, _17, _62) (-2, _62) (-1, _243) 0 ]",
    "BLACKBOX::RANGE [(_243, 32)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(243))], q_c: 4294967289 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(244)), Simple(Witness(245))]",
    "BLACKBOX::RANGE [(_244, 1)] []",
    "BLACKBOX::RANGE [(_245, 32)] []",
    "EXPR [ (1, _243) (-4294967296, _244) (-1, _245) 4294967289 ]",
    "EXPR [ (-1, _62, _244) 0 ]",
    "INIT (id: 20, len: 7, witnesses: [_3, _3, _3, _3, _3, _3, _3])",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551616 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(246)), Simple(Witness(247))]",
    "BLACKBOX::RANGE [(_246, 1)] []",
    "BLACKBOX::RANGE [(_247, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _246) (-1, _247) 18446744073709551616 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551615 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(248)), Simple(Witness(249))]",
    "BLACKBOX::RANGE [(_248, 1)] []",
    "BLACKBOX::RANGE [(_249, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _248) (-1, _249) 18446744073709551615 ]",
    "MEM (id: 19, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _250) 0 ]) ",
    "EXPR [ (1, _246, _248) (-1, _246) (-1, _251) 1 ]",
    "EXPR [ (-20, _246, _248) (1, _250, _251) (20, _246) (-1, _252) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _252) 0 ] at: EXPR [ (1, _3) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551617 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(253)), Simple(Witness(254))]",
    "BLACKBOX::RANGE [(_253, 1)] []",
    "BLACKBOX::RANGE [(_254, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _253) (-1, _254) 18446744073709551617 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551616 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(255)), Simple(Witness(256))]",
    "BLACKBOX::RANGE [(_255, 1)] []",
    "BLACKBOX::RANGE [(_256, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _255) (-1, _256) 18446744073709551616 ]",
    "EXPR [ (-1, _253) (-1, _257) 1 ]",
    "MEM (id: 19, read at: EXPR [ (1, _257) 0 ], value: EXPR [ (1, _258) 0 ]) ",
    "EXPR [ (1, _253, _255) (-1, _253) (-1, _259) 1 ]",
    "EXPR [ (-20, _253, _255) (1, _258, _259) (20, _253) (-1, _260) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _260) 0 ] at: EXPR [ (1, _4) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551618 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(261)), Simple(Witness(262))]",
    "BLACKBOX::RANGE [(_261, 1)] []",
    "BLACKBOX::RANGE [(_262, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _261) (-1, _262) 18446744073709551618 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551617 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(263)), Simple(Witness(264))]",
    "BLACKBOX::RANGE [(_263, 1)] []",
    "BLACKBOX::RANGE [(_264, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _263) (-1, _264) 18446744073709551617 ]",
    "EXPR [ (-1, _261) (-1, _265) 2 ]",
    "MEM (id: 19, read at: EXPR [ (1, _265) 0 ], value: EXPR [ (1, _266) 0 ]) ",
    "EXPR [ (1, _261, _263) (-1, _261) (-1, _267) 1 ]",
    "EXPR [ (-20, _261, _263) (1, _266, _267) (20, _261) (-1, _268) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _268) 0 ] at: EXPR [ (1, _5) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551619 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(269)), Simple(Witness(270))]",
    "BLACKBOX::RANGE [(_269, 1)] []",
    "BLACKBOX::RANGE [(_270, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _269) (-1, _270) 18446744073709551619 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551618 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(271)), Simple(Witness(272))]",
    "BLACKBOX::RANGE [(_271, 1)] []",
    "BLACKBOX::RANGE [(_272, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _271) (-1, _272) 18446744073709551618 ]",
    "EXPR [ (-1, _269) (-1, _273) 3 ]",
    "MEM (id: 19, read at: EXPR [ (1, _273) 0 ], value: EXPR [ (1, _274) 0 ]) ",
    "EXPR [ (1, _269, _271) (-1, _269) (-1, _275) 1 ]",
    "EXPR [ (-20, _269, _271) (1, _274, _275) (20, _269) (-1, _276) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _276) 0 ] at: EXPR [ (1, _6) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551620 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(277)), Simple(Witness(278))]",
    "BLACKBOX::RANGE [(_277, 1)] []",
    "BLACKBOX::RANGE [(_278, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _277) (-1, _278) 18446744073709551620 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551619 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(279)), Simple(Witness(280))]",
    "BLACKBOX::RANGE [(_279, 1)] []",
    "BLACKBOX::RANGE [(_280, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _279) (-1, _280) 18446744073709551619 ]",
    "EXPR [ (-1, _277) (-1, _281) 4 ]",
    "MEM (id: 19, read at: EXPR [ (1, _281) 0 ], value: EXPR [ (1, _282) 0 ]) ",
    "EXPR [ (1, _277, _279) (-1, _277) (-1, _283) 1 ]",
    "EXPR [ (-20, _277, _279) (1, _282, _283) (20, _277) (-1, _284) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _284) 0 ] at: EXPR [ (1, _7) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551621 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(285)), Simple(Witness(286))]",
    "BLACKBOX::RANGE [(_285, 1)] []",
    "BLACKBOX::RANGE [(_286, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _285) (-1, _286) 18446744073709551621 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551620 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(287)), Simple(Witness(288))]",
    "BLACKBOX::RANGE [(_287, 1)] []",
    "BLACKBOX::RANGE [(_288, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _287) (-1, _288) 18446744073709551620 ]",
    "EXPR [ (-1, _285) (-1, _289) 5 ]",
    "MEM (id: 19, read at: EXPR [ (1, _289) 0 ], value: EXPR [ (1, _290) 0 ]) ",
    "EXPR [ (1, _285, _287) (-1, _285) (-1, _291) 1 ]",
    "EXPR [ (-20, _285, _287) (1, _290, _291) (20, _285) (-1, _292) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _292) 0 ] at: EXPR [ (1, _236) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551622 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(293)), Simple(Witness(294))]",
    "BLACKBOX::RANGE [(_293, 1)] []",
    "BLACKBOX::RANGE [(_294, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _293) (-1, _294) 18446744073709551622 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(243))], q_c: 18446744073709551621 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(295)), Simple(Witness(296))]",
    "BLACKBOX::RANGE [(_295, 1)] []",
    "BLACKBOX::RANGE [(_296, 64)] []",
    "EXPR [ (-1, _243) (-18446744073709551616, _295) (-1, _296) 18446744073709551621 ]",
    "EXPR [ (-1, _293) (-1, _297) 6 ]",
    "MEM (id: 19, read at: EXPR [ (1, _297) 0 ], value: EXPR [ (1, _298) 0 ]) ",
    "EXPR [ (1, _293, _295) (-1, _293) (-1, _299) 1 ]",
    "EXPR [ (-1, _300) 6 ]",
    "EXPR [ (-20, _293, _295) (1, _298, _299) (20, _293) (-1, _301) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _301) 0 ] at: EXPR [ (1, _300) 0 ]) ",
    "EXPR [ (2, _62) (-1, _302) 0 ]",
    "MEM (id: 20, read at: EXPR [ (1, _302) 0 ], value: EXPR [ (1, _303) 0 ]) ",
    "EXPR [ (1, _62, _303) (-20, _62) 0 ]",
    "EXPR [ (6, _62) (-1, _304) 0 ]",
    "MEM (id: 20, read at: EXPR [ (1, _304) 0 ], value: EXPR [ (1, _305) 0 ]) ",
    "EXPR [ (1, _62, _305) (-30, _62) 0 ]",
    "EXPR [ (1, _17, _62) (-1, _62) (-1, _306) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(306))], q_c: 4294967289 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(307)), Simple(Witness(308))]",
    "BLACKBOX::RANGE [(_307, 1)] []",
    "BLACKBOX::RANGE [(_308, 32)] []",
    "EXPR [ (1, _306) (-4294967296, _307) (-1, _308) 4294967289 ]",
    "EXPR [ (-1, _62, _307) 0 ]",
    "MEM (id: 20, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _309) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _310) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _311) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _312) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _313) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _236) 0 ], value: EXPR [ (1, _314) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _300) 0 ], value: EXPR [ (1, _315) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _306) 0 ], value: EXPR [ (1, _316) 0 ]) ",
    "INIT (id: 21, len: 7, witnesses: [_309, _310, _311, _312, _313, _314, _315])",
    "MEM (id: 20, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _317) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(306))], q_c: 18446744073709551616 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(318)), Simple(Witness(319))]",
    "BLACKBOX::RANGE [(_318, 1)] []",
    "BLACKBOX::RANGE [(_319, 64)] []",
    "EXPR [ (-1, _306) (-18446744073709551616, _318) (-1, _319) 18446744073709551616 ]",
    "EXPR [ (-1, _309, _318) (1, _317, _318) (1, _309) (-1, _320) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _320) 0 ] at: EXPR [ (1, _3) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _321) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(306))], q_c: 18446744073709551617 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(322)), Simple(Witness(323))]",
    "BLACKBOX::RANGE [(_322, 1)] []",
    "BLACKBOX::RANGE [(_323, 64)] []",
    "EXPR [ (-1, _306) (-18446744073709551616, _322) (-1, _323) 18446744073709551617 ]",
    "EXPR [ (-1, _310, _322) (1, _321, _322) (1, _310) (-1, _324) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _324) 0 ] at: EXPR [ (1, _4) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _325) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(306))], q_c: 18446744073709551618 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(326)), Simple(Witness(327))]",
    "BLACKBOX::RANGE [(_326, 1)] []",
    "BLACKBOX::RANGE [(_327, 64)] []",
    "EXPR [ (-1, _306) (-18446744073709551616, _326) (-1, _327) 18446744073709551618 ]",
    "EXPR [ (-1, _311, _326) (1, _325, _326) (1, _311) (-1, _328) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _328) 0 ] at: EXPR [ (1, _5) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _329) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(306))], q_c: 18446744073709551619 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(330)), Simple(Witness(331))]",
    "BLACKBOX::RANGE [(_330, 1)] []",
    "BLACKBOX::RANGE [(_331, 64)] []",
    "EXPR [ (-1, _306) (-18446744073709551616, _330) (-1, _331) 18446744073709551619 ]",
    "EXPR [ (-1, _312, _330) (1, _329, _330) (1, _312) (-1, _332) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _332) 0 ] at: EXPR [ (1, _6) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _236) 0 ], value: EXPR [ (1, _333) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(306))], q_c: 18446744073709551620 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(334)), Simple(Witness(335))]",
    "BLACKBOX::RANGE [(_334, 1)] []",
    "BLACKBOX::RANGE [(_335, 64)] []",
    "EXPR [ (-1, _306) (-18446744073709551616, _334) (-1, _335) 18446744073709551620 ]",
    "EXPR [ (-1, _313, _334) (1, _333, _334) (1, _313) (-1, _336) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _336) 0 ] at: EXPR [ (1, _7) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _300) 0 ], value: EXPR [ (1, _337) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(306))], q_c: 18446744073709551621 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(338)), Simple(Witness(339))]",
    "BLACKBOX::RANGE [(_338, 1)] []",
    "BLACKBOX::RANGE [(_339, 64)] []",
    "EXPR [ (-1, _306) (-18446744073709551616, _338) (-1, _339) 18446744073709551621 ]",
    "EXPR [ (-1, _314, _338) (1, _337, _338) (1, _314) (-1, _340) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _340) 0 ] at: EXPR [ (1, _236) 0 ]) ",
    "EXPR [ (5, _62) (-1, _341) 0 ]",
    "MEM (id: 21, read at: EXPR [ (1, _341) 0 ], value: EXPR [ (1, _342) 0 ]) ",
    "EXPR [ (1, _62, _316) (-1, _62) 0 ]",
    "EXPR [ (5, _22, _62) (6, _62, _62) (6, _22) -6 ]",
    "EXPR [ (1, _62, _342) (20, _22) -30 ]",
    "EXPR [ (1, _8, _91) (-1, _343) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _343) 0 ], value: EXPR [ (1, _344) 0 ]) ",
    "INIT (id: 22, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (-1, _91, _344) (2, _91) (1, _344) (-1, _345) 0 ]",
    "MEM (id: 22, write EXPR [ (1, _345) 0 ] at: EXPR [ (1, _343) 0 ]) ",
    "MEM (id: 22, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _346) 0 ]) ",
    "MEM (id: 22, read at: EXPR [ (1, _91) 0 ], value: EXPR [ (1, _347) 0 ]) ",
    "EXPR [ (2, _91) (-1, _348) 0 ]",
    "MEM (id: 22, read at: EXPR [ (1, _348) 0 ], value: EXPR [ (1, _349) 0 ]) ",
    "EXPR [ (3, _91) (-1, _350) 0 ]",
    "MEM (id: 22, read at: EXPR [ (1, _350) 0 ], value: EXPR [ (1, _351) 0 ]) ",
    "EXPR [ (4, _91) (-1, _352) 0 ]",
    "MEM (id: 22, read at: EXPR [ (1, _352) 0 ], value: EXPR [ (1, _353) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _354) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _355) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _356) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _357) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _358) 0 ]) ",
    "EXPR [ (1, _91, _347) (1, _67) (-1, _359) 0 ]",
    "EXPR [ (1, _91, _349) (2, _67) (-1, _360) 0 ]",
    "EXPR [ (1, _91, _351) (3, _67) (-1, _361) 0 ]",
    "EXPR [ (1, _91, _353) (4, _67) (-1, _362) 0 ]",
    "EXPR [ (5, _67, _91) (5, _91, _91) (6, _67) -6 ]",
    "EXPR [ (10, _67) -10 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: -20 })], outputs: [Simple(Witness(363))]",
    "EXPR [ (1, _8, _363) (-20, _363) (1, _364) -1 ]",
    "EXPR [ (1, _8, _364) (-20, _364) 0 ]",
    "EXPR [ (1, _67, _354) (1, _91, _346) (-1, _365) 0 ]",
    "EXPR [ (1, _67, _355) (1, _91, _359) (-1, _366) 0 ]",
    "EXPR [ (1, _67, _356) (1, _91, _360) (-1, _367) 0 ]",
    "EXPR [ (1, _67, _357) (1, _91, _361) (-1, _368) 0 ]",
    "EXPR [ (1, _67, _358) (1, _91, _362) (-1, _369) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(364))], q_c: -1 })], outputs: [Simple(Witness(370))]",
    "EXPR [ (1, _364, _370) (-1, _370) (1, _371) -1 ]",
    "EXPR [ (1, _364, _371) (-1, _371) 0 ]",
    "EXPR [ (20, _364) (-1, _373) 0 ]",
    "INIT (id: 24, len: 8, witnesses: [_365, _366, _367, _368, _369, _217, _373, _124])",
    "EXPR [ (1, _364) (-1, _374) 6 ]",
    "MEM (id: 24, write EXPR [ (1, _124) 0 ] at: EXPR [ (1, _374) 0 ]) ",
    "MEM (id: 24, read at: EXPR [ (1, _300) 0 ], value: EXPR [ (1, _375) 0 ]) ",
    "EXPR [ (1, _364) 0 ]",
    "EXPR [ (1, _371, _373) (-1, _371, _375) (1, _375) -15 ]",
    "EXPR [ (1, _8) (-1, _12) (-1, _376) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(376))], q_c: 0 })], outputs: [Simple(Witness(377))]",
    "EXPR [ (1, _376, _377) (1, _378) -1 ]",
    "EXPR [ (1, _376, _378) 0 ]",
    "EXPR [ (-1, _8, _378) (1, _8) (-1, _379) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _379) 0 ], value: EXPR [ (1, _380) 0 ]) ",
    "INIT (id: 25, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _378, _380) (-50, _378) (-1, _381) 50 ]",
    "MEM (id: 25, write EXPR [ (1, _381) 0 ] at: EXPR [ (1, _379) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _382) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _383) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _384) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _385) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _386) 0 ]) ",
    "EXPR [ (1, _8, _378) (-1, _387) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _387) 0 ], value: EXPR [ (1, _388) 0 ]) ",
    "EXPR [ (1, _8, _378) (-1, _389) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _389) 0 ], value: EXPR [ (1, _390) 0 ]) ",
    "INIT (id: 28, len: 5, witnesses: [_3, _4, _5, _6, _7])",
    "EXPR [ (1, _378, _388) (-1, _378, _390) (-2, _378) (1, _390) (-1, _391) 0 ]",
    "MEM (id: 28, write EXPR [ (1, _391) 0 ] at: EXPR [ (1, _389) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _392) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _393) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _394) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _395) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _396) 0 ]) ",
    "EXPR [ (-1, _378) (-1, _397) 1 ]",
    "EXPR [ (-1, _378, _383) (1, _378) (1, _383) (-1, _398) 0 ]",
    "EXPR [ (-1, _378, _384) (2, _378) (1, _384) (-1, _399) 0 ]",
    "EXPR [ (-1, _378, _385) (3, _378) (1, _385) (-1, _400) 0 ]",
    "EXPR [ (-1, _378, _386) (4, _378) (1, _386) (-1, _401) 0 ]",
    "EXPR [ (2, _378, _378) (-3, _378) (-1, _402) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(402))], q_c: 0 })], outputs: [Simple(Witness(403))]",
    "EXPR [ (1, _402, _403) (1, _404) -1 ]",
    "EXPR [ (1, _402, _404) 0 ]",
    "EXPR [ (-1, _378, _382) (1, _378, _392) (1, _382) (-1, _406) 0 ]",
    "EXPR [ (1, _378, _393) (1, _397, _398) (-1, _407) 0 ]",
    "EXPR [ (1, _378, _394) (1, _397, _399) (-1, _408) 0 ]",
    "EXPR [ (1, _378, _395) (1, _397, _400) (-1, _409) 0 ]",
    "EXPR [ (1, _378, _396) (1, _397, _401) (-1, _410) 0 ]",
    "EXPR [ (1, _8, _378) (-1, _681) 0 ]",
    "EXPR [ (-1, _12, _378) (1, _12) (-1, _411) (1, _681) 0 ]",
    "EXPR [ (-1, _8, _378) (1, _8) (-1, _412) 0 ]",
    "EXPR [ (-1, _413) 30 ]",
    "INIT (id: 30, len: 8, witnesses: [_406, _407, _408, _409, _410, _411, _412, _413])",
    "EXPR [ (2, _378, _378) (-3, _378) (-1, _414) 7 ]",
    "MEM (id: 30, write EXPR [ (1, _413) 0 ] at: EXPR [ (1, _414) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _415) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _416) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _417) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _418) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _419) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _236) 0 ], value: EXPR [ (1, _420) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _300) 0 ], value: EXPR [ (1, _421) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _240) 0 ], value: EXPR [ (1, _422) 0 ]) ",
    "EXPR [ (2, _378, _378) (-3, _378) 0 ]",
    "EXPR [ (1, _404, _406) (-1, _404, _415) (1, _415) (-1, _423) 0 ]",
    "EXPR [ (1, _404, _407) (-1, _404, _416) (1, _416) (-1, _424) 0 ]",
    "EXPR [ (1, _404, _408) (-1, _404, _417) (1, _417) (-1, _425) 0 ]",
    "EXPR [ (1, _404, _409) (-1, _404, _418) (1, _418) (-1, _426) 0 ]",
    "EXPR [ (1, _404, _410) (-1, _404, _419) (1, _419) (-1, _427) 0 ]",
    "EXPR [ (1, _404, _411) (-1, _404, _420) (1, _420) (-1, _428) 0 ]",
    "EXPR [ (1, _404, _412) (-1, _404, _421) (1, _421) (-1, _429) 0 ]",
    "EXPR [ (-1, _404, _422) (30, _404) (1, _422) (-1, _430) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(364))], q_c: -1 })], outputs: [Simple(Witness(431))]",
    "EXPR [ (1, _364, _431) (-1, _431) (1, _432) -1 ]",
    "EXPR [ (1, _364, _432) (-1, _432) 0 ]",
    "EXPR [ (1, _364) (-1, _433) 9 ]",
    "BLACKBOX::RANGE [(_433, 32)] []",
    "INIT (id: 31, len: 10, witnesses: [_423, _424, _425, _426, _427, _428, _429, _430, _373, _124])",
    "EXPR [ (1, _364) (-1, _434) 8 ]",
    "MEM (id: 31, write EXPR [ (1, _124) 0 ] at: EXPR [ (1, _434) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _435) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _436) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _437) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _438) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _439) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _236) 0 ], value: EXPR [ (1, _440) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _300) 0 ], value: EXPR [ (1, _441) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _240) 0 ], value: EXPR [ (1, _442) 0 ]) ",
    "EXPR [ (-1, _443) 8 ]",
    "MEM (id: 31, read at: EXPR [ (1, _443) 0 ], value: EXPR [ (1, _444) 0 ]) ",
    "EXPR [ (-1, _445) 9 ]",
    "MEM (id: 31, read at: EXPR [ (1, _445) 0 ], value: EXPR [ (1, _446) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(433))], q_c: -10 })], outputs: [Simple(Witness(447))]",
    "EXPR [ (1, _433, _447) (-10, _447) (1, _448) -1 ]",
    "EXPR [ (1, _433, _448) (-10, _448) 0 ]",
    "EXPR [ (-1, _364, _433) (-1, _364) (1, _433) (-1, _449) 1 ]",
    "BLACKBOX::RANGE [(_449, 32)] []",
    "EXPR [ (1, _423, _432) (-1, _432, _435) (1, _435) (-1, _450) 0 ]",
    "EXPR [ (1, _424, _432) (-1, _432, _436) (1, _436) (-1, _451) 0 ]",
    "EXPR [ (1, _425, _432) (-1, _432, _437) (1, _437) (-1, _452) 0 ]",
    "EXPR [ (1, _426, _432) (-1, _432, _438) (1, _438) (-1, _453) 0 ]",
    "EXPR [ (1, _427, _432) (-1, _432, _439) (1, _439) (-1, _454) 0 ]",
    "EXPR [ (1, _428, _432) (-1, _432, _440) (1, _440) (-1, _455) 0 ]",
    "EXPR [ (1, _429, _432) (-1, _432, _441) (1, _441) (-1, _456) 0 ]",
    "EXPR [ (1, _430, _432) (-1, _432, _442) (1, _442) (-1, _457) 0 ]",
    "EXPR [ (1, _373, _432) (-1, _432, _444) (1, _444) (-1, _458) 0 ]",
    "EXPR [ (-1, _432, _446) (15, _432) (1, _446) (-1, _459) 0 ]",
    "EXPR [ (-1, _460) 50 ]",
    "INIT (id: 32, len: 11, witnesses: [_450, _451, _452, _453, _454, _455, _456, _457, _458, _459, _460])",
    "EXPR [ (-1, _364, _433) (1, _433) (-1, _461) 0 ]",
    "MEM (id: 32, read at: EXPR [ (1, _461) 0 ], value: EXPR [ (1, _462) 0 ]) ",
    "EXPR [ (1, _364, _462) (-50, _364) (-1, _463) 50 ]",
    "MEM (id: 32, write EXPR [ (1, _463) 0 ] at: EXPR [ (1, _461) 0 ]) ",
    "MEM (id: 32, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _464) 0 ]) ",
    "EXPR [ (-1, _364) (-1, _465) 1 ]",
    "MEM (id: 32, read at: EXPR [ (1, _465) 0 ], value: EXPR [ (1, _466) 0 ]) ",
    "EXPR [ (-2, _364) (-1, _467) 2 ]",
    "MEM (id: 32, read at: EXPR [ (1, _467) 0 ], value: EXPR [ (1, _468) 0 ]) ",
    "EXPR [ (-3, _364) (-1, _469) 3 ]",
    "MEM (id: 32, read at: EXPR [ (1, _469) 0 ], value: EXPR [ (1, _470) 0 ]) ",
    "EXPR [ (-4, _364) (-1, _471) 4 ]",
    "MEM (id: 32, read at: EXPR [ (1, _471) 0 ], value: EXPR [ (1, _472) 0 ]) ",
    "EXPR [ (-5, _364) (-1, _473) 5 ]",
    "MEM (id: 32, read at: EXPR [ (1, _473) 0 ], value: EXPR [ (1, _474) 0 ]) ",
    "EXPR [ (-6, _364) (-1, _475) 6 ]",
    "MEM (id: 32, read at: EXPR [ (1, _475) 0 ], value: EXPR [ (1, _476) 0 ]) ",
    "EXPR [ (-7, _364) (-1, _477) 7 ]",
    "MEM (id: 32, read at: EXPR [ (1, _477) 0 ], value: EXPR [ (1, _478) 0 ]) ",
    "EXPR [ (-8, _364) (-1, _479) 8 ]",
    "MEM (id: 32, read at: EXPR [ (1, _479) 0 ], value: EXPR [ (1, _480) 0 ]) ",
    "EXPR [ (-9, _364) (-1, _481) 9 ]",
    "MEM (id: 32, read at: EXPR [ (1, _481) 0 ], value: EXPR [ (1, _482) 0 ]) ",
    "EXPR [ (-10, _364) (-1, _483) 10 ]",
    "MEM (id: 32, read at: EXPR [ (1, _483) 0 ], value: EXPR [ (1, _484) 0 ]) ",
    "EXPR [ (-1, _364) (-1, _485) 1 ]",
    "EXPR [ (1, _448, _450) (-1, _448, _464) (1, _464) (-1, _486) 0 ]",
    "EXPR [ (1, _448, _451) (-1, _448, _466) (1, _466) (-1, _487) 0 ]",
    "EXPR [ (1, _448, _452) (-1, _448, _468) (1, _468) (-1, _488) 0 ]",
    "EXPR [ (1, _448, _453) (-1, _448, _470) (1, _470) (-1, _489) 0 ]",
    "EXPR [ (1, _448, _454) (-1, _448, _472) (1, _472) (-1, _490) 0 ]",
    "EXPR [ (1, _448, _455) (-1, _448, _474) (1, _474) (-1, _491) 0 ]",
    "EXPR [ (1, _448, _456) (-1, _448, _476) (1, _476) (-1, _492) 0 ]",
    "EXPR [ (1, _448, _457) (-1, _448, _478) (1, _478) (-1, _493) 0 ]",
    "EXPR [ (1, _448, _458) (-1, _448, _480) (1, _480) (-1, _494) 0 ]",
    "EXPR [ (1, _448, _459) (-1, _448, _482) (1, _482) (-1, _495) 0 ]",
    "EXPR [ (-1, _448, _484) (50, _448) (1, _484) (-1, _496) 0 ]",
    "EXPR [ (1, _364, _433) (-1, _735) 0 ]",
    "EXPR [ (-1, _364, _449) (-1, _736) 0 ]",
    "EXPR [ (1, _449) (-1, _497) (1, _735) (1, _736) -11 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(497))], q_c: 0 })], outputs: [Simple(Witness(498))]",
    "EXPR [ (1, _497, _498) (1, _499) -1 ]",
    "EXPR [ (1, _497, _499) 0 ]",
    "EXPR [ (1, _364, _450) (1, _485, _486) (-1, _501) 0 ]",
    "EXPR [ (1, _364, _451) (1, _485, _487) (-1, _502) 0 ]",
    "EXPR [ (1, _364, _452) (1, _485, _488) (-1, _503) 0 ]",
    "EXPR [ (1, _364, _453) (1, _485, _489) (-1, _504) 0 ]",
    "EXPR [ (1, _364, _454) (1, _485, _490) (-1, _505) 0 ]",
    "EXPR [ (1, _364, _455) (1, _485, _491) (-1, _506) 0 ]",
    "EXPR [ (1, _364, _456) (1, _485, _492) (-1, _507) 0 ]",
    "EXPR [ (1, _364, _457) (1, _485, _493) (-1, _508) 0 ]",
    "EXPR [ (1, _364, _458) (1, _485, _494) (-1, _509) 0 ]",
    "EXPR [ (1, _364, _459) (1, _485, _495) (-1, _510) 0 ]",
    "EXPR [ (1, _485, _496) (-1, _511) 0 ]",
    "EXPR [ (-1, _512) 60 ]",
    "INIT (id: 33, len: 12, witnesses: [_501, _502, _503, _504, _505, _506, _507, _508, _509, _510, _511, _512])",
    "EXPR [ (1, _449) (-1, _513) (1, _735) (1, _736) 0 ]",
    "MEM (id: 33, write EXPR [ (1, _512) 0 ] at: EXPR [ (1, _513) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _514) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _515) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _516) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _517) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _518) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _236) 0 ], value: EXPR [ (1, _519) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _300) 0 ], value: EXPR [ (1, _520) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _240) 0 ], value: EXPR [ (1, _521) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _443) 0 ], value: EXPR [ (1, _522) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _445) 0 ], value: EXPR [ (1, _523) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _217) 0 ], value: EXPR [ (1, _524) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _238) 0 ], value: EXPR [ (1, _525) 0 ]) ",
    "EXPR [ (1, _449) (1, _735) (1, _736) -10 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967285 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(526)), Simple(Witness(527))]",
    "BLACKBOX::RANGE [(_527, 32)] []",
    "EXPR [ (1, _8) (-4294967296, _526) (-1, _527) 4294967285 ]",
    "EXPR [ (-1, _526) 0 ]",
    "EXPR [ (1, _499, _501) (-1, _499, _514) (1, _514) (-1, _528) 0 ]",
    "EXPR [ (1, _499, _502) (-1, _499, _515) (1, _515) (-1, _529) 0 ]",
    "EXPR [ (1, _499, _503) (-1, _499, _516) (1, _516) (-1, _530) 0 ]",
    "EXPR [ (1, _499, _504) (-1, _499, _517) (1, _517) (-1, _531) 0 ]",
    "EXPR [ (1, _499, _505) (-1, _499, _518) (1, _518) (-1, _532) 0 ]",
    "EXPR [ (1, _499, _506) (-1, _499, _519) (1, _519) (-1, _533) 0 ]",
    "EXPR [ (1, _499, _507) (-1, _499, _520) (1, _520) (-1, _534) 0 ]",
    "EXPR [ (1, _499, _508) (-1, _499, _521) (1, _521) (-1, _535) 0 ]",
    "EXPR [ (1, _499, _509) (-1, _499, _522) (1, _522) (-1, _536) 0 ]",
    "EXPR [ (1, _499, _510) (-1, _499, _523) (1, _523) (-1, _537) 0 ]",
    "EXPR [ (1, _499, _511) (-1, _499, _524) (1, _524) (-1, _538) 0 ]",
    "EXPR [ (-1, _499, _525) (60, _499) (1, _525) (-1, _539) 0 ]",
    "INIT (id: 34, len: 12, witnesses: [_528, _529, _530, _531, _532, _533, _534, _535, _536, _537, _538, _539])",
    "MEM (id: 34, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _540) 0 ]) ",
    "EXPR [ (1, _540) -50 ]",
    "EXPR [ (1, _535) -30 ]",
    "EXPR [ (1, _536) -15 ]",
    "EXPR [ (1, _537) -50 ]",
    "EXPR [ (1, _538) -60 ]",
    "EXPR [ (1, _8, _397) (-1, _541) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _541) 0 ], value: EXPR [ (1, _542) 0 ]) ",
    "EXPR [ (-1, _397, _542) (5, _397) (1, _542) (-1, _543) 0 ]",
    "MEM (id: 0, write EXPR [ (1, _543) 0 ] at: EXPR [ (1, _541) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _544) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _545) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _546) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _547) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _548) 0 ]) ",
    "INIT (id: 36, len: 7, witnesses: [_544, _545, _546, _547, _548, _12, _8])",
    "MEM (id: 36, read at: EXPR [ (1, _300) 0 ], value: EXPR [ (1, _549) 0 ]) ",
    "EXPR [ (-1, _8, _397) (1, _397, _549) 0 ]",
    "EXPR [ (1, _397, _545) (1, _378) (-1, _550) 0 ]",
    "EXPR [ (1, _397, _546) (2, _378) (-1, _551) 0 ]",
    "EXPR [ (1, _397, _547) (3, _378) (-1, _552) 0 ]",
    "EXPR [ (1, _397, _548) (4, _378) (-1, _553) 0 ]",
    "EXPR [ (5, _378, _397) (-1, _781) 0 ]",
    "EXPR [ (6, _397, _397) (-1, _782) 0 ]",
    "EXPR [ (6, _378) (-1, _554) (1, _781) (1, _782) -6 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(554))], q_c: 0 })], outputs: [Simple(Witness(555))]",
    "EXPR [ (1, _554, _555) (1, _556) -1 ]",
    "EXPR [ (1, _554, _556) 0 ]",
    "EXPR [ (1, _397, _544) (-1, _558) 0 ]",
    "EXPR [ (1, _397, _550) (1, _378) (-1, _559) 0 ]",
    "EXPR [ (1, _397, _551) (2, _378) (-1, _560) 0 ]",
    "EXPR [ (1, _397, _552) (3, _378) (-1, _561) 0 ]",
    "EXPR [ (1, _397, _553) (4, _378) (-1, _562) 0 ]",
    "EXPR [ (1, _12, _397) (-1, _563) (1, _681) 0 ]",
    "INIT (id: 38, len: 7, witnesses: [_558, _559, _560, _561, _562, _563, _413])",
    "EXPR [ (6, _378) (-1, _564) (1, _781) (1, _782) 0 ]",
    "MEM (id: 38, write EXPR [ (1, _413) 0 ] at: EXPR [ (1, _564) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _565) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _566) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _567) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _568) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _569) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _236) 0 ], value: EXPR [ (1, _570) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _300) 0 ], value: EXPR [ (1, _571) 0 ]) ",
    "EXPR [ (6, _378) (1, _781) (1, _782) -6 ]",
    "EXPR [ (1, _556, _558) (-1, _556, _565) (1, _565) (-1, _572) 0 ]",
    "EXPR [ (1, _556, _559) (-1, _556, _566) (1, _566) (-1, _573) 0 ]",
    "EXPR [ (1, _556, _560) (-1, _556, _567) (1, _567) (-1, _574) 0 ]",
    "EXPR [ (1, _556, _561) (-1, _556, _568) (1, _568) (-1, _575) 0 ]",
    "EXPR [ (1, _556, _562) (-1, _556, _569) (1, _569) (-1, _576) 0 ]",
    "EXPR [ (1, _556, _563) (-1, _556, _570) (1, _570) (-1, _577) 0 ]",
    "EXPR [ (-1, _556, _571) (30, _556) (1, _571) (-1, _578) 0 ]",
    "EXPR [ (1, _364, _572) (1, _485, _572) (-1, _579) 0 ]",
    "EXPR [ (1, _364, _573) (1, _485, _573) (-1, _580) 0 ]",
    "EXPR [ (1, _364, _574) (1, _485, _574) (-1, _581) 0 ]",
    "EXPR [ (1, _364, _575) (1, _485, _575) (-1, _582) 0 ]",
    "EXPR [ (1, _364, _576) (1, _485, _576) (-1, _583) 0 ]",
    "EXPR [ (1, _364, _577) (1, _485, _577) (-1, _584) 0 ]",
    "EXPR [ (1, _364, _578) (1, _485, _578) (-1, _585) 0 ]",
    "INIT (id: 39, len: 8, witnesses: [_579, _580, _581, _582, _583, _584, _585, _373])",
    "EXPR [ (8, _364) (7, _485) (-1, _586) -1 ]",
    "MEM (id: 39, read at: EXPR [ (1, _586) 0 ], value: EXPR [ (1, _587) 0 ]) ",
    "INIT (id: 40, len: 8, witnesses: [_579, _580, _581, _582, _583, _584, _585, _373])",
    "EXPR [ (1, _587) -30 ]",
    "EXPR [ (1, _586) (-1, _588) -1 ]",
    "MEM (id: 40, read at: EXPR [ (1, _588) 0 ], value: EXPR [ (1, _589) 0 ]) ",
    "EXPR [ (-1, _12) (1, _589) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "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",
  "file_map": {
    "50": {
      "source": "fn main(x: Field) {\n    // The parameters to this function must come directly from witness values (inputs to main).\n    regression_dynamic_slice_index(x - 1, x - 4);\n}\n\nfn regression_dynamic_slice_index(x: Field, y: Field) {\n    let mut slice = &[];\n    for i in 0..5 {\n        slice = slice.push_back(i as Field);\n    }\n    assert(slice.len() == 5);\n\n    dynamic_slice_index_set_if(slice, x, y);\n    dynamic_slice_index_set_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_if(slice, x, y + 1);\n    dynamic_slice_index_if(slice, x);\n    dynamic_array_index_if([0, 1, 2, 3, 4], x);\n    dynamic_slice_index_else(slice, x);\n\n    dynamic_slice_merge_if(slice, x);\n    dynamic_slice_merge_else(slice, x);\n    dynamic_slice_merge_two_ifs(slice, x);\n    dynamic_slice_merge_mutate_between_ifs(slice, x, y);\n    dynamic_slice_merge_push_then_pop(slice, x, y);\n}\n\nfn dynamic_slice_index_set_if(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[3] == 2);\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_index_set_else(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 > 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 0);\n}\n// This tests the case of missing a store instruction in the else branch\n// of merging slices\nfn dynamic_slice_index_if(mut slice: [Field], x: Field) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    } else {\n        assert(slice[x] == 0);\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_array_index_if(mut array: [Field; 5], x: Field) {\n    if x as u32 < 10 {\n        assert(array[x] == 4);\n        array[x] = array[x] - 2;\n    } else {\n        assert(array[x] == 0);\n    }\n    assert(array[4] == 2);\n}\n// This tests the case of missing a store instruction in the then branch\n// of merging slices\nfn dynamic_slice_index_else(mut slice: [Field], x: Field) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_merge_if(mut slice: [Field], x: Field) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n\n        slice = slice.push_back(10);\n        // Having an array set here checks whether we appropriately\n        // handle a slice length that is not yet resolving to a constant\n        // during flattening\n        slice[x] = 10;\n        assert(slice[slice.len() - 1] == 10);\n        assert(slice.len() == 6);\n\n        slice[x] = 20;\n        slice[x] = slice[x] + 10;\n\n        slice = slice.push_front(11);\n        assert(slice[0] == 11);\n        assert(slice.len() == 7);\n        assert(slice[5] == 30);\n\n        slice = slice.push_front(12);\n        assert(slice[0] == 12);\n        assert(slice.len() == 8);\n        assert(slice[6] == 30);\n\n        let (popped_slice, last_elem) = slice.pop_back();\n        assert(last_elem == 10);\n        assert(popped_slice.len() == 7);\n\n        let (first_elem, rest_of_slice) = popped_slice.pop_front();\n        assert(first_elem == 12);\n        assert(rest_of_slice.len() == 6);\n\n        slice = rest_of_slice.insert(x as u32 - 2, 20);\n        assert(slice[2] == 20);\n        assert(slice[6] == 30);\n        assert(slice.len() == 7);\n\n        let (removed_slice, removed_elem) = slice.remove(x as u32 - 1);\n        // The deconstructed tuple assigns to the slice but is not seen outside of the if statement\n        // without a direct assignment\n        slice = removed_slice;\n\n        assert(removed_elem == 1);\n        assert(slice.len() == 6);\n    } else {\n        assert(slice[x] == 0);\n        slice = slice.push_back(20);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 30);\n}\n\nfn dynamic_slice_merge_else(mut slice: [Field], x: Field) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_else(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        if y != 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 5 {\n                // We should not hit this case\n                assert(slice[x] == 22);\n            } else {\n                slice[x] = 10;\n                slice = slice.push_back(15);\n                assert(slice.len() == 6);\n            }\n            assert(slice[4] == 10);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 10);\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_if(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 2);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[2] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        // TODO: this panics as we have a load for the slice in flattening\n        if y == 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 4 {\n                slice[x] = 5;\n            }\n            assert(slice[4] == 5);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 5);\n}\n\nfn dynamic_slice_merge_two_ifs(mut slice: [Field], x: Field) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 8);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_merge_mutate_between_ifs(mut slice: [Field], x: Field, y: Field) {\n    if x != y {\n        slice[x] = 50;\n        slice = slice.push_back(y);\n        slice = slice.push_back(x);\n    } else {\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(x);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 8);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    if x != 20 {\n        slice = slice.push_back(50);\n    }\n\n    slice = slice.push_back(60);\n    assert(slice.len() == 11);\n    assert(slice[x] == 50);\n    assert(slice[slice.len() - 4] == 30);\n    assert(slice[slice.len() - 3] == 15);\n    assert(slice[slice.len() - 2] == 50);\n    assert(slice[slice.len() - 1] == 60);\n}\n\nfn dynamic_slice_merge_push_then_pop(mut slice: [Field], x: Field, y: Field) {\n    if x != y {\n        slice[x] = 5;\n        slice = slice.push_back(y);\n        slice = slice.push_back(x);\n        assert(slice.len() == 7);\n\n        let (popped_slice, elem) = slice.pop_back();\n        assert(slice.len() == 7);\n        assert(elem == x);\n        slice = popped_slice;\n    } else {\n        slice = slice.push_back(x);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 7);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    let (slice, elem) = slice.pop_back();\n    assert(elem == 30);\n\n    let (_, elem) = slice.pop_back();\n    assert(elem == y);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
