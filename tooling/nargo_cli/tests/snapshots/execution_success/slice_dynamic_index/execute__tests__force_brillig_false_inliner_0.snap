---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _778",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 32)] []",
    "EXPR [ (1, _0) (-1, _1) -1 ]",
    "EXPR [ (1, _0) (-1, _2) -4 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(3)), Simple(Witness(4))]",
    "BLACKBOX::RANGE [(_4, 32)] []",
    "EXPR [ (1, _1) (-4294967296, _3) (-1, _4) 4294967291 ]",
    "EXPR [ (-1, _3) 0 ]",
    "EXPR [ (-1, _5) 0 ]",
    "EXPR [ (-1, _6) 1 ]",
    "EXPR [ (-1, _7) 2 ]",
    "EXPR [ (-1, _8) 3 ]",
    "EXPR [ (-1, _9) 4 ]",
    "INIT (id: 0, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "MEM (id: 0, read at: EXPR [ (1, _1) 0 ], value: EXPR [ (1, _10) 0 ]) ",
    "EXPR [ (1, _10) -4 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(2))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(11)), Simple(Witness(12))]",
    "BLACKBOX::RANGE [(_12, 32)] []",
    "EXPR [ (1, _2) (-4294967296, _11) (-1, _12) 4294967291 ]",
    "EXPR [ (-1, _11) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _2) 0 ], value: EXPR [ (1, _13) 0 ]) ",
    "EXPR [ (1, _13) -1 ]",
    "INIT (id: 1, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "MEM (id: 1, write EXPR [ (1, _5) 0 ] at: EXPR [ (1, _2) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _1) 0 ], value: EXPR [ (1, _14) 0 ]) ",
    "EXPR [ (1, _14) -4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _15) 0 ]) ",
    "EXPR [ (1, _15) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 4294967286 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(16)), Simple(Witness(17))]",
    "BLACKBOX::RANGE [(_16, 1)] []",
    "BLACKBOX::RANGE [(_17, 32)] []",
    "EXPR [ (1, _1) (-4294967296, _16) (-1, _17) 4294967286 ]",
    "EXPR [ (-1, _1, _16) (1, _1) (-1, _18) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _18) 0 ], value: EXPR [ (1, _19) 0 ]) ",
    "EXPR [ (-1, _16, _19) (4, _16) (1, _19) -4 ]",
    "EXPR [ (-1, _1, _16) (1, _1) (-1, _20) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _20) 0 ], value: EXPR [ (1, _21) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _22) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _23) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _24) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _25) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _26) 0 ]) ",
    "INIT (id: 2, len: 5, witnesses: [_22, _23, _24, _25, _26])",
    "EXPR [ (-1, _16, _19) (2, _16) (1, _19) (-1, _587) 0 ]",
    "EXPR [ (1, _16, _21) (-1, _27) (1, _587) -2 ]",
    "MEM (id: 2, write EXPR [ (1, _27) 0 ] at: EXPR [ (1, _20) 0 ]) ",
    "EXPR [ (-1, _1, _16) (1, _1) (1, _16) (-1, _28) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(28))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(29)), Simple(Witness(30))]",
    "BLACKBOX::RANGE [(_29, 1)] []",
    "BLACKBOX::RANGE [(_30, 32)] []",
    "EXPR [ (1, _28) (-4294967296, _29) (-1, _30) 4294967291 ]",
    "EXPR [ (1, _16, _29) (-1, _29) 0 ]",
    "EXPR [ (-1, _16, _28) (1, _28) (-1, _31) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _31) 0 ], value: EXPR [ (1, _32) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _33) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _34) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _35) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _36) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _37) 0 ]) ",
    "INIT (id: 3, len: 5, witnesses: [_33, _34, _35, _36, _37])",
    "EXPR [ (1, _16, _32) (-1, _38) (1, _587) -2 ]",
    "MEM (id: 3, write EXPR [ (1, _38) 0 ] at: EXPR [ (1, _31) 0 ]) ",
    "EXPR [ (-3, _16) (-1, _39) 3 ]",
    "MEM (id: 3, read at: EXPR [ (1, _39) 0 ], value: EXPR [ (1, _40) 0 ]) ",
    "EXPR [ (-3, _16) (-1, _41) 3 ]",
    "MEM (id: 1, read at: EXPR [ (1, _41) 0 ], value: EXPR [ (1, _42) 0 ]) ",
    "EXPR [ (-4, _16) (-1, _43) 4 ]",
    "MEM (id: 3, read at: EXPR [ (1, _43) 0 ], value: EXPR [ (1, _44) 0 ]) ",
    "EXPR [ (-4, _16) (-1, _45) 4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _45) 0 ], value: EXPR [ (1, _46) 0 ]) ",
    "EXPR [ (1, _1, _16) (-1, _47) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _47) 0 ], value: EXPR [ (1, _48) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _49) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _50) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _51) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _52) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _53) 0 ]) ",
    "INIT (id: 4, len: 5, witnesses: [_49, _50, _51, _52, _53])",
    "EXPR [ (-1, _16, _48) (1, _48) (-1, _54) 0 ]",
    "MEM (id: 4, write EXPR [ (1, _54) 0 ] at: EXPR [ (1, _47) 0 ]) ",
    "EXPR [ (3, _16) (-1, _55) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _55) 0 ], value: EXPR [ (1, _56) 0 ]) ",
    "EXPR [ (-1, _16) (-1, _57) 1 ]",
    "EXPR [ (-1, _16, _40) (1, _16, _42) (1, _40) (-1, _58) 0 ]",
    "EXPR [ (4, _16) (-1, _59) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _59) 0 ], value: EXPR [ (1, _60) 0 ]) ",
    "EXPR [ (1, _16, _46) (-1, _591) 0 ]",
    "EXPR [ (-1, _16, _44) (1, _44) (-1, _61) (1, _591) 0 ]",
    "EXPR [ (1, _16, _56) (1, _57, _58) -2 ]",
    "EXPR [ (1, _16, _60) (-1, _594) 0 ]",
    "EXPR [ (1, _57, _61) (1, _594) -2 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(1))], q_c: 4294967306 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(62)), Simple(Witness(63))]",
    "BLACKBOX::RANGE [(_63, 32)] []",
    "EXPR [ (-1, _1) (-4294967296, _62) (-1, _63) 4294967306 ]",
    "EXPR [ (-1, _1, _62) (1, _1) (-1, _64) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _64) 0 ], value: EXPR [ (1, _65) 0 ]) ",
    "EXPR [ (-1, _62, _65) (4, _62) (1, _65) -4 ]",
    "EXPR [ (-1, _1, _62) (1, _1) (-1, _66) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _66) 0 ], value: EXPR [ (1, _67) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _68) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _69) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _70) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _71) 0 ]) ",
    "MEM (id: 1, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _72) 0 ]) ",
    "INIT (id: 5, len: 5, witnesses: [_68, _69, _70, _71, _72])",
    "EXPR [ (-1, _62, _65) (2, _62) (1, _65) (-1, _596) 0 ]",
    "EXPR [ (1, _62, _67) (-1, _73) (1, _596) -2 ]",
    "MEM (id: 5, write EXPR [ (1, _73) 0 ] at: EXPR [ (1, _66) 0 ]) ",
    "EXPR [ (-1, _1, _62) (1, _1) (1, _62) (-1, _74) -1 ]",
    "BLACKBOX::RANGE [(_74, 32)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(74))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(75)), Simple(Witness(76))]",
    "BLACKBOX::RANGE [(_75, 1)] []",
    "BLACKBOX::RANGE [(_76, 32)] []",
    "EXPR [ (1, _74) (-4294967296, _75) (-1, _76) 4294967291 ]",
    "EXPR [ (1, _62, _75) (-1, _75) 0 ]",
    "EXPR [ (-1, _62, _74) (1, _74) (-1, _77) 0 ]",
    "MEM (id: 5, read at: EXPR [ (1, _77) 0 ], value: EXPR [ (1, _78) 0 ]) ",
    "EXPR [ (1, _62, _78) (-1, _79) (1, _596) -2 ]",
    "MEM (id: 5, write EXPR [ (1, _79) 0 ] at: EXPR [ (1, _77) 0 ]) ",
    "EXPR [ (-4, _62) (-1, _80) 4 ]",
    "MEM (id: 5, read at: EXPR [ (1, _80) 0 ], value: EXPR [ (1, _81) 0 ]) ",
    "EXPR [ (-4, _62) (-1, _82) 4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _82) 0 ], value: EXPR [ (1, _83) 0 ]) ",
    "EXPR [ (1, _1, _62) (-1, _84) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _84) 0 ], value: EXPR [ (1, _85) 0 ]) ",
    "EXPR [ (-1, _62, _85) (1, _85) (-1, _86) 0 ]",
    "MEM (id: 1, write EXPR [ (1, _86) 0 ] at: EXPR [ (1, _84) 0 ]) ",
    "EXPR [ (4, _62) (-1, _87) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _87) 0 ], value: EXPR [ (1, _88) 0 ]) ",
    "EXPR [ (-1, _62) (-1, _89) 1 ]",
    "EXPR [ (-1, _62, _81) (1, _62, _83) (1, _81) (-1, _90) 0 ]",
    "EXPR [ (1, _62, _88) (1, _89, _90) 0 ]",
    "EXPR [ (4, _57) (-1, _91) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _91) 0 ], value: EXPR [ (1, _92) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(2))], q_c: -1 })], outputs: [Simple(Witness(93))]",
    "EXPR [ (1, _2, _93) (-1, _93) (1, _94) -1 ]",
    "EXPR [ (1, _2, _94) (-1, _94) 0 ]",
    "EXPR [ (-1, _57, _94) (1, _57) (-1, _95) 0 ]",
    "EXPR [ (1, _1, _95) (-1, _96) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _96) 0 ], value: EXPR [ (1, _97) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _98) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _99) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _100) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _101) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _102) 0 ]) ",
    "INIT (id: 6, len: 5, witnesses: [_98, _99, _100, _101, _102])",
    "EXPR [ (1, _19, _95) (-1, _95, _97) (18, _95) (1, _97) (-1, _103) 0 ]",
    "MEM (id: 6, write EXPR [ (1, _103) 0 ] at: EXPR [ (1, _96) 0 ]) ",
    "EXPR [ (4, _95) (-1, _104) 0 ]",
    "MEM (id: 6, read at: EXPR [ (1, _104) 0 ], value: EXPR [ (1, _105) 0 ]) ",
    "EXPR [ (-1, _95) (-1, _106) 1 ]",
    "EXPR [ (1, _57, _92) (-1, _107) (1, _591) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: -5 })], outputs: [Simple(Witness(108))]",
    "EXPR [ (1, _1, _108) (-5, _108) (1, _109) -1 ]",
    "EXPR [ (1, _1, _109) (-5, _109) 0 ]",
    "EXPR [ (1, _57, _94) (-1, _110) 0 ]",
    "EXPR [ (1, _19) (-1, _111) -2 ]",
    "EXPR [ (1, _109, _110) (-1, _112) 0 ]",
    "EXPR [ (1, _111, _112) (-22, _112) 0 ]",
    "EXPR [ (-1, _109, _110) (1, _110) (-1, _113) 0 ]",
    "EXPR [ (1, _1, _113) (-1, _114) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _114) 0 ], value: EXPR [ (1, _115) 0 ]) ",
    "EXPR [ (-1, _113, _115) (10, _113) (1, _115) (-1, _116) 0 ]",
    "MEM (id: 2, write EXPR [ (1, _116) 0 ] at: EXPR [ (1, _114) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _117) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _118) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _119) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _120) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _121) 0 ]) ",
    "EXPR [ (-1, _122) 15 ]",
    "EXPR [ (-1, _113) (-1, _123) 1 ]",
    "EXPR [ (-5, _16, _95) (-5, _57, _95) (5, _16) (5, _57) (5, _95) (-1, _124) 0 ]",
    "EXPR [ (1, _95, _105) (1, _106, _107) (-1, _125) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-1, Witness(123), Witness(124))], linear_combinations: [(-6, Witness(113))], q_c: 4294967300 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(126)), Simple(Witness(127))]",
    "BLACKBOX::RANGE [(_126, 1)] []",
    "BLACKBOX::RANGE [(_127, 32)] []",
    "EXPR [ (-1, _123, _124) (-6, _113) (-4294967296, _126) (-1, _127) 4294967300 ]",
    "EXPR [ (-1, _110, _126) 0 ]",
    "EXPR [ (1, _113, _121) (1, _123, _125) (-1, _128) 0 ]",
    "EXPR [ (1, _110, _128) (-10, _110) 0 ]",
    "EXPR [ (1, _123, _124) (6, _113) (-1, _129) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-1, Witness(57), Witness(129))], linear_combinations: [(-5, Witness(16))], q_c: 4294967300 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(130)), Simple(Witness(131))]",
    "BLACKBOX::RANGE [(_131, 32)] []",
    "EXPR [ (-1, _57, _129) (-5, _16) (-4294967296, _130) (-1, _131) 4294967300 ]",
    "EXPR [ (-1, _130) 0 ]",
    "EXPR [ (1, _57, _128) (1, _594) -10 ]",
    "EXPR [ (1, _57, _129) (5, _16) -6 ]",
    "EXPR [ (15, _57, _113) -15 ]",
    "EXPR [ (1, _2) (-1, _132) 1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(132))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(133)), Simple(Witness(134))]",
    "BLACKBOX::RANGE [(_134, 32)] []",
    "EXPR [ (1, _132) (-4294967296, _133) (-1, _134) 4294967291 ]",
    "EXPR [ (-1, _133) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _132) 0 ], value: EXPR [ (1, _135) 0 ]) ",
    "EXPR [ (1, _135) -2 ]",
    "INIT (id: 8, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "MEM (id: 8, write EXPR [ (1, _5) 0 ] at: EXPR [ (1, _132) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _1) 0 ], value: EXPR [ (1, _136) 0 ]) ",
    "EXPR [ (1, _136) -4 ]",
    "MEM (id: 8, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _137) 0 ]) ",
    "EXPR [ (1, _137) 0 ]",
    "EXPR [ (1, _1, _57) (-1, _138) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _138) 0 ], value: EXPR [ (1, _139) 0 ]) ",
    "EXPR [ (1, _1, _57) (-1, _140) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _140) 0 ], value: EXPR [ (1, _141) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _142) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _143) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _144) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _145) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _146) 0 ]) ",
    "INIT (id: 9, len: 5, witnesses: [_142, _143, _144, _145, _146])",
    "EXPR [ (1, _57, _139) (-1, _57, _141) (-2, _57) (1, _141) (-1, _147) 0 ]",
    "MEM (id: 9, write EXPR [ (1, _147) 0 ] at: EXPR [ (1, _140) 0 ]) ",
    "EXPR [ (4, _57) (-1, _148) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _148) 0 ], value: EXPR [ (1, _149) 0 ]) ",
    "EXPR [ (4, _57) (-1, _150) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _150) 0 ], value: EXPR [ (1, _151) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(132))], q_c: -1 })], outputs: [Simple(Witness(152))]",
    "EXPR [ (1, _132, _152) (-1, _152) (1, _153) -1 ]",
    "EXPR [ (1, _132, _153) (-1, _153) 0 ]",
    "EXPR [ (1, _57, _153) (-1, _154) 0 ]",
    "EXPR [ (1, _1, _154) (-1, _155) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _155) 0 ], value: EXPR [ (1, _156) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _157) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _158) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _159) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _160) 0 ]) ",
    "MEM (id: 9, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _161) 0 ]) ",
    "INIT (id: 10, len: 5, witnesses: [_157, _158, _159, _160, _161])",
    "EXPR [ (1, _139, _154) (-1, _154, _156) (18, _154) (1, _156) (-1, _162) 0 ]",
    "MEM (id: 10, write EXPR [ (1, _162) 0 ] at: EXPR [ (1, _155) 0 ]) ",
    "EXPR [ (4, _154) (-1, _163) 0 ]",
    "MEM (id: 10, read at: EXPR [ (1, _163) 0 ], value: EXPR [ (1, _164) 0 ]) ",
    "EXPR [ (-1, _154) (-1, _165) 1 ]",
    "EXPR [ (1, _16, _151) (1, _57, _149) (-1, _166) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: -4 })], outputs: [Simple(Witness(167))]",
    "EXPR [ (1, _1, _167) (-4, _167) (1, _168) -1 ]",
    "EXPR [ (1, _1, _168) (-4, _168) 0 ]",
    "EXPR [ (-1, _57, _153) (1, _57) (-1, _169) 0 ]",
    "EXPR [ (1, _168, _169) (-1, _170) 0 ]",
    "EXPR [ (1, _1, _170) (-1, _171) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _171) 0 ], value: EXPR [ (1, _172) 0 ]) ",
    "EXPR [ (-1, _170, _172) (5, _170) (1, _172) (-1, _173) 0 ]",
    "MEM (id: 9, write EXPR [ (1, _173) 0 ] at: EXPR [ (1, _171) 0 ]) ",
    "EXPR [ (4, _170) (-1, _174) 0 ]",
    "MEM (id: 9, read at: EXPR [ (1, _174) 0 ], value: EXPR [ (1, _175) 0 ]) ",
    "EXPR [ (-1, _170) (-1, _176) 1 ]",
    "EXPR [ (1, _154, _164) (1, _165, _166) (-1, _177) 0 ]",
    "EXPR [ (1, _170, _175) (1, _176, _177) (-1, _178) 0 ]",
    "EXPR [ (1, _169, _178) (-5, _169) 0 ]",
    "EXPR [ (1, _1, _16) (-1, _179) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _179) 0 ], value: EXPR [ (1, _180) 0 ]) ",
    "EXPR [ (-1, _16, _180) (1, _180) (-1, _181) 0 ]",
    "MEM (id: 8, write EXPR [ (1, _181) 0 ] at: EXPR [ (1, _179) 0 ]) ",
    "EXPR [ (4, _16) (-1, _182) 0 ]",
    "MEM (id: 8, read at: EXPR [ (1, _182) 0 ], value: EXPR [ (1, _183) 0 ]) ",
    "EXPR [ (1, _16, _183) (1, _57, _178) -5 ]",
    "EXPR [ (1, _1, _57) (-1, _184) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _184) 0 ], value: EXPR [ (1, _185) 0 ]) ",
    "EXPR [ (1, _57, _185) (4, _16) -4 ]",
    "EXPR [ (1, _1, _57) (-1, _186) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _186) 0 ], value: EXPR [ (1, _187) 0 ]) ",
    "INIT (id: 11, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "EXPR [ (1, _57, _185) (-1, _57, _187) (-2, _57) (1, _187) (-1, _188) 0 ]",
    "MEM (id: 11, write EXPR [ (1, _188) 0 ] at: EXPR [ (1, _186) 0 ]) ",
    "EXPR [ (4, _57) (-1, _189) 0 ]",
    "MEM (id: 11, read at: EXPR [ (1, _189) 0 ], value: EXPR [ (1, _190) 0 ]) ",
    "EXPR [ (1, _1, _16) (-1, _191) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _191) 0 ], value: EXPR [ (1, _192) 0 ]) ",
    "EXPR [ (1, _16, _192) 0 ]",
    "EXPR [ (1, _57, _190) (4, _16) -2 ]",
    "INIT (id: 12, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "EXPR [ (1, _1, _57) (-1, _193) 0 ]",
    "MEM (id: 12, read at: EXPR [ (1, _193) 0 ], value: EXPR [ (1, _194) 0 ]) ",
    "EXPR [ (1, _57, _194) (4, _16) -4 ]",
    "EXPR [ (1, _1, _57) (-1, _195) 0 ]",
    "MEM (id: 12, read at: EXPR [ (1, _195) 0 ], value: EXPR [ (1, _196) 0 ]) ",
    "INIT (id: 13, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "EXPR [ (1, _57, _194) (-1, _57, _196) (-2, _57) (1, _196) (-1, _197) 0 ]",
    "MEM (id: 13, write EXPR [ (1, _197) 0 ] at: EXPR [ (1, _195) 0 ]) ",
    "MEM (id: 13, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _198) 0 ]) ",
    "EXPR [ (1, _1, _16) (-1, _199) 0 ]",
    "MEM (id: 12, read at: EXPR [ (1, _199) 0 ], value: EXPR [ (1, _200) 0 ]) ",
    "EXPR [ (1, _16, _200) 0 ]",
    "EXPR [ (1, _57, _198) (4, _16) -2 ]",
    "EXPR [ (1, _1, _89) (-1, _201) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _201) 0 ], value: EXPR [ (1, _202) 0 ]) ",
    "EXPR [ (1, _89, _202) 0 ]",
    "EXPR [ (1, _1, _62) (-1, _203) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _203) 0 ], value: EXPR [ (1, _204) 0 ]) ",
    "EXPR [ (1, _62, _204) (-4, _62) 0 ]",
    "EXPR [ (1, _1, _62) (-1, _205) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _205) 0 ], value: EXPR [ (1, _206) 0 ]) ",
    "INIT (id: 14, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "EXPR [ (1, _62, _204) (-1, _62, _206) (-2, _62) (1, _206) (-1, _207) 0 ]",
    "MEM (id: 14, write EXPR [ (1, _207) 0 ] at: EXPR [ (1, _205) 0 ]) ",
    "EXPR [ (4, _62) (-1, _208) 0 ]",
    "MEM (id: 14, read at: EXPR [ (1, _208) 0 ], value: EXPR [ (1, _209) 0 ]) ",
    "EXPR [ (1, _62, _209) (4, _89) -2 ]",
    "MEM (id: 11, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _210) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _211) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _212) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _213) 0 ]) ",
    "MEM (id: 11, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _214) 0 ]) ",
    "EXPR [ (-1, _215) 10 ]",
    "INIT (id: 15, len: 6, witnesses: [_210, _211, _212, _213, _214, _215])",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 4294967290 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(216)), Simple(Witness(217))]",
    "BLACKBOX::RANGE [(_216, 1)] []",
    "BLACKBOX::RANGE [(_217, 32)] []",
    "EXPR [ (1, _1) (-4294967296, _216) (-1, _217) 4294967290 ]",
    "EXPR [ (-1, _57, _216) 0 ]",
    "EXPR [ (1, _1, _57) (-1, _218) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _218) 0 ], value: EXPR [ (1, _219) 0 ]) ",
    "EXPR [ (-1, _57, _219) (10, _57) (1, _219) (-1, _220) 0 ]",
    "MEM (id: 15, write EXPR [ (1, _220) 0 ] at: EXPR [ (1, _218) 0 ]) ",
    "EXPR [ (5, _57) (-1, _221) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _221) 0 ], value: EXPR [ (1, _222) 0 ]) ",
    "EXPR [ (1, _57, _222) (-10, _57) 0 ]",
    "EXPR [ (1, _1, _57) (-1, _223) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _223) 0 ], value: EXPR [ (1, _224) 0 ]) ",
    "EXPR [ (-1, _57, _224) (20, _57) (1, _224) (-1, _225) 0 ]",
    "MEM (id: 15, write EXPR [ (1, _225) 0 ] at: EXPR [ (1, _223) 0 ]) ",
    "EXPR [ (1, _1, _57) (-1, _226) 0 ]",
    "MEM (id: 15, read at: EXPR [ (1, _226) 0 ], value: EXPR [ (1, _227) 0 ]) ",
    "EXPR [ (-1, _57, _227) (30, _57) (1, _227) (-1, _228) 0 ]",
    "MEM (id: 15, write EXPR [ (1, _228) 0 ] at: EXPR [ (1, _226) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _229) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _230) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _231) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _232) 0 ]) ",
    "MEM (id: 15, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _233) 0 ]) ",
    "EXPR [ (-1, _234) 5 ]",
    "MEM (id: 15, read at: EXPR [ (1, _234) 0 ], value: EXPR [ (1, _235) 0 ]) ",
    "EXPR [ (-1, _236) 11 ]",
    "EXPR [ (1, _57, _233) (-30, _57) 0 ]",
    "EXPR [ (-1, _237) 12 ]",
    "INIT (id: 17, len: 8, witnesses: [_237, _236, _229, _230, _231, _232, _233, _235])",
    "EXPR [ (1, _57, _233) (-30, _57) 0 ]",
    "EXPR [ (-1, _238) 7 ]",
    "MEM (id: 17, read at: EXPR [ (1, _238) 0 ], value: EXPR [ (1, _239) 0 ]) ",
    "INIT (id: 18, len: 8, witnesses: [_237, _236, _229, _230, _231, _232, _233, _235])",
    "EXPR [ (1, _57, _239) (-10, _57) 0 ]",
    "MEM (id: 18, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _240) 0 ]) ",
    "INIT (id: 19, len: 7, witnesses: [_236, _229, _230, _231, _232, _233, _235])",
    "EXPR [ (1, _57, _240) (-12, _57) 0 ]",
    "EXPR [ (1, _1, _57) (-2, _57) (-1, _241) 0 ]",
    "BLACKBOX::RANGE [(_241, 32)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(241))], q_c: 4294967289 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(242)), Simple(Witness(243))]",
    "BLACKBOX::RANGE [(_242, 1)] []",
    "BLACKBOX::RANGE [(_243, 32)] []",
    "EXPR [ (1, _241) (-4294967296, _242) (-1, _243) 4294967289 ]",
    "EXPR [ (-1, _57, _242) 0 ]",
    "INIT (id: 20, len: 7, witnesses: [_5, _5, _5, _5, _5, _5, _5])",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551616 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(244)), Simple(Witness(245))]",
    "BLACKBOX::RANGE [(_244, 1)] []",
    "BLACKBOX::RANGE [(_245, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _244) (-1, _245) 18446744073709551616 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551615 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(246)), Simple(Witness(247))]",
    "BLACKBOX::RANGE [(_246, 1)] []",
    "BLACKBOX::RANGE [(_247, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _246) (-1, _247) 18446744073709551615 ]",
    "MEM (id: 19, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _248) 0 ]) ",
    "EXPR [ (1, _244, _246) (-1, _244) (-1, _249) 1 ]",
    "EXPR [ (-20, _244, _246) (1, _248, _249) (20, _244) (-1, _250) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _250) 0 ] at: EXPR [ (1, _5) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551617 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(251)), Simple(Witness(252))]",
    "BLACKBOX::RANGE [(_251, 1)] []",
    "BLACKBOX::RANGE [(_252, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _251) (-1, _252) 18446744073709551617 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551616 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(253)), Simple(Witness(254))]",
    "BLACKBOX::RANGE [(_253, 1)] []",
    "BLACKBOX::RANGE [(_254, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _253) (-1, _254) 18446744073709551616 ]",
    "EXPR [ (-1, _251) (-1, _255) 1 ]",
    "MEM (id: 19, read at: EXPR [ (1, _255) 0 ], value: EXPR [ (1, _256) 0 ]) ",
    "EXPR [ (1, _251, _253) (-1, _251) (-1, _257) 1 ]",
    "EXPR [ (-20, _251, _253) (1, _256, _257) (20, _251) (-1, _258) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _258) 0 ] at: EXPR [ (1, _6) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551618 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(259)), Simple(Witness(260))]",
    "BLACKBOX::RANGE [(_259, 1)] []",
    "BLACKBOX::RANGE [(_260, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _259) (-1, _260) 18446744073709551618 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551617 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(261)), Simple(Witness(262))]",
    "BLACKBOX::RANGE [(_261, 1)] []",
    "BLACKBOX::RANGE [(_262, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _261) (-1, _262) 18446744073709551617 ]",
    "EXPR [ (-1, _259) (-1, _263) 2 ]",
    "MEM (id: 19, read at: EXPR [ (1, _263) 0 ], value: EXPR [ (1, _264) 0 ]) ",
    "EXPR [ (1, _259, _261) (-1, _259) (-1, _265) 1 ]",
    "EXPR [ (-20, _259, _261) (1, _264, _265) (20, _259) (-1, _266) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _266) 0 ] at: EXPR [ (1, _7) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551619 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(267)), Simple(Witness(268))]",
    "BLACKBOX::RANGE [(_267, 1)] []",
    "BLACKBOX::RANGE [(_268, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _267) (-1, _268) 18446744073709551619 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551618 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(269)), Simple(Witness(270))]",
    "BLACKBOX::RANGE [(_269, 1)] []",
    "BLACKBOX::RANGE [(_270, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _269) (-1, _270) 18446744073709551618 ]",
    "EXPR [ (-1, _267) (-1, _271) 3 ]",
    "MEM (id: 19, read at: EXPR [ (1, _271) 0 ], value: EXPR [ (1, _272) 0 ]) ",
    "EXPR [ (1, _267, _269) (-1, _267) (-1, _273) 1 ]",
    "EXPR [ (-20, _267, _269) (1, _272, _273) (20, _267) (-1, _274) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _274) 0 ] at: EXPR [ (1, _8) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551620 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(275)), Simple(Witness(276))]",
    "BLACKBOX::RANGE [(_275, 1)] []",
    "BLACKBOX::RANGE [(_276, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _275) (-1, _276) 18446744073709551620 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551619 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(277)), Simple(Witness(278))]",
    "BLACKBOX::RANGE [(_277, 1)] []",
    "BLACKBOX::RANGE [(_278, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _277) (-1, _278) 18446744073709551619 ]",
    "EXPR [ (-1, _275) (-1, _279) 4 ]",
    "MEM (id: 19, read at: EXPR [ (1, _279) 0 ], value: EXPR [ (1, _280) 0 ]) ",
    "EXPR [ (1, _275, _277) (-1, _275) (-1, _281) 1 ]",
    "EXPR [ (-20, _275, _277) (1, _280, _281) (20, _275) (-1, _282) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _282) 0 ] at: EXPR [ (1, _9) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551621 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(283)), Simple(Witness(284))]",
    "BLACKBOX::RANGE [(_283, 1)] []",
    "BLACKBOX::RANGE [(_284, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _283) (-1, _284) 18446744073709551621 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551620 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(285)), Simple(Witness(286))]",
    "BLACKBOX::RANGE [(_285, 1)] []",
    "BLACKBOX::RANGE [(_286, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _285) (-1, _286) 18446744073709551620 ]",
    "EXPR [ (-1, _283) (-1, _287) 5 ]",
    "MEM (id: 19, read at: EXPR [ (1, _287) 0 ], value: EXPR [ (1, _288) 0 ]) ",
    "EXPR [ (1, _283, _285) (-1, _283) (-1, _289) 1 ]",
    "EXPR [ (-20, _283, _285) (1, _288, _289) (20, _283) (-1, _290) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _290) 0 ] at: EXPR [ (1, _234) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551622 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(291)), Simple(Witness(292))]",
    "BLACKBOX::RANGE [(_291, 1)] []",
    "BLACKBOX::RANGE [(_292, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _291) (-1, _292) 18446744073709551622 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(241))], q_c: 18446744073709551621 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(293)), Simple(Witness(294))]",
    "BLACKBOX::RANGE [(_293, 1)] []",
    "BLACKBOX::RANGE [(_294, 64)] []",
    "EXPR [ (-1, _241) (-18446744073709551616, _293) (-1, _294) 18446744073709551621 ]",
    "EXPR [ (-1, _291) (-1, _295) 6 ]",
    "MEM (id: 19, read at: EXPR [ (1, _295) 0 ], value: EXPR [ (1, _296) 0 ]) ",
    "EXPR [ (1, _291, _293) (-1, _291) (-1, _297) 1 ]",
    "EXPR [ (-1, _298) 6 ]",
    "EXPR [ (-20, _291, _293) (1, _296, _297) (20, _291) (-1, _299) 0 ]",
    "MEM (id: 20, write EXPR [ (1, _299) 0 ] at: EXPR [ (1, _298) 0 ]) ",
    "EXPR [ (2, _57) (-1, _300) 0 ]",
    "MEM (id: 20, read at: EXPR [ (1, _300) 0 ], value: EXPR [ (1, _301) 0 ]) ",
    "EXPR [ (1, _57, _301) (-20, _57) 0 ]",
    "EXPR [ (6, _57) (-1, _302) 0 ]",
    "MEM (id: 20, read at: EXPR [ (1, _302) 0 ], value: EXPR [ (1, _303) 0 ]) ",
    "EXPR [ (1, _57, _303) (-30, _57) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(28))], q_c: 4294967289 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(304)), Simple(Witness(305))]",
    "BLACKBOX::RANGE [(_304, 1)] []",
    "BLACKBOX::RANGE [(_305, 32)] []",
    "EXPR [ (1, _28) (-4294967296, _304) (-1, _305) 4294967289 ]",
    "EXPR [ (-1, _57, _304) 0 ]",
    "MEM (id: 20, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _306) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _307) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _308) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _309) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _310) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _234) 0 ], value: EXPR [ (1, _311) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _298) 0 ], value: EXPR [ (1, _312) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _28) 0 ], value: EXPR [ (1, _313) 0 ]) ",
    "INIT (id: 21, len: 7, witnesses: [_306, _307, _308, _309, _310, _311, _312])",
    "MEM (id: 20, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _314) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(28))], q_c: 18446744073709551616 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(315)), Simple(Witness(316))]",
    "BLACKBOX::RANGE [(_315, 1)] []",
    "BLACKBOX::RANGE [(_316, 64)] []",
    "EXPR [ (-1, _28) (-18446744073709551616, _315) (-1, _316) 18446744073709551616 ]",
    "EXPR [ (-1, _306, _315) (1, _314, _315) (1, _306) (-1, _317) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _317) 0 ] at: EXPR [ (1, _5) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _318) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(28))], q_c: 18446744073709551617 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(319)), Simple(Witness(320))]",
    "BLACKBOX::RANGE [(_319, 1)] []",
    "BLACKBOX::RANGE [(_320, 64)] []",
    "EXPR [ (-1, _28) (-18446744073709551616, _319) (-1, _320) 18446744073709551617 ]",
    "EXPR [ (-1, _307, _319) (1, _318, _319) (1, _307) (-1, _321) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _321) 0 ] at: EXPR [ (1, _6) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _322) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(28))], q_c: 18446744073709551618 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(323)), Simple(Witness(324))]",
    "BLACKBOX::RANGE [(_323, 1)] []",
    "BLACKBOX::RANGE [(_324, 64)] []",
    "EXPR [ (-1, _28) (-18446744073709551616, _323) (-1, _324) 18446744073709551618 ]",
    "EXPR [ (-1, _308, _323) (1, _322, _323) (1, _308) (-1, _325) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _325) 0 ] at: EXPR [ (1, _7) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _326) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(28))], q_c: 18446744073709551619 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(327)), Simple(Witness(328))]",
    "BLACKBOX::RANGE [(_327, 1)] []",
    "BLACKBOX::RANGE [(_328, 64)] []",
    "EXPR [ (-1, _28) (-18446744073709551616, _327) (-1, _328) 18446744073709551619 ]",
    "EXPR [ (-1, _309, _327) (1, _326, _327) (1, _309) (-1, _329) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _329) 0 ] at: EXPR [ (1, _8) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _234) 0 ], value: EXPR [ (1, _330) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(28))], q_c: 18446744073709551620 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(331)), Simple(Witness(332))]",
    "BLACKBOX::RANGE [(_331, 1)] []",
    "BLACKBOX::RANGE [(_332, 64)] []",
    "EXPR [ (-1, _28) (-18446744073709551616, _331) (-1, _332) 18446744073709551620 ]",
    "EXPR [ (-1, _310, _331) (1, _330, _331) (1, _310) (-1, _333) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _333) 0 ] at: EXPR [ (1, _9) 0 ]) ",
    "MEM (id: 20, read at: EXPR [ (1, _298) 0 ], value: EXPR [ (1, _334) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(28))], q_c: 18446744073709551621 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 18446744073709551616 })], outputs: [Simple(Witness(335)), Simple(Witness(336))]",
    "BLACKBOX::RANGE [(_335, 1)] []",
    "BLACKBOX::RANGE [(_336, 64)] []",
    "EXPR [ (-1, _28) (-18446744073709551616, _335) (-1, _336) 18446744073709551621 ]",
    "EXPR [ (-1, _311, _335) (1, _334, _335) (1, _311) (-1, _337) 0 ]",
    "MEM (id: 21, write EXPR [ (1, _337) 0 ] at: EXPR [ (1, _234) 0 ]) ",
    "EXPR [ (5, _57) (-1, _338) 0 ]",
    "MEM (id: 21, read at: EXPR [ (1, _338) 0 ], value: EXPR [ (1, _339) 0 ]) ",
    "EXPR [ (1, _57, _313) (-1, _57) 0 ]",
    "EXPR [ (5, _16, _57) (6, _57, _57) (6, _16) -6 ]",
    "EXPR [ (1, _57, _339) (20, _16) -30 ]",
    "EXPR [ (1, _1, _89) (-1, _340) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _340) 0 ], value: EXPR [ (1, _341) 0 ]) ",
    "INIT (id: 22, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "EXPR [ (-1, _89, _341) (2, _89) (1, _341) (-1, _342) 0 ]",
    "MEM (id: 22, write EXPR [ (1, _342) 0 ] at: EXPR [ (1, _340) 0 ]) ",
    "MEM (id: 22, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _343) 0 ]) ",
    "MEM (id: 22, read at: EXPR [ (1, _89) 0 ], value: EXPR [ (1, _344) 0 ]) ",
    "EXPR [ (2, _89) (-1, _345) 0 ]",
    "MEM (id: 22, read at: EXPR [ (1, _345) 0 ], value: EXPR [ (1, _346) 0 ]) ",
    "EXPR [ (3, _89) (-1, _347) 0 ]",
    "MEM (id: 22, read at: EXPR [ (1, _347) 0 ], value: EXPR [ (1, _348) 0 ]) ",
    "EXPR [ (4, _89) (-1, _349) 0 ]",
    "MEM (id: 22, read at: EXPR [ (1, _349) 0 ], value: EXPR [ (1, _350) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _351) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _352) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _353) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _354) 0 ]) ",
    "MEM (id: 14, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _355) 0 ]) ",
    "EXPR [ (1, _89, _344) (1, _62) (-1, _356) 0 ]",
    "EXPR [ (1, _89, _346) (2, _62) (-1, _357) 0 ]",
    "EXPR [ (1, _89, _348) (3, _62) (-1, _358) 0 ]",
    "EXPR [ (1, _89, _350) (4, _62) (-1, _359) 0 ]",
    "EXPR [ (5, _62, _89) (5, _89, _89) (6, _62) -6 ]",
    "EXPR [ (10, _62) -10 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: -20 })], outputs: [Simple(Witness(360))]",
    "EXPR [ (1, _1, _360) (-20, _360) (1, _361) -1 ]",
    "EXPR [ (1, _1, _361) (-20, _361) 0 ]",
    "EXPR [ (1, _62, _351) (1, _89, _343) (-1, _362) 0 ]",
    "EXPR [ (1, _62, _352) (1, _89, _356) (-1, _363) 0 ]",
    "EXPR [ (1, _62, _353) (1, _89, _357) (-1, _364) 0 ]",
    "EXPR [ (1, _62, _354) (1, _89, _358) (-1, _365) 0 ]",
    "EXPR [ (1, _62, _355) (1, _89, _359) (-1, _366) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(361))], q_c: -1 })], outputs: [Simple(Witness(367))]",
    "EXPR [ (1, _361, _367) (-1, _367) (1, _368) -1 ]",
    "EXPR [ (1, _361, _368) (-1, _368) 0 ]",
    "EXPR [ (20, _361) (-1, _370) 0 ]",
    "INIT (id: 24, len: 8, witnesses: [_362, _363, _364, _365, _366, _215, _370, _122])",
    "EXPR [ (1, _361) (-1, _371) 6 ]",
    "MEM (id: 24, write EXPR [ (1, _122) 0 ] at: EXPR [ (1, _371) 0 ]) ",
    "MEM (id: 24, read at: EXPR [ (1, _298) 0 ], value: EXPR [ (1, _372) 0 ]) ",
    "EXPR [ (1, _361) 0 ]",
    "EXPR [ (1, _368, _370) (-1, _368, _372) (1, _372) -15 ]",
    "EXPR [ (1, _1) (-1, _2) (-1, _373) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(373))], q_c: 0 })], outputs: [Simple(Witness(374))]",
    "EXPR [ (1, _373, _374) (1, _375) -1 ]",
    "EXPR [ (1, _373, _375) 0 ]",
    "EXPR [ (-1, _1, _375) (1, _1) (-1, _376) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _376) 0 ], value: EXPR [ (1, _377) 0 ]) ",
    "INIT (id: 25, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "EXPR [ (1, _375, _377) (-50, _375) (-1, _378) 50 ]",
    "MEM (id: 25, write EXPR [ (1, _378) 0 ] at: EXPR [ (1, _376) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _379) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _380) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _381) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _382) 0 ]) ",
    "MEM (id: 25, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _383) 0 ]) ",
    "EXPR [ (1, _1, _375) (-1, _384) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _384) 0 ], value: EXPR [ (1, _385) 0 ]) ",
    "EXPR [ (1, _1, _375) (-1, _386) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _386) 0 ], value: EXPR [ (1, _387) 0 ]) ",
    "INIT (id: 28, len: 5, witnesses: [_5, _6, _7, _8, _9])",
    "EXPR [ (1, _375, _385) (-1, _375, _387) (-2, _375) (1, _387) (-1, _388) 0 ]",
    "MEM (id: 28, write EXPR [ (1, _388) 0 ] at: EXPR [ (1, _386) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _389) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _390) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _391) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _392) 0 ]) ",
    "MEM (id: 28, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _393) 0 ]) ",
    "EXPR [ (-1, _375) (-1, _394) 1 ]",
    "EXPR [ (-1, _375, _380) (1, _375) (1, _380) (-1, _395) 0 ]",
    "EXPR [ (-1, _375, _381) (2, _375) (1, _381) (-1, _396) 0 ]",
    "EXPR [ (-1, _375, _382) (3, _375) (1, _382) (-1, _397) 0 ]",
    "EXPR [ (-1, _375, _383) (4, _375) (1, _383) (-1, _398) 0 ]",
    "EXPR [ (2, _375, _375) (-3, _375) (-1, _399) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(399))], q_c: 0 })], outputs: [Simple(Witness(400))]",
    "EXPR [ (1, _399, _400) (1, _401) -1 ]",
    "EXPR [ (1, _399, _401) 0 ]",
    "EXPR [ (-1, _375, _379) (1, _375, _389) (1, _379) (-1, _403) 0 ]",
    "EXPR [ (1, _375, _390) (1, _394, _395) (-1, _404) 0 ]",
    "EXPR [ (1, _375, _391) (1, _394, _396) (-1, _405) 0 ]",
    "EXPR [ (1, _375, _392) (1, _394, _397) (-1, _406) 0 ]",
    "EXPR [ (1, _375, _393) (1, _394, _398) (-1, _407) 0 ]",
    "EXPR [ (1, _1, _375) (-1, _677) 0 ]",
    "EXPR [ (-1, _2, _375) (1, _2) (-1, _408) (1, _677) 0 ]",
    "EXPR [ (-1, _1, _375) (1, _1) (-1, _409) 0 ]",
    "EXPR [ (-1, _410) 30 ]",
    "INIT (id: 30, len: 8, witnesses: [_403, _404, _405, _406, _407, _408, _409, _410])",
    "EXPR [ (2, _375, _375) (-3, _375) (-1, _411) 7 ]",
    "MEM (id: 30, write EXPR [ (1, _410) 0 ] at: EXPR [ (1, _411) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _412) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _413) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _414) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _415) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _416) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _234) 0 ], value: EXPR [ (1, _417) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _298) 0 ], value: EXPR [ (1, _418) 0 ]) ",
    "MEM (id: 30, read at: EXPR [ (1, _238) 0 ], value: EXPR [ (1, _419) 0 ]) ",
    "EXPR [ (2, _375, _375) (-3, _375) 0 ]",
    "EXPR [ (1, _401, _403) (-1, _401, _412) (1, _412) (-1, _420) 0 ]",
    "EXPR [ (1, _401, _404) (-1, _401, _413) (1, _413) (-1, _421) 0 ]",
    "EXPR [ (1, _401, _405) (-1, _401, _414) (1, _414) (-1, _422) 0 ]",
    "EXPR [ (1, _401, _406) (-1, _401, _415) (1, _415) (-1, _423) 0 ]",
    "EXPR [ (1, _401, _407) (-1, _401, _416) (1, _416) (-1, _424) 0 ]",
    "EXPR [ (1, _401, _408) (-1, _401, _417) (1, _417) (-1, _425) 0 ]",
    "EXPR [ (1, _401, _409) (-1, _401, _418) (1, _418) (-1, _426) 0 ]",
    "EXPR [ (-1, _401, _419) (30, _401) (1, _419) (-1, _427) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(361))], q_c: -1 })], outputs: [Simple(Witness(428))]",
    "EXPR [ (1, _361, _428) (-1, _428) (1, _429) -1 ]",
    "EXPR [ (1, _361, _429) (-1, _429) 0 ]",
    "EXPR [ (1, _361) (-1, _430) 9 ]",
    "BLACKBOX::RANGE [(_430, 32)] []",
    "INIT (id: 31, len: 10, witnesses: [_420, _421, _422, _423, _424, _425, _426, _427, _370, _122])",
    "EXPR [ (1, _361) (-1, _431) 8 ]",
    "MEM (id: 31, write EXPR [ (1, _122) 0 ] at: EXPR [ (1, _431) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _432) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _433) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _434) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _435) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _436) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _234) 0 ], value: EXPR [ (1, _437) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _298) 0 ], value: EXPR [ (1, _438) 0 ]) ",
    "MEM (id: 31, read at: EXPR [ (1, _238) 0 ], value: EXPR [ (1, _439) 0 ]) ",
    "EXPR [ (-1, _440) 8 ]",
    "MEM (id: 31, read at: EXPR [ (1, _440) 0 ], value: EXPR [ (1, _441) 0 ]) ",
    "EXPR [ (-1, _442) 9 ]",
    "MEM (id: 31, read at: EXPR [ (1, _442) 0 ], value: EXPR [ (1, _443) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(430))], q_c: -10 })], outputs: [Simple(Witness(444))]",
    "EXPR [ (1, _430, _444) (-10, _444) (1, _445) -1 ]",
    "EXPR [ (1, _430, _445) (-10, _445) 0 ]",
    "EXPR [ (-1, _361, _430) (-1, _361) (1, _430) (-1, _446) 1 ]",
    "BLACKBOX::RANGE [(_446, 32)] []",
    "EXPR [ (1, _420, _429) (-1, _429, _432) (1, _432) (-1, _447) 0 ]",
    "EXPR [ (1, _421, _429) (-1, _429, _433) (1, _433) (-1, _448) 0 ]",
    "EXPR [ (1, _422, _429) (-1, _429, _434) (1, _434) (-1, _449) 0 ]",
    "EXPR [ (1, _423, _429) (-1, _429, _435) (1, _435) (-1, _450) 0 ]",
    "EXPR [ (1, _424, _429) (-1, _429, _436) (1, _436) (-1, _451) 0 ]",
    "EXPR [ (1, _425, _429) (-1, _429, _437) (1, _437) (-1, _452) 0 ]",
    "EXPR [ (1, _426, _429) (-1, _429, _438) (1, _438) (-1, _453) 0 ]",
    "EXPR [ (1, _427, _429) (-1, _429, _439) (1, _439) (-1, _454) 0 ]",
    "EXPR [ (1, _370, _429) (-1, _429, _441) (1, _441) (-1, _455) 0 ]",
    "EXPR [ (-1, _429, _443) (15, _429) (1, _443) (-1, _456) 0 ]",
    "EXPR [ (-1, _457) 50 ]",
    "INIT (id: 32, len: 11, witnesses: [_447, _448, _449, _450, _451, _452, _453, _454, _455, _456, _457])",
    "EXPR [ (-1, _361, _430) (1, _430) (-1, _458) 0 ]",
    "MEM (id: 32, read at: EXPR [ (1, _458) 0 ], value: EXPR [ (1, _459) 0 ]) ",
    "EXPR [ (1, _361, _459) (-50, _361) (-1, _460) 50 ]",
    "MEM (id: 32, write EXPR [ (1, _460) 0 ] at: EXPR [ (1, _458) 0 ]) ",
    "MEM (id: 32, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _461) 0 ]) ",
    "EXPR [ (-1, _361) (-1, _462) 1 ]",
    "MEM (id: 32, read at: EXPR [ (1, _462) 0 ], value: EXPR [ (1, _463) 0 ]) ",
    "EXPR [ (-2, _361) (-1, _464) 2 ]",
    "MEM (id: 32, read at: EXPR [ (1, _464) 0 ], value: EXPR [ (1, _465) 0 ]) ",
    "EXPR [ (-3, _361) (-1, _466) 3 ]",
    "MEM (id: 32, read at: EXPR [ (1, _466) 0 ], value: EXPR [ (1, _467) 0 ]) ",
    "EXPR [ (-4, _361) (-1, _468) 4 ]",
    "MEM (id: 32, read at: EXPR [ (1, _468) 0 ], value: EXPR [ (1, _469) 0 ]) ",
    "EXPR [ (-5, _361) (-1, _470) 5 ]",
    "MEM (id: 32, read at: EXPR [ (1, _470) 0 ], value: EXPR [ (1, _471) 0 ]) ",
    "EXPR [ (-6, _361) (-1, _472) 6 ]",
    "MEM (id: 32, read at: EXPR [ (1, _472) 0 ], value: EXPR [ (1, _473) 0 ]) ",
    "EXPR [ (-7, _361) (-1, _474) 7 ]",
    "MEM (id: 32, read at: EXPR [ (1, _474) 0 ], value: EXPR [ (1, _475) 0 ]) ",
    "EXPR [ (-8, _361) (-1, _476) 8 ]",
    "MEM (id: 32, read at: EXPR [ (1, _476) 0 ], value: EXPR [ (1, _477) 0 ]) ",
    "EXPR [ (-9, _361) (-1, _478) 9 ]",
    "MEM (id: 32, read at: EXPR [ (1, _478) 0 ], value: EXPR [ (1, _479) 0 ]) ",
    "EXPR [ (-10, _361) (-1, _480) 10 ]",
    "MEM (id: 32, read at: EXPR [ (1, _480) 0 ], value: EXPR [ (1, _481) 0 ]) ",
    "EXPR [ (-1, _361) (-1, _482) 1 ]",
    "EXPR [ (1, _445, _447) (-1, _445, _461) (1, _461) (-1, _483) 0 ]",
    "EXPR [ (1, _445, _448) (-1, _445, _463) (1, _463) (-1, _484) 0 ]",
    "EXPR [ (1, _445, _449) (-1, _445, _465) (1, _465) (-1, _485) 0 ]",
    "EXPR [ (1, _445, _450) (-1, _445, _467) (1, _467) (-1, _486) 0 ]",
    "EXPR [ (1, _445, _451) (-1, _445, _469) (1, _469) (-1, _487) 0 ]",
    "EXPR [ (1, _445, _452) (-1, _445, _471) (1, _471) (-1, _488) 0 ]",
    "EXPR [ (1, _445, _453) (-1, _445, _473) (1, _473) (-1, _489) 0 ]",
    "EXPR [ (1, _445, _454) (-1, _445, _475) (1, _475) (-1, _490) 0 ]",
    "EXPR [ (1, _445, _455) (-1, _445, _477) (1, _477) (-1, _491) 0 ]",
    "EXPR [ (1, _445, _456) (-1, _445, _479) (1, _479) (-1, _492) 0 ]",
    "EXPR [ (-1, _445, _481) (50, _445) (1, _481) (-1, _493) 0 ]",
    "EXPR [ (1, _361, _430) (-1, _731) 0 ]",
    "EXPR [ (-1, _361, _446) (-1, _732) 0 ]",
    "EXPR [ (1, _446) (-1, _494) (1, _731) (1, _732) -11 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(494))], q_c: 0 })], outputs: [Simple(Witness(495))]",
    "EXPR [ (1, _494, _495) (1, _496) -1 ]",
    "EXPR [ (1, _494, _496) 0 ]",
    "EXPR [ (1, _361, _447) (1, _482, _483) (-1, _498) 0 ]",
    "EXPR [ (1, _361, _448) (1, _482, _484) (-1, _499) 0 ]",
    "EXPR [ (1, _361, _449) (1, _482, _485) (-1, _500) 0 ]",
    "EXPR [ (1, _361, _450) (1, _482, _486) (-1, _501) 0 ]",
    "EXPR [ (1, _361, _451) (1, _482, _487) (-1, _502) 0 ]",
    "EXPR [ (1, _361, _452) (1, _482, _488) (-1, _503) 0 ]",
    "EXPR [ (1, _361, _453) (1, _482, _489) (-1, _504) 0 ]",
    "EXPR [ (1, _361, _454) (1, _482, _490) (-1, _505) 0 ]",
    "EXPR [ (1, _361, _455) (1, _482, _491) (-1, _506) 0 ]",
    "EXPR [ (1, _361, _456) (1, _482, _492) (-1, _507) 0 ]",
    "EXPR [ (1, _482, _493) (-1, _508) 0 ]",
    "EXPR [ (-1, _509) 60 ]",
    "INIT (id: 33, len: 12, witnesses: [_498, _499, _500, _501, _502, _503, _504, _505, _506, _507, _508, _509])",
    "EXPR [ (1, _446) (-1, _510) (1, _731) (1, _732) 0 ]",
    "MEM (id: 33, write EXPR [ (1, _509) 0 ] at: EXPR [ (1, _510) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _511) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _512) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _513) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _514) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _515) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _234) 0 ], value: EXPR [ (1, _516) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _298) 0 ], value: EXPR [ (1, _517) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _238) 0 ], value: EXPR [ (1, _518) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _440) 0 ], value: EXPR [ (1, _519) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _442) 0 ], value: EXPR [ (1, _520) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _215) 0 ], value: EXPR [ (1, _521) 0 ]) ",
    "MEM (id: 33, read at: EXPR [ (1, _236) 0 ], value: EXPR [ (1, _522) 0 ]) ",
    "EXPR [ (1, _446) (1, _731) (1, _732) -10 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 4294967285 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(523)), Simple(Witness(524))]",
    "BLACKBOX::RANGE [(_524, 32)] []",
    "EXPR [ (1, _1) (-4294967296, _523) (-1, _524) 4294967285 ]",
    "EXPR [ (-1, _523) 0 ]",
    "EXPR [ (1, _496, _498) (-1, _496, _511) (1, _511) (-1, _525) 0 ]",
    "EXPR [ (1, _496, _499) (-1, _496, _512) (1, _512) (-1, _526) 0 ]",
    "EXPR [ (1, _496, _500) (-1, _496, _513) (1, _513) (-1, _527) 0 ]",
    "EXPR [ (1, _496, _501) (-1, _496, _514) (1, _514) (-1, _528) 0 ]",
    "EXPR [ (1, _496, _502) (-1, _496, _515) (1, _515) (-1, _529) 0 ]",
    "EXPR [ (1, _496, _503) (-1, _496, _516) (1, _516) (-1, _530) 0 ]",
    "EXPR [ (1, _496, _504) (-1, _496, _517) (1, _517) (-1, _531) 0 ]",
    "EXPR [ (1, _496, _505) (-1, _496, _518) (1, _518) (-1, _532) 0 ]",
    "EXPR [ (1, _496, _506) (-1, _496, _519) (1, _519) (-1, _533) 0 ]",
    "EXPR [ (1, _496, _507) (-1, _496, _520) (1, _520) (-1, _534) 0 ]",
    "EXPR [ (1, _496, _508) (-1, _496, _521) (1, _521) (-1, _535) 0 ]",
    "EXPR [ (-1, _496, _522) (60, _496) (1, _522) (-1, _536) 0 ]",
    "INIT (id: 34, len: 12, witnesses: [_525, _526, _527, _528, _529, _530, _531, _532, _533, _534, _535, _536])",
    "MEM (id: 34, read at: EXPR [ (1, _1) 0 ], value: EXPR [ (1, _537) 0 ]) ",
    "EXPR [ (1, _537) -50 ]",
    "EXPR [ (1, _532) -30 ]",
    "EXPR [ (1, _533) -15 ]",
    "EXPR [ (1, _534) -50 ]",
    "EXPR [ (1, _535) -60 ]",
    "EXPR [ (1, _1, _394) (-1, _538) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _538) 0 ], value: EXPR [ (1, _539) 0 ]) ",
    "EXPR [ (-1, _394, _539) (5, _394) (1, _539) (-1, _540) 0 ]",
    "MEM (id: 0, write EXPR [ (1, _540) 0 ] at: EXPR [ (1, _538) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _541) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _542) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _543) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _544) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _545) 0 ]) ",
    "INIT (id: 36, len: 7, witnesses: [_541, _542, _543, _544, _545, _2, _1])",
    "MEM (id: 36, read at: EXPR [ (1, _298) 0 ], value: EXPR [ (1, _546) 0 ]) ",
    "EXPR [ (-1, _1, _394) (1, _394, _546) 0 ]",
    "EXPR [ (1, _394, _542) (1, _375) (-1, _547) 0 ]",
    "EXPR [ (1, _394, _543) (2, _375) (-1, _548) 0 ]",
    "EXPR [ (1, _394, _544) (3, _375) (-1, _549) 0 ]",
    "EXPR [ (1, _394, _545) (4, _375) (-1, _550) 0 ]",
    "EXPR [ (5, _375, _394) (-1, _777) 0 ]",
    "EXPR [ (6, _394, _394) (-1, _778) 0 ]",
    "EXPR [ (6, _375) (-1, _551) (1, _777) (1, _778) -6 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(551))], q_c: 0 })], outputs: [Simple(Witness(552))]",
    "EXPR [ (1, _551, _552) (1, _553) -1 ]",
    "EXPR [ (1, _551, _553) 0 ]",
    "EXPR [ (1, _394, _541) (-1, _555) 0 ]",
    "EXPR [ (1, _394, _547) (1, _375) (-1, _556) 0 ]",
    "EXPR [ (1, _394, _548) (2, _375) (-1, _557) 0 ]",
    "EXPR [ (1, _394, _549) (3, _375) (-1, _558) 0 ]",
    "EXPR [ (1, _394, _550) (4, _375) (-1, _559) 0 ]",
    "EXPR [ (1, _2, _394) (-1, _560) (1, _677) 0 ]",
    "INIT (id: 38, len: 7, witnesses: [_555, _556, _557, _558, _559, _560, _410])",
    "EXPR [ (6, _375) (-1, _561) (1, _777) (1, _778) 0 ]",
    "MEM (id: 38, write EXPR [ (1, _410) 0 ] at: EXPR [ (1, _561) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _562) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _6) 0 ], value: EXPR [ (1, _563) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _564) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _565) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _566) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _234) 0 ], value: EXPR [ (1, _567) 0 ]) ",
    "MEM (id: 38, read at: EXPR [ (1, _298) 0 ], value: EXPR [ (1, _568) 0 ]) ",
    "EXPR [ (6, _375) (1, _777) (1, _778) -6 ]",
    "EXPR [ (1, _553, _555) (-1, _553, _562) (1, _562) (-1, _569) 0 ]",
    "EXPR [ (1, _553, _556) (-1, _553, _563) (1, _563) (-1, _570) 0 ]",
    "EXPR [ (1, _553, _557) (-1, _553, _564) (1, _564) (-1, _571) 0 ]",
    "EXPR [ (1, _553, _558) (-1, _553, _565) (1, _565) (-1, _572) 0 ]",
    "EXPR [ (1, _553, _559) (-1, _553, _566) (1, _566) (-1, _573) 0 ]",
    "EXPR [ (1, _553, _560) (-1, _553, _567) (1, _567) (-1, _574) 0 ]",
    "EXPR [ (-1, _553, _568) (30, _553) (1, _568) (-1, _575) 0 ]",
    "EXPR [ (1, _361, _569) (1, _482, _569) (-1, _576) 0 ]",
    "EXPR [ (1, _361, _570) (1, _482, _570) (-1, _577) 0 ]",
    "EXPR [ (1, _361, _571) (1, _482, _571) (-1, _578) 0 ]",
    "EXPR [ (1, _361, _572) (1, _482, _572) (-1, _579) 0 ]",
    "EXPR [ (1, _361, _573) (1, _482, _573) (-1, _580) 0 ]",
    "EXPR [ (1, _361, _574) (1, _482, _574) (-1, _581) 0 ]",
    "EXPR [ (1, _361, _575) (1, _482, _575) (-1, _582) 0 ]",
    "INIT (id: 39, len: 8, witnesses: [_576, _577, _578, _579, _580, _581, _582, _370])",
    "EXPR [ (8, _361) (7, _482) (-1, _583) -1 ]",
    "MEM (id: 39, read at: EXPR [ (1, _583) 0 ], value: EXPR [ (1, _584) 0 ]) ",
    "INIT (id: 40, len: 8, witnesses: [_576, _577, _578, _579, _580, _581, _582, _370])",
    "EXPR [ (1, _584) -30 ]",
    "EXPR [ (1, _583) (-1, _585) -1 ]",
    "MEM (id: 40, read at: EXPR [ (1, _585) 0 ], value: EXPR [ (1, _586) 0 ]) ",
    "EXPR [ (-1, _2) (1, _586) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "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",
  "file_map": {
    "50": {
      "source": "fn main(x: u32) {\n    // The parameters to this function must come directly from witness values (inputs to main).\n    regression_dynamic_slice_index(x - 1, x - 4);\n}\n\nfn regression_dynamic_slice_index(x: u32, y: u32) {\n    let mut slice = &[];\n    for i in 0..5 {\n        slice = slice.push_back(i as Field);\n    }\n    assert(slice.len() == 5);\n\n    dynamic_slice_index_set_if(slice, x, y);\n    dynamic_slice_index_set_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_if(slice, x, y + 1);\n    dynamic_slice_index_if(slice, x);\n    dynamic_array_index_if([0, 1, 2, 3, 4], x);\n    dynamic_slice_index_else(slice, x);\n\n    dynamic_slice_merge_if(slice, x);\n    dynamic_slice_merge_else(slice, x);\n    dynamic_slice_merge_two_ifs(slice, x);\n    dynamic_slice_merge_mutate_between_ifs(slice, x, y);\n    dynamic_slice_merge_push_then_pop(slice, x, y);\n}\n\nfn dynamic_slice_index_set_if(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[3] == 2);\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_index_set_else(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 > 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 0);\n}\n// This tests the case of missing a store instruction in the else branch\n// of merging slices\nfn dynamic_slice_index_if(mut slice: [Field], x: u32) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    } else {\n        assert(slice[x] == 0);\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_array_index_if(mut array: [Field; 5], x: u32) {\n    if x as u32 < 10 {\n        assert(array[x] == 4);\n        array[x] = array[x] - 2;\n    } else {\n        assert(array[x] == 0);\n    }\n    assert(array[4] == 2);\n}\n// This tests the case of missing a store instruction in the then branch\n// of merging slices\nfn dynamic_slice_index_else(mut slice: [Field], x: u32) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_merge_if(mut slice: [Field], x: u32) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n\n        slice = slice.push_back(10);\n        // Having an array set here checks whether we appropriately\n        // handle a slice length that is not yet resolving to a constant\n        // during flattening\n        slice[x] = 10;\n        assert(slice[slice.len() - 1] == 10);\n        assert(slice.len() == 6);\n\n        slice[x] = 20;\n        slice[x] = slice[x] + 10;\n\n        slice = slice.push_front(11);\n        assert(slice[0] == 11);\n        assert(slice.len() == 7);\n        assert(slice[5] == 30);\n\n        slice = slice.push_front(12);\n        assert(slice[0] == 12);\n        assert(slice.len() == 8);\n        assert(slice[6] == 30);\n\n        let (popped_slice, last_elem) = slice.pop_back();\n        assert(last_elem == 10);\n        assert(popped_slice.len() == 7);\n\n        let (first_elem, rest_of_slice) = popped_slice.pop_front();\n        assert(first_elem == 12);\n        assert(rest_of_slice.len() == 6);\n\n        slice = rest_of_slice.insert(x as u32 - 2, 20);\n        assert(slice[2] == 20);\n        assert(slice[6] == 30);\n        assert(slice.len() == 7);\n\n        let (removed_slice, removed_elem) = slice.remove(x as u32 - 1);\n        // The deconstructed tuple assigns to the slice but is not seen outside of the if statement\n        // without a direct assignment\n        slice = removed_slice;\n\n        assert(removed_elem == 1);\n        assert(slice.len() == 6);\n    } else {\n        assert(slice[x] == 0);\n        slice = slice.push_back(20);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 30);\n}\n\nfn dynamic_slice_merge_else(mut slice: [Field], x: u32) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_else(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        if y != 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 5 {\n                // We should not hit this case\n                assert(slice[x] == 22);\n            } else {\n                slice[x] = 10;\n                slice = slice.push_back(15);\n                assert(slice.len() == 6);\n            }\n            assert(slice[4] == 10);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 10);\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_if(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 2);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[2] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        // TODO: this panics as we have a load for the slice in flattening\n        if y == 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 4 {\n                slice[x] = 5;\n            }\n            assert(slice[4] == 5);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 5);\n}\n\nfn dynamic_slice_merge_two_ifs(mut slice: [Field], x: u32) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 8);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_merge_mutate_between_ifs(mut slice: [Field], x: u32, y: u32) {\n    if x != y {\n        slice[x] = 50;\n        slice = slice.push_back(y as Field);\n        slice = slice.push_back(x as Field);\n    } else {\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(x as Field);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 8);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    if x != 20 {\n        slice = slice.push_back(50);\n    }\n\n    slice = slice.push_back(60);\n    assert(slice.len() == 11);\n    assert(slice[x] == 50);\n    assert(slice[slice.len() - 4] == 30);\n    assert(slice[slice.len() - 3] == 15);\n    assert(slice[slice.len() - 2] == 50);\n    assert(slice[slice.len() - 1] == 60);\n}\n\nfn dynamic_slice_merge_push_then_pop(mut slice: [Field], x: u32, y: u32) {\n    if x != y {\n        slice[x] = 5;\n        slice = slice.push_back(y as Field);\n        slice = slice.push_back(x as Field);\n        assert(slice.len() == 7);\n\n        let (popped_slice, elem) = slice.pop_back();\n        assert(slice.len() == 7);\n        assert(elem == x as Field);\n        slice = popped_slice;\n    } else {\n        slice = slice.push_back(x as Field);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 7);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    let (slice, elem) = slice.pop_back();\n    assert(elem == 30);\n\n    let (_, elem) = slice.pop_back();\n    assert(elem == y as Field);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
