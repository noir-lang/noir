---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _0",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U32) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 13 }, Call { location: 14 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 1869 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(4), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Relative(3) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(1) }, JumpIf { condition: Relative(5), location: 20 }, Call { location: 1875 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Relative(6), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, BinaryIntOp { destination: Relative(7), op: LessThanEquals, bit_size: U32, lhs: Relative(5), rhs: Relative(1) }, JumpIf { condition: Relative(7), location: 25 }, Call { location: 1875 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(9) }, Mov { destination: Relative(1), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(8) }, IndirectConst { destination_pointer: Relative(1), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(7) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(7) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, Mov { destination: Relative(7), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Store { destination_pointer: Relative(7), source: Relative(8) }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(1) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 5 }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 47 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, JumpIf { condition: Relative(10), location: 1845 }, Jump { location: 50 }, Load { destination: Relative(2), source_pointer: Relative(7) }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, JumpIf { condition: Relative(10), location: 55 }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(11) } }, Load { destination: Relative(2), source_pointer: Relative(9) }, Load { destination: Relative(10), source_pointer: Relative(2) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(11), rhs: Relative(10) }, Not { destination: Relative(12), source: Relative(12), bit_size: U1 }, JumpIf { condition: Relative(12), location: 62 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(10) }, Mov { destination: Relative(10), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, Const { destination: Relative(13), bit_size: Integer(U1), value: 1 }, JumpIf { condition: Relative(12), location: 70 }, Call { location: 1881 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(15) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(4) }, Load { destination: Relative(12), source_pointer: Relative(15) }, Const { destination: Relative(14), bit_size: Field, value: 4 }, BinaryFieldOp { destination: Relative(15), op: Equals, lhs: Relative(12), rhs: Relative(14) }, JumpIf { condition: Relative(15), location: 79 }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(16) } }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(6), rhs: Relative(1) }, JumpIf { condition: Relative(12), location: 82 }, Call { location: 1881 }, Const { destination: Relative(16), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(16) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(6) }, Load { destination: Relative(12), source_pointer: Relative(16) }, Const { destination: Relative(15), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Relative(16), op: Equals, lhs: Relative(12), rhs: Relative(15) }, JumpIf { condition: Relative(16), location: 91 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(17) } }, Const { destination: Relative(12), bit_size: Field, value: 0 }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1884 }, Mov { destination: Relative(16), source: Direct(32772) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(18) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(6) }, Store { destination_pointer: Relative(18), source: Relative(12) }, Store { destination_pointer: Relative(10), source: Relative(16) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(18) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(4) }, Load { destination: Relative(2), source_pointer: Relative(18) }, BinaryFieldOp { destination: Relative(17), op: Equals, lhs: Relative(2), rhs: Relative(14) }, JumpIf { condition: Relative(17), location: 108 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(18) } }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(5) }, Load { destination: Relative(2), source_pointer: Relative(17) }, BinaryFieldOp { destination: Relative(17), op: Equals, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(17), location: 114 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(18) } }, Const { destination: Relative(2), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(17), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(2) }, Const { destination: Relative(18), bit_size: Field, value: 2 }, JumpIf { condition: Relative(17), location: 128 }, Jump { location: 119 }, Mov { destination: Direct(32771), source: Relative(16) }, Call { location: 1884 }, Mov { destination: Relative(11), source: Direct(32772) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Store { destination_pointer: Relative(20), source: Relative(12) }, Store { destination_pointer: Relative(10), source: Relative(11) }, Jump { location: 151 }, Mov { destination: Direct(32771), source: Relative(16) }, Call { location: 1884 }, Mov { destination: Relative(11), source: Direct(32772) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Store { destination_pointer: Relative(20), source: Relative(18) }, BinaryIntOp { destination: Relative(16), op: Sub, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, BinaryIntOp { destination: Relative(19), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, JumpIf { condition: Relative(19), location: 139 }, Call { location: 1875 }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(16), rhs: Relative(1) }, JumpIf { condition: Relative(19), location: 142 }, Call { location: 1881 }, Mov { destination: Direct(32771), source: Relative(11) }, Call { location: 1884 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(16) }, Store { destination_pointer: Relative(21), source: Relative(18) }, Store { destination_pointer: Relative(10), source: Relative(19) }, Jump { location: 151 }, Load { destination: Relative(11), source_pointer: Relative(10) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(10) }, Load { destination: Relative(16), source_pointer: Relative(19) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(16), rhs: Relative(18) }, JumpIf { condition: Relative(19), location: 159 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Const { destination: Relative(16), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(16) }, Load { destination: Relative(19), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(11), op: Equals, lhs: Relative(19), rhs: Relative(18) }, JumpIf { condition: Relative(11), location: 166 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Load { destination: Relative(11), source_pointer: Relative(7) }, Load { destination: Relative(19), source_pointer: Relative(9) }, Load { destination: Relative(20), source_pointer: Relative(19) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(22), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(20) }, Not { destination: Relative(22), source: Relative(22), bit_size: U1 }, JumpIf { condition: Relative(22), location: 174 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(20), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(20) }, Mov { destination: Relative(20), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(22), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(11) }, JumpIf { condition: Relative(22), location: 181 }, Call { location: 1881 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(4) }, Load { destination: Relative(22), source_pointer: Relative(24) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(22), rhs: Relative(14) }, JumpIf { condition: Relative(23), location: 189 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, BinaryIntOp { destination: Relative(22), op: LessThan, bit_size: U32, lhs: Relative(6), rhs: Relative(11) }, JumpIf { condition: Relative(22), location: 192 }, Call { location: 1881 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(6) }, Load { destination: Relative(22), source_pointer: Relative(24) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(22), rhs: Relative(15) }, JumpIf { condition: Relative(23), location: 200 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 1884 }, Mov { destination: Relative(22), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(6) }, Store { destination_pointer: Relative(24), source: Relative(12) }, Store { destination_pointer: Relative(20), source: Relative(22) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(4) }, Load { destination: Relative(19), source_pointer: Relative(24) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(19), rhs: Relative(14) }, JumpIf { condition: Relative(23), location: 216 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(3), rhs: Relative(11) }, JumpIf { condition: Relative(19), location: 219 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(5) }, Load { destination: Relative(19), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(19), rhs: Relative(12) }, JumpIf { condition: Relative(23), location: 225 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(4) }, JumpIf { condition: Relative(19), location: 237 }, Jump { location: 228 }, Mov { destination: Direct(32771), source: Relative(22) }, Call { location: 1884 }, Mov { destination: Relative(21), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(4) }, Store { destination_pointer: Relative(24), source: Relative(12) }, Store { destination_pointer: Relative(20), source: Relative(21) }, Jump { location: 260 }, Mov { destination: Direct(32771), source: Relative(22) }, Call { location: 1884 }, Mov { destination: Relative(21), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(4) }, Store { destination_pointer: Relative(24), source: Relative(18) }, BinaryIntOp { destination: Relative(22), op: Sub, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, BinaryIntOp { destination: Relative(23), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, JumpIf { condition: Relative(23), location: 248 }, Call { location: 1875 }, BinaryIntOp { destination: Relative(23), op: LessThan, bit_size: U32, lhs: Relative(22), rhs: Relative(11) }, JumpIf { condition: Relative(23), location: 251 }, Call { location: 1881 }, Mov { destination: Direct(32771), source: Relative(21) }, Call { location: 1884 }, Mov { destination: Relative(23), source: Direct(32772) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(25) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(22) }, Store { destination_pointer: Relative(25), source: Relative(18) }, Store { destination_pointer: Relative(20), source: Relative(23) }, Jump { location: 260 }, Load { destination: Relative(21), source_pointer: Relative(20) }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(11) }, JumpIf { condition: Relative(20), location: 264 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(16) }, Load { destination: Relative(11), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(20), op: Equals, lhs: Relative(11), rhs: Relative(12) }, JumpIf { condition: Relative(20), location: 270 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Load { destination: Relative(11), source_pointer: Relative(7) }, Load { destination: Relative(20), source_pointer: Relative(9) }, Load { destination: Relative(21), source_pointer: Relative(20) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(23), op: Equals, bit_size: U32, lhs: Relative(22), rhs: Relative(21) }, Not { destination: Relative(23), source: Relative(23), bit_size: U1 }, JumpIf { condition: Relative(23), location: 278 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(21) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Mov { destination: Relative(23), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(24), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(11) }, JumpIf { condition: Relative(24), location: 287 }, Call { location: 1881 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(4) }, Load { destination: Relative(24), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(25), op: Equals, lhs: Relative(24), rhs: Relative(14) }, JumpIf { condition: Relative(25), location: 295 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, BinaryIntOp { destination: Relative(24), op: LessThan, bit_size: U32, lhs: Relative(6), rhs: Relative(11) }, JumpIf { condition: Relative(24), location: 298 }, Call { location: 1881 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(6) }, Load { destination: Relative(24), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(25), op: Equals, lhs: Relative(24), rhs: Relative(15) }, JumpIf { condition: Relative(25), location: 306 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Mov { destination: Direct(32771), source: Relative(20) }, Call { location: 1884 }, Mov { destination: Relative(24), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(6) }, Store { destination_pointer: Relative(26), source: Relative(12) }, Store { destination_pointer: Relative(21), source: Relative(11) }, Store { destination_pointer: Relative(23), source: Relative(24) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(4) }, Load { destination: Relative(20), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(25), op: Equals, lhs: Relative(20), rhs: Relative(14) }, JumpIf { condition: Relative(25), location: 323 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(3), rhs: Relative(11) }, JumpIf { condition: Relative(20), location: 326 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(5) }, Load { destination: Relative(20), source_pointer: Relative(25) }, BinaryFieldOp { destination: Relative(25), op: Equals, lhs: Relative(20), rhs: Relative(12) }, JumpIf { condition: Relative(25), location: 332 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Const { destination: Relative(20), bit_size: Field, value: 10 }, Const { destination: Relative(25), bit_size: Field, value: 15 }, Const { destination: Relative(26), bit_size: Field, value: 22 }, JumpIf { condition: Relative(17), location: 347 }, Jump { location: 337 }, Mov { destination: Direct(32771), source: Relative(24) }, Call { location: 1884 }, Mov { destination: Relative(22), source: Direct(32772) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(4) }, Store { destination_pointer: Relative(28), source: Relative(12) }, Store { destination_pointer: Relative(21), source: Relative(11) }, Store { destination_pointer: Relative(23), source: Relative(22) }, Jump { location: 414 }, Mov { destination: Direct(32771), source: Relative(24) }, Call { location: 1884 }, Mov { destination: Relative(22), source: Direct(32772) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(4) }, Store { destination_pointer: Relative(28), source: Relative(18) }, Store { destination_pointer: Relative(21), source: Relative(11) }, Store { destination_pointer: Relative(23), source: Relative(22) }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(6), rhs: Relative(3) }, JumpIf { condition: Relative(24), location: 369 }, Jump { location: 359 }, Mov { destination: Direct(32771), source: Relative(22) }, Call { location: 1884 }, Mov { destination: Relative(24), source: Direct(32772) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(4) }, Store { destination_pointer: Relative(28), source: Relative(26) }, Store { destination_pointer: Relative(21), source: Relative(11) }, Store { destination_pointer: Relative(23), source: Relative(24) }, Jump { location: 414 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, JumpIf { condition: Relative(24), location: 1841 }, Jump { location: 372 }, Mov { destination: Direct(32771), source: Relative(22) }, Call { location: 1884 }, Mov { destination: Relative(24), source: Direct(32772) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(4) }, Store { destination_pointer: Relative(28), source: Relative(20) }, Load { destination: Relative(22), source_pointer: Relative(24) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(27), rhs: Relative(22) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 385 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(22), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(22) }, BinaryIntOp { destination: Relative(22), op: Add, bit_size: U32, lhs: Relative(11), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(11) }, Mov { destination: Direct(32772), source: Relative(24) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(28), source: Direct(32774) }, Mov { destination: Relative(29), source: Direct(32775) }, Store { destination_pointer: Relative(29), source: Relative(25) }, Store { destination_pointer: Relative(21), source: Relative(22) }, Store { destination_pointer: Relative(23), source: Relative(28) }, BinaryIntOp { destination: Relative(11), op: Equals, bit_size: U32, lhs: Relative(22), rhs: Relative(10) }, JumpIf { condition: Relative(11), location: 401 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Jump { location: 402 }, Load { destination: Relative(11), source_pointer: Relative(21) }, Load { destination: Relative(22), source_pointer: Relative(23) }, BinaryIntOp { destination: Relative(24), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(11) }, JumpIf { condition: Relative(24), location: 407 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(16) }, Load { destination: Relative(11), source_pointer: Relative(24) }, BinaryFieldOp { destination: Relative(22), op: Equals, lhs: Relative(11), rhs: Relative(20) }, JumpIf { condition: Relative(22), location: 413 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Jump { location: 414 }, Load { destination: Relative(11), source_pointer: Relative(21) }, Load { destination: Relative(22), source_pointer: Relative(23) }, BinaryIntOp { destination: Relative(24), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(11) }, JumpIf { condition: Relative(24), location: 419 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(16) }, Load { destination: Relative(24), source_pointer: Relative(27) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(24), rhs: Relative(20) }, JumpIf { condition: Relative(27), location: 425 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(11), rhs: Relative(10) }, JumpIf { condition: Relative(24), location: 429 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, Const { destination: Relative(11), bit_size: Integer(U32), value: 8 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(22), rhs: Relative(11) }, Load { destination: Relative(24), source_pointer: Relative(27) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(24), rhs: Relative(25) }, JumpIf { condition: Relative(27), location: 436 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, Load { destination: Relative(24), source_pointer: Relative(22) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(27), rhs: Relative(24) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 442 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(22), source: Relative(24) }, Const { destination: Relative(24), bit_size: Field, value: 20 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Mov { destination: Direct(32772), source: Relative(22) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(29), source: Direct(32774) }, Mov { destination: Relative(30), source: Direct(32775) }, Store { destination_pointer: Relative(30), source: Relative(24) }, Store { destination_pointer: Relative(21), source: Relative(28) }, Store { destination_pointer: Relative(23), source: Relative(29) }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(16) }, JumpIf { condition: Relative(21), location: 459 }, Const { destination: Relative(22), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(22) } }, Const { destination: Relative(21), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(21) }, Load { destination: Relative(22), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(22), rhs: Relative(24) }, JumpIf { condition: Relative(23), location: 466 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, Load { destination: Relative(22), source_pointer: Relative(7) }, Load { destination: Relative(23), source_pointer: Relative(9) }, Load { destination: Relative(28), source_pointer: Relative(23) }, Const { destination: Relative(29), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(29), rhs: Relative(28) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 474 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(3) }, BinaryIntOp { destination: Relative(30), op: LessThanEquals, bit_size: U32, lhs: Relative(6), rhs: Relative(28) }, JumpIf { condition: Relative(30), location: 480 }, Call { location: 1966 }, Mov { destination: Relative(30), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(31), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(22) }, JumpIf { condition: Relative(31), location: 485 }, Call { location: 1881 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(33) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(4) }, Load { destination: Relative(31), source_pointer: Relative(33) }, BinaryFieldOp { destination: Relative(32), op: Equals, lhs: Relative(31), rhs: Relative(14) }, JumpIf { condition: Relative(32), location: 493 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, BinaryIntOp { destination: Relative(31), op: LessThan, bit_size: U32, lhs: Relative(28), rhs: Relative(22) }, JumpIf { condition: Relative(31), location: 496 }, Call { location: 1881 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(33) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(28) }, Load { destination: Relative(31), source_pointer: Relative(33) }, BinaryFieldOp { destination: Relative(32), op: Equals, lhs: Relative(31), rhs: Relative(18) }, JumpIf { condition: Relative(32), location: 504 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, Mov { destination: Direct(32771), source: Relative(23) }, Call { location: 1884 }, Mov { destination: Relative(31), source: Direct(32772) }, Const { destination: Relative(33), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(31), rhs: Relative(33) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(28) }, Store { destination_pointer: Relative(33), source: Relative(12) }, Store { destination_pointer: Relative(30), source: Relative(31) }, Const { destination: Relative(33), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(31), rhs: Relative(33) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(4) }, Load { destination: Relative(23), source_pointer: Relative(33) }, BinaryFieldOp { destination: Relative(32), op: Equals, lhs: Relative(23), rhs: Relative(14) }, JumpIf { condition: Relative(32), location: 520 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, Const { destination: Relative(23), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Relative(32), op: LessThan, bit_size: U32, lhs: Relative(23), rhs: Relative(22) }, JumpIf { condition: Relative(32), location: 524 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(31), rhs: Relative(1) }, Load { destination: Relative(32), source_pointer: Relative(33) }, BinaryFieldOp { destination: Relative(33), op: Equals, lhs: Relative(32), rhs: Relative(12) }, JumpIf { condition: Relative(33), location: 530 }, Const { destination: Relative(34), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(34) } }, BinaryIntOp { destination: Relative(32), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(22) }, Const { destination: Relative(22), bit_size: Field, value: 5 }, JumpIf { condition: Relative(17), location: 543 }, Jump { location: 534 }, Mov { destination: Direct(32771), source: Relative(31) }, Call { location: 1884 }, Mov { destination: Relative(26), source: Direct(32772) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(4) }, Store { destination_pointer: Relative(28), source: Relative(12) }, Store { destination_pointer: Relative(30), source: Relative(26) }, Jump { location: 585 }, Mov { destination: Direct(32771), source: Relative(31) }, Call { location: 1884 }, Mov { destination: Relative(27), source: Direct(32772) }, Const { destination: Relative(33), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(33) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(4) }, Store { destination_pointer: Relative(33), source: Relative(18) }, Store { destination_pointer: Relative(30), source: Relative(27) }, BinaryIntOp { destination: Relative(29), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(3) }, JumpIf { condition: Relative(29), location: 576 }, Jump { location: 554 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(26), location: 557 }, Jump { location: 566 }, Mov { destination: Direct(32771), source: Relative(27) }, Call { location: 1884 }, Mov { destination: Relative(26), source: Direct(32772) }, Const { destination: Relative(29), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(29) }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(28), rhs: Relative(4) }, Store { destination_pointer: Relative(29), source: Relative(22) }, Store { destination_pointer: Relative(30), source: Relative(26) }, Jump { location: 566 }, Load { destination: Relative(26), source_pointer: Relative(30) }, JumpIf { condition: Relative(32), location: 569 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(16) }, Load { destination: Relative(27), source_pointer: Relative(28) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(27), rhs: Relative(22) }, JumpIf { condition: Relative(26), location: 575 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, Jump { location: 585 }, Mov { destination: Direct(32771), source: Relative(27) }, Call { location: 1884 }, Mov { destination: Relative(28), source: Direct(32772) }, Const { destination: Relative(31), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(28), rhs: Relative(31) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(4) }, Store { destination_pointer: Relative(31), source: Relative(26) }, Store { destination_pointer: Relative(30), source: Relative(28) }, Jump { location: 585 }, Load { destination: Relative(26), source_pointer: Relative(30) }, JumpIf { condition: Relative(32), location: 588 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(16) }, Load { destination: Relative(27), source_pointer: Relative(28) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(27), rhs: Relative(22) }, JumpIf { condition: Relative(26), location: 594 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, Load { destination: Relative(26), source_pointer: Relative(7) }, Load { destination: Relative(27), source_pointer: Relative(9) }, Load { destination: Relative(28), source_pointer: Relative(27) }, Const { destination: Relative(29), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(29), rhs: Relative(28) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 602 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(28) }, Mov { destination: Relative(28), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(27) }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(26) }, JumpIf { condition: Relative(17), location: 621 }, Jump { location: 610 }, JumpIf { condition: Relative(30), location: 612 }, Call { location: 1881 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(31) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(4) }, Load { destination: Relative(29), source_pointer: Relative(31) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(29), rhs: Relative(12) }, JumpIf { condition: Relative(27), location: 620 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(30) } }, Jump { location: 640 }, JumpIf { condition: Relative(30), location: 623 }, Call { location: 1881 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(31) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(4) }, Load { destination: Relative(29), source_pointer: Relative(31) }, BinaryFieldOp { destination: Relative(30), op: Equals, lhs: Relative(29), rhs: Relative(14) }, JumpIf { condition: Relative(30), location: 631 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, Mov { destination: Direct(32771), source: Relative(27) }, Call { location: 1884 }, Mov { destination: Relative(29), source: Direct(32772) }, Const { destination: Relative(31), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(31) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(4) }, Store { destination_pointer: Relative(31), source: Relative(18) }, Store { destination_pointer: Relative(28), source: Relative(29) }, Jump { location: 640 }, Load { destination: Relative(27), source_pointer: Relative(28) }, BinaryIntOp { destination: Relative(28), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(26) }, JumpIf { condition: Relative(28), location: 644 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(16) }, Load { destination: Relative(26), source_pointer: Relative(28) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(26), rhs: Relative(18) }, JumpIf { condition: Relative(27), location: 650 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, Const { destination: Relative(26), bit_size: Field, value: 3 }, Mov { destination: Relative(27), source: Direct(1) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(28) }, IndirectConst { destination_pointer: Relative(27), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Mov { destination: Relative(29), source: Relative(28) }, Store { destination_pointer: Relative(29), source: Relative(12) }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(15) }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(18) }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(26) }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(14) }, Mov { destination: Relative(26), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(27) }, JumpIf { condition: Relative(17), location: 679 }, Jump { location: 671 }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(4) }, Load { destination: Relative(28), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(28), rhs: Relative(12) }, JumpIf { condition: Relative(27), location: 678 }, Const { destination: Relative(29), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(29) } }, Jump { location: 695 }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(4) }, Load { destination: Relative(28), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(29), op: Equals, lhs: Relative(28), rhs: Relative(14) }, JumpIf { condition: Relative(29), location: 686 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(30) } }, Mov { destination: Direct(32771), source: Relative(27) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 6 }, Call { location: 1969 }, Mov { destination: Relative(28), source: Direct(32773) }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(4) }, Store { destination_pointer: Relative(30), source: Relative(18) }, Store { destination_pointer: Relative(26), source: Relative(28) }, Jump { location: 695 }, Load { destination: Relative(27), source_pointer: Relative(26) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(1) }, Load { destination: Relative(26), source_pointer: Relative(28) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(26), rhs: Relative(18) }, JumpIf { condition: Relative(27), location: 702 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, Load { destination: Relative(26), source_pointer: Relative(7) }, Load { destination: Relative(27), source_pointer: Relative(9) }, Load { destination: Relative(28), source_pointer: Relative(27) }, Const { destination: Relative(29), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(29), rhs: Relative(28) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 710 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(28) }, Mov { destination: Relative(28), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(28), source: Relative(27) }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(26) }, JumpIf { condition: Relative(19), location: 742 }, Jump { location: 718 }, JumpIf { condition: Relative(30), location: 720 }, Call { location: 1881 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(31) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(4) }, Load { destination: Relative(29), source_pointer: Relative(31) }, BinaryFieldOp { destination: Relative(30), op: Equals, lhs: Relative(29), rhs: Relative(14) }, JumpIf { condition: Relative(30), location: 728 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, Const { destination: Relative(31), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(31) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(4) }, Load { destination: Relative(29), source_pointer: Relative(31) }, BinaryFieldOp { destination: Relative(30), op: Sub, lhs: Relative(29), rhs: Relative(18) }, Mov { destination: Direct(32771), source: Relative(27) }, Call { location: 1884 }, Mov { destination: Relative(29), source: Direct(32772) }, Const { destination: Relative(32), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(32) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(31), rhs: Relative(4) }, Store { destination_pointer: Relative(32), source: Relative(30) }, Store { destination_pointer: Relative(28), source: Relative(29) }, Jump { location: 753 }, JumpIf { condition: Relative(30), location: 744 }, Call { location: 1881 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(31) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(4) }, Load { destination: Relative(29), source_pointer: Relative(31) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(29), rhs: Relative(12) }, JumpIf { condition: Relative(27), location: 752 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(30) } }, Jump { location: 753 }, Load { destination: Relative(27), source_pointer: Relative(28) }, BinaryIntOp { destination: Relative(28), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(26) }, JumpIf { condition: Relative(28), location: 757 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(16) }, Load { destination: Relative(5), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(5), rhs: Relative(18) }, JumpIf { condition: Relative(26), location: 763 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, Load { destination: Relative(5), source_pointer: Relative(7) }, Load { destination: Relative(26), source_pointer: Relative(9) }, Load { destination: Relative(27), source_pointer: Relative(26) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(29), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(27) }, Not { destination: Relative(29), source: Relative(29), bit_size: U1 }, JumpIf { condition: Relative(29), location: 771 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(27), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(27) }, Mov { destination: Relative(27), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(27), source: Relative(5) }, Mov { destination: Relative(29), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(26) }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, Const { destination: Relative(31), bit_size: Field, value: 30 }, JumpIf { condition: Relative(17), location: 812 }, Jump { location: 783 }, JumpIf { condition: Relative(30), location: 785 }, Call { location: 1881 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(15) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, Load { destination: Relative(1), source_pointer: Relative(15) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(1), rhs: Relative(12) }, JumpIf { condition: Relative(3), location: 793 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(15) } }, Load { destination: Relative(1), source_pointer: Relative(26) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(1) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 799 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(5) }, Mov { destination: Direct(32772), source: Relative(26) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(17), source: Direct(32775) }, Store { destination_pointer: Relative(17), source: Relative(24) }, Store { destination_pointer: Relative(27), source: Relative(1) }, Store { destination_pointer: Relative(29), source: Relative(15) }, Jump { location: 1095 }, JumpIf { condition: Relative(30), location: 814 }, Call { location: 1881 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(28), rhs: Relative(4) }, Load { destination: Relative(17), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(28), op: Equals, lhs: Relative(17), rhs: Relative(14) }, JumpIf { condition: Relative(28), location: 822 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(30) } }, Mov { destination: Direct(32771), source: Relative(26) }, Call { location: 1884 }, Mov { destination: Relative(17), source: Direct(32772) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(28), rhs: Relative(4) }, Store { destination_pointer: Relative(30), source: Relative(18) }, Load { destination: Relative(26), source_pointer: Relative(17) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(26) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 835 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(5) }, Mov { destination: Direct(32772), source: Relative(17) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(30), source: Direct(32774) }, Mov { destination: Relative(32), source: Direct(32775) }, Store { destination_pointer: Relative(32), source: Relative(20) }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(26) }, JumpIf { condition: Relative(5), location: 848 }, Call { location: 1881 }, Mov { destination: Direct(32771), source: Relative(30) }, Call { location: 1884 }, Mov { destination: Relative(5), source: Direct(32772) }, Const { destination: Relative(32), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(32) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(4) }, Store { destination_pointer: Relative(32), source: Relative(20) }, BinaryIntOp { destination: Relative(17), op: Sub, bit_size: U32, lhs: Relative(26), rhs: Relative(3) }, BinaryIntOp { destination: Relative(30), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(26) }, JumpIf { condition: Relative(30), location: 859 }, Call { location: 1875 }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(17), rhs: Relative(26) }, JumpIf { condition: Relative(30), location: 862 }, Call { location: 1881 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(33) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(17) }, Load { destination: Relative(30), source_pointer: Relative(33) }, BinaryFieldOp { destination: Relative(17), op: Equals, lhs: Relative(30), rhs: Relative(20) }, JumpIf { condition: Relative(17), location: 870 }, Const { destination: Relative(32), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(32) } }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(10) }, JumpIf { condition: Relative(17), location: 874 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(30) } }, Mov { destination: Direct(32771), source: Relative(5) }, Call { location: 1884 }, Mov { destination: Relative(17), source: Direct(32772) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(4) }, Store { destination_pointer: Relative(30), source: Relative(24) }, Mov { destination: Direct(32771), source: Relative(17) }, Call { location: 1884 }, Mov { destination: Relative(5), source: Direct(32772) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(4) }, Store { destination_pointer: Relative(30), source: Relative(31) }, Load { destination: Relative(17), source_pointer: Relative(5) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(17) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 894 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(17) }, Const { destination: Relative(17), bit_size: Field, value: 11 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Mov { destination: Direct(32772), source: Relative(5) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1991 }, Mov { destination: Relative(32), source: Direct(32774) }, Mov { destination: Relative(33), source: Direct(32775) }, Store { destination_pointer: Relative(33), source: Relative(17) }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(30) }, JumpIf { condition: Relative(5), location: 908 }, Call { location: 1881 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(34), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(5) }, Load { destination: Relative(33), source_pointer: Relative(34) }, BinaryFieldOp { destination: Relative(34), op: Equals, lhs: Relative(33), rhs: Relative(17) }, JumpIf { condition: Relative(34), location: 915 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(35) } }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(30), rhs: Relative(16) }, JumpIf { condition: Relative(17), location: 919 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(11) }, Load { destination: Relative(17), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(30), op: Equals, lhs: Relative(17), rhs: Relative(31) }, JumpIf { condition: Relative(30), location: 925 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, Load { destination: Relative(17), source_pointer: Relative(32) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(33), op: Equals, bit_size: U32, lhs: Relative(30), rhs: Relative(17) }, Not { destination: Relative(33), source: Relative(33), bit_size: U1 }, JumpIf { condition: Relative(33), location: 931 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(32), source: Relative(17) }, Const { destination: Relative(17), bit_size: Field, value: 12 }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(16), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(16) }, Mov { destination: Direct(32772), source: Relative(32) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1991 }, Mov { destination: Relative(34), source: Direct(32774) }, Mov { destination: Relative(35), source: Direct(32775) }, Store { destination_pointer: Relative(35), source: Relative(17) }, BinaryIntOp { destination: Relative(32), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(33) }, JumpIf { condition: Relative(32), location: 945 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(35), op: Add, bit_size: U32, lhs: Relative(34), rhs: Relative(5) }, Load { destination: Relative(32), source_pointer: Relative(35) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(32), rhs: Relative(17) }, JumpIf { condition: Relative(5), location: 951 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(35) } }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(33), rhs: Relative(11) }, JumpIf { condition: Relative(5), location: 955 }, Const { destination: Relative(32), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(32) } }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(34), rhs: Relative(21) }, Load { destination: Relative(5), source_pointer: Relative(32) }, BinaryFieldOp { destination: Relative(32), op: Equals, lhs: Relative(5), rhs: Relative(31) }, JumpIf { condition: Relative(32), location: 961 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, Load { destination: Relative(5), source_pointer: Relative(34) }, Const { destination: Relative(32), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(33), op: Equals, bit_size: U32, lhs: Relative(32), rhs: Relative(5) }, Not { destination: Relative(33), source: Relative(33), bit_size: U1 }, JumpIf { condition: Relative(33), location: 967 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(34), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Sub, bit_size: U32, lhs: Relative(11), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(11) }, Mov { destination: Direct(32772), source: Relative(34) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 2046 }, Mov { destination: Relative(33), source: Direct(32774) }, Mov { destination: Relative(36), source: Direct(32775) }, Load { destination: Relative(35), source_pointer: Relative(36) }, Load { destination: Relative(34), source_pointer: Relative(33) }, Const { destination: Relative(36), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(37), op: Equals, bit_size: U32, lhs: Relative(36), rhs: Relative(34) }, Not { destination: Relative(37), source: Relative(37), bit_size: U1 }, JumpIf { condition: Relative(37), location: 983 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(34), op: Add, bit_size: U32, lhs: Relative(34), rhs: Direct(2) }, Store { destination_pointer: Relative(33), source: Relative(34) }, BinaryFieldOp { destination: Relative(34), op: Equals, lhs: Relative(35), rhs: Relative(20) }, JumpIf { condition: Relative(34), location: 989 }, Const { destination: Relative(37), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(37) } }, BinaryIntOp { destination: Relative(34), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(16) }, JumpIf { condition: Relative(34), location: 993 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(35) } }, BinaryIntOp { destination: Relative(5), op: Sub, bit_size: U32, lhs: Relative(16), rhs: Direct(2) }, Const { destination: Relative(38), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(37), op: Add, bit_size: U32, lhs: Relative(33), rhs: Relative(38) }, Load { destination: Relative(34), source_pointer: Relative(37) }, Mov { destination: Direct(32771), source: Relative(16) }, Mov { destination: Direct(32772), source: Relative(33) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 2082 }, Mov { destination: Relative(35), source: Direct(32774) }, BinaryFieldOp { destination: Relative(33), op: Equals, lhs: Relative(34), rhs: Relative(17) }, JumpIf { condition: Relative(33), location: 1006 }, Const { destination: Relative(37), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(37) } }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(10) }, JumpIf { condition: Relative(17), location: 1010 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, BinaryIntOp { destination: Relative(5), op: Sub, bit_size: U32, lhs: Relative(4), rhs: Relative(23) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U32, lhs: Relative(23), rhs: Relative(4) }, JumpIf { condition: Relative(17), location: 1014 }, Call { location: 1875 }, BinaryIntOp { destination: Relative(17), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(16) }, JumpIf { condition: Relative(17), location: 1017 }, Call { location: 1881 }, Const { destination: Relative(34), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(34), op: Mul, bit_size: U32, lhs: Relative(34), rhs: Relative(5) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(35) }, Mov { destination: Direct(32772), source: Relative(34) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 2124 }, Mov { destination: Relative(33), source: Direct(32774) }, Mov { destination: Relative(37), source: Direct(32775) }, Store { destination_pointer: Relative(37), source: Relative(24) }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(23), rhs: Relative(17) }, JumpIf { condition: Relative(5), location: 1030 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(33), rhs: Relative(1) }, Load { destination: Relative(5), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(5), rhs: Relative(24) }, JumpIf { condition: Relative(1), location: 1036 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(23) } }, BinaryIntOp { destination: Relative(1), op: LessThan, bit_size: U32, lhs: Relative(10), rhs: Relative(17) }, JumpIf { condition: Relative(1), location: 1039 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(33), rhs: Relative(21) }, Load { destination: Relative(1), source_pointer: Relative(5) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(1), rhs: Relative(31) }, JumpIf { condition: Relative(5), location: 1045 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(23) } }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(16) }, JumpIf { condition: Relative(1), location: 1049 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, Load { destination: Relative(1), source_pointer: Relative(33) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(1) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 1055 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(33), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U32, lhs: Relative(4), rhs: Relative(3) }, BinaryIntOp { destination: Relative(17), op: LessThanEquals, bit_size: U32, lhs: Relative(3), rhs: Relative(4) }, JumpIf { condition: Relative(17), location: 1061 }, Call { location: 1875 }, BinaryIntOp { destination: Relative(3), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Relative(16) }, JumpIf { condition: Relative(3), location: 1064 }, Call { location: 1881 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(23), op: Mul, bit_size: U32, lhs: Relative(23), rhs: Relative(1) }, BinaryIntOp { destination: Relative(3), op: Sub, bit_size: U32, lhs: Relative(16), rhs: Direct(2) }, Const { destination: Relative(37), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(35), op: Add, bit_size: U32, lhs: Relative(33), rhs: Relative(37) }, BinaryIntOp { destination: Relative(35), op: Add, bit_size: U32, lhs: Relative(35), rhs: Relative(23) }, Load { destination: Relative(34), source_pointer: Relative(35) }, Mov { destination: Direct(32771), source: Relative(33) }, Mov { destination: Direct(32772), source: Relative(23) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 2193 }, Mov { destination: Relative(17), source: Direct(32774) }, Load { destination: Relative(1), source_pointer: Relative(17) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(33), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(1) }, Not { destination: Relative(33), source: Relative(33), bit_size: U1 }, JumpIf { condition: Relative(33), location: 1082 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(1) }, Store { destination_pointer: Relative(27), source: Relative(3) }, Store { destination_pointer: Relative(29), source: Relative(17) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(34), rhs: Relative(15) }, JumpIf { condition: Relative(1), location: 1090 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(17) } }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(10) }, JumpIf { condition: Relative(1), location: 1094 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(15) } }, Jump { location: 1095 }, Load { destination: Relative(1), source_pointer: Relative(27) }, Load { destination: Relative(3), source_pointer: Relative(29) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(10) }, JumpIf { condition: Relative(5), location: 1101 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(15) } }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(11) }, Load { destination: Relative(1), source_pointer: Relative(5) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(1), rhs: Relative(31) }, JumpIf { condition: Relative(3), location: 1107 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, Load { destination: Relative(1), source_pointer: Relative(7) }, Load { destination: Relative(3), source_pointer: Relative(9) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(15), rhs: Relative(5) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 1115 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Mov { destination: Relative(5), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Mov { destination: Relative(17), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(3) }, BinaryIntOp { destination: Relative(23), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, JumpIf { condition: Relative(19), location: 1167 }, Jump { location: 1126 }, JumpIf { condition: Relative(23), location: 1128 }, Call { location: 1881 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(4) }, Load { destination: Relative(15), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(15), rhs: Relative(14) }, JumpIf { condition: Relative(23), location: 1136 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(4) }, Load { destination: Relative(15), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(23), op: Sub, lhs: Relative(15), rhs: Relative(18) }, Mov { destination: Direct(32771), source: Relative(3) }, Call { location: 1884 }, Mov { destination: Relative(15), source: Direct(32772) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(27) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(4) }, Store { destination_pointer: Relative(27), source: Relative(23) }, Load { destination: Relative(3), source_pointer: Relative(15) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(3) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 1154 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(15) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(26), source: Direct(32774) }, Mov { destination: Relative(27), source: Direct(32775) }, Store { destination_pointer: Relative(27), source: Relative(20) }, Store { destination_pointer: Relative(5), source: Relative(3) }, Store { destination_pointer: Relative(17), source: Relative(26) }, Jump { location: 1187 }, JumpIf { condition: Relative(23), location: 1169 }, Call { location: 1881 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(4) }, Load { destination: Relative(15), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(15), rhs: Relative(12) }, JumpIf { condition: Relative(23), location: 1177 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Mov { destination: Direct(32771), source: Relative(3) }, Call { location: 1884 }, Mov { destination: Relative(15), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(4) }, Store { destination_pointer: Relative(26), source: Relative(18) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Store { destination_pointer: Relative(17), source: Relative(15) }, Jump { location: 1187 }, Load { destination: Relative(1), source_pointer: Relative(5) }, Load { destination: Relative(3), source_pointer: Relative(17) }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(10) }, JumpIf { condition: Relative(15), location: 1193 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(23) } }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(11) }, Load { destination: Relative(1), source_pointer: Relative(15) }, BinaryFieldOp { destination: Relative(15), op: Equals, lhs: Relative(1), rhs: Relative(20) }, JumpIf { condition: Relative(15), location: 1199 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(23) } }, Load { destination: Relative(1), source_pointer: Relative(3) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(23), op: Equals, bit_size: U32, lhs: Relative(15), rhs: Relative(1) }, Not { destination: Relative(23), source: Relative(23), bit_size: U1 }, JumpIf { condition: Relative(23), location: 1205 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Mov { destination: Direct(32772), source: Relative(3) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(23), source: Direct(32774) }, Mov { destination: Relative(26), source: Direct(32775) }, Store { destination_pointer: Relative(26), source: Relative(24) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Store { destination_pointer: Relative(17), source: Relative(23) }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(16) }, JumpIf { condition: Relative(3), location: 1221 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Load { destination: Relative(1), source_pointer: Relative(3) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(1), rhs: Relative(24) }, JumpIf { condition: Relative(3), location: 1227 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, Load { destination: Relative(1), source_pointer: Relative(7) }, Load { destination: Relative(3), source_pointer: Relative(9) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(23), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(5) }, Not { destination: Relative(23), source: Relative(23), bit_size: U1 }, JumpIf { condition: Relative(23), location: 1235 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Mov { destination: Relative(5), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Mov { destination: Relative(23), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(3) }, BinaryIntOp { destination: Relative(26), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, JumpIf { condition: Relative(19), location: 1287 }, Jump { location: 1246 }, JumpIf { condition: Relative(26), location: 1248 }, Call { location: 1881 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(17) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(4) }, Load { destination: Relative(12), source_pointer: Relative(17) }, BinaryFieldOp { destination: Relative(15), op: Equals, lhs: Relative(12), rhs: Relative(14) }, JumpIf { condition: Relative(15), location: 1256 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(17) } }, Const { destination: Relative(15), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(15) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(4) }, Load { destination: Relative(12), source_pointer: Relative(15) }, BinaryFieldOp { destination: Relative(14), op: Sub, lhs: Relative(12), rhs: Relative(18) }, Mov { destination: Direct(32771), source: Relative(3) }, Call { location: 1884 }, Mov { destination: Relative(12), source: Direct(32772) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(17) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(4) }, Store { destination_pointer: Relative(17), source: Relative(14) }, Load { destination: Relative(3), source_pointer: Relative(12) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(3) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 1274 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(12) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(17), source: Direct(32775) }, Store { destination_pointer: Relative(17), source: Relative(20) }, Store { destination_pointer: Relative(5), source: Relative(3) }, Store { destination_pointer: Relative(23), source: Relative(15) }, Jump { location: 1307 }, JumpIf { condition: Relative(26), location: 1289 }, Call { location: 1881 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(17) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(4) }, Load { destination: Relative(14), source_pointer: Relative(17) }, BinaryFieldOp { destination: Relative(15), op: Equals, lhs: Relative(14), rhs: Relative(12) }, JumpIf { condition: Relative(15), location: 1297 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(17) } }, Mov { destination: Direct(32771), source: Relative(3) }, Call { location: 1884 }, Mov { destination: Relative(12), source: Direct(32772) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(15) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(4) }, Store { destination_pointer: Relative(15), source: Relative(18) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Store { destination_pointer: Relative(23), source: Relative(12) }, Jump { location: 1307 }, Load { destination: Relative(1), source_pointer: Relative(5) }, Load { destination: Relative(3), source_pointer: Relative(23) }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(10) }, JumpIf { condition: Relative(12), location: 1313 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(11) }, Load { destination: Relative(1), source_pointer: Relative(10) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(1), rhs: Relative(20) }, JumpIf { condition: Relative(3), location: 1319 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, Const { destination: Relative(1), bit_size: Integer(U32), value: 20 }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, JumpIf { condition: Relative(3), location: 1323 }, Jump { location: 1344 }, Load { destination: Relative(1), source_pointer: Relative(5) }, Load { destination: Relative(10), source_pointer: Relative(23) }, Load { destination: Relative(12), source_pointer: Relative(10) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(12) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 1331 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(12) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(10) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(17), source: Direct(32775) }, Store { destination_pointer: Relative(17), source: Relative(24) }, Store { destination_pointer: Relative(5), source: Relative(12) }, Store { destination_pointer: Relative(23), source: Relative(15) }, Jump { location: 1344 }, Load { destination: Relative(1), source_pointer: Relative(5) }, Load { destination: Relative(10), source_pointer: Relative(23) }, Load { destination: Relative(12), source_pointer: Relative(10) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(12) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 1352 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(12) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(10) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(17), source: Direct(32775) }, Store { destination_pointer: Relative(17), source: Relative(25) }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(16) }, JumpIf { condition: Relative(1), location: 1366 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(21) }, Load { destination: Relative(1), source_pointer: Relative(10) }, BinaryFieldOp { destination: Relative(10), op: Equals, lhs: Relative(1), rhs: Relative(25) }, JumpIf { condition: Relative(10), location: 1372 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(12) } }, Load { destination: Relative(1), source_pointer: Relative(15) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(1) }, Not { destination: Relative(12), source: Relative(12), bit_size: U1 }, JumpIf { condition: Relative(12), location: 1378 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(16), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(16) }, Mov { destination: Direct(32772), source: Relative(15) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(12), source: Direct(32774) }, Mov { destination: Relative(17), source: Direct(32775) }, Store { destination_pointer: Relative(17), source: Relative(24) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Store { destination_pointer: Relative(23), source: Relative(12) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(11) }, JumpIf { condition: Relative(5), location: 1394 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(15) } }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(2) }, Load { destination: Relative(1), source_pointer: Relative(5) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(1), rhs: Relative(24) }, JumpIf { condition: Relative(5), location: 1400 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(12) } }, Load { destination: Relative(1), source_pointer: Relative(7) }, Load { destination: Relative(5), source_pointer: Relative(9) }, Load { destination: Relative(12), source_pointer: Relative(5) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(15), rhs: Relative(12) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 1408 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(12) }, Mov { destination: Relative(12), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(1) }, Mov { destination: Relative(17), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(5) }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(6) }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, Cast { destination: Relative(21), source: Relative(4), bit_size: Field }, Cast { destination: Relative(23), source: Relative(6), bit_size: Field }, Const { destination: Relative(6), bit_size: Field, value: 50 }, JumpIf { condition: Relative(19), location: 1467 }, Jump { location: 1423 }, JumpIf { condition: Relative(20), location: 1425 }, Call { location: 1881 }, Mov { destination: Direct(32771), source: Relative(5) }, Call { location: 1884 }, Mov { destination: Relative(10), source: Direct(32772) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(15) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(4) }, Store { destination_pointer: Relative(15), source: Relative(6) }, Load { destination: Relative(5), source_pointer: Relative(10) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(5) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 1438 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(10) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(18), source: Direct(32775) }, Store { destination_pointer: Relative(18), source: Relative(23) }, Load { destination: Relative(1), source_pointer: Relative(15) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(18), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(1) }, Not { destination: Relative(18), source: Relative(18), bit_size: U1 }, JumpIf { condition: Relative(18), location: 1454 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(5) }, Mov { destination: Direct(32772), source: Relative(15) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(18), source: Direct(32774) }, Mov { destination: Relative(20), source: Direct(32775) }, Store { destination_pointer: Relative(20), source: Relative(21) }, Store { destination_pointer: Relative(12), source: Relative(1) }, Store { destination_pointer: Relative(17), source: Relative(18) }, Jump { location: 1500 }, JumpIf { condition: Relative(20), location: 1469 }, Call { location: 1881 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(15) }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(14), rhs: Relative(4) }, Load { destination: Relative(10), source_pointer: Relative(15) }, BinaryFieldOp { destination: Relative(14), op: Sub, lhs: Relative(10), rhs: Relative(18) }, Mov { destination: Direct(32771), source: Relative(5) }, Call { location: 1884 }, Mov { destination: Relative(10), source: Direct(32772) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(18) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(4) }, Store { destination_pointer: Relative(18), source: Relative(14) }, Load { destination: Relative(5), source_pointer: Relative(10) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(5) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 1487 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(10) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(18), source: Direct(32775) }, Store { destination_pointer: Relative(18), source: Relative(21) }, Store { destination_pointer: Relative(12), source: Relative(5) }, Store { destination_pointer: Relative(17), source: Relative(15) }, Jump { location: 1500 }, Load { destination: Relative(1), source_pointer: Relative(12) }, Load { destination: Relative(5), source_pointer: Relative(17) }, Load { destination: Relative(10), source_pointer: Relative(5) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(10) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 1508 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(5) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(18), source: Direct(32775) }, Store { destination_pointer: Relative(18), source: Relative(31) }, Store { destination_pointer: Relative(12), source: Relative(10) }, Store { destination_pointer: Relative(17), source: Relative(15) }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(11) }, JumpIf { condition: Relative(1), location: 1524 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, JumpIf { condition: Relative(3), location: 1526 }, Jump { location: 1545 }, Load { destination: Relative(1), source_pointer: Relative(15) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(1) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1532 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(15), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(11), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(11) }, Mov { destination: Direct(32772), source: Relative(15) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(10), source: Direct(32774) }, Mov { destination: Relative(14), source: Direct(32775) }, Store { destination_pointer: Relative(14), source: Relative(24) }, Store { destination_pointer: Relative(12), source: Relative(1) }, Store { destination_pointer: Relative(17), source: Relative(10) }, Jump { location: 1545 }, Load { destination: Relative(1), source_pointer: Relative(12) }, Load { destination: Relative(5), source_pointer: Relative(17) }, Load { destination: Relative(10), source_pointer: Relative(5) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(11), rhs: Relative(10) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 1553 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(5) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(14), source: Direct(32774) }, Mov { destination: Relative(15), source: Direct(32775) }, Store { destination_pointer: Relative(15), source: Relative(25) }, Store { destination_pointer: Relative(12), source: Relative(10) }, Store { destination_pointer: Relative(17), source: Relative(14) }, JumpIf { condition: Relative(3), location: 1586 }, Jump { location: 1567 }, Load { destination: Relative(1), source_pointer: Relative(14) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(11), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(1) }, Not { destination: Relative(11), source: Relative(11), bit_size: U1 }, JumpIf { condition: Relative(11), location: 1573 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(14), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Mov { destination: Direct(32772), source: Relative(14) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(11), source: Direct(32774) }, Mov { destination: Relative(15), source: Direct(32775) }, Store { destination_pointer: Relative(15), source: Relative(6) }, Store { destination_pointer: Relative(12), source: Relative(1) }, Store { destination_pointer: Relative(17), source: Relative(11) }, Jump { location: 1586 }, Load { destination: Relative(1), source_pointer: Relative(12) }, Load { destination: Relative(5), source_pointer: Relative(17) }, Load { destination: Relative(10), source_pointer: Relative(5) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(11), rhs: Relative(10) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 1594 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(10) }, Const { destination: Relative(10), bit_size: Field, value: 60 }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(5) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(18), source: Direct(32775) }, Store { destination_pointer: Relative(18), source: Relative(10) }, Store { destination_pointer: Relative(12), source: Relative(14) }, Store { destination_pointer: Relative(17), source: Relative(15) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 11 }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(1) }, JumpIf { condition: Relative(5), location: 1612 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(12) } }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, JumpIf { condition: Relative(5), location: 1615 }, Call { location: 1881 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(14) }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(4) }, Load { destination: Relative(5), source_pointer: Relative(14) }, BinaryFieldOp { destination: Relative(12), op: Equals, lhs: Relative(5), rhs: Relative(6) }, JumpIf { condition: Relative(12), location: 1623 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(2) }, Load { destination: Relative(5), source_pointer: Relative(12) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(5), rhs: Relative(31) }, JumpIf { condition: Relative(2), location: 1629 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(12) } }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(1) }, Load { destination: Relative(2), source_pointer: Relative(5) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(2), rhs: Relative(25) }, JumpIf { condition: Relative(1), location: 1635 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, Const { destination: Relative(1), bit_size: Integer(U32), value: 12 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(1) }, Load { destination: Relative(2), source_pointer: Relative(5) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(2), rhs: Relative(6) }, JumpIf { condition: Relative(1), location: 1642 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, Const { destination: Relative(1), bit_size: Integer(U32), value: 13 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(15), rhs: Relative(1) }, Load { destination: Relative(2), source_pointer: Relative(5) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(2), rhs: Relative(10) }, JumpIf { condition: Relative(1), location: 1649 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(5) } }, Load { destination: Relative(1), source_pointer: Relative(7) }, Load { destination: Relative(2), source_pointer: Relative(9) }, Mov { destination: Relative(5), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Mov { destination: Relative(6), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(2) }, JumpIf { condition: Relative(19), location: 1736 }, Jump { location: 1659 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U32, lhs: Relative(4), rhs: Relative(1) }, JumpIf { condition: Relative(7), location: 1662 }, Call { location: 1881 }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 1884 }, Mov { destination: Relative(7), source: Direct(32772) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(4) }, Store { destination_pointer: Relative(10), source: Relative(22) }, Load { destination: Relative(2), source_pointer: Relative(7) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(2) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 1675 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(7) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(9), source: Direct(32774) }, Mov { destination: Relative(10), source: Direct(32775) }, Store { destination_pointer: Relative(10), source: Relative(23) }, Load { destination: Relative(1), source_pointer: Relative(9) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(1) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1691 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(9) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(10), source: Direct(32774) }, Mov { destination: Relative(11), source: Direct(32775) }, Store { destination_pointer: Relative(11), source: Relative(21) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(16) }, JumpIf { condition: Relative(2), location: 1705 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, Load { destination: Relative(1), source_pointer: Relative(10) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 1711 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U32, lhs: Relative(16), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(16) }, Mov { destination: Direct(32772), source: Relative(10) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 2046 }, Mov { destination: Relative(9), source: Direct(32774) }, Mov { destination: Relative(12), source: Direct(32775) }, Load { destination: Relative(11), source_pointer: Relative(12) }, Load { destination: Relative(10), source_pointer: Relative(9) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(10) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 1727 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(10) }, BinaryFieldOp { destination: Relative(10), op: Equals, lhs: Relative(11), rhs: Relative(21) }, JumpIf { condition: Relative(10), location: 1733 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, Store { destination_pointer: Relative(5), source: Relative(1) }, Store { destination_pointer: Relative(6), source: Relative(9) }, Jump { location: 1755 }, Load { destination: Relative(4), source_pointer: Relative(2) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(4) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 1742 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(4) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(2) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(9), source: Direct(32774) }, Mov { destination: Relative(10), source: Direct(32775) }, Store { destination_pointer: Relative(10), source: Relative(21) }, Store { destination_pointer: Relative(5), source: Relative(4) }, Store { destination_pointer: Relative(6), source: Relative(9) }, Jump { location: 1755 }, Load { destination: Relative(1), source_pointer: Relative(5) }, Load { destination: Relative(2), source_pointer: Relative(6) }, Load { destination: Relative(4), source_pointer: Relative(2) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(4) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 1763 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(4) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(2) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(9), source: Direct(32774) }, Mov { destination: Relative(10), source: Direct(32775) }, Store { destination_pointer: Relative(10), source: Relative(31) }, Store { destination_pointer: Relative(5), source: Relative(4) }, Store { destination_pointer: Relative(6), source: Relative(9) }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(16) }, JumpIf { condition: Relative(1), location: 1779 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, JumpIf { condition: Relative(3), location: 1781 }, Jump { location: 1800 }, Load { destination: Relative(1), source_pointer: Relative(9) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(3), source: Relative(3), bit_size: U1 }, JumpIf { condition: Relative(3), location: 1787 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(16), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(16) }, Mov { destination: Direct(32772), source: Relative(9) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(3), source: Direct(32774) }, Mov { destination: Relative(4), source: Direct(32775) }, Store { destination_pointer: Relative(4), source: Relative(24) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Store { destination_pointer: Relative(6), source: Relative(3) }, Jump { location: 1800 }, Load { destination: Relative(1), source_pointer: Relative(5) }, Load { destination: Relative(2), source_pointer: Relative(6) }, BinaryIntOp { destination: Relative(3), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(1) }, JumpIf { condition: Relative(3), location: 1805 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(3), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(2) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 2046 }, Mov { destination: Relative(4), source: Direct(32774) }, Mov { destination: Relative(6), source: Direct(32775) }, Load { destination: Relative(5), source_pointer: Relative(6) }, Load { destination: Relative(1), source_pointer: Relative(4) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(6), source: Relative(6), bit_size: U1 }, JumpIf { condition: Relative(6), location: 1819 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(1) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(5), rhs: Relative(31) }, JumpIf { condition: Relative(1), location: 1825 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(6) } }, BinaryIntOp { destination: Relative(1), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(3) }, JumpIf { condition: Relative(1), location: 1828 }, Call { location: 1881 }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Mov { destination: Direct(32772), source: Relative(4) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 2046 }, Mov { destination: Relative(5), source: Direct(32774) }, Mov { destination: Relative(7), source: Direct(32775) }, Load { destination: Relative(6), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(6), rhs: Relative(23) }, JumpIf { condition: Relative(3), location: 1840 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(4) } }, Return, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(18), rhs: Relative(26) }, JumpIf { condition: Relative(1), location: 1845 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(2) } }, Load { destination: Relative(10), source_pointer: Relative(7) }, Load { destination: Relative(11), source_pointer: Relative(9) }, Load { destination: Relative(12), source_pointer: Relative(11) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(12) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 1853 }, Call { location: 1878 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(11), source: Relative(12) }, Cast { destination: Relative(12), source: Relative(2), bit_size: Field }, BinaryIntOp { destination: Relative(14), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Mov { destination: Direct(32772), source: Relative(11) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 1910 }, Mov { destination: Relative(15), source: Direct(32774) }, Mov { destination: Relative(16), source: Direct(32775) }, Store { destination_pointer: Relative(16), source: Relative(12) }, Store { destination_pointer: Relative(7), source: Relative(14) }, Store { destination_pointer: Relative(9), source: Relative(15) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(3) }, Mov { destination: Relative(2), source: Relative(10) }, Jump { location: 47 }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 1874 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 2920182694213909827 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14225679739041873922 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32773), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32774), op: Equals, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, JumpIf { condition: Direct(32774), location: 1888 }, Jump { location: 1890 }, Mov { destination: Direct(32772), source: Direct(32771) }, Jump { location: 1909 }, Const { destination: Direct(32776), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32776) }, Load { destination: Direct(32775), source_pointer: Direct(32775) }, Const { destination: Direct(32776), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32775), rhs: Direct(32776) }, Mov { destination: Direct(32772), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32775) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32775) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 1907 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 1900 }, IndirectConst { destination_pointer: Direct(32772), bit_size: Integer(U32), value: 1 }, Jump { location: 1909 }, Return, Load { destination: Direct(32776), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Load { destination: Direct(32778), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32781), op: LessThanEquals, bit_size: U32, lhs: Direct(32780), rhs: Direct(32778) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, JumpIf { condition: Direct(32781), location: 1921 }, Jump { location: 1938 }, JumpIf { condition: Direct(32782), location: 1923 }, Jump { location: 1927 }, Mov { destination: Direct(32774), source: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, Jump { location: 1937 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32784) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32778) }, Jump { location: 1937 }, Jump { location: 1950 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32783), op: Mul, bit_size: U32, lhs: Direct(32780), rhs: Direct(32784) }, Const { destination: Direct(32785), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32785) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32784) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32783) }, Jump { location: 1950 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32772), rhs: Direct(32774) }, JumpIf { condition: Direct(32782), location: 1964 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32777) }, Mov { destination: Direct(32785), source: Direct(32779) }, Mov { destination: Direct(32786), source: Direct(32781) }, BinaryIntOp { destination: Direct(32787), op: Equals, bit_size: U32, lhs: Direct(32785), rhs: Direct(32784) }, JumpIf { condition: Direct(32787), location: 1964 }, Load { destination: Direct(32783), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32786), source: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, Jump { location: 1957 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32777) }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 5019202896831570965 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32775), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32775), location: 1973 }, Jump { location: 1975 }, Mov { destination: Direct(32773), source: Direct(32771) }, Jump { location: 1990 }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 1987 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 1980 }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32774), op: Sub, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Jump { location: 1990 }, Return, Load { destination: Direct(32776), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Load { destination: Direct(32778), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32781), op: LessThanEquals, bit_size: U32, lhs: Direct(32780), rhs: Direct(32778) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, JumpIf { condition: Direct(32781), location: 2002 }, Jump { location: 2019 }, JumpIf { condition: Direct(32782), location: 2004 }, Jump { location: 2008 }, Mov { destination: Direct(32774), source: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, Jump { location: 2018 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32784) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32778) }, Jump { location: 2018 }, Jump { location: 2031 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32783), op: Mul, bit_size: U32, lhs: Direct(32780), rhs: Direct(32784) }, Const { destination: Direct(32785), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32785) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32784) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32783) }, Jump { location: 2031 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32782), rhs: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32783) }, BinaryIntOp { destination: Direct(32783), op: LessThan, bit_size: U32, lhs: Direct(32785), rhs: Direct(32779) }, JumpIf { condition: Direct(32783), location: 2044 }, Load { destination: Direct(32786), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32784), source: Direct(32786) }, BinaryIntOp { destination: Direct(32785), op: Sub, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32784), op: Sub, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Jump { location: 2037 }, Mov { destination: Direct(32775), source: Direct(32781) }, Return, BinaryIntOp { destination: Direct(32776), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32777), op: Sub, bit_size: U32, lhs: Direct(32776), rhs: Direct(32773) }, Load { destination: Direct(32778), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32779), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(32781) }, JumpIf { condition: Direct(32779), location: 2054 }, Jump { location: 2058 }, Mov { destination: Direct(32774), source: Direct(32772) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, Jump { location: 2080 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32782) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32781) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32777) }, Mov { destination: Direct(32784), source: Direct(32780) }, Mov { destination: Direct(32785), source: Direct(32781) }, BinaryIntOp { destination: Direct(32786), op: Equals, bit_size: U32, lhs: Direct(32784), rhs: Direct(32783) }, JumpIf { condition: Direct(32786), location: 2079 }, Load { destination: Direct(32782), source_pointer: Direct(32784) }, Store { destination_pointer: Direct(32785), source: Direct(32782) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, Jump { location: 2072 }, Jump { location: 2080 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32777) }, Return, Load { destination: Direct(32775), source_pointer: Direct(32772) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32776), op: Mul, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Load { destination: Direct(32777), source_pointer: Direct(32779) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Sub, bit_size: U32, lhs: Direct(32776), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32775), rhs: Direct(2) }, JumpIf { condition: Direct(32780), location: 2092 }, Jump { location: 2100 }, BinaryIntOp { destination: Direct(32774), op: Add, bit_size: U32, lhs: Direct(32772), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32777), op: Sub, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32779) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32777) }, Jump { location: 2123 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32782) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32781) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32779) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32779) }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32782), rhs: Direct(32779) }, Mov { destination: Direct(32785), source: Direct(32782) }, Mov { destination: Direct(32786), source: Direct(32781) }, BinaryIntOp { destination: Direct(32787), op: Equals, bit_size: U32, lhs: Direct(32785), rhs: Direct(32784) }, JumpIf { condition: Direct(32787), location: 2122 }, Load { destination: Direct(32783), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32786), source: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, Jump { location: 2115 }, Jump { location: 2123 }, Return, Load { destination: Direct(32776), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32777), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Load { destination: Direct(32778), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32781), op: LessThanEquals, bit_size: U32, lhs: Direct(32780), rhs: Direct(32778) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, JumpIf { condition: Direct(32781), location: 2135 }, Jump { location: 2152 }, JumpIf { condition: Direct(32782), location: 2137 }, Jump { location: 2141 }, Mov { destination: Direct(32774), source: Direct(32771) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, Jump { location: 2151 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32784) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32778) }, Jump { location: 2151 }, Jump { location: 2164 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32783), op: Mul, bit_size: U32, lhs: Direct(32780), rhs: Direct(32784) }, Const { destination: Direct(32785), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32785) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32784) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32783) }, Jump { location: 2164 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32771), rhs: Direct(32774) }, JumpIf { condition: Direct(32782), location: 2178 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, Mov { destination: Direct(32785), source: Direct(32779) }, Mov { destination: Direct(32786), source: Direct(32781) }, BinaryIntOp { destination: Direct(32787), op: Equals, bit_size: U32, lhs: Direct(32785), rhs: Direct(32784) }, JumpIf { condition: Direct(32787), location: 2178 }, Load { destination: Direct(32783), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32786), source: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, Jump { location: 2171 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32775), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32785), op: Sub, bit_size: U32, lhs: Direct(32777), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32786), op: Sub, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(32786) }, BinaryIntOp { destination: Direct(32788), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32786) }, BinaryIntOp { destination: Direct(32786), op: LessThan, bit_size: U32, lhs: Direct(32788), rhs: Direct(32783) }, JumpIf { condition: Direct(32786), location: 2192 }, Load { destination: Direct(32789), source_pointer: Direct(32788) }, Store { destination_pointer: Direct(32787), source: Direct(32789) }, BinaryIntOp { destination: Direct(32788), op: Sub, bit_size: U32, lhs: Direct(32788), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Sub, bit_size: U32, lhs: Direct(32787), rhs: Direct(2) }, Jump { location: 2185 }, Return, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32775), source_pointer: Direct(32775) }, BinaryIntOp { destination: Direct(32776), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32773) }, Load { destination: Direct(32777), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Const { destination: Direct(32780), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32780) }, JumpIf { condition: Direct(32778), location: 2202 }, Jump { location: 2208 }, Mov { destination: Direct(32774), source: Direct(32771) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32781) }, Jump { location: 2230 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(32782) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32781) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32781) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, Mov { destination: Direct(32783), source: Direct(32779) }, Mov { destination: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32785), op: Equals, bit_size: U32, lhs: Direct(32783), rhs: Direct(32782) }, JumpIf { condition: Direct(32785), location: 2229 }, Load { destination: Direct(32781), source_pointer: Direct(32783) }, Store { destination_pointer: Direct(32784), source: Direct(32781) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Jump { location: 2222 }, Jump { location: 2230 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32783), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32783) }, Mov { destination: Direct(32786), source: Direct(32781) }, Mov { destination: Direct(32787), source: Direct(32782) }, BinaryIntOp { destination: Direct(32788), op: Equals, bit_size: U32, lhs: Direct(32786), rhs: Direct(32785) }, JumpIf { condition: Direct(32788), location: 2245 }, Load { destination: Direct(32784), source_pointer: Direct(32786) }, Store { destination_pointer: Direct(32787), source: Direct(32784) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Add, bit_size: U32, lhs: Direct(32787), rhs: Direct(2) }, Jump { location: 2238 }, Return]"
  ],
  "debug_symbols": "",
  "file_map": {
    "50": {
      "source": "fn main(x: u32) {\n    // The parameters to this function must come directly from witness values (inputs to main).\n    regression_dynamic_slice_index(x - 1, x - 4);\n}\n\nfn regression_dynamic_slice_index(x: u32, y: u32) {\n    let mut slice = &[];\n    for i in 0..5 {\n        slice = slice.push_back(i as Field);\n    }\n    assert(slice.len() == 5);\n\n    dynamic_slice_index_set_if(slice, x, y);\n    dynamic_slice_index_set_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_if(slice, x, y + 1);\n    dynamic_slice_index_if(slice, x);\n    dynamic_array_index_if([0, 1, 2, 3, 4], x);\n    dynamic_slice_index_else(slice, x);\n\n    dynamic_slice_merge_if(slice, x);\n    dynamic_slice_merge_else(slice, x);\n    dynamic_slice_merge_two_ifs(slice, x);\n    dynamic_slice_merge_mutate_between_ifs(slice, x, y);\n    dynamic_slice_merge_push_then_pop(slice, x, y);\n}\n\nfn dynamic_slice_index_set_if(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[3] == 2);\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_index_set_else(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 > 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 0);\n}\n// This tests the case of missing a store instruction in the else branch\n// of merging slices\nfn dynamic_slice_index_if(mut slice: [Field], x: u32) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    } else {\n        assert(slice[x] == 0);\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_array_index_if(mut array: [Field; 5], x: u32) {\n    if x as u32 < 10 {\n        assert(array[x] == 4);\n        array[x] = array[x] - 2;\n    } else {\n        assert(array[x] == 0);\n    }\n    assert(array[4] == 2);\n}\n// This tests the case of missing a store instruction in the then branch\n// of merging slices\nfn dynamic_slice_index_else(mut slice: [Field], x: u32) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_merge_if(mut slice: [Field], x: u32) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n\n        slice = slice.push_back(10);\n        // Having an array set here checks whether we appropriately\n        // handle a slice length that is not yet resolving to a constant\n        // during flattening\n        slice[x] = 10;\n        assert(slice[slice.len() - 1] == 10);\n        assert(slice.len() == 6);\n\n        slice[x] = 20;\n        slice[x] = slice[x] + 10;\n\n        slice = slice.push_front(11);\n        assert(slice[0] == 11);\n        assert(slice.len() == 7);\n        assert(slice[5] == 30);\n\n        slice = slice.push_front(12);\n        assert(slice[0] == 12);\n        assert(slice.len() == 8);\n        assert(slice[6] == 30);\n\n        let (popped_slice, last_elem) = slice.pop_back();\n        assert(last_elem == 10);\n        assert(popped_slice.len() == 7);\n\n        let (first_elem, rest_of_slice) = popped_slice.pop_front();\n        assert(first_elem == 12);\n        assert(rest_of_slice.len() == 6);\n\n        slice = rest_of_slice.insert(x as u32 - 2, 20);\n        assert(slice[2] == 20);\n        assert(slice[6] == 30);\n        assert(slice.len() == 7);\n\n        let (removed_slice, removed_elem) = slice.remove(x as u32 - 1);\n        // The deconstructed tuple assigns to the slice but is not seen outside of the if statement\n        // without a direct assignment\n        slice = removed_slice;\n\n        assert(removed_elem == 1);\n        assert(slice.len() == 6);\n    } else {\n        assert(slice[x] == 0);\n        slice = slice.push_back(20);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 30);\n}\n\nfn dynamic_slice_merge_else(mut slice: [Field], x: u32) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_else(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        if y != 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 5 {\n                // We should not hit this case\n                assert(slice[x] == 22);\n            } else {\n                slice[x] = 10;\n                slice = slice.push_back(15);\n                assert(slice.len() == 6);\n            }\n            assert(slice[4] == 10);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 10);\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_if(mut slice: [Field], x: u32, y: u32) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 2);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[2] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        // TODO: this panics as we have a load for the slice in flattening\n        if y == 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 4 {\n                slice[x] = 5;\n            }\n            assert(slice[4] == 5);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 5);\n}\n\nfn dynamic_slice_merge_two_ifs(mut slice: [Field], x: u32) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 8);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_merge_mutate_between_ifs(mut slice: [Field], x: u32, y: u32) {\n    if x != y {\n        slice[x] = 50;\n        slice = slice.push_back(y as Field);\n        slice = slice.push_back(x as Field);\n    } else {\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(x as Field);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 8);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    if x != 20 {\n        slice = slice.push_back(50);\n    }\n\n    slice = slice.push_back(60);\n    assert(slice.len() == 11);\n    assert(slice[x] == 50);\n    assert(slice[slice.len() - 4] == 30);\n    assert(slice[slice.len() - 3] == 15);\n    assert(slice[slice.len() - 2] == 50);\n    assert(slice[slice.len() - 1] == 60);\n}\n\nfn dynamic_slice_merge_push_then_pop(mut slice: [Field], x: u32, y: u32) {\n    if x != y {\n        slice[x] = 5;\n        slice = slice.push_back(y as Field);\n        slice = slice.push_back(x as Field);\n        assert(slice.len() == 7);\n\n        let (popped_slice, elem) = slice.pop_back();\n        assert(slice.len() == 7);\n        assert(elem == x as Field);\n        slice = popped_slice;\n    } else {\n        slice = slice.push_back(x as Field);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 7);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    let (slice, elem) = slice.pop_back();\n    assert(elem == 30);\n\n    let (_, elem) = slice.pop_back();\n    assert(elem == y as Field);\n}\n",
      "path": ""
    }
  },
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
