---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _0",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 })], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 12 }, Call { location: 13 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 2092 }, Const { destination: Relative(3), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Relative(4), op: Sub, lhs: Relative(1), rhs: Relative(3) }, Const { destination: Relative(5), bit_size: Field, value: 4 }, BinaryFieldOp { destination: Relative(6), op: Sub, lhs: Relative(1), rhs: Relative(5) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(9) }, Mov { destination: Relative(1), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(8) }, IndirectConst { destination_pointer: Relative(1), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(7) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(7) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(8) }, Mov { destination: Relative(7), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Store { destination_pointer: Relative(7), source: Relative(8) }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(1) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 5 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 1 }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 41 }, BinaryIntOp { destination: Relative(11), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, JumpIf { condition: Relative(11), location: 2069 }, Jump { location: 44 }, Load { destination: Relative(2), source_pointer: Relative(7) }, Load { destination: Relative(11), source_pointer: Relative(9) }, Load { destination: Relative(12), source_pointer: Relative(11) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(12) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 52 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(11), source: Relative(12) }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, JumpIf { condition: Relative(12), location: 58 }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(14) } }, Load { destination: Relative(2), source_pointer: Relative(11) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(2) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 64 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(11), source: Relative(2) }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Cast { destination: Relative(14), source: Relative(4), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(15), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(1) }, Const { destination: Relative(16), bit_size: Integer(U1), value: 1 }, JumpIf { condition: Relative(15), location: 73 }, Call { location: 2101 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(18) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(14) }, Load { destination: Relative(15), source_pointer: Relative(18) }, BinaryFieldOp { destination: Relative(17), op: Equals, lhs: Relative(15), rhs: Relative(5) }, JumpIf { condition: Relative(17), location: 81 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(18) } }, Cast { destination: Relative(15), source: Relative(6), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(17), op: LessThan, bit_size: U32, lhs: Relative(15), rhs: Relative(1) }, JumpIf { condition: Relative(17), location: 85 }, Call { location: 2101 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(15) }, Load { destination: Relative(17), source_pointer: Relative(19) }, BinaryFieldOp { destination: Relative(18), op: Equals, lhs: Relative(17), rhs: Relative(3) }, JumpIf { condition: Relative(18), location: 93 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, Const { destination: Relative(17), bit_size: Field, value: 0 }, Mov { destination: Direct(32771), source: Relative(11) }, Call { location: 2104 }, Mov { destination: Relative(18), source: Direct(32772) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(15) }, Store { destination_pointer: Relative(20), source: Relative(17) }, Store { destination_pointer: Relative(2), source: Relative(18) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(14) }, Load { destination: Relative(11), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(11), rhs: Relative(5) }, JumpIf { condition: Relative(19), location: 110 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Const { destination: Relative(19), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(19) }, Load { destination: Relative(11), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(20), op: Equals, lhs: Relative(11), rhs: Relative(17) }, JumpIf { condition: Relative(20), location: 117 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Cast { destination: Relative(20), source: Relative(4), bit_size: Integer(U32) }, Cast { destination: Relative(11), source: Relative(20), bit_size: Field }, Cast { destination: Relative(20), source: Relative(11), bit_size: Integer(U32) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(21), op: LessThan, bit_size: U32, lhs: Relative(20), rhs: Relative(11) }, Const { destination: Relative(22), bit_size: Field, value: 2 }, JumpIf { condition: Relative(21), location: 134 }, Jump { location: 125 }, Mov { destination: Direct(32771), source: Relative(18) }, Call { location: 2104 }, Mov { destination: Relative(12), source: Direct(32772) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(14) }, Store { destination_pointer: Relative(19), source: Relative(17) }, Store { destination_pointer: Relative(2), source: Relative(12) }, Jump { location: 155 }, Mov { destination: Direct(32771), source: Relative(18) }, Call { location: 2104 }, Mov { destination: Relative(12), source: Direct(32772) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(14) }, Store { destination_pointer: Relative(19), source: Relative(22) }, BinaryFieldOp { destination: Relative(13), op: Sub, lhs: Relative(4), rhs: Relative(3) }, Cast { destination: Relative(18), source: Relative(13), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(18), rhs: Relative(1) }, JumpIf { condition: Relative(13), location: 146 }, Call { location: 2101 }, Mov { destination: Direct(32771), source: Relative(12) }, Call { location: 2104 }, Mov { destination: Relative(13), source: Direct(32772) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(23) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(18) }, Store { destination_pointer: Relative(23), source: Relative(22) }, Store { destination_pointer: Relative(2), source: Relative(13) }, Jump { location: 155 }, Load { destination: Relative(12), source_pointer: Relative(2) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(18) }, Load { destination: Relative(13), source_pointer: Relative(19) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(13), rhs: Relative(22) }, JumpIf { condition: Relative(2), location: 164 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, Const { destination: Relative(2), bit_size: Integer(U32), value: 4 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(19) }, Load { destination: Relative(13), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(12), op: Equals, lhs: Relative(13), rhs: Relative(22) }, JumpIf { condition: Relative(12), location: 172 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(23) } }, Load { destination: Relative(12), source_pointer: Relative(7) }, Load { destination: Relative(13), source_pointer: Relative(9) }, Load { destination: Relative(23), source_pointer: Relative(13) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(25), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(23) }, Not { destination: Relative(25), source: Relative(25), bit_size: U1 }, JumpIf { condition: Relative(25), location: 180 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(23) }, Mov { destination: Relative(23), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(25), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(12) }, JumpIf { condition: Relative(25), location: 187 }, Call { location: 2101 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(27) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(14) }, Load { destination: Relative(25), source_pointer: Relative(27) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(25), rhs: Relative(5) }, JumpIf { condition: Relative(26), location: 195 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, BinaryIntOp { destination: Relative(25), op: LessThan, bit_size: U32, lhs: Relative(15), rhs: Relative(12) }, JumpIf { condition: Relative(25), location: 198 }, Call { location: 2101 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(27) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(15) }, Load { destination: Relative(25), source_pointer: Relative(27) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(25), rhs: Relative(3) }, JumpIf { condition: Relative(26), location: 206 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, Mov { destination: Direct(32771), source: Relative(13) }, Call { location: 2104 }, Mov { destination: Relative(25), source: Direct(32772) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(27) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(15) }, Store { destination_pointer: Relative(27), source: Relative(17) }, Store { destination_pointer: Relative(23), source: Relative(25) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(27) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(14) }, Load { destination: Relative(13), source_pointer: Relative(27) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(13), rhs: Relative(5) }, JumpIf { condition: Relative(26), location: 222 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(10), rhs: Relative(12) }, JumpIf { condition: Relative(13), location: 225 }, Call { location: 2101 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(26) }, Load { destination: Relative(13), source_pointer: Relative(27) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(13), rhs: Relative(17) }, JumpIf { condition: Relative(27), location: 232 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(11), rhs: Relative(20) }, JumpIf { condition: Relative(13), location: 244 }, Jump { location: 235 }, Mov { destination: Direct(32771), source: Relative(25) }, Call { location: 2104 }, Mov { destination: Relative(18), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(14) }, Store { destination_pointer: Relative(24), source: Relative(17) }, Store { destination_pointer: Relative(23), source: Relative(18) }, Jump { location: 265 }, Mov { destination: Direct(32771), source: Relative(25) }, Call { location: 2104 }, Mov { destination: Relative(18), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(14) }, Store { destination_pointer: Relative(24), source: Relative(22) }, BinaryFieldOp { destination: Relative(19), op: Sub, lhs: Relative(4), rhs: Relative(3) }, Cast { destination: Relative(24), source: Relative(19), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(24), rhs: Relative(12) }, JumpIf { condition: Relative(19), location: 256 }, Call { location: 2101 }, Mov { destination: Direct(32771), source: Relative(18) }, Call { location: 2104 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(24) }, Store { destination_pointer: Relative(26), source: Relative(22) }, Store { destination_pointer: Relative(23), source: Relative(19) }, Jump { location: 265 }, Load { destination: Relative(18), source_pointer: Relative(23) }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(19), location: 269 }, Call { location: 2101 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(19) }, Load { destination: Relative(12), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(18), op: Equals, lhs: Relative(12), rhs: Relative(17) }, JumpIf { condition: Relative(18), location: 276 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(23) } }, Load { destination: Relative(12), source_pointer: Relative(7) }, Load { destination: Relative(18), source_pointer: Relative(9) }, Load { destination: Relative(23), source_pointer: Relative(18) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(25), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(23) }, Not { destination: Relative(25), source: Relative(25), bit_size: U1 }, JumpIf { condition: Relative(25), location: 284 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(23) }, Mov { destination: Relative(23), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Mov { destination: Relative(25), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(26), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(12) }, JumpIf { condition: Relative(26), location: 293 }, Call { location: 2101 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(14) }, Load { destination: Relative(26), source_pointer: Relative(28) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(26), rhs: Relative(5) }, JumpIf { condition: Relative(27), location: 301 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, BinaryIntOp { destination: Relative(26), op: LessThan, bit_size: U32, lhs: Relative(15), rhs: Relative(12) }, JumpIf { condition: Relative(26), location: 304 }, Call { location: 2101 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(15) }, Load { destination: Relative(26), source_pointer: Relative(28) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(26), rhs: Relative(3) }, JumpIf { condition: Relative(27), location: 312 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, Mov { destination: Direct(32771), source: Relative(18) }, Call { location: 2104 }, Mov { destination: Relative(26), source: Direct(32772) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(28) }, BinaryIntOp { destination: Relative(28), op: Add, bit_size: U32, lhs: Relative(27), rhs: Relative(15) }, Store { destination_pointer: Relative(28), source: Relative(17) }, Store { destination_pointer: Relative(23), source: Relative(12) }, Store { destination_pointer: Relative(25), source: Relative(26) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(27) }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(14) }, Load { destination: Relative(15), source_pointer: Relative(27) }, BinaryFieldOp { destination: Relative(18), op: Equals, lhs: Relative(15), rhs: Relative(5) }, JumpIf { condition: Relative(18), location: 329 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, BinaryIntOp { destination: Relative(15), op: LessThan, bit_size: U32, lhs: Relative(10), rhs: Relative(12) }, JumpIf { condition: Relative(15), location: 332 }, Call { location: 2101 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Relative(27), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(18) }, Load { destination: Relative(15), source_pointer: Relative(27) }, BinaryFieldOp { destination: Relative(27), op: Equals, lhs: Relative(15), rhs: Relative(17) }, JumpIf { condition: Relative(27), location: 339 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(28) } }, Const { destination: Relative(15), bit_size: Field, value: 5 }, Const { destination: Relative(27), bit_size: Field, value: 10 }, Const { destination: Relative(28), bit_size: Integer(U32), value: 6 }, Const { destination: Relative(29), bit_size: Field, value: 15 }, Const { destination: Relative(30), bit_size: Field, value: 22 }, JumpIf { condition: Relative(21), location: 356 }, Jump { location: 346 }, Mov { destination: Direct(32771), source: Relative(26) }, Call { location: 2104 }, Mov { destination: Relative(18), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(14) }, Store { destination_pointer: Relative(24), source: Relative(17) }, Store { destination_pointer: Relative(23), source: Relative(12) }, Store { destination_pointer: Relative(25), source: Relative(18) }, Jump { location: 436 }, Mov { destination: Direct(32771), source: Relative(26) }, Call { location: 2104 }, Mov { destination: Relative(18), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(14) }, Store { destination_pointer: Relative(24), source: Relative(22) }, Store { destination_pointer: Relative(23), source: Relative(12) }, Store { destination_pointer: Relative(25), source: Relative(18) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(6), rhs: Relative(3) }, JumpIf { condition: Relative(19), location: 378 }, Jump { location: 368 }, Mov { destination: Direct(32771), source: Relative(18) }, Call { location: 2104 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(14) }, Store { destination_pointer: Relative(26), source: Relative(30) }, Store { destination_pointer: Relative(23), source: Relative(12) }, Store { destination_pointer: Relative(25), source: Relative(19) }, Jump { location: 436 }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(4), rhs: Relative(15) }, JumpIf { condition: Relative(19), location: 418 }, Jump { location: 381 }, Mov { destination: Direct(32771), source: Relative(18) }, Call { location: 2104 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(26) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(14) }, Store { destination_pointer: Relative(26), source: Relative(27) }, Load { destination: Relative(18), source_pointer: Relative(19) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(18) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 394 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(18) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(19) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(26), source: Direct(32773) }, Mov { destination: Relative(31), source: Direct(32774) }, Store { destination_pointer: Relative(31), source: Relative(29) }, Store { destination_pointer: Relative(23), source: Relative(18) }, Store { destination_pointer: Relative(25), source: Relative(26) }, Load { destination: Relative(12), source_pointer: Relative(26) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(31), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(12) }, Not { destination: Relative(31), source: Relative(31), bit_size: U1 }, JumpIf { condition: Relative(31), location: 411 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(12) }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(18), rhs: Relative(28) }, JumpIf { condition: Relative(12), location: 417 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Jump { location: 423 }, BinaryFieldOp { destination: Relative(12), op: Equals, lhs: Relative(22), rhs: Relative(30) }, JumpIf { condition: Relative(12), location: 422 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(18) } }, Jump { location: 423 }, Load { destination: Relative(12), source_pointer: Relative(23) }, Load { destination: Relative(18), source_pointer: Relative(25) }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(19), location: 428 }, Call { location: 2101 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(19) }, Load { destination: Relative(12), source_pointer: Relative(24) }, BinaryFieldOp { destination: Relative(18), op: Equals, lhs: Relative(12), rhs: Relative(27) }, JumpIf { condition: Relative(18), location: 435 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Jump { location: 436 }, Load { destination: Relative(12), source_pointer: Relative(23) }, Load { destination: Relative(18), source_pointer: Relative(25) }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(19), location: 441 }, Call { location: 2101 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(24) }, Load { destination: Relative(19), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(19), rhs: Relative(27) }, JumpIf { condition: Relative(26), location: 448 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, Load { destination: Relative(19), source_pointer: Relative(18) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(31), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(19) }, Not { destination: Relative(31), source: Relative(31), bit_size: U1 }, JumpIf { condition: Relative(31), location: 454 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(28) }, JumpIf { condition: Relative(19), location: 460 }, Const { destination: Relative(31), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(31) } }, Load { destination: Relative(12), source_pointer: Relative(18) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(31), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(12) }, Not { destination: Relative(31), source: Relative(31), bit_size: U1 }, JumpIf { condition: Relative(31), location: 466 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(12) }, Const { destination: Relative(31), bit_size: Integer(U32), value: 8 }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(31) }, Load { destination: Relative(12), source_pointer: Relative(32) }, BinaryFieldOp { destination: Relative(32), op: Equals, lhs: Relative(12), rhs: Relative(29) }, JumpIf { condition: Relative(32), location: 475 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, Load { destination: Relative(12), source_pointer: Relative(18) }, Const { destination: Relative(32), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(33), op: Equals, bit_size: U32, lhs: Relative(32), rhs: Relative(12) }, Not { destination: Relative(33), source: Relative(33), bit_size: U1 }, JumpIf { condition: Relative(33), location: 481 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(12) }, Const { destination: Relative(12), bit_size: Field, value: 20 }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(18) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(34), source: Direct(32773) }, Mov { destination: Relative(35), source: Direct(32774) }, Store { destination_pointer: Relative(35), source: Relative(12) }, Store { destination_pointer: Relative(23), source: Relative(33) }, Store { destination_pointer: Relative(25), source: Relative(34) }, Load { destination: Relative(18), source_pointer: Relative(34) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(25), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(18) }, Not { destination: Relative(25), source: Relative(25), bit_size: U1 }, JumpIf { condition: Relative(25), location: 499 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(34), source: Relative(18) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(25), op: Equals, bit_size: U32, lhs: Relative(33), rhs: Relative(18) }, JumpIf { condition: Relative(25), location: 506 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(35) } }, Const { destination: Relative(33), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(35), op: Add, bit_size: U32, lhs: Relative(34), rhs: Relative(33) }, Load { destination: Relative(25), source_pointer: Relative(35) }, BinaryFieldOp { destination: Relative(34), op: Equals, lhs: Relative(25), rhs: Relative(12) }, JumpIf { condition: Relative(34), location: 513 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(35) } }, Load { destination: Relative(25), source_pointer: Relative(7) }, Load { destination: Relative(34), source_pointer: Relative(9) }, Load { destination: Relative(35), source_pointer: Relative(34) }, Const { destination: Relative(36), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(37), op: Equals, bit_size: U32, lhs: Relative(36), rhs: Relative(35) }, Not { destination: Relative(37), source: Relative(37), bit_size: U1 }, JumpIf { condition: Relative(37), location: 521 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(35), op: Add, bit_size: U32, lhs: Relative(35), rhs: Direct(2) }, Store { destination_pointer: Relative(34), source: Relative(35) }, BinaryFieldOp { destination: Relative(35), op: Add, lhs: Relative(6), rhs: Relative(3) }, Mov { destination: Relative(37), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(38), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(25) }, JumpIf { condition: Relative(38), location: 529 }, Call { location: 2101 }, Const { destination: Relative(40), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(39), op: Add, bit_size: U32, lhs: Relative(34), rhs: Relative(40) }, BinaryIntOp { destination: Relative(40), op: Add, bit_size: U32, lhs: Relative(39), rhs: Relative(14) }, Load { destination: Relative(38), source_pointer: Relative(40) }, BinaryFieldOp { destination: Relative(39), op: Equals, lhs: Relative(38), rhs: Relative(5) }, JumpIf { condition: Relative(39), location: 537 }, Const { destination: Relative(40), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(40) } }, Cast { destination: Relative(38), source: Relative(35), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(39), op: LessThan, bit_size: U32, lhs: Relative(38), rhs: Relative(25) }, JumpIf { condition: Relative(39), location: 541 }, Call { location: 2101 }, Const { destination: Relative(41), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(40), op: Add, bit_size: U32, lhs: Relative(34), rhs: Relative(41) }, BinaryIntOp { destination: Relative(41), op: Add, bit_size: U32, lhs: Relative(40), rhs: Relative(38) }, Load { destination: Relative(39), source_pointer: Relative(41) }, BinaryFieldOp { destination: Relative(40), op: Equals, lhs: Relative(39), rhs: Relative(22) }, JumpIf { condition: Relative(40), location: 549 }, Const { destination: Relative(41), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(41) } }, Mov { destination: Direct(32771), source: Relative(34) }, Call { location: 2104 }, Mov { destination: Relative(39), source: Direct(32772) }, Const { destination: Relative(41), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(40), op: Add, bit_size: U32, lhs: Relative(39), rhs: Relative(41) }, BinaryIntOp { destination: Relative(41), op: Add, bit_size: U32, lhs: Relative(40), rhs: Relative(38) }, Store { destination_pointer: Relative(41), source: Relative(17) }, Store { destination_pointer: Relative(37), source: Relative(39) }, Const { destination: Relative(40), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(39), rhs: Relative(40) }, BinaryIntOp { destination: Relative(40), op: Add, bit_size: U32, lhs: Relative(38), rhs: Relative(14) }, Load { destination: Relative(34), source_pointer: Relative(40) }, BinaryFieldOp { destination: Relative(38), op: Equals, lhs: Relative(34), rhs: Relative(5) }, JumpIf { condition: Relative(38), location: 565 }, Const { destination: Relative(40), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(40) } }, Const { destination: Relative(34), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Relative(38), op: LessThan, bit_size: U32, lhs: Relative(34), rhs: Relative(25) }, JumpIf { condition: Relative(38), location: 569 }, Call { location: 2101 }, Const { destination: Relative(40), bit_size: Integer(U32), value: 5 }, BinaryIntOp { destination: Relative(41), op: Add, bit_size: U32, lhs: Relative(39), rhs: Relative(40) }, Load { destination: Relative(38), source_pointer: Relative(41) }, BinaryFieldOp { destination: Relative(41), op: Equals, lhs: Relative(38), rhs: Relative(17) }, JumpIf { condition: Relative(41), location: 576 }, Const { destination: Relative(42), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(42) } }, BinaryIntOp { destination: Relative(38), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(25) }, JumpIf { condition: Relative(21), location: 588 }, Jump { location: 579 }, Mov { destination: Direct(32771), source: Relative(39) }, Call { location: 2104 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(14) }, Store { destination_pointer: Relative(24), source: Relative(17) }, Store { destination_pointer: Relative(37), source: Relative(19) }, Jump { location: 631 }, Mov { destination: Direct(32771), source: Relative(39) }, Call { location: 2104 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(24) }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(14) }, Store { destination_pointer: Relative(24), source: Relative(22) }, Store { destination_pointer: Relative(37), source: Relative(19) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(35), rhs: Relative(3) }, JumpIf { condition: Relative(23), location: 622 }, Jump { location: 599 }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(23), location: 602 }, Jump { location: 611 }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 2104 }, Mov { destination: Relative(23), source: Direct(32772) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(25) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(14) }, Store { destination_pointer: Relative(25), source: Relative(15) }, Store { destination_pointer: Relative(37), source: Relative(23) }, Jump { location: 611 }, Load { destination: Relative(19), source_pointer: Relative(37) }, JumpIf { condition: Relative(38), location: 614 }, Call { location: 2101 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(24) }, Load { destination: Relative(23), source_pointer: Relative(25) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(23), rhs: Relative(15) }, JumpIf { condition: Relative(19), location: 621 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(25) } }, Jump { location: 631 }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 2104 }, Mov { destination: Relative(23), source: Direct(32772) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(25) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(14) }, Store { destination_pointer: Relative(25), source: Relative(30) }, Store { destination_pointer: Relative(37), source: Relative(23) }, Jump { location: 631 }, Load { destination: Relative(19), source_pointer: Relative(37) }, JumpIf { condition: Relative(38), location: 634 }, Call { location: 2101 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(24) }, Load { destination: Relative(23), source_pointer: Relative(25) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(23), rhs: Relative(15) }, JumpIf { condition: Relative(19), location: 641 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(25) } }, Load { destination: Relative(19), source_pointer: Relative(7) }, Load { destination: Relative(23), source_pointer: Relative(9) }, Load { destination: Relative(25), source_pointer: Relative(23) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(25) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 649 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(25), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(25) }, Mov { destination: Relative(25), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(25), source: Relative(23) }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(19) }, JumpIf { condition: Relative(21), location: 668 }, Jump { location: 657 }, JumpIf { condition: Relative(30), location: 659 }, Call { location: 2101 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(14) }, Load { destination: Relative(24), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(24), rhs: Relative(17) }, JumpIf { condition: Relative(23), location: 667 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Jump { location: 687 }, JumpIf { condition: Relative(30), location: 670 }, Call { location: 2101 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(14) }, Load { destination: Relative(24), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(24), rhs: Relative(5) }, JumpIf { condition: Relative(26), location: 678 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(30) } }, Mov { destination: Direct(32771), source: Relative(23) }, Call { location: 2104 }, Mov { destination: Relative(24), source: Direct(32772) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(14) }, Store { destination_pointer: Relative(30), source: Relative(22) }, Store { destination_pointer: Relative(25), source: Relative(24) }, Jump { location: 687 }, Load { destination: Relative(23), source_pointer: Relative(25) }, BinaryIntOp { destination: Relative(24), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(19) }, JumpIf { condition: Relative(24), location: 691 }, Call { location: 2101 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(24) }, Load { destination: Relative(19), source_pointer: Relative(25) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(19), rhs: Relative(22) }, JumpIf { condition: Relative(23), location: 698 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(25) } }, Const { destination: Relative(19), bit_size: Field, value: 3 }, Mov { destination: Relative(23), source: Direct(1) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(25) }, IndirectConst { destination_pointer: Relative(23), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Mov { destination: Relative(26), source: Relative(25) }, Store { destination_pointer: Relative(26), source: Relative(17) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(3) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(22) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(19) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(26), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(5) }, Mov { destination: Relative(19), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(23) }, JumpIf { condition: Relative(21), location: 727 }, Jump { location: 719 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(14) }, Load { destination: Relative(24), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(24), rhs: Relative(17) }, JumpIf { condition: Relative(23), location: 726 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(25) } }, Jump { location: 743 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(14) }, Load { destination: Relative(24), source_pointer: Relative(26) }, BinaryFieldOp { destination: Relative(25), op: Equals, lhs: Relative(24), rhs: Relative(5) }, JumpIf { condition: Relative(25), location: 734 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Mov { destination: Direct(32771), source: Relative(23) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 6 }, Call { location: 2186 }, Mov { destination: Relative(24), source: Direct(32773) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(25), rhs: Relative(14) }, Store { destination_pointer: Relative(26), source: Relative(22) }, Store { destination_pointer: Relative(19), source: Relative(24) }, Jump { location: 743 }, Load { destination: Relative(23), source_pointer: Relative(19) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 5 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(24) }, Load { destination: Relative(19), source_pointer: Relative(25) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(19), rhs: Relative(22) }, JumpIf { condition: Relative(23), location: 751 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(25) } }, Load { destination: Relative(19), source_pointer: Relative(7) }, Load { destination: Relative(23), source_pointer: Relative(9) }, Load { destination: Relative(25), source_pointer: Relative(23) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(25) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 759 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(25), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(25) }, Mov { destination: Relative(25), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(25), source: Relative(23) }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(19) }, JumpIf { condition: Relative(13), location: 791 }, Jump { location: 767 }, JumpIf { condition: Relative(30), location: 769 }, Call { location: 2101 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(14) }, Load { destination: Relative(24), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(26), op: Equals, lhs: Relative(24), rhs: Relative(5) }, JumpIf { condition: Relative(26), location: 777 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(30) } }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(14) }, Load { destination: Relative(24), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(26), op: Sub, lhs: Relative(24), rhs: Relative(22) }, Mov { destination: Direct(32771), source: Relative(23) }, Call { location: 2104 }, Mov { destination: Relative(24), source: Direct(32772) }, Const { destination: Relative(31), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(31) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(14) }, Store { destination_pointer: Relative(31), source: Relative(26) }, Store { destination_pointer: Relative(25), source: Relative(24) }, Jump { location: 802 }, JumpIf { condition: Relative(30), location: 793 }, Call { location: 2101 }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(26), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(26), rhs: Relative(14) }, Load { destination: Relative(24), source_pointer: Relative(30) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(24), rhs: Relative(17) }, JumpIf { condition: Relative(23), location: 801 }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(26) } }, Jump { location: 802 }, Load { destination: Relative(23), source_pointer: Relative(25) }, BinaryIntOp { destination: Relative(24), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(19) }, JumpIf { condition: Relative(24), location: 806 }, Call { location: 2101 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(23), rhs: Relative(24) }, Load { destination: Relative(19), source_pointer: Relative(25) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(19), rhs: Relative(22) }, JumpIf { condition: Relative(2), location: 813 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(23) } }, Load { destination: Relative(2), source_pointer: Relative(7) }, Load { destination: Relative(19), source_pointer: Relative(9) }, Load { destination: Relative(23), source_pointer: Relative(19) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(25), rhs: Relative(23) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 821 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(23), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(23) }, Mov { destination: Relative(23), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(23), source: Relative(2) }, Mov { destination: Relative(26), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(19) }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(2) }, Const { destination: Relative(31), bit_size: Field, value: 30 }, Const { destination: Relative(32), bit_size: Integer(U32), value: 8 }, JumpIf { condition: Relative(21), location: 862 }, Jump { location: 834 }, JumpIf { condition: Relative(30), location: 836 }, Call { location: 2101 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(14) }, Load { destination: Relative(3), source_pointer: Relative(10) }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(3), rhs: Relative(17) }, JumpIf { condition: Relative(8), location: 844 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, Load { destination: Relative(3), source_pointer: Relative(19) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(3) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 850 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(19) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(20), source: Direct(32774) }, Store { destination_pointer: Relative(20), source: Relative(12) }, Store { destination_pointer: Relative(23), source: Relative(3) }, Store { destination_pointer: Relative(26), source: Relative(10) }, Jump { location: 1209 }, JumpIf { condition: Relative(30), location: 864 }, Call { location: 2101 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(25) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(14) }, Load { destination: Relative(21), source_pointer: Relative(25) }, BinaryFieldOp { destination: Relative(24), op: Equals, lhs: Relative(21), rhs: Relative(5) }, JumpIf { condition: Relative(24), location: 872 }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(25) } }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 2104 }, Mov { destination: Relative(21), source: Direct(32772) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(25) }, BinaryIntOp { destination: Relative(25), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(14) }, Store { destination_pointer: Relative(25), source: Relative(22) }, Load { destination: Relative(19), source_pointer: Relative(21) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(25), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(19) }, Not { destination: Relative(25), source: Relative(25), bit_size: U1 }, JumpIf { condition: Relative(25), location: 885 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(21) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(25), source: Direct(32773) }, Mov { destination: Relative(30), source: Direct(32774) }, Store { destination_pointer: Relative(30), source: Relative(27) }, BinaryIntOp { destination: Relative(2), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(19) }, JumpIf { condition: Relative(2), location: 897 }, Call { location: 2101 }, Mov { destination: Direct(32771), source: Relative(25) }, Call { location: 2104 }, Mov { destination: Relative(2), source: Direct(32772) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(14) }, Store { destination_pointer: Relative(30), source: Relative(27) }, Load { destination: Relative(21), source_pointer: Relative(2) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(30), op: Equals, bit_size: U32, lhs: Relative(25), rhs: Relative(21) }, Not { destination: Relative(30), source: Relative(30), bit_size: U1 }, JumpIf { condition: Relative(30), location: 910 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Sub, bit_size: U32, lhs: Relative(19), rhs: Relative(10) }, BinaryIntOp { destination: Relative(30), op: LessThanEquals, bit_size: U32, lhs: Relative(10), rhs: Relative(19) }, JumpIf { condition: Relative(30), location: 916 }, Call { location: 2208 }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(21), rhs: Relative(19) }, JumpIf { condition: Relative(30), location: 919 }, Call { location: 2101 }, Const { destination: Relative(35), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(35) }, BinaryIntOp { destination: Relative(35), op: Add, bit_size: U32, lhs: Relative(33), rhs: Relative(21) }, Load { destination: Relative(30), source_pointer: Relative(35) }, BinaryFieldOp { destination: Relative(21), op: Equals, lhs: Relative(30), rhs: Relative(27) }, JumpIf { condition: Relative(21), location: 927 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, Load { destination: Relative(21), source_pointer: Relative(2) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(33), op: Equals, bit_size: U32, lhs: Relative(30), rhs: Relative(21) }, Not { destination: Relative(33), source: Relative(33), bit_size: U1 }, JumpIf { condition: Relative(33), location: 933 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(21) }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(28) }, JumpIf { condition: Relative(21), location: 939 }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(33) } }, Mov { destination: Direct(32771), source: Relative(2) }, Call { location: 2104 }, Mov { destination: Relative(19), source: Direct(32772) }, Const { destination: Relative(33), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(33) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(14) }, Store { destination_pointer: Relative(33), source: Relative(12) }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 2104 }, Mov { destination: Relative(2), source: Direct(32772) }, Const { destination: Relative(33), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(33) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(14) }, Store { destination_pointer: Relative(33), source: Relative(31) }, Load { destination: Relative(19), source_pointer: Relative(2) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(33), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(19) }, Not { destination: Relative(33), source: Relative(33), bit_size: U1 }, JumpIf { condition: Relative(33), location: 959 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(19) }, Const { destination: Relative(19), bit_size: Field, value: 11 }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(2) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2211 }, Mov { destination: Relative(35), source: Direct(32773) }, Mov { destination: Relative(36), source: Direct(32774) }, Store { destination_pointer: Relative(36), source: Relative(19) }, BinaryIntOp { destination: Relative(2), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(33) }, JumpIf { condition: Relative(2), location: 972 }, Call { location: 2101 }, Const { destination: Relative(36), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(37), op: Add, bit_size: U32, lhs: Relative(35), rhs: Relative(36) }, Load { destination: Relative(2), source_pointer: Relative(37) }, BinaryFieldOp { destination: Relative(37), op: Equals, lhs: Relative(2), rhs: Relative(19) }, JumpIf { condition: Relative(37), location: 979 }, Const { destination: Relative(38), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(38) } }, Load { destination: Relative(2), source_pointer: Relative(35) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(37), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(2) }, Not { destination: Relative(37), source: Relative(37), bit_size: U1 }, JumpIf { condition: Relative(37), location: 985 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(35), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U32, lhs: Relative(33), rhs: Relative(18) }, JumpIf { condition: Relative(2), location: 991 }, Const { destination: Relative(37), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(37) } }, Const { destination: Relative(33), bit_size: Integer(U32), value: 8 }, BinaryIntOp { destination: Relative(37), op: Add, bit_size: U32, lhs: Relative(35), rhs: Relative(33) }, Load { destination: Relative(2), source_pointer: Relative(37) }, BinaryFieldOp { destination: Relative(37), op: Equals, lhs: Relative(2), rhs: Relative(31) }, JumpIf { condition: Relative(37), location: 998 }, Const { destination: Relative(38), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(38) } }, Load { destination: Relative(2), source_pointer: Relative(35) }, Const { destination: Relative(37), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(38), op: Equals, bit_size: U32, lhs: Relative(37), rhs: Relative(2) }, Not { destination: Relative(38), source: Relative(38), bit_size: U1 }, JumpIf { condition: Relative(38), location: 1004 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(35), source: Relative(2) }, Const { destination: Relative(2), bit_size: Field, value: 12 }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(35) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2211 }, Mov { destination: Relative(39), source: Direct(32773) }, Mov { destination: Relative(40), source: Direct(32774) }, Store { destination_pointer: Relative(40), source: Relative(2) }, BinaryIntOp { destination: Relative(35), op: LessThan, bit_size: U32, lhs: Relative(8), rhs: Relative(38) }, JumpIf { condition: Relative(35), location: 1017 }, Call { location: 2101 }, Const { destination: Relative(40), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(41), op: Add, bit_size: U32, lhs: Relative(39), rhs: Relative(40) }, Load { destination: Relative(35), source_pointer: Relative(41) }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(35), rhs: Relative(2) }, JumpIf { condition: Relative(8), location: 1024 }, Const { destination: Relative(41), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(41) } }, Load { destination: Relative(8), source_pointer: Relative(39) }, Const { destination: Relative(35), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(41), op: Equals, bit_size: U32, lhs: Relative(35), rhs: Relative(8) }, Not { destination: Relative(41), source: Relative(41), bit_size: U1 }, JumpIf { condition: Relative(41), location: 1030 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(39), source: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(38), rhs: Relative(32) }, JumpIf { condition: Relative(8), location: 1036 }, Const { destination: Relative(41), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(41) } }, Const { destination: Relative(38), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(41), op: Add, bit_size: U32, lhs: Relative(39), rhs: Relative(38) }, Load { destination: Relative(8), source_pointer: Relative(41) }, BinaryFieldOp { destination: Relative(41), op: Equals, lhs: Relative(8), rhs: Relative(31) }, JumpIf { condition: Relative(41), location: 1043 }, Const { destination: Relative(42), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(42) } }, Load { destination: Relative(8), source_pointer: Relative(39) }, Const { destination: Relative(41), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(42), op: Equals, bit_size: U32, lhs: Relative(41), rhs: Relative(8) }, Not { destination: Relative(42), source: Relative(42), bit_size: U1 }, JumpIf { condition: Relative(42), location: 1049 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(39), source: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Sub, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(39) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2266 }, Mov { destination: Relative(42), source: Direct(32773) }, Mov { destination: Relative(44), source: Direct(32774) }, Load { destination: Relative(43), source_pointer: Relative(44) }, Load { destination: Relative(39), source_pointer: Relative(42) }, Const { destination: Relative(44), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(45), op: Equals, bit_size: U32, lhs: Relative(44), rhs: Relative(39) }, Not { destination: Relative(45), source: Relative(45), bit_size: U1 }, JumpIf { condition: Relative(45), location: 1064 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(39), op: Add, bit_size: U32, lhs: Relative(39), rhs: Direct(2) }, Store { destination_pointer: Relative(42), source: Relative(39) }, BinaryFieldOp { destination: Relative(39), op: Equals, lhs: Relative(43), rhs: Relative(27) }, JumpIf { condition: Relative(39), location: 1070 }, Const { destination: Relative(45), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(45) } }, Load { destination: Relative(39), source_pointer: Relative(42) }, Const { destination: Relative(43), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(45), op: Equals, bit_size: U32, lhs: Relative(43), rhs: Relative(39) }, Not { destination: Relative(45), source: Relative(45), bit_size: U1 }, JumpIf { condition: Relative(45), location: 1076 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(39), op: Add, bit_size: U32, lhs: Relative(39), rhs: Direct(2) }, Store { destination_pointer: Relative(42), source: Relative(39) }, BinaryIntOp { destination: Relative(39), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(18) }, JumpIf { condition: Relative(39), location: 1082 }, Const { destination: Relative(45), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(45) } }, BinaryIntOp { destination: Relative(8), op: Sub, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Const { destination: Relative(47), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(46), op: Add, bit_size: U32, lhs: Relative(42), rhs: Relative(47) }, Load { destination: Relative(39), source_pointer: Relative(46) }, Mov { destination: Direct(32771), source: Relative(42) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2303 }, Mov { destination: Relative(45), source: Direct(32773) }, BinaryFieldOp { destination: Relative(42), op: Equals, lhs: Relative(39), rhs: Relative(2) }, JumpIf { condition: Relative(42), location: 1094 }, Const { destination: Relative(46), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(46) } }, Load { destination: Relative(2), source_pointer: Relative(45) }, Const { destination: Relative(39), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(42), op: Equals, bit_size: U32, lhs: Relative(39), rhs: Relative(2) }, Not { destination: Relative(42), source: Relative(42), bit_size: U1 }, JumpIf { condition: Relative(42), location: 1100 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(45), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(28) }, JumpIf { condition: Relative(2), location: 1106 }, Const { destination: Relative(42), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(42) } }, BinaryIntOp { destination: Relative(2), op: Sub, bit_size: U32, lhs: Relative(20), rhs: Relative(34) }, BinaryIntOp { destination: Relative(8), op: LessThanEquals, bit_size: U32, lhs: Relative(34), rhs: Relative(20) }, JumpIf { condition: Relative(8), location: 1110 }, Call { location: 2208 }, BinaryIntOp { destination: Relative(8), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(18) }, JumpIf { condition: Relative(8), location: 1113 }, Call { location: 2101 }, Const { destination: Relative(46), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(46), op: Mul, bit_size: U32, lhs: Relative(46), rhs: Relative(2) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(45) }, Mov { destination: Direct(32772), source: Relative(46) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 2345 }, Mov { destination: Relative(42), source: Direct(32774) }, Mov { destination: Relative(47), source: Direct(32775) }, Store { destination_pointer: Relative(47), source: Relative(12) }, BinaryIntOp { destination: Relative(2), op: LessThan, bit_size: U32, lhs: Relative(34), rhs: Relative(8) }, JumpIf { condition: Relative(2), location: 1126 }, Call { location: 2101 }, Const { destination: Relative(45), bit_size: Integer(U32), value: 5 }, BinaryIntOp { destination: Relative(46), op: Add, bit_size: U32, lhs: Relative(42), rhs: Relative(45) }, Load { destination: Relative(2), source_pointer: Relative(46) }, BinaryFieldOp { destination: Relative(34), op: Equals, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(34), location: 1133 }, Const { destination: Relative(46), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(46) } }, BinaryIntOp { destination: Relative(2), op: LessThan, bit_size: U32, lhs: Relative(28), rhs: Relative(8) }, JumpIf { condition: Relative(2), location: 1136 }, Call { location: 2101 }, Const { destination: Relative(34), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(46), op: Add, bit_size: U32, lhs: Relative(42), rhs: Relative(34) }, Load { destination: Relative(2), source_pointer: Relative(46) }, BinaryFieldOp { destination: Relative(46), op: Equals, lhs: Relative(2), rhs: Relative(31) }, JumpIf { condition: Relative(46), location: 1143 }, Const { destination: Relative(47), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(47) } }, Load { destination: Relative(2), source_pointer: Relative(42) }, Const { destination: Relative(46), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(47), op: Equals, bit_size: U32, lhs: Relative(46), rhs: Relative(2) }, Not { destination: Relative(47), source: Relative(47), bit_size: U1 }, JumpIf { condition: Relative(47), location: 1149 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(42), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(18) }, JumpIf { condition: Relative(2), location: 1155 }, Const { destination: Relative(47), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(47) } }, Load { destination: Relative(2), source_pointer: Relative(42) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(47), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(2) }, Not { destination: Relative(47), source: Relative(47), bit_size: U1 }, JumpIf { condition: Relative(47), location: 1161 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(42), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Sub, bit_size: U32, lhs: Relative(20), rhs: Relative(10) }, BinaryIntOp { destination: Relative(47), op: LessThanEquals, bit_size: U32, lhs: Relative(10), rhs: Relative(20) }, JumpIf { condition: Relative(47), location: 1167 }, Call { location: 2208 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(18) }, JumpIf { condition: Relative(10), location: 1170 }, Call { location: 2101 }, Const { destination: Relative(47), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(47), op: Mul, bit_size: U32, lhs: Relative(47), rhs: Relative(2) }, BinaryIntOp { destination: Relative(10), op: Sub, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Const { destination: Relative(50), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(49), op: Add, bit_size: U32, lhs: Relative(42), rhs: Relative(50) }, BinaryIntOp { destination: Relative(49), op: Add, bit_size: U32, lhs: Relative(49), rhs: Relative(47) }, Load { destination: Relative(48), source_pointer: Relative(49) }, Mov { destination: Direct(32771), source: Relative(42) }, Mov { destination: Direct(32772), source: Relative(47) }, Const { destination: Direct(32773), bit_size: Integer(U32), value: 1 }, Call { location: 2414 }, Mov { destination: Relative(20), source: Direct(32774) }, Load { destination: Relative(2), source_pointer: Relative(20) }, Const { destination: Relative(42), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(47), op: Equals, bit_size: U32, lhs: Relative(42), rhs: Relative(2) }, Not { destination: Relative(47), source: Relative(47), bit_size: U1 }, JumpIf { condition: Relative(47), location: 1188 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(2) }, Store { destination_pointer: Relative(23), source: Relative(10) }, Store { destination_pointer: Relative(26), source: Relative(20) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(48), rhs: Relative(3) }, JumpIf { condition: Relative(2), location: 1196 }, Const { destination: Relative(47), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(47) } }, Load { destination: Relative(2), source_pointer: Relative(20) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(47), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(47), source: Relative(47), bit_size: U1 }, JumpIf { condition: Relative(47), location: 1202 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(20), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(28) }, JumpIf { condition: Relative(2), location: 1208 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Jump { location: 1209 }, Load { destination: Relative(2), source_pointer: Relative(23) }, Load { destination: Relative(3), source_pointer: Relative(26) }, Load { destination: Relative(8), source_pointer: Relative(3) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(8) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 1217 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(28) }, JumpIf { condition: Relative(8), location: 1223 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, Const { destination: Relative(8), bit_size: Integer(U32), value: 8 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(8) }, Load { destination: Relative(2), source_pointer: Relative(19) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(2), rhs: Relative(31) }, JumpIf { condition: Relative(3), location: 1230 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, Load { destination: Relative(2), source_pointer: Relative(7) }, Load { destination: Relative(3), source_pointer: Relative(9) }, Load { destination: Relative(19), source_pointer: Relative(3) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(20), rhs: Relative(19) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 1238 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(19), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(19) }, Mov { destination: Relative(19), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(2) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(3) }, BinaryIntOp { destination: Relative(23), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(2) }, JumpIf { condition: Relative(13), location: 1289 }, Jump { location: 1249 }, JumpIf { condition: Relative(23), location: 1251 }, Call { location: 2101 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(14) }, Load { destination: Relative(8), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(10), op: Equals, lhs: Relative(8), rhs: Relative(5) }, JumpIf { condition: Relative(10), location: 1259 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(14) }, Load { destination: Relative(8), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(10), op: Sub, lhs: Relative(8), rhs: Relative(22) }, Mov { destination: Direct(32771), source: Relative(3) }, Call { location: 2104 }, Mov { destination: Relative(8), source: Direct(32772) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(23) }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(20), rhs: Relative(14) }, Store { destination_pointer: Relative(23), source: Relative(10) }, Load { destination: Relative(3), source_pointer: Relative(8) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(20), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(3) }, Not { destination: Relative(20), source: Relative(20), bit_size: U1 }, JumpIf { condition: Relative(20), location: 1277 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(20), source: Direct(32773) }, Mov { destination: Relative(23), source: Direct(32774) }, Store { destination_pointer: Relative(23), source: Relative(27) }, Store { destination_pointer: Relative(19), source: Relative(3) }, Store { destination_pointer: Relative(21), source: Relative(20) }, Jump { location: 1309 }, JumpIf { condition: Relative(23), location: 1291 }, Call { location: 2101 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(14) }, Load { destination: Relative(8), source_pointer: Relative(20) }, BinaryFieldOp { destination: Relative(10), op: Equals, lhs: Relative(8), rhs: Relative(17) }, JumpIf { condition: Relative(10), location: 1299 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Mov { destination: Direct(32771), source: Relative(3) }, Call { location: 2104 }, Mov { destination: Relative(8), source: Direct(32772) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(14) }, Store { destination_pointer: Relative(20), source: Relative(22) }, Store { destination_pointer: Relative(19), source: Relative(2) }, Store { destination_pointer: Relative(21), source: Relative(8) }, Jump { location: 1309 }, Load { destination: Relative(2), source_pointer: Relative(19) }, Load { destination: Relative(3), source_pointer: Relative(21) }, Load { destination: Relative(8), source_pointer: Relative(3) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(20), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(8) }, Not { destination: Relative(20), source: Relative(20), bit_size: U1 }, JumpIf { condition: Relative(20), location: 1317 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(28) }, JumpIf { condition: Relative(8), location: 1323 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Load { destination: Relative(2), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(20), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(2) }, Not { destination: Relative(20), source: Relative(20), bit_size: U1 }, JumpIf { condition: Relative(20), location: 1329 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(2) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 8 }, BinaryIntOp { destination: Relative(23), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(20) }, Load { destination: Relative(2), source_pointer: Relative(23) }, BinaryFieldOp { destination: Relative(23), op: Equals, lhs: Relative(2), rhs: Relative(27) }, JumpIf { condition: Relative(23), location: 1338 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Load { destination: Relative(2), source_pointer: Relative(3) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(2) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 1344 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(28), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(24), source: Direct(32773) }, Mov { destination: Relative(25), source: Direct(32774) }, Store { destination_pointer: Relative(25), source: Relative(12) }, Store { destination_pointer: Relative(19), source: Relative(2) }, Store { destination_pointer: Relative(21), source: Relative(24) }, Load { destination: Relative(3), source_pointer: Relative(24) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(3) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 1361 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(18) }, JumpIf { condition: Relative(3), location: 1367 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Const { destination: Relative(3), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(24), rhs: Relative(3) }, Load { destination: Relative(2), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(21), op: Equals, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(21), location: 1374 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Load { destination: Relative(2), source_pointer: Relative(7) }, Load { destination: Relative(21), source_pointer: Relative(9) }, Load { destination: Relative(24), source_pointer: Relative(21) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(25), rhs: Relative(24) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 1382 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(24), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(24) }, Mov { destination: Relative(24), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(2) }, Mov { destination: Relative(26), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(26), source: Relative(21) }, BinaryIntOp { destination: Relative(30), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(2) }, JumpIf { condition: Relative(13), location: 1433 }, Jump { location: 1393 }, JumpIf { condition: Relative(30), location: 1395 }, Call { location: 2101 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(14) }, Load { destination: Relative(3), source_pointer: Relative(10) }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(3), rhs: Relative(5) }, JumpIf { condition: Relative(8), location: 1403 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, Const { destination: Relative(8), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(14) }, Load { destination: Relative(3), source_pointer: Relative(8) }, BinaryFieldOp { destination: Relative(5), op: Sub, lhs: Relative(3), rhs: Relative(22) }, Mov { destination: Direct(32771), source: Relative(21) }, Call { location: 2104 }, Mov { destination: Relative(3), source: Direct(32772) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(14) }, Store { destination_pointer: Relative(10), source: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1421 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(13), source: Direct(32774) }, Store { destination_pointer: Relative(13), source: Relative(27) }, Store { destination_pointer: Relative(24), source: Relative(5) }, Store { destination_pointer: Relative(26), source: Relative(10) }, Jump { location: 1453 }, JumpIf { condition: Relative(30), location: 1435 }, Call { location: 2101 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(21), rhs: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(14) }, Load { destination: Relative(3), source_pointer: Relative(8) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(3), rhs: Relative(17) }, JumpIf { condition: Relative(5), location: 1443 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, Mov { destination: Direct(32771), source: Relative(21) }, Call { location: 2104 }, Mov { destination: Relative(3), source: Direct(32772) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(14) }, Store { destination_pointer: Relative(8), source: Relative(22) }, Store { destination_pointer: Relative(24), source: Relative(2) }, Store { destination_pointer: Relative(26), source: Relative(3) }, Jump { location: 1453 }, Load { destination: Relative(2), source_pointer: Relative(24) }, Load { destination: Relative(3), source_pointer: Relative(26) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1461 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(28) }, JumpIf { condition: Relative(5), location: 1467 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, Load { destination: Relative(2), source_pointer: Relative(3) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(2) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1473 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(2) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 8 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(10) }, Load { destination: Relative(2), source_pointer: Relative(13) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(2), rhs: Relative(27) }, JumpIf { condition: Relative(1), location: 1482 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(4), rhs: Relative(12) }, JumpIf { condition: Relative(1), location: 1485 }, Jump { location: 1505 }, Load { destination: Relative(2), source_pointer: Relative(24) }, Load { destination: Relative(3), source_pointer: Relative(26) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1493 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(13), source: Direct(32774) }, Store { destination_pointer: Relative(13), source: Relative(12) }, Store { destination_pointer: Relative(24), source: Relative(5) }, Store { destination_pointer: Relative(26), source: Relative(10) }, Jump { location: 1505 }, Load { destination: Relative(2), source_pointer: Relative(24) }, Load { destination: Relative(3), source_pointer: Relative(26) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1513 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(13), source: Direct(32774) }, Store { destination_pointer: Relative(13), source: Relative(29) }, Load { destination: Relative(2), source_pointer: Relative(10) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 1528 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(18) }, JumpIf { condition: Relative(2), location: 1534 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(13) } }, Load { destination: Relative(2), source_pointer: Relative(10) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(2) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 1540 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(2) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(13) }, Load { destination: Relative(2), source_pointer: Relative(17) }, BinaryFieldOp { destination: Relative(17), op: Equals, lhs: Relative(2), rhs: Relative(29) }, JumpIf { condition: Relative(17), location: 1549 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, Load { destination: Relative(2), source_pointer: Relative(10) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(2) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 1555 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(19), source: Direct(32773) }, Mov { destination: Relative(20), source: Direct(32774) }, Store { destination_pointer: Relative(20), source: Relative(12) }, Store { destination_pointer: Relative(24), source: Relative(2) }, Store { destination_pointer: Relative(26), source: Relative(19) }, Load { destination: Relative(10), source_pointer: Relative(19) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(20), rhs: Relative(10) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 1572 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(32) }, JumpIf { condition: Relative(10), location: 1578 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Const { destination: Relative(10), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(10) }, Load { destination: Relative(2), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(2), rhs: Relative(12) }, JumpIf { condition: Relative(19), location: 1585 }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(21) } }, Load { destination: Relative(2), source_pointer: Relative(7) }, Load { destination: Relative(19), source_pointer: Relative(9) }, Load { destination: Relative(21), source_pointer: Relative(19) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(21) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 1593 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(21), rhs: Direct(2) }, Store { destination_pointer: Relative(19), source: Relative(21) }, Mov { destination: Relative(21), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(21), source: Relative(2) }, Mov { destination: Relative(24), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(24), source: Relative(19) }, BinaryFieldOp { destination: Relative(25), op: Equals, lhs: Relative(4), rhs: Relative(6) }, BinaryIntOp { destination: Relative(26), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(2) }, Const { destination: Relative(27), bit_size: Field, value: 50 }, JumpIf { condition: Relative(25), location: 1648 }, Jump { location: 1606 }, JumpIf { condition: Relative(26), location: 1608 }, Call { location: 2101 }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 2104 }, Mov { destination: Relative(3), source: Direct(32772) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(14) }, Store { destination_pointer: Relative(8), source: Relative(27) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1621 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(13), source: Direct(32774) }, Store { destination_pointer: Relative(13), source: Relative(6) }, Load { destination: Relative(2), source_pointer: Relative(10) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 1636 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(13), source: Direct(32773) }, Mov { destination: Relative(17), source: Direct(32774) }, Store { destination_pointer: Relative(17), source: Relative(4) }, Store { destination_pointer: Relative(21), source: Relative(2) }, Store { destination_pointer: Relative(24), source: Relative(13) }, Jump { location: 1680 }, JumpIf { condition: Relative(26), location: 1650 }, Call { location: 2101 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(14) }, Load { destination: Relative(3), source_pointer: Relative(8) }, BinaryFieldOp { destination: Relative(5), op: Sub, lhs: Relative(3), rhs: Relative(22) }, Mov { destination: Direct(32771), source: Relative(19) }, Call { location: 2104 }, Mov { destination: Relative(3), source: Direct(32772) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(14) }, Store { destination_pointer: Relative(10), source: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1668 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(13), source: Direct(32774) }, Store { destination_pointer: Relative(13), source: Relative(4) }, Store { destination_pointer: Relative(21), source: Relative(5) }, Store { destination_pointer: Relative(24), source: Relative(10) }, Jump { location: 1680 }, Load { destination: Relative(2), source_pointer: Relative(21) }, Load { destination: Relative(3), source_pointer: Relative(24) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1688 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(13), source: Direct(32774) }, Store { destination_pointer: Relative(13), source: Relative(31) }, Store { destination_pointer: Relative(21), source: Relative(5) }, Store { destination_pointer: Relative(24), source: Relative(10) }, Load { destination: Relative(2), source_pointer: Relative(10) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 1705 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(32) }, JumpIf { condition: Relative(2), location: 1711 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(13) } }, JumpIf { condition: Relative(1), location: 1713 }, Jump { location: 1731 }, Load { destination: Relative(2), source_pointer: Relative(10) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(5), source: Relative(5), bit_size: U1 }, JumpIf { condition: Relative(5), location: 1719 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(32), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(5), source: Direct(32773) }, Mov { destination: Relative(8), source: Direct(32774) }, Store { destination_pointer: Relative(8), source: Relative(12) }, Store { destination_pointer: Relative(21), source: Relative(2) }, Store { destination_pointer: Relative(24), source: Relative(5) }, Jump { location: 1731 }, Load { destination: Relative(2), source_pointer: Relative(21) }, Load { destination: Relative(3), source_pointer: Relative(24) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1739 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(13), source: Direct(32774) }, Store { destination_pointer: Relative(13), source: Relative(29) }, Store { destination_pointer: Relative(21), source: Relative(5) }, Store { destination_pointer: Relative(24), source: Relative(10) }, JumpIf { condition: Relative(1), location: 1770 }, Jump { location: 1752 }, Load { destination: Relative(2), source_pointer: Relative(10) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(8), source: Relative(8), bit_size: U1 }, JumpIf { condition: Relative(8), location: 1758 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(8), source: Direct(32773) }, Mov { destination: Relative(13), source: Direct(32774) }, Store { destination_pointer: Relative(13), source: Relative(27) }, Store { destination_pointer: Relative(21), source: Relative(2) }, Store { destination_pointer: Relative(24), source: Relative(8) }, Jump { location: 1770 }, Load { destination: Relative(2), source_pointer: Relative(21) }, Load { destination: Relative(3), source_pointer: Relative(24) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1778 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Const { destination: Relative(5), bit_size: Field, value: 60 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(13), source: Direct(32773) }, Mov { destination: Relative(17), source: Direct(32774) }, Store { destination_pointer: Relative(17), source: Relative(5) }, Store { destination_pointer: Relative(21), source: Relative(10) }, Store { destination_pointer: Relative(24), source: Relative(13) }, Load { destination: Relative(2), source_pointer: Relative(13) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 1796 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(2) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 11 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(2) }, JumpIf { condition: Relative(17), location: 1803 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(19) } }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(2) }, JumpIf { condition: Relative(10), location: 1806 }, Call { location: 2101 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(17) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(10), rhs: Relative(14) }, Load { destination: Relative(2), source_pointer: Relative(17) }, BinaryFieldOp { destination: Relative(10), op: Equals, lhs: Relative(2), rhs: Relative(27) }, JumpIf { condition: Relative(10), location: 1814 }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(17) } }, Load { destination: Relative(2), source_pointer: Relative(13) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(2) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 1820 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(2) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(17) }, Load { destination: Relative(2), source_pointer: Relative(19) }, BinaryFieldOp { destination: Relative(19), op: Equals, lhs: Relative(2), rhs: Relative(31) }, JumpIf { condition: Relative(19), location: 1829 }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(20) } }, Load { destination: Relative(2), source_pointer: Relative(13) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(20), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(2) }, Not { destination: Relative(20), source: Relative(20), bit_size: U1 }, JumpIf { condition: Relative(20), location: 1835 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(2) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 11 }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(20) }, Load { destination: Relative(2), source_pointer: Relative(21) }, BinaryFieldOp { destination: Relative(21), op: Equals, lhs: Relative(2), rhs: Relative(29) }, JumpIf { condition: Relative(21), location: 1844 }, Const { destination: Relative(22), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(22) } }, Load { destination: Relative(2), source_pointer: Relative(13) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(22), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(2) }, Not { destination: Relative(22), source: Relative(22), bit_size: U1 }, JumpIf { condition: Relative(22), location: 1850 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(2) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 9 }, Const { destination: Relative(23), bit_size: Integer(U32), value: 12 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(23) }, Load { destination: Relative(22), source_pointer: Relative(24) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(22), rhs: Relative(27) }, JumpIf { condition: Relative(2), location: 1860 }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(24) } }, Const { destination: Relative(22), bit_size: Integer(U32), value: 13 }, BinaryIntOp { destination: Relative(24), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(22) }, Load { destination: Relative(2), source_pointer: Relative(24) }, BinaryFieldOp { destination: Relative(11), op: Equals, lhs: Relative(2), rhs: Relative(5) }, JumpIf { condition: Relative(11), location: 1867 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(13) } }, Load { destination: Relative(2), source_pointer: Relative(7) }, Load { destination: Relative(5), source_pointer: Relative(9) }, Mov { destination: Relative(7), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(2) }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(5) }, JumpIf { condition: Relative(25), location: 1967 }, Jump { location: 1877 }, BinaryIntOp { destination: Relative(3), op: LessThan, bit_size: U32, lhs: Relative(14), rhs: Relative(2) }, JumpIf { condition: Relative(3), location: 1880 }, Call { location: 2101 }, Mov { destination: Direct(32771), source: Relative(5) }, Call { location: 2104 }, Mov { destination: Relative(3), source: Direct(32772) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(10) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(14) }, Store { destination_pointer: Relative(10), source: Relative(15) }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1893 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(11), source: Direct(32774) }, Store { destination_pointer: Relative(11), source: Relative(6) }, Load { destination: Relative(2), source_pointer: Relative(10) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(11), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(11), source: Relative(11), bit_size: U1 }, JumpIf { condition: Relative(11), location: 1908 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(10) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(11), source: Direct(32773) }, Mov { destination: Relative(13), source: Direct(32774) }, Store { destination_pointer: Relative(13), source: Relative(4) }, Load { destination: Relative(5), source_pointer: Relative(11) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(5) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 1923 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(11), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(18) }, JumpIf { condition: Relative(5), location: 1929 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(13) } }, Load { destination: Relative(2), source_pointer: Relative(11) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(2) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 1935 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(11), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Sub, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(11) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2266 }, Mov { destination: Relative(13), source: Direct(32773) }, Mov { destination: Relative(15), source: Direct(32774) }, Load { destination: Relative(14), source_pointer: Relative(15) }, Load { destination: Relative(15), source_pointer: Relative(13) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(16), rhs: Relative(15) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 1950 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(13), source: Relative(15) }, Load { destination: Relative(15), source_pointer: Relative(11) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(15) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 1958 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(15), rhs: Direct(2) }, Store { destination_pointer: Relative(11), source: Relative(15) }, BinaryFieldOp { destination: Relative(11), op: Equals, lhs: Relative(14), rhs: Relative(4) }, JumpIf { condition: Relative(11), location: 1964 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(15) } }, Store { destination_pointer: Relative(7), source: Relative(2) }, Store { destination_pointer: Relative(9), source: Relative(13) }, Jump { location: 1985 }, Load { destination: Relative(3), source_pointer: Relative(5) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(3) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 1973 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(10), source: Direct(32773) }, Mov { destination: Relative(11), source: Direct(32774) }, Store { destination_pointer: Relative(11), source: Relative(4) }, Store { destination_pointer: Relative(7), source: Relative(3) }, Store { destination_pointer: Relative(9), source: Relative(10) }, Jump { location: 1985 }, Load { destination: Relative(2), source_pointer: Relative(7) }, Load { destination: Relative(3), source_pointer: Relative(9) }, Load { destination: Relative(4), source_pointer: Relative(3) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(4) }, Not { destination: Relative(8), source: Relative(8), bit_size: U1 }, JumpIf { condition: Relative(8), location: 1993 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(4) }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(8), source: Direct(32773) }, Mov { destination: Relative(10), source: Direct(32774) }, Store { destination_pointer: Relative(10), source: Relative(31) }, Store { destination_pointer: Relative(7), source: Relative(4) }, Store { destination_pointer: Relative(9), source: Relative(8) }, Load { destination: Relative(2), source_pointer: Relative(8) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(10), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(10), source: Relative(10), bit_size: U1 }, JumpIf { condition: Relative(10), location: 2010 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(2) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(18) }, JumpIf { condition: Relative(2), location: 2016 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, JumpIf { condition: Relative(1), location: 2018 }, Jump { location: 2036 }, Load { destination: Relative(1), source_pointer: Relative(8) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(3), source: Relative(3), bit_size: U1 }, JumpIf { condition: Relative(3), location: 2024 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(3), source: Direct(32773) }, Mov { destination: Relative(4), source: Direct(32774) }, Store { destination_pointer: Relative(4), source: Relative(12) }, Store { destination_pointer: Relative(7), source: Relative(1) }, Store { destination_pointer: Relative(9), source: Relative(3) }, Jump { location: 2036 }, Load { destination: Relative(1), source_pointer: Relative(7) }, Load { destination: Relative(2), source_pointer: Relative(9) }, BinaryIntOp { destination: Relative(3), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(2) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2266 }, Mov { destination: Relative(4), source: Direct(32773) }, Mov { destination: Relative(7), source: Direct(32774) }, Load { destination: Relative(5), source_pointer: Relative(7) }, Load { destination: Relative(1), source_pointer: Relative(4) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(7), source: Relative(7), bit_size: U1 }, JumpIf { condition: Relative(7), location: 2051 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(1) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(5), rhs: Relative(31) }, JumpIf { condition: Relative(1), location: 2057 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(4) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2266 }, Mov { destination: Relative(5), source: Direct(32773) }, Mov { destination: Relative(8), source: Direct(32774) }, Load { destination: Relative(7), source_pointer: Relative(8) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(7), rhs: Relative(6) }, JumpIf { condition: Relative(3), location: 2068 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(4) } }, Return, Load { destination: Relative(11), source_pointer: Relative(7) }, Load { destination: Relative(12), source_pointer: Relative(9) }, Load { destination: Relative(13), source_pointer: Relative(12) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(13) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 2077 }, Call { location: 2098 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(13), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(13) }, Cast { destination: Relative(13), source: Relative(2), bit_size: Field }, BinaryIntOp { destination: Relative(15), op: Add, bit_size: U32, lhs: Relative(11), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(12) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 1 }, Call { location: 2130 }, Mov { destination: Relative(16), source: Direct(32773) }, Mov { destination: Relative(17), source: Direct(32774) }, Store { destination_pointer: Relative(17), source: Relative(13) }, Store { destination_pointer: Relative(7), source: Relative(15) }, Store { destination_pointer: Relative(9), source: Relative(16) }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(10) }, Mov { destination: Relative(2), source: Relative(11) }, Jump { location: 41 }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 2097 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14225679739041873922 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32773), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32774), op: Equals, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, JumpIf { condition: Direct(32774), location: 2108 }, Jump { location: 2110 }, Mov { destination: Direct(32772), source: Direct(32771) }, Jump { location: 2129 }, Const { destination: Direct(32776), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32776) }, Load { destination: Direct(32775), source_pointer: Direct(32775) }, Const { destination: Direct(32776), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32775), rhs: Direct(32776) }, Mov { destination: Direct(32772), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32775) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32775) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 2127 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 2120 }, IndirectConst { destination_pointer: Direct(32772), bit_size: Integer(U32), value: 1 }, Jump { location: 2129 }, Return, Load { destination: Direct(32775), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32776), source_pointer: Direct(32779) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Load { destination: Direct(32777), source_pointer: Direct(32779) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: LessThanEquals, bit_size: U32, lhs: Direct(32779), rhs: Direct(32777) }, BinaryIntOp { destination: Direct(32781), op: Equals, bit_size: U32, lhs: Direct(32775), rhs: Direct(2) }, JumpIf { condition: Direct(32780), location: 2141 }, Jump { location: 2158 }, JumpIf { condition: Direct(32781), location: 2143 }, Jump { location: 2147 }, Mov { destination: Direct(32773), source: Direct(32771) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32782), source: Direct(32779) }, Jump { location: 2157 }, Const { destination: Direct(32783), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32783) }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32782) }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32782), source: Direct(32779) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32782), rhs: Direct(2) }, Store { destination_pointer: Direct(32782), source: Direct(32777) }, Jump { location: 2157 }, Jump { location: 2170 }, Const { destination: Direct(32783), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32782), op: Mul, bit_size: U32, lhs: Direct(32779), rhs: Direct(32783) }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32782), rhs: Direct(32784) }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32779) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32782) }, Jump { location: 2170 }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(32781) }, BinaryIntOp { destination: Direct(32781), op: Equals, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, JumpIf { condition: Direct(32781), location: 2184 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32776) }, Mov { destination: Direct(32784), source: Direct(32778) }, Mov { destination: Direct(32785), source: Direct(32780) }, BinaryIntOp { destination: Direct(32786), op: Equals, bit_size: U32, lhs: Direct(32784), rhs: Direct(32783) }, JumpIf { condition: Direct(32786), location: 2184 }, Load { destination: Direct(32782), source_pointer: Direct(32784) }, Store { destination_pointer: Direct(32785), source: Direct(32782) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, Jump { location: 2177 }, BinaryIntOp { destination: Direct(32774), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32776) }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32775), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32775), location: 2190 }, Jump { location: 2192 }, Mov { destination: Direct(32773), source: Direct(32771) }, Jump { location: 2207 }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 2204 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 2197 }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32774), op: Sub, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Jump { location: 2207 }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 2920182694213909827 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32775), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32776), source_pointer: Direct(32779) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Load { destination: Direct(32777), source_pointer: Direct(32779) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32780), op: LessThanEquals, bit_size: U32, lhs: Direct(32779), rhs: Direct(32777) }, BinaryIntOp { destination: Direct(32781), op: Equals, bit_size: U32, lhs: Direct(32775), rhs: Direct(2) }, JumpIf { condition: Direct(32780), location: 2222 }, Jump { location: 2239 }, JumpIf { condition: Direct(32781), location: 2224 }, Jump { location: 2228 }, Mov { destination: Direct(32773), source: Direct(32771) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32782), source: Direct(32779) }, Jump { location: 2238 }, Const { destination: Direct(32783), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32783) }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32782) }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32782), source: Direct(32779) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32782), rhs: Direct(2) }, Store { destination_pointer: Direct(32782), source: Direct(32777) }, Jump { location: 2238 }, Jump { location: 2251 }, Const { destination: Direct(32783), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32782), op: Mul, bit_size: U32, lhs: Direct(32779), rhs: Direct(32783) }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32782), rhs: Direct(32784) }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32779) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32782) }, Jump { location: 2251 }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(32781) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32782), op: Sub, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: LessThan, bit_size: U32, lhs: Direct(32784), rhs: Direct(32778) }, JumpIf { condition: Direct(32782), location: 2264 }, Load { destination: Direct(32785), source_pointer: Direct(32784) }, Store { destination_pointer: Direct(32783), source: Direct(32785) }, BinaryIntOp { destination: Direct(32784), op: Sub, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Jump { location: 2257 }, Mov { destination: Direct(32774), source: Direct(32780) }, Return, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32775), source_pointer: Direct(32775) }, BinaryIntOp { destination: Direct(32776), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32772) }, Load { destination: Direct(32777), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Const { destination: Direct(32780), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32780) }, JumpIf { condition: Direct(32778), location: 2275 }, Jump { location: 2279 }, Mov { destination: Direct(32773), source: Direct(32771) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32780), source: Direct(32776) }, Jump { location: 2301 }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(32781) }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32780) }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32780), source: Direct(32776) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Store { destination_pointer: Direct(32780), source: Direct(32776) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(32781) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32776) }, Mov { destination: Direct(32783), source: Direct(32779) }, Mov { destination: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32785), op: Equals, bit_size: U32, lhs: Direct(32783), rhs: Direct(32782) }, JumpIf { condition: Direct(32785), location: 2300 }, Load { destination: Direct(32781), source_pointer: Direct(32783) }, Store { destination_pointer: Direct(32784), source: Direct(32781) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Jump { location: 2293 }, Jump { location: 2301 }, BinaryIntOp { destination: Direct(32774), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32776) }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32775), source_pointer: Direct(32778) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32778), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32779), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32779), location: 2313 }, Jump { location: 2321 }, BinaryIntOp { destination: Direct(32773), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32776), op: Sub, bit_size: U32, lhs: Direct(32776), rhs: Direct(32772) }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32780), source: Direct(32778) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Store { destination_pointer: Direct(32780), source: Direct(32776) }, Jump { location: 2344 }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32781) }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32780) }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(2) }, Store { destination_pointer: Direct(32780), source: Direct(32778) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Store { destination_pointer: Direct(32780), source: Direct(32778) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32773), rhs: Direct(32781) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32778) }, Mov { destination: Direct(32784), source: Direct(32781) }, Mov { destination: Direct(32785), source: Direct(32780) }, BinaryIntOp { destination: Direct(32786), op: Equals, bit_size: U32, lhs: Direct(32784), rhs: Direct(32783) }, JumpIf { condition: Direct(32786), location: 2343 }, Load { destination: Direct(32782), source_pointer: Direct(32784) }, Store { destination_pointer: Direct(32785), source: Direct(32782) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, Jump { location: 2336 }, Jump { location: 2344 }, Return, Load { destination: Direct(32776), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32777), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, Load { destination: Direct(32778), source_pointer: Direct(32780) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32781), op: LessThanEquals, bit_size: U32, lhs: Direct(32780), rhs: Direct(32778) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, JumpIf { condition: Direct(32781), location: 2356 }, Jump { location: 2373 }, JumpIf { condition: Direct(32782), location: 2358 }, Jump { location: 2362 }, Mov { destination: Direct(32774), source: Direct(32771) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, Jump { location: 2372 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(32784) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32783) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32780) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, Store { destination_pointer: Direct(32783), source: Direct(32778) }, Jump { location: 2372 }, Jump { location: 2385 }, Const { destination: Direct(32784), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Direct(32783), op: Mul, bit_size: U32, lhs: Direct(32780), rhs: Direct(32784) }, Const { destination: Direct(32785), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32785) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32784) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Store { destination_pointer: Direct(32784), source: Direct(32783) }, Jump { location: 2385 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32782) }, BinaryIntOp { destination: Direct(32782), op: Equals, bit_size: U32, lhs: Direct(32771), rhs: Direct(32774) }, JumpIf { condition: Direct(32782), location: 2399 }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, Mov { destination: Direct(32785), source: Direct(32779) }, Mov { destination: Direct(32786), source: Direct(32781) }, BinaryIntOp { destination: Direct(32787), op: Equals, bit_size: U32, lhs: Direct(32785), rhs: Direct(32784) }, JumpIf { condition: Direct(32787), location: 2399 }, Load { destination: Direct(32783), source_pointer: Direct(32785) }, Store { destination_pointer: Direct(32786), source: Direct(32783) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, Jump { location: 2392 }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32775), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32785), op: Sub, bit_size: U32, lhs: Direct(32777), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32786), op: Sub, bit_size: U32, lhs: Direct(32785), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(32786) }, BinaryIntOp { destination: Direct(32788), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(32786) }, BinaryIntOp { destination: Direct(32786), op: LessThan, bit_size: U32, lhs: Direct(32788), rhs: Direct(32783) }, JumpIf { condition: Direct(32786), location: 2413 }, Load { destination: Direct(32789), source_pointer: Direct(32788) }, Store { destination_pointer: Direct(32787), source: Direct(32789) }, BinaryIntOp { destination: Direct(32788), op: Sub, bit_size: U32, lhs: Direct(32788), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Sub, bit_size: U32, lhs: Direct(32787), rhs: Direct(2) }, Jump { location: 2406 }, Return, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(2) }, Load { destination: Direct(32775), source_pointer: Direct(32775) }, BinaryIntOp { destination: Direct(32776), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32773) }, Load { destination: Direct(32777), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Const { destination: Direct(32780), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32780) }, JumpIf { condition: Direct(32778), location: 2423 }, Jump { location: 2429 }, Mov { destination: Direct(32774), source: Direct(32771) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32781) }, Jump { location: 2451 }, Const { destination: Direct(32782), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(32782) }, Mov { destination: Direct(32774), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32781) }, IndirectConst { destination_pointer: Direct(32774), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(2) }, Store { destination_pointer: Direct(32781), source: Direct(32776) }, Const { destination: Direct(32781), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(32780), op: Add, bit_size: U32, lhs: Direct(32774), rhs: Direct(32781) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, Mov { destination: Direct(32783), source: Direct(32779) }, Mov { destination: Direct(32784), source: Direct(32780) }, BinaryIntOp { destination: Direct(32785), op: Equals, bit_size: U32, lhs: Direct(32783), rhs: Direct(32782) }, JumpIf { condition: Direct(32785), location: 2450 }, Load { destination: Direct(32781), source_pointer: Direct(32783) }, Store { destination_pointer: Direct(32784), source: Direct(32781) }, BinaryIntOp { destination: Direct(32783), op: Add, bit_size: U32, lhs: Direct(32783), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32784), op: Add, bit_size: U32, lhs: Direct(32784), rhs: Direct(2) }, Jump { location: 2443 }, Jump { location: 2451 }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32781), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32782), op: Add, bit_size: U32, lhs: Direct(32780), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32775), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32783), op: Sub, bit_size: U32, lhs: Direct(32783), rhs: Direct(32773) }, BinaryIntOp { destination: Direct(32785), op: Add, bit_size: U32, lhs: Direct(32781), rhs: Direct(32783) }, Mov { destination: Direct(32786), source: Direct(32781) }, Mov { destination: Direct(32787), source: Direct(32782) }, BinaryIntOp { destination: Direct(32788), op: Equals, bit_size: U32, lhs: Direct(32786), rhs: Direct(32785) }, JumpIf { condition: Direct(32788), location: 2466 }, Load { destination: Direct(32784), source_pointer: Direct(32786) }, Store { destination_pointer: Direct(32787), source: Direct(32784) }, BinaryIntOp { destination: Direct(32786), op: Add, bit_size: U32, lhs: Direct(32786), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32787), op: Add, bit_size: U32, lhs: Direct(32787), rhs: Direct(2) }, Jump { location: 2459 }, Return]"
  ],
  "debug_symbols": "",
  "file_map": {
    "50": {
      "source": "fn main(x: Field) {\n    // The parameters to this function must come directly from witness values (inputs to main).\n    regression_dynamic_slice_index(x - 1, x - 4);\n}\n\nfn regression_dynamic_slice_index(x: Field, y: Field) {\n    let mut slice = &[];\n    for i in 0..5 {\n        slice = slice.push_back(i as Field);\n    }\n    assert(slice.len() == 5);\n\n    dynamic_slice_index_set_if(slice, x, y);\n    dynamic_slice_index_set_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_else(slice, x, y);\n    dynamic_slice_index_set_nested_if_else_if(slice, x, y + 1);\n    dynamic_slice_index_if(slice, x);\n    dynamic_array_index_if([0, 1, 2, 3, 4], x);\n    dynamic_slice_index_else(slice, x);\n\n    dynamic_slice_merge_if(slice, x);\n    dynamic_slice_merge_else(slice, x);\n    dynamic_slice_merge_two_ifs(slice, x);\n    dynamic_slice_merge_mutate_between_ifs(slice, x, y);\n    dynamic_slice_merge_push_then_pop(slice, x, y);\n}\n\nfn dynamic_slice_index_set_if(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[3] == 2);\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_index_set_else(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 > 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice[x - 1] = slice[x];\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 0);\n}\n// This tests the case of missing a store instruction in the else branch\n// of merging slices\nfn dynamic_slice_index_if(mut slice: [Field], x: Field) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    } else {\n        assert(slice[x] == 0);\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_array_index_if(mut array: [Field; 5], x: Field) {\n    if x as u32 < 10 {\n        assert(array[x] == 4);\n        array[x] = array[x] - 2;\n    } else {\n        assert(array[x] == 0);\n    }\n    assert(array[4] == 2);\n}\n// This tests the case of missing a store instruction in the then branch\n// of merging slices\nfn dynamic_slice_index_else(mut slice: [Field], x: Field) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n    }\n    assert(slice[4] == 2);\n}\n\nfn dynamic_slice_merge_if(mut slice: [Field], x: Field) {\n    if x as u32 < 10 {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n\n        slice = slice.push_back(10);\n        // Having an array set here checks whether we appropriately\n        // handle a slice length that is not yet resolving to a constant\n        // during flattening\n        slice[x] = 10;\n        assert(slice[slice.len() - 1] == 10);\n        assert(slice.len() == 6);\n\n        slice[x] = 20;\n        slice[x] = slice[x] + 10;\n\n        slice = slice.push_front(11);\n        assert(slice[0] == 11);\n        assert(slice.len() == 7);\n        assert(slice[5] == 30);\n\n        slice = slice.push_front(12);\n        assert(slice[0] == 12);\n        assert(slice.len() == 8);\n        assert(slice[6] == 30);\n\n        let (popped_slice, last_elem) = slice.pop_back();\n        assert(last_elem == 10);\n        assert(popped_slice.len() == 7);\n\n        let (first_elem, rest_of_slice) = popped_slice.pop_front();\n        assert(first_elem == 12);\n        assert(rest_of_slice.len() == 6);\n\n        slice = rest_of_slice.insert(x as u32 - 2, 20);\n        assert(slice[2] == 20);\n        assert(slice[6] == 30);\n        assert(slice.len() == 7);\n\n        let (removed_slice, removed_elem) = slice.remove(x as u32 - 1);\n        // The deconstructed tuple assigns to the slice but is not seen outside of the if statement\n        // without a direct assignment\n        slice = removed_slice;\n\n        assert(removed_elem == 1);\n        assert(slice.len() == 6);\n    } else {\n        assert(slice[x] == 0);\n        slice = slice.push_back(20);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 30);\n}\n\nfn dynamic_slice_merge_else(mut slice: [Field], x: Field) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_else(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 1);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[1] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        if y != 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 5 {\n                // We should not hit this case\n                assert(slice[x] == 22);\n            } else {\n                slice[x] = 10;\n                slice = slice.push_back(15);\n                assert(slice.len() == 6);\n            }\n            assert(slice[4] == 10);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 10);\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_index_set_nested_if_else_if(mut slice: [Field], x: Field, y: Field) {\n    assert(slice[x] == 4);\n    assert(slice[y] == 2);\n    slice[y] = 0;\n    assert(slice[x] == 4);\n    assert(slice[2] == 0);\n    if x as u32 < 10 {\n        slice[x] = slice[x] - 2;\n        // TODO: this panics as we have a load for the slice in flattening\n        if y == 1 {\n            slice[x] = slice[x] + 20;\n        } else {\n            if x == 4 {\n                slice[x] = 5;\n            }\n            assert(slice[4] == 5);\n        }\n    } else {\n        slice[x] = 0;\n    }\n    assert(slice[4] == 5);\n}\n\nfn dynamic_slice_merge_two_ifs(mut slice: [Field], x: Field) {\n    if x as u32 > 10 {\n        assert(slice[x] == 0);\n        slice[x] = 2;\n    } else {\n        assert(slice[x] == 4);\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(10);\n    }\n\n    assert(slice.len() == 6);\n    assert(slice[slice.len() - 1] == 10);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    assert(slice.len() == 7);\n    assert(slice[slice.len() - 1] == 15);\n\n    slice = slice.push_back(20);\n    assert(slice.len() == 8);\n    assert(slice[slice.len() - 1] == 20);\n}\n\nfn dynamic_slice_merge_mutate_between_ifs(mut slice: [Field], x: Field, y: Field) {\n    if x != y {\n        slice[x] = 50;\n        slice = slice.push_back(y);\n        slice = slice.push_back(x);\n    } else {\n        slice[x] = slice[x] - 2;\n        slice = slice.push_back(x);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 8);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    slice = slice.push_back(15);\n\n    if x != 20 {\n        slice = slice.push_back(50);\n    }\n\n    slice = slice.push_back(60);\n    assert(slice.len() == 11);\n    assert(slice[x] == 50);\n    assert(slice[slice.len() - 4] == 30);\n    assert(slice[slice.len() - 3] == 15);\n    assert(slice[slice.len() - 2] == 50);\n    assert(slice[slice.len() - 1] == 60);\n}\n\nfn dynamic_slice_merge_push_then_pop(mut slice: [Field], x: Field, y: Field) {\n    if x != y {\n        slice[x] = 5;\n        slice = slice.push_back(y);\n        slice = slice.push_back(x);\n        assert(slice.len() == 7);\n\n        let (popped_slice, elem) = slice.pop_back();\n        assert(slice.len() == 7);\n        assert(elem == x);\n        slice = popped_slice;\n    } else {\n        slice = slice.push_back(x);\n    }\n\n    slice = slice.push_back(30);\n    assert(slice.len() == 7);\n\n    if x == 20 {\n        slice = slice.push_back(20);\n    }\n\n    let (slice, elem) = slice.pop_back();\n    assert(elem == 30);\n\n    let (_, elem) = slice.pop_back();\n    assert(elem == y);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
