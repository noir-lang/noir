---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      },
      {
        "name": "idx",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _14",
    "private parameters indices : [_0, _1, _2, _3, _4, _5]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 32)] []",
    "BLACKBOX::RANGE [(_1, 32)] []",
    "BLACKBOX::RANGE [(_2, 32)] []",
    "BLACKBOX::RANGE [(_3, 32)] []",
    "BLACKBOX::RANGE [(_4, 32)] []",
    "INIT (id: 0, len: 5, witnesses: [_0, _1, _2, _3, _4])",
    "BLACKBOX::RANGE [(_5, 32)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(5))], q_c: 4294967293 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(6)), Simple(Witness(7))]",
    "BLACKBOX::RANGE [(_6, 1)] []",
    "BLACKBOX::RANGE [(_7, 32)] []",
    "EXPR [ (1, _5) (-4294967296, _6) (-1, _7) 4294967293 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(5))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(8)), Simple(Witness(9))]",
    "BLACKBOX::RANGE [(_8, 1)] []",
    "BLACKBOX::RANGE [(_9, 32)] []",
    "EXPR [ (1, _5) (-4294967296, _8) (-1, _9) 4294967291 ]",
    "EXPR [ (1, _6, _8) (-1, _8) 0 ]",
    "EXPR [ (-1, _5, _6) (1, _5) (-1, _10) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _10) 0 ], value: EXPR [ (1, _11) 0 ]) ",
    "INIT (id: 1, len: 5, witnesses: [_0, _1, _2, _3, _4])",
    "EXPR [ (1, _6, _11) (-10, _6) (-1, _12) 10 ]",
    "MEM (id: 1, write EXPR [ (1, _12) 0 ] at: EXPR [ (1, _10) 0 ]) ",
    "EXPR [ (-1, _13) 4 ]",
    "MEM (id: 1, read at: EXPR [ (1, _13) 0 ], value: EXPR [ (1, _14) 0 ]) ",
    "EXPR [ (1, _4, _6) (-1, _6, _14) (1, _14) -111 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "nZLNjoMgEIDfZc4egIpUX2WzMajYkBA0FDbZGN99R6Z020OTphc+YPiGv9lgMkO69NbPyxW6rw2GYJ2zl94to4528Ti77RWUYR+DMTgFD3G0Vh2Mj9D55FwFP9qlvOi6ap8ZdcAoq8D4CYkJZ+vM0durf5u9VnnNbzKX8q7L930li6/UJ37T3H3xid8WX7Dn/b9xpEcbnl4cFCoVnHPb5pYzAscUCEE4EWqCJDTQnRCKcCa0GYIROEEQMEu9H4cPVg/O3P58Tn58KIH4u5ZIKZI1LKOZUjDH4XMMr/MH",
  "file_map": {
    "50": {
      "source": "fn main(mut x: [u32; 5], idx: u32) {\n    // We should not hit out of bounds here as we have a predicate\n    // that should not be hit\n    if idx as u32 < 3 {\n        x[idx] = 10;\n    }\n    assert(x[4] == 111);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient"
  ]
}
