---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _0",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U32) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 13 }, Call { location: 14 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 2813 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Mov { destination: Relative(3), source: Direct(1) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(4) }, IndirectConst { destination_pointer: Relative(3), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Mov { destination: Relative(5), source: Relative(4) }, Store { destination_pointer: Relative(5), source: Relative(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(2) }, Const { destination: Relative(4), bit_size: Field, value: 0 }, Mov { destination: Relative(5), source: Direct(1) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(6) }, IndirectConst { destination_pointer: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Relative(7), source: Relative(6) }, Store { destination_pointer: Relative(7), source: Relative(4) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(4) }, Load { destination: Relative(6), source_pointer: Relative(5) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(6) }, Not { destination: Relative(8), source: Relative(8), bit_size: U1 }, JumpIf { condition: Relative(8), location: 41 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(6) }, Const { destination: Relative(6), bit_size: Integer(U8), value: 0 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(9) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Relative(10), source: Relative(9) }, Store { destination_pointer: Relative(10), source: Relative(6) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(6) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(5) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(6) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(6) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(5) }, Load { destination: Relative(9), source_pointer: Relative(5) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(11), op: Equals, bit_size: U32, lhs: Relative(10), rhs: Relative(9) }, Not { destination: Relative(11), source: Relative(11), bit_size: U1 }, JumpIf { condition: Relative(11), location: 67 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(9) }, Load { destination: Relative(9), source_pointer: Relative(3) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(11), rhs: Relative(9) }, Not { destination: Relative(12), source: Relative(12), bit_size: U1 }, JumpIf { condition: Relative(12), location: 75 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(9) }, Load { destination: Relative(9), source_pointer: Relative(5) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(9) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 83 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(9) }, Load { destination: Relative(9), source_pointer: Relative(8) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(14), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(9) }, Not { destination: Relative(14), source: Relative(14), bit_size: U1 }, JumpIf { condition: Relative(14), location: 91 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(9) }, Load { destination: Relative(9), source_pointer: Relative(3) }, Const { destination: Relative(14), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(15), op: Equals, bit_size: U32, lhs: Relative(14), rhs: Relative(9) }, Not { destination: Relative(15), source: Relative(15), bit_size: U1 }, JumpIf { condition: Relative(15), location: 99 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(9) }, Load { destination: Relative(9), source_pointer: Relative(5) }, Const { destination: Relative(15), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U32, lhs: Relative(15), rhs: Relative(9) }, Not { destination: Relative(16), source: Relative(16), bit_size: U1 }, JumpIf { condition: Relative(16), location: 107 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(9) }, Load { destination: Relative(9), source_pointer: Relative(8) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(17), op: Equals, bit_size: U32, lhs: Relative(16), rhs: Relative(9) }, Not { destination: Relative(17), source: Relative(17), bit_size: U1 }, JumpIf { condition: Relative(17), location: 115 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(9) }, Mov { destination: Relative(9), source: Direct(1) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 13 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(17) }, IndirectConst { destination_pointer: Relative(9), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Mov { destination: Relative(18), source: Relative(17) }, Store { destination_pointer: Relative(18), source: Relative(4) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(3) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(6) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(6) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(5) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(8) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(4) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(3) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(6) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(6) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(5) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(18), rhs: Direct(2) }, Store { destination_pointer: Relative(18), source: Relative(8) }, Load { destination: Relative(17), source_pointer: Relative(3) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(19), op: Equals, bit_size: U32, lhs: Relative(18), rhs: Relative(17) }, Not { destination: Relative(19), source: Relative(19), bit_size: U1 }, JumpIf { condition: Relative(19), location: 152 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(5) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(20), op: Equals, bit_size: U32, lhs: Relative(19), rhs: Relative(17) }, Not { destination: Relative(20), source: Relative(20), bit_size: U1 }, JumpIf { condition: Relative(20), location: 160 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(8) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Equals, bit_size: U32, lhs: Relative(20), rhs: Relative(17) }, Not { destination: Relative(21), source: Relative(21), bit_size: U1 }, JumpIf { condition: Relative(21), location: 168 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(5) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(22), op: Equals, bit_size: U32, lhs: Relative(21), rhs: Relative(17) }, Not { destination: Relative(22), source: Relative(22), bit_size: U1 }, JumpIf { condition: Relative(22), location: 176 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(3) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(23), op: Equals, bit_size: U32, lhs: Relative(22), rhs: Relative(17) }, Not { destination: Relative(23), source: Relative(23), bit_size: U1 }, JumpIf { condition: Relative(23), location: 184 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(5) }, Const { destination: Relative(23), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(24), op: Equals, bit_size: U32, lhs: Relative(23), rhs: Relative(17) }, Not { destination: Relative(24), source: Relative(24), bit_size: U1 }, JumpIf { condition: Relative(24), location: 192 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(8) }, Const { destination: Relative(24), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(25), op: Equals, bit_size: U32, lhs: Relative(24), rhs: Relative(17) }, Not { destination: Relative(25), source: Relative(25), bit_size: U1 }, JumpIf { condition: Relative(25), location: 200 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(3) }, Const { destination: Relative(25), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(26), op: Equals, bit_size: U32, lhs: Relative(25), rhs: Relative(17) }, Not { destination: Relative(26), source: Relative(26), bit_size: U1 }, JumpIf { condition: Relative(26), location: 208 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(5) }, Const { destination: Relative(26), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(27), op: Equals, bit_size: U32, lhs: Relative(26), rhs: Relative(17) }, Not { destination: Relative(27), source: Relative(27), bit_size: U1 }, JumpIf { condition: Relative(27), location: 216 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(8) }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(28), op: Equals, bit_size: U32, lhs: Relative(27), rhs: Relative(17) }, Not { destination: Relative(28), source: Relative(28), bit_size: U1 }, JumpIf { condition: Relative(28), location: 224 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(17) }, Load { destination: Relative(17), source_pointer: Relative(9) }, Const { destination: Relative(28), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(29), op: Equals, bit_size: U32, lhs: Relative(28), rhs: Relative(17) }, Not { destination: Relative(29), source: Relative(29), bit_size: U1 }, JumpIf { condition: Relative(29), location: 232 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(17) }, Mov { destination: Relative(17), source: Direct(1) }, Const { destination: Relative(29), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(29) }, IndirectConst { destination_pointer: Relative(17), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, Mov { destination: Relative(30), source: Relative(29) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(4) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(3) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(5) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(8) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(5) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(9) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(4) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(3) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(5) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(8) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(6) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(5) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(9) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(2) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Relative(3), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U1), value: 1 }, JumpIf { condition: Relative(3), location: 308 }, Call { location: 2822 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 16 }, BinaryIntOp { destination: Relative(8), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Relative(3) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(9) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(30) }, BinaryIntOp { destination: Relative(33), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(34), op: Add, bit_size: U32, lhs: Relative(33), rhs: Relative(31) }, Load { destination: Relative(32), source_pointer: Relative(34) }, Const { destination: Relative(33), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Relative(34), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(33) }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(37), op: Add, bit_size: U32, lhs: Relative(36), rhs: Relative(34) }, Load { destination: Relative(35), source_pointer: Relative(37) }, Const { destination: Relative(36), bit_size: Integer(U32), value: 5 }, BinaryIntOp { destination: Relative(37), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(36) }, BinaryIntOp { destination: Relative(39), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(40), op: Add, bit_size: U32, lhs: Relative(39), rhs: Relative(37) }, Load { destination: Relative(38), source_pointer: Relative(40) }, Const { destination: Relative(39), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Relative(40), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(39) }, BinaryIntOp { destination: Relative(42), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(43), op: Add, bit_size: U32, lhs: Relative(42), rhs: Relative(40) }, Load { destination: Relative(41), source_pointer: Relative(43) }, Const { destination: Relative(42), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Relative(43), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(42) }, BinaryIntOp { destination: Relative(45), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(46), op: Add, bit_size: U32, lhs: Relative(45), rhs: Relative(43) }, Load { destination: Relative(44), source_pointer: Relative(46) }, Const { destination: Relative(45), bit_size: Integer(U32), value: 8 }, BinaryIntOp { destination: Relative(46), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(45) }, BinaryIntOp { destination: Relative(48), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(49), op: Add, bit_size: U32, lhs: Relative(48), rhs: Relative(46) }, Load { destination: Relative(47), source_pointer: Relative(49) }, Const { destination: Relative(48), bit_size: Integer(U32), value: 9 }, BinaryIntOp { destination: Relative(49), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(48) }, BinaryIntOp { destination: Relative(51), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(52), op: Add, bit_size: U32, lhs: Relative(51), rhs: Relative(49) }, Load { destination: Relative(50), source_pointer: Relative(52) }, Const { destination: Relative(51), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(52), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(51) }, BinaryIntOp { destination: Relative(54), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(55), op: Add, bit_size: U32, lhs: Relative(54), rhs: Relative(52) }, Load { destination: Relative(53), source_pointer: Relative(55) }, Const { destination: Relative(54), bit_size: Integer(U32), value: 11 }, BinaryIntOp { destination: Relative(55), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(54) }, BinaryIntOp { destination: Relative(57), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(58), op: Add, bit_size: U32, lhs: Relative(57), rhs: Relative(55) }, Load { destination: Relative(56), source_pointer: Relative(58) }, Const { destination: Relative(57), bit_size: Integer(U32), value: 12 }, BinaryIntOp { destination: Relative(58), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(57) }, BinaryIntOp { destination: Relative(60), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(61), op: Add, bit_size: U32, lhs: Relative(60), rhs: Relative(58) }, Load { destination: Relative(59), source_pointer: Relative(61) }, Const { destination: Relative(60), bit_size: Integer(U32), value: 13 }, BinaryIntOp { destination: Relative(61), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(60) }, BinaryIntOp { destination: Relative(63), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(64), op: Add, bit_size: U32, lhs: Relative(63), rhs: Relative(61) }, Load { destination: Relative(62), source_pointer: Relative(64) }, Const { destination: Relative(63), bit_size: Integer(U32), value: 14 }, BinaryIntOp { destination: Relative(64), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(63) }, BinaryIntOp { destination: Relative(66), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(67), op: Add, bit_size: U32, lhs: Relative(66), rhs: Relative(64) }, Load { destination: Relative(65), source_pointer: Relative(67) }, Const { destination: Relative(66), bit_size: Integer(U32), value: 15 }, BinaryIntOp { destination: Relative(67), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(66) }, BinaryIntOp { destination: Relative(69), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(70), op: Add, bit_size: U32, lhs: Relative(69), rhs: Relative(67) }, Load { destination: Relative(68), source_pointer: Relative(70) }, BinaryIntOp { destination: Relative(69), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(9) }, Const { destination: Relative(29), bit_size: Field, value: 10 }, Mov { destination: Direct(32771), source: Relative(17) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(70), source: Direct(32773) }, BinaryIntOp { destination: Relative(71), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(69) }, Store { destination_pointer: Relative(72), source: Relative(29) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(69), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(70) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(71), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(17) }, Store { destination_pointer: Relative(73), source: Relative(32) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(71) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(70), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(32) }, Store { destination_pointer: Relative(73), source: Relative(35) }, BinaryIntOp { destination: Relative(35), op: Add, bit_size: U32, lhs: Relative(32), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(70) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(71), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(35) }, Store { destination_pointer: Relative(73), source: Relative(38) }, BinaryIntOp { destination: Relative(38), op: Add, bit_size: U32, lhs: Relative(35), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(71) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(70), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(38) }, Store { destination_pointer: Relative(73), source: Relative(41) }, BinaryIntOp { destination: Relative(41), op: Add, bit_size: U32, lhs: Relative(38), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(70) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(71), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(41) }, Store { destination_pointer: Relative(73), source: Relative(44) }, BinaryIntOp { destination: Relative(44), op: Add, bit_size: U32, lhs: Relative(41), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(71) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(70), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(44) }, Store { destination_pointer: Relative(73), source: Relative(47) }, BinaryIntOp { destination: Relative(47), op: Add, bit_size: U32, lhs: Relative(44), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(70) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(71), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(47) }, Store { destination_pointer: Relative(73), source: Relative(50) }, BinaryIntOp { destination: Relative(50), op: Add, bit_size: U32, lhs: Relative(47), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(71) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(70), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(50) }, Store { destination_pointer: Relative(73), source: Relative(53) }, BinaryIntOp { destination: Relative(53), op: Add, bit_size: U32, lhs: Relative(50), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(70) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(71), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(53) }, Store { destination_pointer: Relative(73), source: Relative(56) }, BinaryIntOp { destination: Relative(56), op: Add, bit_size: U32, lhs: Relative(53), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(71) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(70), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(56) }, Store { destination_pointer: Relative(73), source: Relative(59) }, BinaryIntOp { destination: Relative(59), op: Add, bit_size: U32, lhs: Relative(56), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(70) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(71), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(59) }, Store { destination_pointer: Relative(73), source: Relative(62) }, BinaryIntOp { destination: Relative(62), op: Add, bit_size: U32, lhs: Relative(59), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(71) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(70), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(62) }, Store { destination_pointer: Relative(73), source: Relative(65) }, BinaryIntOp { destination: Relative(65), op: Add, bit_size: U32, lhs: Relative(62), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(70) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(71), source: Direct(32773) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(72), rhs: Relative(65) }, Store { destination_pointer: Relative(73), source: Relative(68) }, BinaryIntOp { destination: Relative(70), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(30) }, Load { destination: Relative(68), source_pointer: Relative(70) }, BinaryIntOp { destination: Relative(72), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(33) }, Load { destination: Relative(70), source_pointer: Relative(72) }, BinaryIntOp { destination: Relative(73), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(42) }, Load { destination: Relative(72), source_pointer: Relative(73) }, BinaryIntOp { destination: Relative(74), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(45) }, Load { destination: Relative(73), source_pointer: Relative(74) }, BinaryIntOp { destination: Relative(75), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(57) }, Load { destination: Relative(74), source_pointer: Relative(75) }, BinaryIntOp { destination: Relative(76), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(66) }, Load { destination: Relative(75), source_pointer: Relative(76) }, Load { destination: Relative(76), source_pointer: Relative(70) }, Const { destination: Relative(77), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(78), op: Equals, bit_size: U32, lhs: Relative(77), rhs: Relative(76) }, Not { destination: Relative(78), source: Relative(78), bit_size: U1 }, JumpIf { condition: Relative(78), location: 508 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(76), op: Add, bit_size: U32, lhs: Relative(76), rhs: Direct(2) }, Store { destination_pointer: Relative(70), source: Relative(76) }, Load { destination: Relative(70), source_pointer: Relative(72) }, Const { destination: Relative(76), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(78), op: Equals, bit_size: U32, lhs: Relative(76), rhs: Relative(70) }, Not { destination: Relative(78), source: Relative(78), bit_size: U1 }, JumpIf { condition: Relative(78), location: 516 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(70), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, Store { destination_pointer: Relative(72), source: Relative(70) }, Load { destination: Relative(70), source_pointer: Relative(73) }, Const { destination: Relative(72), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(78), op: Equals, bit_size: U32, lhs: Relative(72), rhs: Relative(70) }, Not { destination: Relative(78), source: Relative(78), bit_size: U1 }, JumpIf { condition: Relative(78), location: 524 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(70), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, Store { destination_pointer: Relative(73), source: Relative(70) }, Load { destination: Relative(70), source_pointer: Relative(74) }, Const { destination: Relative(73), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(78), op: Equals, bit_size: U32, lhs: Relative(73), rhs: Relative(70) }, Not { destination: Relative(78), source: Relative(78), bit_size: U1 }, JumpIf { condition: Relative(78), location: 532 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(70), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, Store { destination_pointer: Relative(74), source: Relative(70) }, Load { destination: Relative(70), source_pointer: Relative(75) }, Const { destination: Relative(74), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(78), op: Equals, bit_size: U32, lhs: Relative(74), rhs: Relative(70) }, Not { destination: Relative(78), source: Relative(78), bit_size: U1 }, JumpIf { condition: Relative(78), location: 540 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(70), op: Add, bit_size: U32, lhs: Relative(70), rhs: Direct(2) }, Store { destination_pointer: Relative(75), source: Relative(70) }, BinaryFieldOp { destination: Relative(70), op: Equals, lhs: Relative(68), rhs: Relative(29) }, JumpIf { condition: Relative(70), location: 546 }, Const { destination: Relative(75), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(75) } }, BinaryIntOp { destination: Relative(29), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(9) }, BinaryIntOp { destination: Relative(68), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(29) }, JumpIf { condition: Relative(68), location: 550 }, Call { location: 2847 }, Const { destination: Relative(68), bit_size: Field, value: 3 }, Const { destination: Relative(70), bit_size: Field, value: 4 }, Mov { destination: Relative(75), source: Direct(1) }, Const { destination: Relative(78), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(78) }, IndirectConst { destination_pointer: Relative(75), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(78), op: Add, bit_size: U32, lhs: Relative(75), rhs: Direct(2) }, Mov { destination: Relative(79), source: Relative(78) }, Store { destination_pointer: Relative(79), source: Relative(68) }, BinaryIntOp { destination: Relative(79), op: Add, bit_size: U32, lhs: Relative(79), rhs: Direct(2) }, Store { destination_pointer: Relative(79), source: Relative(70) }, BinaryIntOp { destination: Relative(78), op: LessThan, bit_size: U32, lhs: Relative(29), rhs: Relative(2) }, JumpIf { condition: Relative(78), location: 564 }, Call { location: 2822 }, BinaryIntOp { destination: Relative(5), op: Mul, bit_size: U32, lhs: Relative(29), rhs: Relative(3) }, BinaryIntOp { destination: Relative(78), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(9) }, BinaryIntOp { destination: Relative(79), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(2) }, BinaryIntOp { destination: Relative(81), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(81), rhs: Relative(79) }, Load { destination: Relative(80), source_pointer: Relative(82) }, BinaryIntOp { destination: Relative(81), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(30) }, BinaryIntOp { destination: Relative(83), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(84), op: Add, bit_size: U32, lhs: Relative(83), rhs: Relative(81) }, Load { destination: Relative(82), source_pointer: Relative(84) }, BinaryIntOp { destination: Relative(83), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(33) }, BinaryIntOp { destination: Relative(85), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(86), op: Add, bit_size: U32, lhs: Relative(85), rhs: Relative(83) }, Load { destination: Relative(84), source_pointer: Relative(86) }, BinaryIntOp { destination: Relative(85), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(36) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(88), op: Add, bit_size: U32, lhs: Relative(87), rhs: Relative(85) }, Load { destination: Relative(86), source_pointer: Relative(88) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(39) }, BinaryIntOp { destination: Relative(89), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(90), op: Add, bit_size: U32, lhs: Relative(89), rhs: Relative(87) }, Load { destination: Relative(88), source_pointer: Relative(90) }, BinaryIntOp { destination: Relative(89), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(42) }, BinaryIntOp { destination: Relative(91), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(91), rhs: Relative(89) }, Load { destination: Relative(90), source_pointer: Relative(92) }, BinaryIntOp { destination: Relative(91), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(45) }, BinaryIntOp { destination: Relative(93), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(94), op: Add, bit_size: U32, lhs: Relative(93), rhs: Relative(91) }, Load { destination: Relative(92), source_pointer: Relative(94) }, BinaryIntOp { destination: Relative(93), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(57) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(95), rhs: Relative(93) }, Load { destination: Relative(94), source_pointer: Relative(96) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(60) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(97), op: Add, bit_size: U32, lhs: Relative(96), rhs: Relative(95) }, Load { destination: Relative(60), source_pointer: Relative(97) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(63) }, BinaryIntOp { destination: Relative(97), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(97), rhs: Relative(96) }, Load { destination: Relative(63), source_pointer: Relative(98) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(66) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(71), rhs: Direct(2) }, BinaryIntOp { destination: Relative(99), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(96) }, Load { destination: Relative(97), source_pointer: Relative(99) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(78), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(71) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(78), source: Direct(32773) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(78), rhs: Direct(2) }, BinaryIntOp { destination: Relative(99), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(96) }, Store { destination_pointer: Relative(99), source: Relative(80) }, BinaryIntOp { destination: Relative(71), op: Add, bit_size: U32, lhs: Relative(96), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(78) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(80), source: Direct(32773) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(80), rhs: Direct(2) }, BinaryIntOp { destination: Relative(99), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(71) }, Store { destination_pointer: Relative(99), source: Relative(82) }, BinaryIntOp { destination: Relative(78), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(80) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(82), source: Direct(32773) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(82), rhs: Direct(2) }, BinaryIntOp { destination: Relative(99), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(78) }, Store { destination_pointer: Relative(99), source: Relative(84) }, BinaryIntOp { destination: Relative(80), op: Add, bit_size: U32, lhs: Relative(78), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(82) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(84), source: Direct(32773) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(84), rhs: Direct(2) }, BinaryIntOp { destination: Relative(99), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(80) }, Store { destination_pointer: Relative(99), source: Relative(86) }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(80), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(84) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(86), source: Direct(32773) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(86), rhs: Direct(2) }, BinaryIntOp { destination: Relative(99), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(82) }, Store { destination_pointer: Relative(99), source: Relative(88) }, BinaryIntOp { destination: Relative(84), op: Add, bit_size: U32, lhs: Relative(82), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(86) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(88), source: Direct(32773) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(88), rhs: Direct(2) }, BinaryIntOp { destination: Relative(99), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(84) }, Store { destination_pointer: Relative(99), source: Relative(90) }, BinaryIntOp { destination: Relative(86), op: Add, bit_size: U32, lhs: Relative(84), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(88) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(90), source: Direct(32773) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(90), rhs: Direct(2) }, BinaryIntOp { destination: Relative(99), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(86) }, Store { destination_pointer: Relative(99), source: Relative(92) }, BinaryIntOp { destination: Relative(88), op: Add, bit_size: U32, lhs: Relative(86), rhs: Relative(9) }, Const { destination: Relative(92), bit_size: Integer(U8), value: 1 }, Mov { destination: Direct(32771), source: Relative(90) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(98), source: Direct(32773) }, BinaryIntOp { destination: Relative(99), op: Add, bit_size: U32, lhs: Relative(98), rhs: Direct(2) }, BinaryIntOp { destination: Relative(100), op: Add, bit_size: U32, lhs: Relative(99), rhs: Relative(88) }, Store { destination_pointer: Relative(100), source: Relative(92) }, BinaryIntOp { destination: Relative(90), op: Add, bit_size: U32, lhs: Relative(88), rhs: Relative(9) }, Const { destination: Relative(99), bit_size: Integer(U8), value: 2 }, Mov { destination: Direct(32771), source: Relative(98) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(100), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(100), rhs: Direct(2) }, BinaryIntOp { destination: Relative(102), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(90) }, Store { destination_pointer: Relative(102), source: Relative(99) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(90), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(100) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(101), source: Direct(32773) }, BinaryIntOp { destination: Relative(102), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(102), rhs: Relative(98) }, Store { destination_pointer: Relative(103), source: Relative(75) }, BinaryIntOp { destination: Relative(100), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(101) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(102), source: Direct(32773) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(102), rhs: Direct(2) }, BinaryIntOp { destination: Relative(104), op: Add, bit_size: U32, lhs: Relative(103), rhs: Relative(100) }, Store { destination_pointer: Relative(104), source: Relative(94) }, BinaryIntOp { destination: Relative(94), op: Add, bit_size: U32, lhs: Relative(100), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(102) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(101), source: Direct(32773) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(104), op: Add, bit_size: U32, lhs: Relative(103), rhs: Relative(94) }, Store { destination_pointer: Relative(104), source: Relative(60) }, BinaryIntOp { destination: Relative(60), op: Add, bit_size: U32, lhs: Relative(94), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(101) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(102), source: Direct(32773) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(102), rhs: Direct(2) }, BinaryIntOp { destination: Relative(104), op: Add, bit_size: U32, lhs: Relative(103), rhs: Relative(60) }, Store { destination_pointer: Relative(104), source: Relative(63) }, BinaryIntOp { destination: Relative(63), op: Add, bit_size: U32, lhs: Relative(60), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(102) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(101), source: Direct(32773) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(104), op: Add, bit_size: U32, lhs: Relative(103), rhs: Relative(63) }, Store { destination_pointer: Relative(104), source: Relative(97) }, Const { destination: Relative(97), bit_size: Integer(U32), value: 20 }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(97) }, Load { destination: Relative(102), source_pointer: Relative(103) }, Const { destination: Relative(103), bit_size: Integer(U32), value: 23 }, BinaryIntOp { destination: Relative(105), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(103) }, Load { destination: Relative(104), source_pointer: Relative(105) }, Const { destination: Relative(105), bit_size: Integer(U32), value: 24 }, BinaryIntOp { destination: Relative(107), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(105) }, Load { destination: Relative(106), source_pointer: Relative(107) }, Const { destination: Relative(107), bit_size: Integer(U32), value: 26 }, BinaryIntOp { destination: Relative(109), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(107) }, Load { destination: Relative(108), source_pointer: Relative(109) }, Const { destination: Relative(107), bit_size: Integer(U32), value: 28 }, BinaryIntOp { destination: Relative(110), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(107) }, Load { destination: Relative(109), source_pointer: Relative(110) }, Const { destination: Relative(110), bit_size: Integer(U32), value: 31 }, BinaryIntOp { destination: Relative(112), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(110) }, Load { destination: Relative(111), source_pointer: Relative(112) }, Load { destination: Relative(112), source_pointer: Relative(102) }, Const { destination: Relative(113), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(114), op: Equals, bit_size: U32, lhs: Relative(113), rhs: Relative(112) }, Not { destination: Relative(114), source: Relative(114), bit_size: U1 }, JumpIf { condition: Relative(114), location: 748 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(112), op: Add, bit_size: U32, lhs: Relative(112), rhs: Direct(2) }, Store { destination_pointer: Relative(102), source: Relative(112) }, Load { destination: Relative(112), source_pointer: Relative(104) }, Const { destination: Relative(114), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(115), op: Equals, bit_size: U32, lhs: Relative(114), rhs: Relative(112) }, Not { destination: Relative(115), source: Relative(115), bit_size: U1 }, JumpIf { condition: Relative(115), location: 756 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(112), op: Add, bit_size: U32, lhs: Relative(112), rhs: Direct(2) }, Store { destination_pointer: Relative(104), source: Relative(112) }, Load { destination: Relative(112), source_pointer: Relative(106) }, Const { destination: Relative(115), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(116), op: Equals, bit_size: U32, lhs: Relative(115), rhs: Relative(112) }, Not { destination: Relative(116), source: Relative(116), bit_size: U1 }, JumpIf { condition: Relative(116), location: 764 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(112), op: Add, bit_size: U32, lhs: Relative(112), rhs: Direct(2) }, Store { destination_pointer: Relative(106), source: Relative(112) }, Load { destination: Relative(112), source_pointer: Relative(109) }, Const { destination: Relative(116), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(117), op: Equals, bit_size: U32, lhs: Relative(116), rhs: Relative(112) }, Not { destination: Relative(117), source: Relative(117), bit_size: U1 }, JumpIf { condition: Relative(117), location: 772 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(112), op: Add, bit_size: U32, lhs: Relative(112), rhs: Direct(2) }, Store { destination_pointer: Relative(109), source: Relative(112) }, Load { destination: Relative(112), source_pointer: Relative(111) }, Const { destination: Relative(117), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(118), op: Equals, bit_size: U32, lhs: Relative(117), rhs: Relative(112) }, Not { destination: Relative(118), source: Relative(118), bit_size: U1 }, JumpIf { condition: Relative(118), location: 780 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(112), op: Add, bit_size: U32, lhs: Relative(112), rhs: Direct(2) }, Store { destination_pointer: Relative(111), source: Relative(112) }, BinaryIntOp { destination: Relative(112), op: Equals, bit_size: U8, lhs: Relative(108), rhs: Relative(92) }, JumpIf { condition: Relative(112), location: 786 }, Const { destination: Relative(118), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(118) } }, Const { destination: Relative(92), bit_size: Integer(U32), value: 27 }, BinaryIntOp { destination: Relative(112), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(92) }, Load { destination: Relative(108), source_pointer: Relative(112) }, Load { destination: Relative(92), source_pointer: Relative(102) }, Const { destination: Relative(112), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(118), op: Equals, bit_size: U32, lhs: Relative(112), rhs: Relative(92) }, Not { destination: Relative(118), source: Relative(118), bit_size: U1 }, JumpIf { condition: Relative(118), location: 795 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(102), source: Relative(92) }, Load { destination: Relative(92), source_pointer: Relative(104) }, Const { destination: Relative(118), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(119), op: Equals, bit_size: U32, lhs: Relative(118), rhs: Relative(92) }, Not { destination: Relative(119), source: Relative(119), bit_size: U1 }, JumpIf { condition: Relative(119), location: 803 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(104), source: Relative(92) }, Load { destination: Relative(92), source_pointer: Relative(106) }, Const { destination: Relative(119), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(120), op: Equals, bit_size: U32, lhs: Relative(119), rhs: Relative(92) }, Not { destination: Relative(120), source: Relative(120), bit_size: U1 }, JumpIf { condition: Relative(120), location: 811 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(106), source: Relative(92) }, Load { destination: Relative(92), source_pointer: Relative(109) }, Const { destination: Relative(120), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(121), op: Equals, bit_size: U32, lhs: Relative(120), rhs: Relative(92) }, Not { destination: Relative(121), source: Relative(121), bit_size: U1 }, JumpIf { condition: Relative(121), location: 819 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(109), source: Relative(92) }, Load { destination: Relative(92), source_pointer: Relative(111) }, Const { destination: Relative(121), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(122), op: Equals, bit_size: U32, lhs: Relative(121), rhs: Relative(92) }, Not { destination: Relative(122), source: Relative(122), bit_size: U1 }, JumpIf { condition: Relative(122), location: 827 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(111), source: Relative(92) }, BinaryIntOp { destination: Relative(92), op: Equals, bit_size: U8, lhs: Relative(108), rhs: Relative(99) }, JumpIf { condition: Relative(92), location: 833 }, Const { destination: Relative(122), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(122) } }, Load { destination: Relative(92), source_pointer: Relative(102) }, Const { destination: Relative(99), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(108), op: Equals, bit_size: U32, lhs: Relative(99), rhs: Relative(92) }, Not { destination: Relative(108), source: Relative(108), bit_size: U1 }, JumpIf { condition: Relative(108), location: 839 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(102), source: Relative(92) }, Load { destination: Relative(92), source_pointer: Relative(104) }, Const { destination: Relative(108), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(122), op: Equals, bit_size: U32, lhs: Relative(108), rhs: Relative(92) }, Not { destination: Relative(122), source: Relative(122), bit_size: U1 }, JumpIf { condition: Relative(122), location: 847 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(104), source: Relative(92) }, Load { destination: Relative(92), source_pointer: Relative(106) }, Const { destination: Relative(122), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(123), op: Equals, bit_size: U32, lhs: Relative(122), rhs: Relative(92) }, Not { destination: Relative(123), source: Relative(123), bit_size: U1 }, JumpIf { condition: Relative(123), location: 855 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(106), source: Relative(92) }, Load { destination: Relative(92), source_pointer: Relative(109) }, Const { destination: Relative(123), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(124), op: Equals, bit_size: U32, lhs: Relative(123), rhs: Relative(92) }, Not { destination: Relative(124), source: Relative(124), bit_size: U1 }, JumpIf { condition: Relative(124), location: 863 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(109), source: Relative(92) }, Load { destination: Relative(92), source_pointer: Relative(111) }, Const { destination: Relative(124), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(125), op: Equals, bit_size: U32, lhs: Relative(124), rhs: Relative(92) }, Not { destination: Relative(125), source: Relative(125), bit_size: U1 }, JumpIf { condition: Relative(125), location: 871 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(111), source: Relative(92) }, Load { destination: Relative(92), source_pointer: Relative(75) }, Const { destination: Relative(125), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(126), op: Equals, bit_size: U32, lhs: Relative(125), rhs: Relative(92) }, Not { destination: Relative(126), source: Relative(126), bit_size: U1 }, JumpIf { condition: Relative(126), location: 879 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(92), rhs: Direct(2) }, Store { destination_pointer: Relative(75), source: Relative(92) }, BinaryIntOp { destination: Relative(92), op: Add, bit_size: U32, lhs: Relative(109), rhs: Relative(9) }, Load { destination: Relative(75), source_pointer: Relative(92) }, BinaryIntOp { destination: Relative(126), op: Add, bit_size: U32, lhs: Relative(109), rhs: Relative(2) }, Load { destination: Relative(92), source_pointer: Relative(126) }, BinaryFieldOp { destination: Relative(126), op: Equals, lhs: Relative(75), rhs: Relative(68) }, JumpIf { condition: Relative(126), location: 889 }, Const { destination: Relative(127), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(127) } }, BinaryFieldOp { destination: Relative(68), op: Equals, lhs: Relative(92), rhs: Relative(70) }, JumpIf { condition: Relative(68), location: 893 }, Const { destination: Relative(75), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(75) } }, Load { destination: Relative(68), source_pointer: Relative(102) }, Const { destination: Relative(70), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(75), op: Equals, bit_size: U32, lhs: Relative(70), rhs: Relative(68) }, Not { destination: Relative(75), source: Relative(75), bit_size: U1 }, JumpIf { condition: Relative(75), location: 899 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(102), source: Relative(68) }, Load { destination: Relative(68), source_pointer: Relative(104) }, Const { destination: Relative(75), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(92), op: Equals, bit_size: U32, lhs: Relative(75), rhs: Relative(68) }, Not { destination: Relative(92), source: Relative(92), bit_size: U1 }, JumpIf { condition: Relative(92), location: 907 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(104), source: Relative(68) }, Load { destination: Relative(68), source_pointer: Relative(106) }, Const { destination: Relative(92), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(126), op: Equals, bit_size: U32, lhs: Relative(92), rhs: Relative(68) }, Not { destination: Relative(126), source: Relative(126), bit_size: U1 }, JumpIf { condition: Relative(126), location: 915 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(106), source: Relative(68) }, Load { destination: Relative(68), source_pointer: Relative(109) }, Const { destination: Relative(126), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(127), op: Equals, bit_size: U32, lhs: Relative(126), rhs: Relative(68) }, Not { destination: Relative(127), source: Relative(127), bit_size: U1 }, JumpIf { condition: Relative(127), location: 923 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(109), source: Relative(68) }, Load { destination: Relative(68), source_pointer: Relative(111) }, Const { destination: Relative(127), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(128), op: Equals, bit_size: U32, lhs: Relative(127), rhs: Relative(68) }, Not { destination: Relative(128), source: Relative(128), bit_size: U1 }, JumpIf { condition: Relative(128), location: 931 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(111), source: Relative(68) }, Load { destination: Relative(68), source_pointer: Relative(102) }, Const { destination: Relative(128), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(129), op: Equals, bit_size: U32, lhs: Relative(128), rhs: Relative(68) }, Not { destination: Relative(129), source: Relative(129), bit_size: U1 }, JumpIf { condition: Relative(129), location: 939 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(102), source: Relative(68) }, Load { destination: Relative(68), source_pointer: Relative(104) }, Const { destination: Relative(102), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(129), op: Equals, bit_size: U32, lhs: Relative(102), rhs: Relative(68) }, Not { destination: Relative(129), source: Relative(129), bit_size: U1 }, JumpIf { condition: Relative(129), location: 947 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(104), source: Relative(68) }, Load { destination: Relative(68), source_pointer: Relative(106) }, Const { destination: Relative(104), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(129), op: Equals, bit_size: U32, lhs: Relative(104), rhs: Relative(68) }, Not { destination: Relative(129), source: Relative(129), bit_size: U1 }, JumpIf { condition: Relative(129), location: 955 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(106), source: Relative(68) }, Load { destination: Relative(68), source_pointer: Relative(109) }, Const { destination: Relative(106), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(129), op: Equals, bit_size: U32, lhs: Relative(106), rhs: Relative(68) }, Not { destination: Relative(129), source: Relative(129), bit_size: U1 }, JumpIf { condition: Relative(129), location: 963 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(109), source: Relative(68) }, Load { destination: Relative(68), source_pointer: Relative(111) }, Const { destination: Relative(109), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(129), op: Equals, bit_size: U32, lhs: Relative(109), rhs: Relative(68) }, Not { destination: Relative(129), source: Relative(129), bit_size: U1 }, JumpIf { condition: Relative(129), location: 971 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, Store { destination_pointer: Relative(111), source: Relative(68) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(68) }, Load { destination: Relative(8), source_pointer: Relative(129) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(129), rhs: Relative(31) }, Load { destination: Relative(111), source_pointer: Relative(130) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(34) }, Load { destination: Relative(129), source_pointer: Relative(131) }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(132), op: Add, bit_size: U32, lhs: Relative(131), rhs: Relative(37) }, Load { destination: Relative(130), source_pointer: Relative(132) }, BinaryIntOp { destination: Relative(132), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(133), op: Add, bit_size: U32, lhs: Relative(132), rhs: Relative(40) }, Load { destination: Relative(131), source_pointer: Relative(133) }, BinaryIntOp { destination: Relative(133), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(134), op: Add, bit_size: U32, lhs: Relative(133), rhs: Relative(43) }, Load { destination: Relative(132), source_pointer: Relative(134) }, BinaryIntOp { destination: Relative(134), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(135), op: Add, bit_size: U32, lhs: Relative(134), rhs: Relative(46) }, Load { destination: Relative(133), source_pointer: Relative(135) }, BinaryIntOp { destination: Relative(135), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(136), op: Add, bit_size: U32, lhs: Relative(135), rhs: Relative(49) }, Load { destination: Relative(134), source_pointer: Relative(136) }, BinaryIntOp { destination: Relative(136), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(137), op: Add, bit_size: U32, lhs: Relative(136), rhs: Relative(52) }, Load { destination: Relative(135), source_pointer: Relative(137) }, BinaryIntOp { destination: Relative(137), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(138), op: Add, bit_size: U32, lhs: Relative(137), rhs: Relative(55) }, Load { destination: Relative(136), source_pointer: Relative(138) }, BinaryIntOp { destination: Relative(138), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(138), rhs: Relative(58) }, Load { destination: Relative(137), source_pointer: Relative(139) }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(139), rhs: Relative(61) }, Load { destination: Relative(138), source_pointer: Relative(140) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(140), rhs: Relative(64) }, Load { destination: Relative(139), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(142), op: Add, bit_size: U32, lhs: Relative(141), rhs: Relative(67) }, Load { destination: Relative(140), source_pointer: Relative(142) }, Load { destination: Relative(141), source_pointer: Relative(111) }, Const { destination: Relative(142), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(143), op: Equals, bit_size: U32, lhs: Relative(142), rhs: Relative(141) }, Not { destination: Relative(143), source: Relative(143), bit_size: U1 }, JumpIf { condition: Relative(143), location: 1022 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(141), rhs: Direct(2) }, Store { destination_pointer: Relative(111), source: Relative(141) }, Mov { destination: Direct(32771), source: Relative(111) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 3 }, Call { location: 2825 }, Mov { destination: Relative(141), source: Direct(32773) }, BinaryIntOp { destination: Relative(143), op: Add, bit_size: U32, lhs: Relative(141), rhs: Direct(2) }, BinaryIntOp { destination: Relative(144), op: Add, bit_size: U32, lhs: Relative(143), rhs: Relative(1) }, Store { destination_pointer: Relative(144), source: Relative(97) }, Mov { destination: Direct(32771), source: Relative(101) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(111), source: Direct(32773) }, BinaryIntOp { destination: Relative(143), op: Add, bit_size: U32, lhs: Relative(111), rhs: Direct(2) }, BinaryIntOp { destination: Relative(144), op: Add, bit_size: U32, lhs: Relative(143), rhs: Relative(69) }, Store { destination_pointer: Relative(144), source: Relative(8) }, Mov { destination: Direct(32771), source: Relative(111) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(143), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(17) }, Store { destination_pointer: Relative(143), source: Relative(141) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(101), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(32) }, Store { destination_pointer: Relative(141), source: Relative(129) }, Mov { destination: Direct(32771), source: Relative(101) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(35) }, Store { destination_pointer: Relative(129), source: Relative(130) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(101), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(38) }, Store { destination_pointer: Relative(129), source: Relative(131) }, Mov { destination: Direct(32771), source: Relative(101) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(41) }, Store { destination_pointer: Relative(129), source: Relative(132) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(101), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(44) }, Store { destination_pointer: Relative(129), source: Relative(133) }, Mov { destination: Direct(32771), source: Relative(101) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(47) }, Store { destination_pointer: Relative(129), source: Relative(134) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(101), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(50) }, Store { destination_pointer: Relative(129), source: Relative(135) }, Mov { destination: Direct(32771), source: Relative(101) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(53) }, Store { destination_pointer: Relative(129), source: Relative(136) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(101), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(56) }, Store { destination_pointer: Relative(129), source: Relative(137) }, Mov { destination: Direct(32771), source: Relative(101) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(59) }, Store { destination_pointer: Relative(129), source: Relative(138) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(101), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(62) }, Store { destination_pointer: Relative(129), source: Relative(139) }, Mov { destination: Direct(32771), source: Relative(101) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(65) }, Store { destination_pointer: Relative(129), source: Relative(140) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(68) }, Load { destination: Relative(101), source_pointer: Relative(129) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(129), rhs: Relative(31) }, Load { destination: Relative(111), source_pointer: Relative(130) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(34) }, Load { destination: Relative(129), source_pointer: Relative(131) }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(132), op: Add, bit_size: U32, lhs: Relative(131), rhs: Relative(37) }, Load { destination: Relative(130), source_pointer: Relative(132) }, BinaryIntOp { destination: Relative(132), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(133), op: Add, bit_size: U32, lhs: Relative(132), rhs: Relative(40) }, Load { destination: Relative(131), source_pointer: Relative(133) }, BinaryIntOp { destination: Relative(133), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(134), op: Add, bit_size: U32, lhs: Relative(133), rhs: Relative(43) }, Load { destination: Relative(132), source_pointer: Relative(134) }, BinaryIntOp { destination: Relative(134), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(135), op: Add, bit_size: U32, lhs: Relative(134), rhs: Relative(46) }, Load { destination: Relative(133), source_pointer: Relative(135) }, BinaryIntOp { destination: Relative(135), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(136), op: Add, bit_size: U32, lhs: Relative(135), rhs: Relative(49) }, Load { destination: Relative(134), source_pointer: Relative(136) }, BinaryIntOp { destination: Relative(136), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(137), op: Add, bit_size: U32, lhs: Relative(136), rhs: Relative(52) }, Load { destination: Relative(135), source_pointer: Relative(137) }, BinaryIntOp { destination: Relative(137), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(138), op: Add, bit_size: U32, lhs: Relative(137), rhs: Relative(55) }, Load { destination: Relative(136), source_pointer: Relative(138) }, BinaryIntOp { destination: Relative(138), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(138), rhs: Relative(58) }, Load { destination: Relative(137), source_pointer: Relative(139) }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(139), rhs: Relative(61) }, Load { destination: Relative(138), source_pointer: Relative(140) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(140), rhs: Relative(64) }, Load { destination: Relative(139), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(143), op: Add, bit_size: U32, lhs: Relative(141), rhs: Relative(67) }, Load { destination: Relative(140), source_pointer: Relative(143) }, Load { destination: Relative(141), source_pointer: Relative(111) }, Const { destination: Relative(143), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(144), op: Equals, bit_size: U32, lhs: Relative(143), rhs: Relative(141) }, Not { destination: Relative(144), source: Relative(144), bit_size: U1 }, JumpIf { condition: Relative(144), location: 1177 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(141), rhs: Direct(2) }, Store { destination_pointer: Relative(111), source: Relative(141) }, Const { destination: Relative(141), bit_size: Integer(U32), value: 30 }, Mov { destination: Direct(32771), source: Relative(111) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 3 }, Call { location: 2825 }, Mov { destination: Relative(144), source: Direct(32773) }, BinaryIntOp { destination: Relative(145), op: Add, bit_size: U32, lhs: Relative(144), rhs: Direct(2) }, BinaryIntOp { destination: Relative(146), op: Add, bit_size: U32, lhs: Relative(145), rhs: Relative(29) }, Store { destination_pointer: Relative(146), source: Relative(141) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(29), source: Direct(32773) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, BinaryIntOp { destination: Relative(145), op: Add, bit_size: U32, lhs: Relative(111), rhs: Relative(69) }, Store { destination_pointer: Relative(145), source: Relative(101) }, Mov { destination: Direct(32771), source: Relative(29) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(17) }, Store { destination_pointer: Relative(111), source: Relative(144) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(29), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(32) }, Store { destination_pointer: Relative(111), source: Relative(129) }, Mov { destination: Direct(32771), source: Relative(29) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(35) }, Store { destination_pointer: Relative(111), source: Relative(130) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(29), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(38) }, Store { destination_pointer: Relative(111), source: Relative(131) }, Mov { destination: Direct(32771), source: Relative(29) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(41) }, Store { destination_pointer: Relative(111), source: Relative(132) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(29), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(44) }, Store { destination_pointer: Relative(111), source: Relative(133) }, Mov { destination: Direct(32771), source: Relative(29) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(47) }, Store { destination_pointer: Relative(111), source: Relative(134) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(29), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(50) }, Store { destination_pointer: Relative(111), source: Relative(135) }, Mov { destination: Direct(32771), source: Relative(29) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(53) }, Store { destination_pointer: Relative(111), source: Relative(136) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(29), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(56) }, Store { destination_pointer: Relative(111), source: Relative(137) }, Mov { destination: Direct(32771), source: Relative(29) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(59) }, Store { destination_pointer: Relative(111), source: Relative(138) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(29), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(62) }, Store { destination_pointer: Relative(111), source: Relative(139) }, Mov { destination: Direct(32771), source: Relative(29) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(101), rhs: Relative(65) }, Store { destination_pointer: Relative(111), source: Relative(140) }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(33) }, Load { destination: Relative(29), source_pointer: Relative(101) }, BinaryIntOp { destination: Relative(111), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(42) }, Load { destination: Relative(101), source_pointer: Relative(111) }, BinaryIntOp { destination: Relative(129), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(45) }, Load { destination: Relative(111), source_pointer: Relative(129) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(57) }, Load { destination: Relative(129), source_pointer: Relative(130) }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(66) }, Load { destination: Relative(130), source_pointer: Relative(131) }, Load { destination: Relative(131), source_pointer: Relative(29) }, Const { destination: Relative(132), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(133), op: Equals, bit_size: U32, lhs: Relative(132), rhs: Relative(131) }, Not { destination: Relative(133), source: Relative(133), bit_size: U1 }, JumpIf { condition: Relative(133), location: 1301 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(131), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(131) }, Load { destination: Relative(131), source_pointer: Relative(101) }, Const { destination: Relative(133), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(134), op: Equals, bit_size: U32, lhs: Relative(133), rhs: Relative(131) }, Not { destination: Relative(134), source: Relative(134), bit_size: U1 }, JumpIf { condition: Relative(134), location: 1309 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(131), rhs: Direct(2) }, Store { destination_pointer: Relative(101), source: Relative(131) }, Load { destination: Relative(131), source_pointer: Relative(111) }, Const { destination: Relative(134), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(135), op: Equals, bit_size: U32, lhs: Relative(134), rhs: Relative(131) }, Not { destination: Relative(135), source: Relative(135), bit_size: U1 }, JumpIf { condition: Relative(135), location: 1317 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(131), rhs: Direct(2) }, Store { destination_pointer: Relative(111), source: Relative(131) }, Load { destination: Relative(131), source_pointer: Relative(129) }, Const { destination: Relative(135), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(136), op: Equals, bit_size: U32, lhs: Relative(135), rhs: Relative(131) }, Not { destination: Relative(136), source: Relative(136), bit_size: U1 }, JumpIf { condition: Relative(136), location: 1325 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(131), rhs: Direct(2) }, Store { destination_pointer: Relative(129), source: Relative(131) }, Load { destination: Relative(131), source_pointer: Relative(130) }, Const { destination: Relative(136), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(137), op: Equals, bit_size: U32, lhs: Relative(136), rhs: Relative(131) }, Not { destination: Relative(137), source: Relative(137), bit_size: U1 }, JumpIf { condition: Relative(137), location: 1333 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(131), rhs: Direct(2) }, Store { destination_pointer: Relative(130), source: Relative(131) }, BinaryIntOp { destination: Relative(137), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(9) }, Load { destination: Relative(131), source_pointer: Relative(137) }, BinaryIntOp { destination: Relative(137), op: Equals, bit_size: U32, lhs: Relative(131), rhs: Relative(97) }, JumpIf { condition: Relative(137), location: 1341 }, Const { destination: Relative(138), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(138) } }, Load { destination: Relative(131), source_pointer: Relative(29) }, Const { destination: Relative(137), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(138), op: Equals, bit_size: U32, lhs: Relative(137), rhs: Relative(131) }, Not { destination: Relative(138), source: Relative(138), bit_size: U1 }, JumpIf { condition: Relative(138), location: 1347 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(131), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(131) }, Load { destination: Relative(131), source_pointer: Relative(101) }, Const { destination: Relative(138), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(139), op: Equals, bit_size: U32, lhs: Relative(138), rhs: Relative(131) }, Not { destination: Relative(139), source: Relative(139), bit_size: U1 }, JumpIf { condition: Relative(139), location: 1355 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(131), op: Add, bit_size: U32, lhs: Relative(131), rhs: Direct(2) }, Store { destination_pointer: Relative(101), source: Relative(131) }, Load { destination: Relative(101), source_pointer: Relative(111) }, Const { destination: Relative(131), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(139), op: Equals, bit_size: U32, lhs: Relative(131), rhs: Relative(101) }, Not { destination: Relative(139), source: Relative(139), bit_size: U1 }, JumpIf { condition: Relative(139), location: 1363 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, Store { destination_pointer: Relative(111), source: Relative(101) }, Load { destination: Relative(101), source_pointer: Relative(129) }, Const { destination: Relative(111), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(139), op: Equals, bit_size: U32, lhs: Relative(111), rhs: Relative(101) }, Not { destination: Relative(139), source: Relative(139), bit_size: U1 }, JumpIf { condition: Relative(139), location: 1371 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, Store { destination_pointer: Relative(129), source: Relative(101) }, Load { destination: Relative(101), source_pointer: Relative(130) }, Const { destination: Relative(129), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(139), op: Equals, bit_size: U32, lhs: Relative(129), rhs: Relative(101) }, Not { destination: Relative(139), source: Relative(139), bit_size: U1 }, JumpIf { condition: Relative(139), location: 1379 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(101), rhs: Direct(2) }, Store { destination_pointer: Relative(130), source: Relative(101) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(29), rhs: Relative(2) }, Load { destination: Relative(101), source_pointer: Relative(130) }, BinaryIntOp { destination: Relative(29), op: Equals, bit_size: U32, lhs: Relative(101), rhs: Relative(141) }, JumpIf { condition: Relative(29), location: 1387 }, Const { destination: Relative(130), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(130) } }, Const { destination: Relative(29), bit_size: Integer(U32), value: 101 }, Const { destination: Relative(101), bit_size: Integer(U32), value: 102 }, Mov { destination: Relative(130), source: Direct(1) }, Const { destination: Relative(139), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(139) }, IndirectConst { destination_pointer: Relative(130), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(130), rhs: Direct(2) }, Mov { destination: Relative(140), source: Relative(139) }, Store { destination_pointer: Relative(140), source: Relative(29) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(140), rhs: Direct(2) }, Store { destination_pointer: Relative(140), source: Relative(101) }, Mov { destination: Relative(29), source: Direct(1) }, Const { destination: Relative(101), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(101) }, IndirectConst { destination_pointer: Relative(29), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(101), op: Add, bit_size: U32, lhs: Relative(29), rhs: Direct(2) }, Mov { destination: Relative(139), source: Relative(101) }, Store { destination_pointer: Relative(139), source: Relative(4) }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(139), rhs: Direct(2) }, Store { destination_pointer: Relative(139), source: Relative(4) }, Load { destination: Relative(4), source_pointer: Relative(29) }, Const { destination: Relative(101), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(139), op: Equals, bit_size: U32, lhs: Relative(101), rhs: Relative(4) }, Not { destination: Relative(139), source: Relative(139), bit_size: U1 }, JumpIf { condition: Relative(139), location: 1413 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(4) }, Mov { destination: Relative(4), source: Direct(1) }, Const { destination: Relative(139), bit_size: Integer(U32), value: 7 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(139) }, IndirectConst { destination_pointer: Relative(4), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Mov { destination: Relative(140), source: Relative(139) }, Store { destination_pointer: Relative(140), source: Relative(6) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(140), rhs: Direct(2) }, Store { destination_pointer: Relative(140), source: Relative(6) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(140), rhs: Direct(2) }, Store { destination_pointer: Relative(140), source: Relative(29) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(140), rhs: Direct(2) }, Store { destination_pointer: Relative(140), source: Relative(6) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(140), rhs: Direct(2) }, Store { destination_pointer: Relative(140), source: Relative(6) }, BinaryIntOp { destination: Relative(140), op: Add, bit_size: U32, lhs: Relative(140), rhs: Direct(2) }, Store { destination_pointer: Relative(140), source: Relative(29) }, Const { destination: Relative(139), bit_size: Integer(U32), value: 201 }, Const { destination: Relative(140), bit_size: Integer(U32), value: 202 }, Mov { destination: Relative(141), source: Direct(1) }, Const { destination: Relative(144), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(144) }, IndirectConst { destination_pointer: Relative(141), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(144), op: Add, bit_size: U32, lhs: Relative(141), rhs: Direct(2) }, Mov { destination: Relative(145), source: Relative(144) }, Store { destination_pointer: Relative(145), source: Relative(139) }, BinaryIntOp { destination: Relative(145), op: Add, bit_size: U32, lhs: Relative(145), rhs: Direct(2) }, Store { destination_pointer: Relative(145), source: Relative(140) }, Load { destination: Relative(139), source_pointer: Relative(29) }, Const { destination: Relative(140), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(144), op: Equals, bit_size: U32, lhs: Relative(140), rhs: Relative(139) }, Not { destination: Relative(144), source: Relative(144), bit_size: U1 }, JumpIf { condition: Relative(144), location: 1449 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(139), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(139) }, Load { destination: Relative(139), source_pointer: Relative(4) }, Const { destination: Relative(144), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(145), op: Equals, bit_size: U32, lhs: Relative(144), rhs: Relative(139) }, Not { destination: Relative(145), source: Relative(145), bit_size: U1 }, JumpIf { condition: Relative(145), location: 1457 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(139), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(139) }, Const { destination: Relative(139), bit_size: Field, value: 100 }, Const { destination: Relative(145), bit_size: Field, value: 200 }, Mov { destination: Relative(146), source: Direct(1) }, Const { destination: Relative(147), bit_size: Integer(U32), value: 13 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(147) }, IndirectConst { destination_pointer: Relative(146), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(147), op: Add, bit_size: U32, lhs: Relative(146), rhs: Direct(2) }, Mov { destination: Relative(148), source: Relative(147) }, Store { destination_pointer: Relative(148), source: Relative(139) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(130) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(6) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(6) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(29) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(4) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(145) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(141) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(6) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(6) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(29) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, Store { destination_pointer: Relative(148), source: Relative(4) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(79) }, Load { destination: Relative(6), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(81) }, Load { destination: Relative(79), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(83) }, Load { destination: Relative(81), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(85) }, Load { destination: Relative(83), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(87) }, Load { destination: Relative(85), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(89) }, Load { destination: Relative(87), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(91) }, Load { destination: Relative(89), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(91), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(48) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(91) }, Load { destination: Relative(48), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(91), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(51) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(91) }, Load { destination: Relative(51), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(91), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(54) }, BinaryIntOp { destination: Relative(54), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(54), rhs: Relative(91) }, Load { destination: Relative(5), source_pointer: Relative(130) }, BinaryIntOp { destination: Relative(91), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(91), rhs: Relative(93) }, Load { destination: Relative(54), source_pointer: Relative(130) }, BinaryIntOp { destination: Relative(93), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(93), rhs: Relative(95) }, Load { destination: Relative(91), source_pointer: Relative(130) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(93), source: Direct(32773) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(93), rhs: Direct(2) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(95), rhs: Relative(96) }, Store { destination_pointer: Relative(130), source: Relative(6) }, Mov { destination: Direct(32771), source: Relative(93) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(71) }, Store { destination_pointer: Relative(95), source: Relative(79) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(71), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(79), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(78) }, Store { destination_pointer: Relative(79), source: Relative(81) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(71), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(78), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(80) }, Store { destination_pointer: Relative(78), source: Relative(83) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(71), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(78), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(82) }, Store { destination_pointer: Relative(78), source: Relative(85) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(71), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(78), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(84) }, Store { destination_pointer: Relative(78), source: Relative(87) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(71), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(78), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(86) }, Store { destination_pointer: Relative(78), source: Relative(89) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(71), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(78), op: Add, bit_size: U32, lhs: Relative(71), rhs: Relative(88) }, Store { destination_pointer: Relative(78), source: Relative(48) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(48), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(71), op: Add, bit_size: U32, lhs: Relative(48), rhs: Relative(90) }, Store { destination_pointer: Relative(71), source: Relative(51) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(48), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(51), op: Add, bit_size: U32, lhs: Relative(48), rhs: Relative(98) }, Store { destination_pointer: Relative(51), source: Relative(5) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(48), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(100) }, Store { destination_pointer: Relative(48), source: Relative(54) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(48), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(94) }, Store { destination_pointer: Relative(48), source: Relative(91) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(48), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(60) }, Store { destination_pointer: Relative(48), source: Relative(146) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 500 }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(48), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(51), op: Add, bit_size: U32, lhs: Relative(48), rhs: Relative(63) }, Store { destination_pointer: Relative(51), source: Relative(6) }, BinaryIntOp { destination: Relative(48), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(97) }, Load { destination: Relative(5), source_pointer: Relative(48) }, BinaryIntOp { destination: Relative(51), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(103) }, Load { destination: Relative(48), source_pointer: Relative(51) }, BinaryIntOp { destination: Relative(54), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(105) }, Load { destination: Relative(51), source_pointer: Relative(54) }, BinaryIntOp { destination: Relative(60), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(107) }, Load { destination: Relative(54), source_pointer: Relative(60) }, BinaryIntOp { destination: Relative(63), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(110) }, Load { destination: Relative(60), source_pointer: Relative(63) }, Load { destination: Relative(63), source_pointer: Relative(5) }, Const { destination: Relative(71), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(78), op: Equals, bit_size: U32, lhs: Relative(71), rhs: Relative(63) }, Not { destination: Relative(78), source: Relative(78), bit_size: U1 }, JumpIf { condition: Relative(78), location: 1644 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(63), op: Add, bit_size: U32, lhs: Relative(63), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(63) }, Load { destination: Relative(63), source_pointer: Relative(48) }, Const { destination: Relative(78), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(79), op: Equals, bit_size: U32, lhs: Relative(78), rhs: Relative(63) }, Not { destination: Relative(79), source: Relative(79), bit_size: U1 }, JumpIf { condition: Relative(79), location: 1652 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(63), op: Add, bit_size: U32, lhs: Relative(63), rhs: Direct(2) }, Store { destination_pointer: Relative(48), source: Relative(63) }, Load { destination: Relative(63), source_pointer: Relative(51) }, Const { destination: Relative(79), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(80), op: Equals, bit_size: U32, lhs: Relative(79), rhs: Relative(63) }, Not { destination: Relative(80), source: Relative(80), bit_size: U1 }, JumpIf { condition: Relative(80), location: 1660 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(63), op: Add, bit_size: U32, lhs: Relative(63), rhs: Direct(2) }, Store { destination_pointer: Relative(51), source: Relative(63) }, Load { destination: Relative(63), source_pointer: Relative(54) }, Const { destination: Relative(80), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(81), op: Equals, bit_size: U32, lhs: Relative(80), rhs: Relative(63) }, Not { destination: Relative(81), source: Relative(81), bit_size: U1 }, JumpIf { condition: Relative(81), location: 1668 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(63), op: Add, bit_size: U32, lhs: Relative(63), rhs: Direct(2) }, Store { destination_pointer: Relative(54), source: Relative(63) }, Load { destination: Relative(63), source_pointer: Relative(60) }, Const { destination: Relative(81), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(82), op: Equals, bit_size: U32, lhs: Relative(81), rhs: Relative(63) }, Not { destination: Relative(82), source: Relative(82), bit_size: U1 }, JumpIf { condition: Relative(82), location: 1676 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(63), op: Add, bit_size: U32, lhs: Relative(63), rhs: Direct(2) }, Store { destination_pointer: Relative(60), source: Relative(63) }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(60), rhs: Relative(9) }, Load { destination: Relative(63), source_pointer: Relative(82) }, BinaryIntOp { destination: Relative(83), op: Add, bit_size: U32, lhs: Relative(60), rhs: Relative(2) }, Load { destination: Relative(82), source_pointer: Relative(83) }, BinaryIntOp { destination: Relative(84), op: Add, bit_size: U32, lhs: Relative(60), rhs: Relative(36) }, Load { destination: Relative(83), source_pointer: Relative(84) }, BinaryIntOp { destination: Relative(85), op: Add, bit_size: U32, lhs: Relative(60), rhs: Relative(39) }, Load { destination: Relative(84), source_pointer: Relative(85) }, Load { destination: Relative(85), source_pointer: Relative(82) }, Const { destination: Relative(86), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(87), op: Equals, bit_size: U32, lhs: Relative(86), rhs: Relative(85) }, Not { destination: Relative(87), source: Relative(87), bit_size: U1 }, JumpIf { condition: Relative(87), location: 1692 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(85), op: Add, bit_size: U32, lhs: Relative(85), rhs: Direct(2) }, Store { destination_pointer: Relative(82), source: Relative(85) }, Load { destination: Relative(82), source_pointer: Relative(83) }, Const { destination: Relative(85), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(87), op: Equals, bit_size: U32, lhs: Relative(85), rhs: Relative(82) }, Not { destination: Relative(87), source: Relative(87), bit_size: U1 }, JumpIf { condition: Relative(87), location: 1700 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(82), rhs: Direct(2) }, Store { destination_pointer: Relative(83), source: Relative(82) }, Load { destination: Relative(82), source_pointer: Relative(84) }, Const { destination: Relative(83), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(87), op: Equals, bit_size: U32, lhs: Relative(83), rhs: Relative(82) }, Not { destination: Relative(87), source: Relative(87), bit_size: U1 }, JumpIf { condition: Relative(87), location: 1708 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(82), rhs: Direct(2) }, Store { destination_pointer: Relative(84), source: Relative(82) }, BinaryFieldOp { destination: Relative(82), op: Equals, lhs: Relative(63), rhs: Relative(139) }, JumpIf { condition: Relative(82), location: 1714 }, Const { destination: Relative(84), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(84) } }, Const { destination: Relative(63), bit_size: Integer(U32), value: 32 }, BinaryIntOp { destination: Relative(84), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(63) }, Load { destination: Relative(82), source_pointer: Relative(84) }, Load { destination: Relative(63), source_pointer: Relative(5) }, Const { destination: Relative(84), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(87), op: Equals, bit_size: U32, lhs: Relative(84), rhs: Relative(63) }, Not { destination: Relative(87), source: Relative(87), bit_size: U1 }, JumpIf { condition: Relative(87), location: 1723 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(63), op: Add, bit_size: U32, lhs: Relative(63), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(63) }, Load { destination: Relative(5), source_pointer: Relative(48) }, Const { destination: Relative(63), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(87), op: Equals, bit_size: U32, lhs: Relative(63), rhs: Relative(5) }, Not { destination: Relative(87), source: Relative(87), bit_size: U1 }, JumpIf { condition: Relative(87), location: 1731 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(48), source: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(51) }, Const { destination: Relative(48), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(87), op: Equals, bit_size: U32, lhs: Relative(48), rhs: Relative(5) }, Not { destination: Relative(87), source: Relative(87), bit_size: U1 }, JumpIf { condition: Relative(87), location: 1739 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(51), source: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(54) }, Const { destination: Relative(51), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(87), op: Equals, bit_size: U32, lhs: Relative(51), rhs: Relative(5) }, Not { destination: Relative(87), source: Relative(87), bit_size: U1 }, JumpIf { condition: Relative(87), location: 1747 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(54), source: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(60) }, Const { destination: Relative(54), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(87), op: Equals, bit_size: U32, lhs: Relative(54), rhs: Relative(5) }, Not { destination: Relative(87), source: Relative(87), bit_size: U1 }, JumpIf { condition: Relative(87), location: 1755 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(60), source: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(82), rhs: Relative(6) }, JumpIf { condition: Relative(5), location: 1761 }, Const { destination: Relative(60), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(60) } }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(60), op: Add, bit_size: U32, lhs: Relative(6), rhs: Relative(68) }, Load { destination: Relative(5), source_pointer: Relative(60) }, BinaryIntOp { destination: Relative(60), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(60), rhs: Relative(31) }, Load { destination: Relative(6), source_pointer: Relative(82) }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(82), rhs: Relative(34) }, Load { destination: Relative(60), source_pointer: Relative(87) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(88), op: Add, bit_size: U32, lhs: Relative(87), rhs: Relative(37) }, Load { destination: Relative(82), source_pointer: Relative(88) }, BinaryIntOp { destination: Relative(88), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(89), op: Add, bit_size: U32, lhs: Relative(88), rhs: Relative(40) }, Load { destination: Relative(87), source_pointer: Relative(89) }, BinaryIntOp { destination: Relative(89), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(90), op: Add, bit_size: U32, lhs: Relative(89), rhs: Relative(43) }, Load { destination: Relative(88), source_pointer: Relative(90) }, BinaryIntOp { destination: Relative(90), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(91), op: Add, bit_size: U32, lhs: Relative(90), rhs: Relative(46) }, Load { destination: Relative(89), source_pointer: Relative(91) }, BinaryIntOp { destination: Relative(91), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(93), op: Add, bit_size: U32, lhs: Relative(91), rhs: Relative(49) }, Load { destination: Relative(90), source_pointer: Relative(93) }, BinaryIntOp { destination: Relative(93), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(94), op: Add, bit_size: U32, lhs: Relative(93), rhs: Relative(52) }, Load { destination: Relative(91), source_pointer: Relative(94) }, BinaryIntOp { destination: Relative(94), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(94), rhs: Relative(55) }, Load { destination: Relative(93), source_pointer: Relative(95) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(95), rhs: Relative(58) }, Load { destination: Relative(94), source_pointer: Relative(96) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(97), op: Add, bit_size: U32, lhs: Relative(96), rhs: Relative(61) }, Load { destination: Relative(95), source_pointer: Relative(97) }, BinaryIntOp { destination: Relative(97), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(97), rhs: Relative(64) }, Load { destination: Relative(96), source_pointer: Relative(98) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(100), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(67) }, Load { destination: Relative(97), source_pointer: Relative(100) }, Load { destination: Relative(98), source_pointer: Relative(96) }, Const { destination: Relative(100), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(103), op: Equals, bit_size: U32, lhs: Relative(100), rhs: Relative(98) }, Not { destination: Relative(103), source: Relative(103), bit_size: U1 }, JumpIf { condition: Relative(103), location: 1809 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(98), rhs: Direct(2) }, Store { destination_pointer: Relative(96), source: Relative(98) }, BinaryIntOp { destination: Relative(98), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Relative(39) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(9) }, BinaryIntOp { destination: Relative(105), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(2) }, BinaryIntOp { destination: Relative(110), op: Add, bit_size: U32, lhs: Relative(96), rhs: Direct(2) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(110), rhs: Relative(105) }, Load { destination: Relative(107), source_pointer: Relative(130) }, BinaryIntOp { destination: Relative(110), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(30) }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(96), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(139), rhs: Relative(110) }, Load { destination: Relative(130), source_pointer: Relative(141) }, BinaryIntOp { destination: Relative(139), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(33) }, BinaryIntOp { destination: Relative(145), op: Add, bit_size: U32, lhs: Relative(96), rhs: Direct(2) }, BinaryIntOp { destination: Relative(146), op: Add, bit_size: U32, lhs: Relative(145), rhs: Relative(139) }, Load { destination: Relative(141), source_pointer: Relative(146) }, BinaryIntOp { destination: Relative(145), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(36) }, BinaryIntOp { destination: Relative(146), op: Add, bit_size: U32, lhs: Relative(96), rhs: Direct(2) }, BinaryIntOp { destination: Relative(147), op: Add, bit_size: U32, lhs: Relative(146), rhs: Relative(145) }, Load { destination: Relative(98), source_pointer: Relative(147) }, Load { destination: Relative(146), source_pointer: Relative(98) }, Const { destination: Relative(147), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(148), op: Equals, bit_size: U32, lhs: Relative(147), rhs: Relative(146) }, Not { destination: Relative(148), source: Relative(148), bit_size: U1 }, JumpIf { condition: Relative(148), location: 1835 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(146), op: Add, bit_size: U32, lhs: Relative(146), rhs: Direct(2) }, Store { destination_pointer: Relative(98), source: Relative(146) }, BinaryIntOp { destination: Relative(146), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(146), rhs: Relative(9) }, BinaryIntOp { destination: Relative(149), op: Add, bit_size: U32, lhs: Relative(98), rhs: Direct(2) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(149), rhs: Relative(30) }, Load { destination: Relative(148), source_pointer: Relative(150) }, BinaryIntOp { destination: Relative(149), op: Add, bit_size: U32, lhs: Relative(146), rhs: Relative(2) }, BinaryIntOp { destination: Relative(151), op: Add, bit_size: U32, lhs: Relative(98), rhs: Direct(2) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(151), rhs: Relative(149) }, Load { destination: Relative(150), source_pointer: Relative(152) }, Const { destination: Relative(151), bit_size: Integer(U8), value: 99 }, Mov { destination: Direct(32771), source: Relative(98) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 7 }, Call { location: 2825 }, Mov { destination: Relative(152), source: Direct(32773) }, BinaryIntOp { destination: Relative(153), op: Add, bit_size: U32, lhs: Relative(152), rhs: Direct(2) }, BinaryIntOp { destination: Relative(154), op: Add, bit_size: U32, lhs: Relative(153), rhs: Relative(146) }, Store { destination_pointer: Relative(154), source: Relative(151) }, Mov { destination: Direct(32771), source: Relative(152) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 7 }, Call { location: 2825 }, Mov { destination: Relative(98), source: Direct(32773) }, BinaryIntOp { destination: Relative(153), op: Add, bit_size: U32, lhs: Relative(98), rhs: Direct(2) }, BinaryIntOp { destination: Relative(154), op: Add, bit_size: U32, lhs: Relative(153), rhs: Relative(30) }, Store { destination_pointer: Relative(154), source: Relative(148) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(98) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 7 }, Call { location: 2825 }, Mov { destination: Relative(30), source: Direct(32773) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, BinaryIntOp { destination: Relative(153), op: Add, bit_size: U32, lhs: Relative(152), rhs: Relative(148) }, Store { destination_pointer: Relative(153), source: Relative(150) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(103), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(96) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 13 }, Call { location: 2825 }, Mov { destination: Relative(148), source: Direct(32773) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(150), rhs: Relative(98) }, Store { destination_pointer: Relative(152), source: Relative(107) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(98), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(148) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 13 }, Call { location: 2825 }, Mov { destination: Relative(107), source: Direct(32773) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(107), rhs: Direct(2) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(150), rhs: Relative(96) }, Store { destination_pointer: Relative(152), source: Relative(130) }, BinaryIntOp { destination: Relative(130), op: Add, bit_size: U32, lhs: Relative(96), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(107) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 13 }, Call { location: 2825 }, Mov { destination: Relative(148), source: Direct(32773) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(148), rhs: Direct(2) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(150), rhs: Relative(130) }, Store { destination_pointer: Relative(152), source: Relative(141) }, BinaryIntOp { destination: Relative(107), op: Add, bit_size: U32, lhs: Relative(130), rhs: Relative(9) }, Mov { destination: Direct(32771), source: Relative(148) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 13 }, Call { location: 2825 }, Mov { destination: Relative(141), source: Direct(32773) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(141), rhs: Direct(2) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(150), rhs: Relative(107) }, Store { destination_pointer: Relative(152), source: Relative(30) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(30), source: Direct(32773) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(30), rhs: Direct(2) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(148), rhs: Relative(69) }, Store { destination_pointer: Relative(150), source: Relative(5) }, Mov { destination: Direct(32771), source: Relative(30) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(17) }, Store { destination_pointer: Relative(148), source: Relative(6) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(32) }, Store { destination_pointer: Relative(30), source: Relative(60) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(35) }, Store { destination_pointer: Relative(30), source: Relative(82) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(38) }, Store { destination_pointer: Relative(30), source: Relative(87) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(41) }, Store { destination_pointer: Relative(30), source: Relative(88) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(44) }, Store { destination_pointer: Relative(30), source: Relative(89) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(47) }, Store { destination_pointer: Relative(30), source: Relative(90) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(50) }, Store { destination_pointer: Relative(30), source: Relative(91) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(53) }, Store { destination_pointer: Relative(30), source: Relative(93) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(56) }, Store { destination_pointer: Relative(30), source: Relative(94) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(59) }, Store { destination_pointer: Relative(30), source: Relative(95) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(62) }, Store { destination_pointer: Relative(30), source: Relative(141) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(65) }, Store { destination_pointer: Relative(30), source: Relative(97) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(31) }, Load { destination: Relative(6), source_pointer: Relative(30) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(60), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(40) }, Load { destination: Relative(8), source_pointer: Relative(60) }, BinaryIntOp { destination: Relative(60), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(60), rhs: Relative(43) }, Load { destination: Relative(30), source_pointer: Relative(82) }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(82), rhs: Relative(55) }, Load { destination: Relative(60), source_pointer: Relative(87) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(88), op: Add, bit_size: U32, lhs: Relative(87), rhs: Relative(64) }, Load { destination: Relative(82), source_pointer: Relative(88) }, Load { destination: Relative(87), source_pointer: Relative(6) }, Const { destination: Relative(88), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(89), op: Equals, bit_size: U32, lhs: Relative(88), rhs: Relative(87) }, Not { destination: Relative(89), source: Relative(89), bit_size: U1 }, JumpIf { condition: Relative(89), location: 2020 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(87), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(87) }, Load { destination: Relative(87), source_pointer: Relative(8) }, Const { destination: Relative(89), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(90), op: Equals, bit_size: U32, lhs: Relative(89), rhs: Relative(87) }, Not { destination: Relative(90), source: Relative(90), bit_size: U1 }, JumpIf { condition: Relative(90), location: 2028 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(87), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(87) }, Load { destination: Relative(87), source_pointer: Relative(30) }, Const { destination: Relative(90), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(91), op: Equals, bit_size: U32, lhs: Relative(90), rhs: Relative(87) }, Not { destination: Relative(91), source: Relative(91), bit_size: U1 }, JumpIf { condition: Relative(91), location: 2036 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(87), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(87) }, Load { destination: Relative(87), source_pointer: Relative(60) }, Const { destination: Relative(91), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(93), op: Equals, bit_size: U32, lhs: Relative(91), rhs: Relative(87) }, Not { destination: Relative(93), source: Relative(93), bit_size: U1 }, JumpIf { condition: Relative(93), location: 2044 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(87), rhs: Direct(2) }, Store { destination_pointer: Relative(60), source: Relative(87) }, Load { destination: Relative(87), source_pointer: Relative(82) }, Const { destination: Relative(93), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(94), op: Equals, bit_size: U32, lhs: Relative(93), rhs: Relative(87) }, Not { destination: Relative(94), source: Relative(94), bit_size: U1 }, JumpIf { condition: Relative(94), location: 2052 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(87), rhs: Direct(2) }, Store { destination_pointer: Relative(82), source: Relative(87) }, BinaryIntOp { destination: Relative(94), op: Add, bit_size: U32, lhs: Relative(82), rhs: Direct(2) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(94), rhs: Relative(103) }, Load { destination: Relative(87), source_pointer: Relative(95) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(82), rhs: Direct(2) }, BinaryIntOp { destination: Relative(97), op: Add, bit_size: U32, lhs: Relative(95), rhs: Relative(139) }, Load { destination: Relative(94), source_pointer: Relative(97) }, BinaryIntOp { destination: Relative(97), op: Add, bit_size: U32, lhs: Relative(82), rhs: Direct(2) }, BinaryIntOp { destination: Relative(141), op: Add, bit_size: U32, lhs: Relative(97), rhs: Relative(145) }, Load { destination: Relative(95), source_pointer: Relative(141) }, Load { destination: Relative(97), source_pointer: Relative(87) }, Const { destination: Relative(141), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(148), op: Equals, bit_size: U32, lhs: Relative(141), rhs: Relative(97) }, Not { destination: Relative(148), source: Relative(148), bit_size: U1 }, JumpIf { condition: Relative(148), location: 2069 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(97), op: Add, bit_size: U32, lhs: Relative(97), rhs: Direct(2) }, Store { destination_pointer: Relative(87), source: Relative(97) }, Load { destination: Relative(87), source_pointer: Relative(94) }, Const { destination: Relative(97), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(148), op: Equals, bit_size: U32, lhs: Relative(97), rhs: Relative(87) }, Not { destination: Relative(148), source: Relative(148), bit_size: U1 }, JumpIf { condition: Relative(148), location: 2077 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(87), rhs: Direct(2) }, Store { destination_pointer: Relative(94), source: Relative(87) }, Load { destination: Relative(87), source_pointer: Relative(95) }, Const { destination: Relative(94), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(148), op: Equals, bit_size: U32, lhs: Relative(94), rhs: Relative(87) }, Not { destination: Relative(148), source: Relative(148), bit_size: U1 }, JumpIf { condition: Relative(148), location: 2085 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(87), rhs: Direct(2) }, Store { destination_pointer: Relative(95), source: Relative(87) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(95), rhs: Direct(2) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(148), rhs: Relative(146) }, Load { destination: Relative(87), source_pointer: Relative(150) }, BinaryIntOp { destination: Relative(148), op: Add, bit_size: U32, lhs: Relative(95), rhs: Direct(2) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(148), rhs: Relative(149) }, Load { destination: Relative(146), source_pointer: Relative(150) }, Load { destination: Relative(95), source_pointer: Relative(146) }, Const { destination: Relative(148), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(149), op: Equals, bit_size: U32, lhs: Relative(148), rhs: Relative(95) }, Not { destination: Relative(149), source: Relative(149), bit_size: U1 }, JumpIf { condition: Relative(149), location: 2099 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(95), rhs: Direct(2) }, Store { destination_pointer: Relative(146), source: Relative(95) }, BinaryIntOp { destination: Relative(95), op: Equals, bit_size: U8, lhs: Relative(87), rhs: Relative(151) }, JumpIf { condition: Relative(95), location: 2105 }, Const { destination: Relative(146), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(146) } }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(146), op: Add, bit_size: U32, lhs: Relative(95), rhs: Relative(68) }, Load { destination: Relative(87), source_pointer: Relative(146) }, BinaryIntOp { destination: Relative(146), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(149), op: Add, bit_size: U32, lhs: Relative(146), rhs: Relative(34) }, Load { destination: Relative(95), source_pointer: Relative(149) }, BinaryIntOp { destination: Relative(149), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(149), rhs: Relative(37) }, Load { destination: Relative(146), source_pointer: Relative(150) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(151), op: Add, bit_size: U32, lhs: Relative(150), rhs: Relative(46) }, Load { destination: Relative(149), source_pointer: Relative(151) }, BinaryIntOp { destination: Relative(151), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(151), rhs: Relative(49) }, Load { destination: Relative(150), source_pointer: Relative(152) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(153), op: Add, bit_size: U32, lhs: Relative(152), rhs: Relative(52) }, Load { destination: Relative(151), source_pointer: Relative(153) }, BinaryIntOp { destination: Relative(153), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(154), op: Add, bit_size: U32, lhs: Relative(153), rhs: Relative(58) }, Load { destination: Relative(152), source_pointer: Relative(154) }, BinaryIntOp { destination: Relative(154), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(155), op: Add, bit_size: U32, lhs: Relative(154), rhs: Relative(61) }, Load { destination: Relative(153), source_pointer: Relative(155) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(154), source: Direct(32773) }, BinaryIntOp { destination: Relative(155), op: Add, bit_size: U32, lhs: Relative(154), rhs: Direct(2) }, BinaryIntOp { destination: Relative(156), op: Add, bit_size: U32, lhs: Relative(155), rhs: Relative(69) }, Store { destination_pointer: Relative(156), source: Relative(87) }, Mov { destination: Direct(32771), source: Relative(154) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(155), op: Add, bit_size: U32, lhs: Relative(87), rhs: Relative(17) }, Store { destination_pointer: Relative(155), source: Relative(6) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(154), op: Add, bit_size: U32, lhs: Relative(87), rhs: Relative(32) }, Store { destination_pointer: Relative(154), source: Relative(95) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(87), rhs: Relative(35) }, Store { destination_pointer: Relative(95), source: Relative(146) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(87), rhs: Relative(38) }, Store { destination_pointer: Relative(95), source: Relative(8) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(41) }, Store { destination_pointer: Relative(87), source: Relative(30) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(44) }, Store { destination_pointer: Relative(30), source: Relative(149) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(47) }, Store { destination_pointer: Relative(30), source: Relative(150) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(50) }, Store { destination_pointer: Relative(30), source: Relative(151) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(53) }, Store { destination_pointer: Relative(30), source: Relative(60) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(56) }, Store { destination_pointer: Relative(30), source: Relative(152) }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(59) }, Store { destination_pointer: Relative(30), source: Relative(153) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(6), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(62) }, Store { destination_pointer: Relative(30), source: Relative(82) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 100 }, Mov { destination: Direct(32771), source: Relative(6) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(8), source: Direct(32773) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(60), op: Add, bit_size: U32, lhs: Relative(30), rhs: Relative(65) }, Store { destination_pointer: Relative(60), source: Relative(5) }, BinaryIntOp { destination: Relative(30), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(33) }, Load { destination: Relative(6), source_pointer: Relative(30) }, BinaryIntOp { destination: Relative(60), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(42) }, Load { destination: Relative(30), source_pointer: Relative(60) }, BinaryIntOp { destination: Relative(82), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(45) }, Load { destination: Relative(60), source_pointer: Relative(82) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(57) }, Load { destination: Relative(82), source_pointer: Relative(87) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(66) }, Load { destination: Relative(87), source_pointer: Relative(95) }, BinaryIntOp { destination: Relative(146), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(3) }, Load { destination: Relative(95), source_pointer: Relative(146) }, Load { destination: Relative(3), source_pointer: Relative(6) }, Const { destination: Relative(146), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(149), op: Equals, bit_size: U32, lhs: Relative(146), rhs: Relative(3) }, Not { destination: Relative(149), source: Relative(149), bit_size: U1 }, JumpIf { condition: Relative(149), location: 2246 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(3) }, Load { destination: Relative(3), source_pointer: Relative(30) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(149), op: Equals, bit_size: U32, lhs: Relative(6), rhs: Relative(3) }, Not { destination: Relative(149), source: Relative(149), bit_size: U1 }, JumpIf { condition: Relative(149), location: 2254 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(30), source: Relative(3) }, Load { destination: Relative(3), source_pointer: Relative(60) }, Const { destination: Relative(30), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(149), op: Equals, bit_size: U32, lhs: Relative(30), rhs: Relative(3) }, Not { destination: Relative(149), source: Relative(149), bit_size: U1 }, JumpIf { condition: Relative(149), location: 2262 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(60), source: Relative(3) }, Load { destination: Relative(3), source_pointer: Relative(82) }, Const { destination: Relative(60), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(149), op: Equals, bit_size: U32, lhs: Relative(60), rhs: Relative(3) }, Not { destination: Relative(149), source: Relative(149), bit_size: U1 }, JumpIf { condition: Relative(149), location: 2270 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(82), source: Relative(3) }, Load { destination: Relative(3), source_pointer: Relative(87) }, Const { destination: Relative(82), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(149), op: Equals, bit_size: U32, lhs: Relative(82), rhs: Relative(3) }, Not { destination: Relative(149), source: Relative(149), bit_size: U1 }, JumpIf { condition: Relative(149), location: 2278 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(87), source: Relative(3) }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U32, lhs: Relative(95), rhs: Relative(5) }, JumpIf { condition: Relative(3), location: 2284 }, Const { destination: Relative(87), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(87) } }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(68) }, Load { destination: Relative(3), source_pointer: Relative(87) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(87), rhs: Relative(31) }, Load { destination: Relative(5), source_pointer: Relative(95) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(149), op: Add, bit_size: U32, lhs: Relative(95), rhs: Relative(34) }, Load { destination: Relative(87), source_pointer: Relative(149) }, BinaryIntOp { destination: Relative(149), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(149), rhs: Relative(37) }, Load { destination: Relative(95), source_pointer: Relative(150) }, BinaryIntOp { destination: Relative(150), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(151), op: Add, bit_size: U32, lhs: Relative(150), rhs: Relative(40) }, Load { destination: Relative(149), source_pointer: Relative(151) }, BinaryIntOp { destination: Relative(151), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(151), rhs: Relative(43) }, Load { destination: Relative(150), source_pointer: Relative(152) }, BinaryIntOp { destination: Relative(152), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(153), op: Add, bit_size: U32, lhs: Relative(152), rhs: Relative(46) }, Load { destination: Relative(151), source_pointer: Relative(153) }, BinaryIntOp { destination: Relative(153), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(154), op: Add, bit_size: U32, lhs: Relative(153), rhs: Relative(49) }, Load { destination: Relative(152), source_pointer: Relative(154) }, BinaryIntOp { destination: Relative(154), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(155), op: Add, bit_size: U32, lhs: Relative(154), rhs: Relative(52) }, Load { destination: Relative(153), source_pointer: Relative(155) }, BinaryIntOp { destination: Relative(155), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(156), op: Add, bit_size: U32, lhs: Relative(155), rhs: Relative(55) }, Load { destination: Relative(154), source_pointer: Relative(156) }, BinaryIntOp { destination: Relative(156), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(157), op: Add, bit_size: U32, lhs: Relative(156), rhs: Relative(58) }, Load { destination: Relative(155), source_pointer: Relative(157) }, BinaryIntOp { destination: Relative(157), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(158), op: Add, bit_size: U32, lhs: Relative(157), rhs: Relative(61) }, Load { destination: Relative(156), source_pointer: Relative(158) }, BinaryIntOp { destination: Relative(158), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(159), op: Add, bit_size: U32, lhs: Relative(158), rhs: Relative(64) }, Load { destination: Relative(157), source_pointer: Relative(159) }, BinaryIntOp { destination: Relative(159), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, BinaryIntOp { destination: Relative(160), op: Add, bit_size: U32, lhs: Relative(159), rhs: Relative(67) }, Load { destination: Relative(158), source_pointer: Relative(160) }, Load { destination: Relative(159), source_pointer: Relative(157) }, Const { destination: Relative(160), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(161), op: Equals, bit_size: U32, lhs: Relative(160), rhs: Relative(159) }, Not { destination: Relative(161), source: Relative(161), bit_size: U1 }, JumpIf { condition: Relative(161), location: 2332 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(159), op: Add, bit_size: U32, lhs: Relative(159), rhs: Direct(2) }, Store { destination_pointer: Relative(157), source: Relative(159) }, BinaryIntOp { destination: Relative(161), op: Add, bit_size: U32, lhs: Relative(157), rhs: Direct(2) }, BinaryIntOp { destination: Relative(162), op: Add, bit_size: U32, lhs: Relative(161), rhs: Relative(103) }, Load { destination: Relative(159), source_pointer: Relative(162) }, BinaryIntOp { destination: Relative(162), op: Add, bit_size: U32, lhs: Relative(157), rhs: Direct(2) }, BinaryIntOp { destination: Relative(163), op: Add, bit_size: U32, lhs: Relative(162), rhs: Relative(105) }, Load { destination: Relative(161), source_pointer: Relative(163) }, BinaryIntOp { destination: Relative(162), op: Add, bit_size: U32, lhs: Relative(157), rhs: Direct(2) }, BinaryIntOp { destination: Relative(163), op: Add, bit_size: U32, lhs: Relative(162), rhs: Relative(110) }, Load { destination: Relative(105), source_pointer: Relative(163) }, BinaryIntOp { destination: Relative(162), op: Add, bit_size: U32, lhs: Relative(157), rhs: Direct(2) }, BinaryIntOp { destination: Relative(163), op: Add, bit_size: U32, lhs: Relative(162), rhs: Relative(139) }, Load { destination: Relative(110), source_pointer: Relative(163) }, BinaryIntOp { destination: Relative(162), op: Add, bit_size: U32, lhs: Relative(157), rhs: Direct(2) }, BinaryIntOp { destination: Relative(163), op: Add, bit_size: U32, lhs: Relative(162), rhs: Relative(145) }, Load { destination: Relative(139), source_pointer: Relative(163) }, Load { destination: Relative(145), source_pointer: Relative(159) }, Const { destination: Relative(162), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(163), op: Equals, bit_size: U32, lhs: Relative(162), rhs: Relative(145) }, Not { destination: Relative(163), source: Relative(163), bit_size: U1 }, JumpIf { condition: Relative(163), location: 2355 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(145), op: Add, bit_size: U32, lhs: Relative(145), rhs: Direct(2) }, Store { destination_pointer: Relative(159), source: Relative(145) }, Const { destination: Relative(145), bit_size: Integer(U32), value: 301 }, Mov { destination: Direct(32771), source: Relative(159) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 3 }, Call { location: 2825 }, Mov { destination: Relative(163), source: Direct(32773) }, BinaryIntOp { destination: Relative(164), op: Add, bit_size: U32, lhs: Relative(163), rhs: Direct(2) }, BinaryIntOp { destination: Relative(165), op: Add, bit_size: U32, lhs: Relative(164), rhs: Relative(1) }, Store { destination_pointer: Relative(165), source: Relative(145) }, Mov { destination: Direct(32771), source: Relative(157) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 13 }, Call { location: 2825 }, Mov { destination: Relative(159), source: Direct(32773) }, BinaryIntOp { destination: Relative(164), op: Add, bit_size: U32, lhs: Relative(159), rhs: Direct(2) }, BinaryIntOp { destination: Relative(165), op: Add, bit_size: U32, lhs: Relative(164), rhs: Relative(103) }, Store { destination_pointer: Relative(165), source: Relative(163) }, Mov { destination: Direct(32771), source: Relative(159) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 13 }, Call { location: 2825 }, Mov { destination: Relative(103), source: Direct(32773) }, BinaryIntOp { destination: Relative(157), op: Add, bit_size: U32, lhs: Relative(103), rhs: Direct(2) }, BinaryIntOp { destination: Relative(163), op: Add, bit_size: U32, lhs: Relative(157), rhs: Relative(98) }, Store { destination_pointer: Relative(163), source: Relative(161) }, Mov { destination: Direct(32771), source: Relative(103) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 13 }, Call { location: 2825 }, Mov { destination: Relative(98), source: Direct(32773) }, BinaryIntOp { destination: Relative(157), op: Add, bit_size: U32, lhs: Relative(98), rhs: Direct(2) }, BinaryIntOp { destination: Relative(159), op: Add, bit_size: U32, lhs: Relative(157), rhs: Relative(96) }, Store { destination_pointer: Relative(159), source: Relative(105) }, Mov { destination: Direct(32771), source: Relative(98) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 13 }, Call { location: 2825 }, Mov { destination: Relative(96), source: Direct(32773) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(96), rhs: Direct(2) }, BinaryIntOp { destination: Relative(105), op: Add, bit_size: U32, lhs: Relative(103), rhs: Relative(130) }, Store { destination_pointer: Relative(105), source: Relative(110) }, Mov { destination: Direct(32771), source: Relative(96) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 13 }, Call { location: 2825 }, Mov { destination: Relative(98), source: Direct(32773) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(98), rhs: Direct(2) }, BinaryIntOp { destination: Relative(105), op: Add, bit_size: U32, lhs: Relative(103), rhs: Relative(107) }, Store { destination_pointer: Relative(105), source: Relative(139) }, Mov { destination: Direct(32771), source: Relative(8) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(96), source: Direct(32773) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(96), rhs: Direct(2) }, BinaryIntOp { destination: Relative(105), op: Add, bit_size: U32, lhs: Relative(103), rhs: Relative(69) }, Store { destination_pointer: Relative(105), source: Relative(3) }, Mov { destination: Direct(32771), source: Relative(96) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(3), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(103), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(17) }, Store { destination_pointer: Relative(103), source: Relative(5) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(32) }, Store { destination_pointer: Relative(96), source: Relative(87) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(3), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(35) }, Store { destination_pointer: Relative(87), source: Relative(95) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(38) }, Store { destination_pointer: Relative(87), source: Relative(149) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(3), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(41) }, Store { destination_pointer: Relative(87), source: Relative(150) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(44) }, Store { destination_pointer: Relative(87), source: Relative(151) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(3), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(47) }, Store { destination_pointer: Relative(87), source: Relative(152) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(50) }, Store { destination_pointer: Relative(87), source: Relative(153) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(3), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(53) }, Store { destination_pointer: Relative(87), source: Relative(154) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(56) }, Store { destination_pointer: Relative(87), source: Relative(155) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(3), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(59) }, Store { destination_pointer: Relative(87), source: Relative(156) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(5), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(62) }, Store { destination_pointer: Relative(87), source: Relative(98) }, Mov { destination: Direct(32771), source: Relative(5) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(3), source: Direct(32773) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(65) }, Store { destination_pointer: Relative(87), source: Relative(158) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(33) }, Load { destination: Relative(5), source_pointer: Relative(8) }, BinaryIntOp { destination: Relative(87), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(42) }, Load { destination: Relative(8), source_pointer: Relative(87) }, BinaryIntOp { destination: Relative(95), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(45) }, Load { destination: Relative(87), source_pointer: Relative(95) }, BinaryIntOp { destination: Relative(96), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(57) }, Load { destination: Relative(95), source_pointer: Relative(96) }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(66) }, Load { destination: Relative(96), source_pointer: Relative(98) }, Load { destination: Relative(98), source_pointer: Relative(5) }, Const { destination: Relative(103), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(105), op: Equals, bit_size: U32, lhs: Relative(103), rhs: Relative(98) }, Not { destination: Relative(105), source: Relative(105), bit_size: U1 }, JumpIf { condition: Relative(105), location: 2514 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(98), op: Add, bit_size: U32, lhs: Relative(98), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(98) }, Load { destination: Relative(5), source_pointer: Relative(8) }, Const { destination: Relative(98), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(105), op: Equals, bit_size: U32, lhs: Relative(98), rhs: Relative(5) }, Not { destination: Relative(105), source: Relative(105), bit_size: U1 }, JumpIf { condition: Relative(105), location: 2522 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(87) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(105), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(5) }, Not { destination: Relative(105), source: Relative(105), bit_size: U1 }, JumpIf { condition: Relative(105), location: 2530 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(87), source: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(95) }, Const { destination: Relative(87), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(105), op: Equals, bit_size: U32, lhs: Relative(87), rhs: Relative(5) }, Not { destination: Relative(105), source: Relative(105), bit_size: U1 }, JumpIf { condition: Relative(105), location: 2538 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(95), source: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(96) }, Const { destination: Relative(95), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(105), op: Equals, bit_size: U32, lhs: Relative(95), rhs: Relative(5) }, Not { destination: Relative(105), source: Relative(105), bit_size: U1 }, JumpIf { condition: Relative(105), location: 2546 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(96), source: Relative(5) }, BinaryIntOp { destination: Relative(105), op: Add, bit_size: U32, lhs: Relative(96), rhs: Relative(2) }, Load { destination: Relative(5), source_pointer: Relative(105) }, BinaryIntOp { destination: Relative(105), op: Add, bit_size: U32, lhs: Relative(96), rhs: Relative(36) }, Load { destination: Relative(2), source_pointer: Relative(105) }, BinaryIntOp { destination: Relative(105), op: Add, bit_size: U32, lhs: Relative(96), rhs: Relative(39) }, Load { destination: Relative(36), source_pointer: Relative(105) }, Load { destination: Relative(39), source_pointer: Relative(5) }, Const { destination: Relative(96), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(105), op: Equals, bit_size: U32, lhs: Relative(96), rhs: Relative(39) }, Not { destination: Relative(105), source: Relative(105), bit_size: U1 }, JumpIf { condition: Relative(105), location: 2560 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(39), op: Add, bit_size: U32, lhs: Relative(39), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(39) }, Load { destination: Relative(39), source_pointer: Relative(2) }, Const { destination: Relative(105), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(107), op: Equals, bit_size: U32, lhs: Relative(105), rhs: Relative(39) }, Not { destination: Relative(107), source: Relative(107), bit_size: U1 }, JumpIf { condition: Relative(107), location: 2568 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(39), op: Add, bit_size: U32, lhs: Relative(39), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(39) }, Load { destination: Relative(2), source_pointer: Relative(36) }, Const { destination: Relative(39), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(107), op: Equals, bit_size: U32, lhs: Relative(39), rhs: Relative(2) }, Not { destination: Relative(107), source: Relative(107), bit_size: U1 }, JumpIf { condition: Relative(107), location: 2576 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(36), source: Relative(2) }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(9) }, Load { destination: Relative(2), source_pointer: Relative(36) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(145) }, JumpIf { condition: Relative(5), location: 2584 }, Const { destination: Relative(36), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(36) } }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(68) }, Load { destination: Relative(2), source_pointer: Relative(36) }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(36), rhs: Relative(31) }, Load { destination: Relative(5), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(36), rhs: Relative(34) }, Load { destination: Relative(31), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(36), rhs: Relative(37) }, Load { destination: Relative(34), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(37), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(37), rhs: Relative(40) }, Load { destination: Relative(36), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(40), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(40), rhs: Relative(43) }, Load { destination: Relative(37), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(43), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(43), rhs: Relative(46) }, Load { destination: Relative(40), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(46), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(46), rhs: Relative(49) }, Load { destination: Relative(43), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(49), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(49), rhs: Relative(52) }, Load { destination: Relative(46), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(52), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(52), rhs: Relative(55) }, Load { destination: Relative(49), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(55), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(55), rhs: Relative(58) }, Load { destination: Relative(52), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(58), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(58), rhs: Relative(61) }, Load { destination: Relative(55), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(61), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(61), rhs: Relative(64) }, Load { destination: Relative(58), source_pointer: Relative(68) }, BinaryIntOp { destination: Relative(64), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, BinaryIntOp { destination: Relative(68), op: Add, bit_size: U32, lhs: Relative(64), rhs: Relative(67) }, Load { destination: Relative(61), source_pointer: Relative(68) }, Load { destination: Relative(64), source_pointer: Relative(36) }, Const { destination: Relative(67), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(68), op: Equals, bit_size: U32, lhs: Relative(67), rhs: Relative(64) }, Not { destination: Relative(68), source: Relative(68), bit_size: U1 }, JumpIf { condition: Relative(68), location: 2632 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(64), op: Add, bit_size: U32, lhs: Relative(64), rhs: Direct(2) }, Store { destination_pointer: Relative(36), source: Relative(64) }, Const { destination: Relative(64), bit_size: Field, value: 1000 }, Mov { destination: Direct(32771), source: Relative(36) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 3 }, Call { location: 2825 }, Mov { destination: Relative(68), source: Direct(32773) }, BinaryIntOp { destination: Relative(107), op: Add, bit_size: U32, lhs: Relative(68), rhs: Direct(2) }, BinaryIntOp { destination: Relative(110), op: Add, bit_size: U32, lhs: Relative(107), rhs: Relative(1) }, Store { destination_pointer: Relative(110), source: Relative(64) }, Mov { destination: Direct(32771), source: Relative(3) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(1), source: Direct(32773) }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(107), op: Add, bit_size: U32, lhs: Relative(36), rhs: Relative(69) }, Store { destination_pointer: Relative(107), source: Relative(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(2), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(36), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(17) }, Store { destination_pointer: Relative(36), source: Relative(5) }, Mov { destination: Direct(32771), source: Relative(2) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(1), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(32) }, Store { destination_pointer: Relative(5), source: Relative(31) }, Mov { destination: Direct(32771), source: Relative(1) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(2), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(35) }, Store { destination_pointer: Relative(5), source: Relative(34) }, Mov { destination: Direct(32771), source: Relative(2) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(1), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(38) }, Store { destination_pointer: Relative(5), source: Relative(68) }, Mov { destination: Direct(32771), source: Relative(1) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(2), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(41) }, Store { destination_pointer: Relative(5), source: Relative(37) }, Mov { destination: Direct(32771), source: Relative(2) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(1), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(44) }, Store { destination_pointer: Relative(5), source: Relative(40) }, Mov { destination: Direct(32771), source: Relative(1) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(2), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(47) }, Store { destination_pointer: Relative(5), source: Relative(43) }, Mov { destination: Direct(32771), source: Relative(2) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(1), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(50) }, Store { destination_pointer: Relative(5), source: Relative(46) }, Mov { destination: Direct(32771), source: Relative(1) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(2), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(53) }, Store { destination_pointer: Relative(5), source: Relative(49) }, Mov { destination: Direct(32771), source: Relative(2) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(1), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(56) }, Store { destination_pointer: Relative(5), source: Relative(52) }, Mov { destination: Direct(32771), source: Relative(1) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(2), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(59) }, Store { destination_pointer: Relative(5), source: Relative(55) }, Mov { destination: Direct(32771), source: Relative(2) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(1), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(62) }, Store { destination_pointer: Relative(5), source: Relative(58) }, Mov { destination: Direct(32771), source: Relative(1) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 33 }, Call { location: 2825 }, Mov { destination: Relative(2), source: Direct(32773) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(65) }, Store { destination_pointer: Relative(5), source: Relative(61) }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(33) }, Load { destination: Relative(1), source_pointer: Relative(3) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(42) }, Load { destination: Relative(3), source_pointer: Relative(5) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(45) }, Load { destination: Relative(5), source_pointer: Relative(17) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(57) }, Load { destination: Relative(17), source_pointer: Relative(31) }, BinaryIntOp { destination: Relative(32), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(66) }, Load { destination: Relative(31), source_pointer: Relative(32) }, Load { destination: Relative(2), source_pointer: Relative(1) }, Const { destination: Relative(32), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(33), op: Equals, bit_size: U32, lhs: Relative(32), rhs: Relative(2) }, Not { destination: Relative(33), source: Relative(33), bit_size: U1 }, JumpIf { condition: Relative(33), location: 2756 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Relative(1), source: Relative(2) }, Load { destination: Relative(1), source_pointer: Relative(3) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(33), op: Equals, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(33), source: Relative(33), bit_size: U1 }, JumpIf { condition: Relative(33), location: 2764 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(1) }, Load { destination: Relative(1), source_pointer: Relative(5) }, Const { destination: Relative(33), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(34), op: Equals, bit_size: U32, lhs: Relative(33), rhs: Relative(1) }, Not { destination: Relative(34), source: Relative(34), bit_size: U1 }, JumpIf { condition: Relative(34), location: 2772 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(1) }, Load { destination: Relative(1), source_pointer: Relative(17) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(34), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(1) }, Not { destination: Relative(34), source: Relative(34), bit_size: U1 }, JumpIf { condition: Relative(34), location: 2780 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(17), source: Relative(1) }, Load { destination: Relative(1), source_pointer: Relative(31) }, Const { destination: Relative(17), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(34), op: Equals, bit_size: U32, lhs: Relative(17), rhs: Relative(1) }, Not { destination: Relative(34), source: Relative(34), bit_size: U1 }, JumpIf { condition: Relative(34), location: 2788 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(31), source: Relative(1) }, BinaryIntOp { destination: Relative(31), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(9) }, Load { destination: Relative(1), source_pointer: Relative(31) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(1), rhs: Relative(64) }, JumpIf { condition: Relative(3), location: 2796 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, Load { destination: Relative(1), source_pointer: Relative(29) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(1) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 2802 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(29), source: Relative(1) }, Load { destination: Relative(1), source_pointer: Relative(4) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(29), op: Equals, bit_size: U32, lhs: Relative(9), rhs: Relative(1) }, Not { destination: Relative(29), source: Relative(29), bit_size: U1 }, JumpIf { condition: Relative(29), location: 2810 }, Call { location: 2819 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(1) }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 2818 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14225679739041873922 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32775), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32775), location: 2829 }, Jump { location: 2831 }, Mov { destination: Direct(32773), source: Direct(32771) }, Jump { location: 2846 }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 2843 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 2836 }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32774), op: Sub, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Jump { location: 2846 }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 5019202896831570965 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "",
  "file_map": {
    "5": {
      "source": "use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: TypeDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields_as_written().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(\n        s,\n        quote { $crate::cmp::Eq },\n        signature,\n        for_each_field,\n        quote { & },\n        body,\n    )\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u128 {\n    fn eq(self, other: u128) -> bool {\n        self == other\n    }\n}\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        if result {\n            for i in 0..self.len() {\n                result &= self[i].eq(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B)\nwhere\n    A: Eq,\n    B: Eq,\n{\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n{\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n{\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n    E: Eq,\n{\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: TypeDefinition) -> Quoted {\n    let name = quote { $crate::cmp::Ord };\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> $crate::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == $crate::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = $crate::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, name, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u128 {\n    fn cmp(self, other: u128) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B)\nwhere\n    A: Ord,\n    B: Ord,\n{\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n{\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n{\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n    E: Ord,\n{\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v1\n    } else {\n        v2\n    }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v2\n    } else {\n        v1\n    }\n}\n\nmod cmp_tests {\n    use super::{Eq, max, min};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0_u64, 1), 0);\n        assert_eq(min(0_u64, 0), 0);\n        assert_eq(min(1_u64, 1), 1);\n        assert_eq(min(255_u8, 0), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0_u64, 1), 1);\n        assert_eq(max(0_u64, 0), 0);\n        assert_eq(max(1_u64, 1), 1);\n        assert_eq(max(255_u8, 0), 255);\n    }\n\n    #[test]\n    fn correctly_handles_unequal_length_slices() {\n        let slice_1 = &[0, 1, 2, 3];\n        let slice_2 = &[0, 1, 2];\n        assert(!slice_1.eq(slice_2));\n    }\n}\n",
      "path": "std/cmp.nr"
    },
    "50": {
      "source": "fn main(x: u32) {\n    let mut parent_array = [Parent::default(); 2];\n\n    parent_array[x].foo.c.a = 10;\n    assert(parent_array[0].foo.c.a == 10);\n\n    parent_array[x + 1].bar = Bar { a: 1, b: 2, array: [3, 4] };\n    assert(parent_array[1].bar.a == 1);\n    assert(parent_array[1].bar.b == 2);\n\n    // Test checking the entire array\n    assert(parent_array[1].bar.array == [3, 4]);\n    // Test checking the array through indexing\n    assert(parent_array[1].bar.array[0] == 3);\n    assert(parent_array[1].bar.array[1] == 4);\n\n    parent_array[x].foo.c.array[x] = 20;\n    parent_array[x].foo.c.array[x + 1] = 30;\n    assert(parent_array[0].foo.c.array[0] == 20);\n    assert(parent_array[0].foo.c.array[1] == 30);\n\n    parent_array[x + 1].qux = Qux {\n        array: [\n            InnerFoo {\n                a: 100,\n                array: [101, 102],\n                bar: Bar::default(),\n                bar_array: [Bar::default(); 2],\n            },\n            InnerFoo {\n                a: 200,\n                array: [201, 202],\n                bar: Bar::default(),\n                bar_array: [Bar::default(); 2],\n            },\n        ],\n        a: 500,\n    };\n    assert(parent_array[1].qux.array[0].a == 100);\n    assert(parent_array[1].qux.a == 500);\n\n    // Test multiple array accesses between tuple accesses\n    parent_array[x].qux.array[x].bar_array[x].a = 99;\n    assert(parent_array[x].qux.array[x].bar_array[x].a == 99);\n\n    let mut parent_array_wrapper = ParentsWrapper { inner: parent_array };\n    parent_array_wrapper.inner[x].qux.a = 100;\n    assert(parent_array_wrapper.inner[0].qux.a == 100);\n\n    parent_array_wrapper.inner[x].qux.array[x].array[x] = 301;\n    assert(parent_array_wrapper.inner[0].qux.array[0].array[0] == 301);\n\n    // Test accessing a nested array where the value assignment\n    // starts with a member access\n    parent_array_wrapper.inner[x].foo.c.bar.array[x] = 1000;\n    assert(parent_array_wrapper.inner[0].foo.c.bar.array[0] == 1000);\n\n    parent_array_wrapper.set_foo(x);\n}\n\nstruct Baz {\n    a: u32,\n    b: u32,\n}\n\nstruct Bar {\n    a: u8,\n    b: u8,\n    array: [Field; 2],\n}\n\nstruct InnerFoo {\n    a: Field,\n    array: [u32; 2],\n    bar: Bar,\n    bar_array: [Bar; 2],\n}\n\nstruct Foo {\n    a: u32,\n    b: u32,\n    c: InnerFoo,\n    d: u8,\n}\n\n// Struct with array and primitive fields where primitives come after\n// the array fields. We want to index this inside of a composite array\n// to test whether we are updating the index appropriately following an array.\nstruct Qux {\n    array: [InnerFoo; 2],\n    a: u32,\n}\n\nstruct Parent {\n    foo: Foo,\n    bar: Bar,\n    baz: Baz,\n    qux: Qux,\n}\n\nstruct ParentsWrapper {\n    inner: [Parent; 2],\n}\n\nimpl ParentsWrapper {\n    fn set_foo(&mut self, index: u32) {\n        self.inner[index].foo = Foo {\n            a: 1,\n            b: 2,\n            c: InnerFoo {\n                a: 3,\n                array: [4, 5],\n                bar: Bar::default(),\n                bar_array: [Bar::default(); 2],\n            },\n            d: 6,\n        }\n    }\n}\n\nimpl Default for Baz {\n    fn default() -> Self {\n        Baz { a: 0, b: 0 }\n    }\n}\n\nimpl Default for Bar {\n    fn default() -> Self {\n        Bar { a: 0, b: 0, array: [0; 2] }\n    }\n}\n\nimpl Default for InnerFoo {\n    fn default() -> Self {\n        InnerFoo { a: 0, array: [0; 2], bar: Bar::default(), bar_array: [Bar::default(); 2] }\n    }\n}\n\nimpl Default for Qux {\n    fn default() -> Self {\n        Qux { array: [InnerFoo::default(); 2], a: 0 }\n    }\n}\n\nimpl Default for Foo {\n    fn default() -> Self {\n        Foo { a: 0, b: 0, c: InnerFoo::default(), d: 0 }\n    }\n}\n\nimpl Default for Parent {\n    fn default() -> Self {\n        Parent {\n            foo: Foo::default(),\n            bar: Bar::default(),\n            baz: Baz::default(),\n            qux: Qux::default(),\n        }\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
