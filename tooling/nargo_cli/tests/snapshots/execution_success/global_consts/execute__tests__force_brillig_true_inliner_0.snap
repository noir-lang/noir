---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      },
      {
        "name": "b",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      },
      {
        "name": "c",
        "type": {
          "kind": "array",
          "length": 3,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "public"
      },
      {
        "name": "d",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "986260048197077973": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "15764276373176857197": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _71",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _67, _68, _69, _70, _71]",
    "public parameters indices : [_64, _65, _66]",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [[EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ], EXPR [ (1, _2) 0 ], EXPR [ (1, _3) 0 ], EXPR [ (1, _4) 0 ], EXPR [ (1, _5) 0 ], EXPR [ (1, _6) 0 ], EXPR [ (1, _7) 0 ], EXPR [ (1, _8) 0 ], EXPR [ (1, _9) 0 ], EXPR [ (1, _10) 0 ], EXPR [ (1, _11) 0 ], EXPR [ (1, _12) 0 ], EXPR [ (1, _13) 0 ], EXPR [ (1, _14) 0 ], EXPR [ (1, _15) 0 ], EXPR [ (1, _16) 0 ], EXPR [ (1, _17) 0 ], EXPR [ (1, _18) 0 ], EXPR [ (1, _19) 0 ], EXPR [ (1, _20) 0 ], EXPR [ (1, _21) 0 ], EXPR [ (1, _22) 0 ], EXPR [ (1, _23) 0 ], EXPR [ (1, _24) 0 ], EXPR [ (1, _25) 0 ], EXPR [ (1, _26) 0 ], EXPR [ (1, _27) 0 ], EXPR [ (1, _28) 0 ], EXPR [ (1, _29) 0 ], EXPR [ (1, _30) 0 ], EXPR [ (1, _31) 0 ]], [EXPR [ (1, _32) 0 ], EXPR [ (1, _33) 0 ], EXPR [ (1, _34) 0 ], EXPR [ (1, _35) 0 ], EXPR [ (1, _36) 0 ], EXPR [ (1, _37) 0 ], EXPR [ (1, _38) 0 ], EXPR [ (1, _39) 0 ], EXPR [ (1, _40) 0 ], EXPR [ (1, _41) 0 ], EXPR [ (1, _42) 0 ], EXPR [ (1, _43) 0 ], EXPR [ (1, _44) 0 ], EXPR [ (1, _45) 0 ], EXPR [ (1, _46) 0 ], EXPR [ (1, _47) 0 ], EXPR [ (1, _48) 0 ], EXPR [ (1, _49) 0 ], EXPR [ (1, _50) 0 ], EXPR [ (1, _51) 0 ], EXPR [ (1, _52) 0 ], EXPR [ (1, _53) 0 ], EXPR [ (1, _54) 0 ], EXPR [ (1, _55) 0 ], EXPR [ (1, _56) 0 ], EXPR [ (1, _57) 0 ], EXPR [ (1, _58) 0 ], EXPR [ (1, _59) 0 ], EXPR [ (1, _60) 0 ], EXPR [ (1, _61) 0 ], EXPR [ (1, _62) 0 ], EXPR [ (1, _63) 0 ]], [EXPR [ (1, _64) 0 ], EXPR [ (1, _65) 0 ], EXPR [ (1, _66) 0 ]], [EXPR [ (1, _67) 0 ], EXPR [ (1, _68) 0 ], EXPR [ (1, _69) 0 ], EXPR [ (1, _70) 0 ], EXPR [ (1, _71) 0 ]]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32911 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 72 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32839), size_address: Relative(5), offset_address: Relative(6) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32839 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 32 }, Mov { destination: Relative(5), source: Direct(1) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(7) }, IndirectConst { destination_pointer: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(7) }, Mov { destination: Direct(32773), source: Relative(6) }, Call { location: 59 }, Mov { destination: Relative(1), source: Relative(5) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32871 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 32 }, Mov { destination: Relative(5), source: Direct(1) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 33 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(7) }, IndirectConst { destination_pointer: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(7) }, Mov { destination: Direct(32773), source: Relative(6) }, Call { location: 59 }, Mov { destination: Relative(2), source: Relative(5) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 32903 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 3 }, Mov { destination: Relative(5), source: Direct(1) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(7) }, IndirectConst { destination_pointer: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(3) }, Mov { destination: Direct(32772), source: Relative(7) }, Mov { destination: Direct(32773), source: Relative(6) }, Call { location: 59 }, Mov { destination: Relative(3), source: Relative(5) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 32906 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 5 }, Mov { destination: Relative(5), source: Direct(1) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(7) }, IndirectConst { destination_pointer: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(4) }, Mov { destination: Direct(32772), source: Relative(7) }, Mov { destination: Direct(32773), source: Relative(6) }, Call { location: 59 }, Mov { destination: Relative(4), source: Relative(5) }, Call { location: 70 }, Call { location: 75 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32911 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 69 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 62 }, Return, Const { destination: Direct(32835), bit_size: Integer(U32), value: 3 }, Const { destination: Direct(32836), bit_size: Integer(U32), value: 5 }, Const { destination: Direct(32837), bit_size: Integer(U32), value: 32 }, Const { destination: Direct(32838), bit_size: Integer(U32), value: 10 }, Return, Call { location: 187 }, Load { destination: Relative(6), source_pointer: Relative(4) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(6) }, Not { destination: Relative(8), source: Relative(8), bit_size: U1 }, JumpIf { condition: Relative(8), location: 82 }, Call { location: 193 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(6) }, Load { destination: Relative(6), source_pointer: Relative(3) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(6) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 90 }, Call { location: 193 }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(6) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(6) }, Load { destination: Relative(9), source_pointer: Relative(10) }, Const { destination: Relative(10), bit_size: Field, value: 3 }, BinaryFieldOp { destination: Relative(11), op: Equals, lhs: Relative(9), rhs: Relative(10) }, JumpIf { condition: Relative(11), location: 100 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(12) } }, Const { destination: Relative(9), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(9) }, Load { destination: Relative(11), source_pointer: Relative(12) }, BinaryFieldOp { destination: Relative(9), op: Equals, lhs: Relative(11), rhs: Relative(10) }, JumpIf { condition: Relative(9), location: 107 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(12) } }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(32835) }, Load { destination: Relative(9), source_pointer: Relative(11) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(9), rhs: Relative(10) }, JumpIf { condition: Relative(3), location: 113 }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(11) } }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Direct(32836) }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Direct(32837) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(11), bit_size: Integer(U32), value: 25 }, Mov { destination: Relative(5), source: Relative(10) }, Jump { location: 123 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(11) }, JumpIf { condition: Relative(7), location: 182 }, Jump { location: 126 }, Load { destination: Relative(7), source_pointer: Relative(3) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 24 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(3) }, JumpIf { condition: Relative(8), location: 132 }, Const { destination: Relative(11), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(11) } }, Load { destination: Relative(3), source_pointer: Relative(9) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Direct(32838) }, JumpIf { condition: Relative(7), location: 137 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Const { destination: Relative(7), bit_size: Integer(U1), value: 1 }, Store { destination_pointer: Relative(3), source: Relative(7) }, Mov { destination: Relative(5), source: Relative(10) }, Jump { location: 143 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Direct(32837) }, JumpIf { condition: Relative(7), location: 169 }, Jump { location: 146 }, Load { destination: Relative(2), source_pointer: Relative(3) }, Const { destination: Relative(3), bit_size: Integer(U1), value: 0 }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U1, lhs: Relative(2), rhs: Relative(3) }, JumpIf { condition: Relative(5), location: 152 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, Const { destination: Relative(2), bit_size: Field, value: 5 }, Mov { destination: Relative(1), source: Relative(10) }, Jump { location: 155 }, BinaryIntOp { destination: Relative(3), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Direct(32836) }, JumpIf { condition: Relative(3), location: 159 }, Jump { location: 158 }, Return, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(1) }, Load { destination: Relative(3), source_pointer: Relative(7) }, BinaryFieldOp { destination: Relative(5), op: Equals, lhs: Relative(3), rhs: Relative(2) }, JumpIf { condition: Relative(5), location: 166 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(6) }, Mov { destination: Relative(1), source: Relative(3) }, Jump { location: 155 }, Load { destination: Relative(7), source_pointer: Relative(3) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(5) }, Load { destination: Relative(8), source_pointer: Relative(11) }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(5) }, Load { destination: Relative(9), source_pointer: Relative(12) }, BinaryFieldOp { destination: Relative(11), op: Equals, lhs: Relative(8), rhs: Relative(9) }, BinaryIntOp { destination: Relative(8), op: Mul, bit_size: U1, lhs: Relative(7), rhs: Relative(11) }, Store { destination_pointer: Relative(3), source: Relative(8) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(6) }, Mov { destination: Relative(5), source: Relative(7) }, Jump { location: 143 }, Store { destination_pointer: Relative(9), source: Direct(32838) }, Store { destination_pointer: Relative(3), source: Relative(5) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(6) }, Mov { destination: Relative(5), source: Relative(7) }, Jump { location: 123 }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 192 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 15764276373176857197 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 986260048197077973 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
