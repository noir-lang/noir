---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "active",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      },
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "public"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 16
      },
      "visibility": "public"
    },
    "error_types": {
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _2",
    "private parameters indices : [_0]",
    "public parameters indices : [_1]",
    "return value indices : [_2]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ]], outputs: [_2]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32839 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U1) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U16) }, Mov { destination: Relative(1), source: Direct(32836) }, Mov { destination: Relative(2), source: Direct(32837) }, Call { location: 16 }, Call { location: 17 }, Mov { destination: Direct(32838), source: Relative(1) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32838 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, Return, Call { location: 71 }, JumpIf { condition: Relative(1), location: 23 }, Jump { location: 20 }, Const { destination: Relative(1), bit_size: Integer(U16), value: 0 }, Mov { destination: Relative(3), source: Relative(1) }, Jump { location: 69 }, Cast { destination: Relative(1), source: Relative(2), bit_size: Integer(U16) }, Const { destination: Relative(4), bit_size: Integer(U16), value: 15 }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U16, lhs: Relative(1), rhs: Relative(4) }, Const { destination: Relative(1), bit_size: Integer(U1), value: 1 }, JumpIf { condition: Relative(5), location: 29 }, Call { location: 77 }, Const { destination: Relative(5), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(4), op: LessThan, bit_size: U16, lhs: Relative(5), rhs: Relative(2) }, JumpIf { condition: Relative(4), location: 33 }, Jump { location: 64 }, Const { destination: Relative(6), bit_size: Integer(U16), value: 1 }, BinaryIntOp { destination: Relative(7), op: Shl, bit_size: U16, lhs: Relative(6), rhs: Relative(2) }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U16, lhs: Relative(2), rhs: Relative(6) }, Const { destination: Relative(13), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(8), op: LessThan, bit_size: U16, lhs: Relative(13), rhs: Relative(1) }, Const { destination: Relative(14), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(15), op: Sub, bit_size: U16, lhs: Relative(14), rhs: Relative(1) }, JumpIf { condition: Relative(8), location: 42 }, Jump { location: 44 }, Mov { destination: Relative(9), source: Relative(15) }, Jump { location: 46 }, Mov { destination: Relative(9), source: Relative(1) }, Jump { location: 46 }, Const { destination: Relative(13), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(10), op: LessThan, bit_size: U16, lhs: Relative(13), rhs: Relative(7) }, Const { destination: Relative(14), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(15), op: Sub, bit_size: U16, lhs: Relative(14), rhs: Relative(7) }, JumpIf { condition: Relative(10), location: 52 }, Jump { location: 54 }, Mov { destination: Relative(11), source: Relative(15) }, Jump { location: 56 }, Mov { destination: Relative(11), source: Relative(7) }, Jump { location: 56 }, BinaryIntOp { destination: Relative(1), op: Div, bit_size: U16, lhs: Relative(9), rhs: Relative(11) }, BinaryIntOp { destination: Relative(12), op: Xor, bit_size: U1, lhs: Relative(8), rhs: Relative(10) }, JumpIf { condition: Relative(12), location: 60 }, Jump { location: 62 }, Const { destination: Relative(13), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U16, lhs: Relative(13), rhs: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U16, lhs: Relative(1), rhs: Relative(6) }, Jump { location: 66 }, BinaryIntOp { destination: Relative(1), op: Shr, bit_size: U16, lhs: Relative(2), rhs: Relative(2) }, Jump { location: 66 }, Mov { destination: Relative(2), source: Relative(1) }, Mov { destination: Relative(3), source: Relative(2) }, Jump { location: 69 }, Mov { destination: Relative(1), source: Relative(3) }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 76 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14514982005979867414 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "ddLBjoMgEAbgd+HMQYSBtq/SGIOKDQlBQ3WTjfHdF/zrtnvYC784zmcysLHBdeuj9XGcnux231iXfAj+0Yapt4ufYn67saostWQ3wVmtEITQCIO4IK5HyAohEDUCioQioUgoEoqEIqEoKAqKgqKgKCgKioKioCgoCgpBISgEhaAQFIJCUAgKQSEoGoqGoqFoKBqKhqKLsu+cnXNsl+RcGePHYPO4Z5tcXNgtriFw9mXDenz0nG08crEpVyvOXBxyZnD0wZWnnb+7q/9bTf3qNZffZsrdTd7Z3qc/B70XJ3nbBffajmvsP6rL93xWzosyp6l3w5pckd63ReT1bgQ3uuFMiLIx3Fybvfz6Bw==",
  "file_map": {
    "50": {
      "source": "fn main(active: bool, a: pub i16) -> pub i16 {\n    if active {\n        (a >> a)\n    } else {\n        0\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
