---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "active",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      },
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "public"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 16
      },
      "visibility": "public"
    },
    "error_types": {
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _2",
    "private parameters indices : [_0]",
    "public parameters indices : [_1]",
    "return value indices : [_2]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ]], outputs: [_2]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32839 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U1) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U16) }, Mov { destination: Relative(1), source: Direct(32836) }, Mov { destination: Relative(2), source: Direct(32837) }, Call { location: 16 }, Call { location: 17 }, Mov { destination: Direct(32838), source: Relative(1) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32838 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, Return, Call { location: 77 }, JumpIf { condition: Relative(1), location: 23 }, Jump { location: 20 }, Const { destination: Relative(1), bit_size: Integer(U16), value: 0 }, Mov { destination: Relative(3), source: Relative(1) }, Jump { location: 75 }, Const { destination: Relative(5), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(4), op: LessThan, bit_size: U16, lhs: Relative(5), rhs: Relative(2) }, JumpIf { condition: Relative(4), location: 27 }, Jump { location: 71 }, Const { destination: Relative(7), bit_size: Integer(U16), value: 16 }, BinaryIntOp { destination: Relative(6), op: LessThan, bit_size: U16, lhs: Relative(2), rhs: Relative(7) }, JumpIf { condition: Relative(6), location: 31 }, Call { location: 83 }, Const { destination: Relative(8), bit_size: Integer(U16), value: 1 }, Const { destination: Relative(9), bit_size: Integer(U16), value: 2 }, Const { destination: Relative(10), bit_size: Integer(U16), value: 1 }, Cast { destination: Relative(11), source: Relative(2), bit_size: Integer(U32) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(12), rhs: Relative(11) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 42 }, BinaryIntOp { destination: Relative(10), op: Mul, bit_size: U16, lhs: Relative(10), rhs: Relative(9) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Jump { location: 36 }, BinaryIntOp { destination: Relative(1), op: Add, bit_size: U16, lhs: Relative(2), rhs: Relative(8) }, Const { destination: Relative(17), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U16, lhs: Relative(17), rhs: Relative(1) }, Const { destination: Relative(18), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(19), op: Sub, bit_size: U16, lhs: Relative(18), rhs: Relative(1) }, JumpIf { condition: Relative(12), location: 49 }, Jump { location: 51 }, Mov { destination: Relative(13), source: Relative(19) }, Jump { location: 53 }, Mov { destination: Relative(13), source: Relative(1) }, Jump { location: 53 }, Const { destination: Relative(17), bit_size: Integer(U16), value: 32767 }, BinaryIntOp { destination: Relative(14), op: LessThan, bit_size: U16, lhs: Relative(17), rhs: Relative(10) }, Const { destination: Relative(18), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(19), op: Sub, bit_size: U16, lhs: Relative(18), rhs: Relative(10) }, JumpIf { condition: Relative(14), location: 59 }, Jump { location: 61 }, Mov { destination: Relative(15), source: Relative(19) }, Jump { location: 63 }, Mov { destination: Relative(15), source: Relative(10) }, Jump { location: 63 }, BinaryIntOp { destination: Relative(1), op: Div, bit_size: U16, lhs: Relative(13), rhs: Relative(15) }, BinaryIntOp { destination: Relative(16), op: Xor, bit_size: U1, lhs: Relative(12), rhs: Relative(14) }, JumpIf { condition: Relative(16), location: 67 }, Jump { location: 69 }, Const { destination: Relative(17), bit_size: Integer(U16), value: 0 }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U16, lhs: Relative(17), rhs: Relative(1) }, BinaryIntOp { destination: Relative(1), op: Sub, bit_size: U16, lhs: Relative(1), rhs: Relative(8) }, Jump { location: 73 }, BinaryIntOp { destination: Relative(1), op: Shr, bit_size: U16, lhs: Relative(2), rhs: Relative(2) }, Jump { location: 73 }, Mov { destination: Relative(3), source: Relative(1) }, Jump { location: 75 }, Mov { destination: Relative(1), source: Relative(3) }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 82 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14514982005979867414 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "ddLBjoMgEAbgd+HMQYUBt69ijEHFhoSgobrJxvjuC/512z30wi/ifCbD7Gy0/XbvXJjmB7s1O+uj897dOz8PZnVzSG93VuSlEuxWclZJBCEUQiNqxNcZokCUiAoBRUARUAQUAUVAEVAkFAlFQpFQJBQJRUKRUCQUCYWgEBSCQlAICkEhKASFoBAUBUVBUVAUFAVFQVFQFBQFRUHRUDQUnZXj4OzqeLdGa3PD364gXcxiog0ru4XNe86+jd/Ojx6LCWeuJqbTgjMbxpQJnJy3+engr+ric6munrW6/iumVN2mnRlc/DcSR3aiM723z+20heHtdP1ZrpNrpJY4D3bcos3Sa67KtDZa87pqOStTU5pa8JraI//6Fw==",
  "file_map": {
    "50": {
      "source": "fn main(active: bool, a: pub i16) -> pub i16 {\n    if active {\n        (a >> a)\n    } else {\n        0\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
