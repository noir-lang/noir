---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "active",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      },
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "public"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 16
      },
      "visibility": "public"
    },
    "error_types": {
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      },
      "16061458491050355795": {
        "error_kind": "string",
        "string": "Field failed to decompose into specified 5 limbs"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _75",
    "private parameters indices : [_0]",
    "public parameters indices : [_1]",
    "return value indices : [_2]",
    "BLACKBOX::RANGE [(_0, 1)] []",
    "BLACKBOX::RANGE [(_1, 16)] []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 65521 ], EXPR [ 65536 ]], outputs: [_3, _4]",
    "BLACKBOX::RANGE [(_3, 1)] []",
    "BLACKBOX::RANGE [(_4, 16)] []",
    "EXPR [ (1, _1) (-65536, _3) (-1, _4) 65521 ]",
    "EXPR [ (-1, _0, _3) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 0 ], EXPR [ 32768 ]], outputs: [_5, _6]",
    "BLACKBOX::RANGE [(_5, 1)] []",
    "BLACKBOX::RANGE [(_6, 15)] []",
    "EXPR [ (1, _1) (-32768, _5) (-1, _6) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 131056 ], EXPR [ 131072 ]], outputs: [_7, _8]",
    "BLACKBOX::RANGE [(_7, 1)] []",
    "BLACKBOX::RANGE [(_8, 17)] []",
    "EXPR [ (1, _1) (-131072, _7) (-1, _8) 131056 ]",
    "EXPR [ (2, _5, _7) (-1, _5) (-1, _7) (-1, _9) 1 ]",
    "EXPR [ (1, _1, _9) (-1, _10) 0 ]",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _10, _0) 0 ], EXPR [ 5 ], EXPR [ 2 ]], outputs: [[_11, _12, _13, _14, _15]]",
    "BLACKBOX::RANGE [(_11, 1)] []",
    "BLACKBOX::RANGE [(_12, 1)] []",
    "BLACKBOX::RANGE [(_13, 1)] []",
    "BLACKBOX::RANGE [(_14, 1)] []",
    "BLACKBOX::RANGE [(_15, 1)] []",
    "EXPR [ (1, _0, _10) (-1, _11) (-2, _12) (-4, _13) (-8, _14) (-16, _15) 0 ]",
    "EXPR [ (1, _15, _15) (2, _15) (-1, _16) 1 ]",
    "EXPR [ (-1, _14) (-1, _17) 1 ]",
    "EXPR [ (2, _14, _16) (1, _16, _17) (-1, _18) 0 ]",
    "EXPR [ (1, _18, _18) (-1, _19) 0 ]",
    "EXPR [ (-1, _13) (-1, _20) 1 ]",
    "EXPR [ (2, _13, _19) (1, _19, _20) (-1, _21) 0 ]",
    "EXPR [ (1, _21, _21) (-1, _22) 0 ]",
    "EXPR [ (-1, _12) (-1, _23) 1 ]",
    "EXPR [ (2, _12, _22) (1, _22, _23) (-1, _24) 0 ]",
    "EXPR [ (1, _24, _24) (-1, _25) 0 ]",
    "EXPR [ (-1, _11) (-1, _26) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 0 ], EXPR [ 32768 ]], outputs: [_27, _28]",
    "BLACKBOX::RANGE [(_27, 1)] []",
    "BLACKBOX::RANGE [(_28, 15)] []",
    "EXPR [ (1, _1) (-32768, _27) (-1, _28) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 131072 ], EXPR [ 131072 ]], outputs: [_29, _30]",
    "BLACKBOX::RANGE [(_29, 1)] []",
    "BLACKBOX::RANGE [(_30, 17)] []",
    "EXPR [ (1, _1) (-131072, _29) (-1, _30) 131072 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (2, _29, _27) (1, _1) (-1, _27) (-1, _29) 1 ], EXPR [ 65536 ]], outputs: [_31, _32]",
    "BLACKBOX::RANGE [(_31, 1)] []",
    "BLACKBOX::RANGE [(_32, 16)] []",
    "EXPR [ (2, _27, _29) (1, _1) (-1, _27) (-1, _29) (-65536, _31) (-1, _32) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (2, _25, _11) (1, _25, _26) 0 ], EXPR [ 32768 ]], outputs: [_33, _34]",
    "BLACKBOX::RANGE [(_33, 1)] []",
    "BLACKBOX::RANGE [(_34, 15)] []",
    "EXPR [ (2, _11, _25) (-1, _73) 0 ]",
    "EXPR [ (1, _25, _26) (-1, _74) 0 ]",
    "EXPR [ (-32768, _33) (-1, _34) (1, _73) (1, _74) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _32) 0 ], EXPR [ 32768 ]], outputs: [_35, _36]",
    "BLACKBOX::RANGE [(_35, 1)] []",
    "BLACKBOX::RANGE [(_36, 15)] []",
    "EXPR [ (1, _32) (-32768, _35) (-1, _36) 0 ]",
    "EXPR [ (-1, _37) (-1, _73) (-1, _74) 32768 ]",
    "EXPR [ (2, _33, _37) (-1, _75) 0 ]",
    "EXPR [ (-1, _38) (1, _73) (1, _74) (1, _75) 0 ]",
    "BRILLIG CALL func 2: inputs: [EXPR [ (1, _38) 0 ]], outputs: [_39]",
    "EXPR [ (1, _38, _39) (1, _40) -1 ]",
    "EXPR [ (1, _38, _40) 0 ]",
    "EXPR [ (1, _0, _40) 0 ]",
    "BRILLIG CALL func 0: PREDICATE: EXPR [ (1, _0) 0 ]",
    "inputs: [EXPR [ (-2, _32, _35) (1, _32) (65536, _35) 0 ], EXPR [ (2, _25, _11) (1, _25, _26) (2, _37, _33) 0 ]], outputs: [_41, _42]",
    "BLACKBOX::RANGE [(_41, 16)] []",
    "BLACKBOX::RANGE [(_42, 16)] []",
    "EXPR [ (-1, _0) (-1, _42) (-1, _43) (1, _73) (1, _74) (1, _75) 0 ]",
    "BLACKBOX::RANGE [(_43, 16)] []",
    "EXPR [ (-1, _44) (1, _73) (1, _74) (1, _75) 0 ]",
    "EXPR [ (1, _41, _44) (1, _42) (-1, _45) 0 ]",
    "EXPR [ (-2, _32, _35) (1, _32) (65536, _35) (-1, _46) 0 ]",
    "EXPR [ (-1, _0, _45) (1, _0, _46) 0 ]",
    "EXPR [ (-1, _41) (-1, _47) 32768 ]",
    "EXPR [ (-2, _33, _35) (1, _33) (1, _35) (-1, _48) 0 ]",
    "BRILLIG CALL func 2: inputs: [EXPR [ (1, _41) 0 ]], outputs: [_49]",
    "EXPR [ (1, _41, _49) (1, _50) -1 ]",
    "EXPR [ (1, _41, _50) 0 ]",
    "EXPR [ (2, _47, _48) (1, _41) (-1, _51) 0 ]",
    "EXPR [ (-1, _50) (-1, _52) 1 ]",
    "BRILLIG CALL func 2: inputs: [EXPR [ (1, _42) 0 ]], outputs: [_53]",
    "EXPR [ (1, _42, _53) (1, _54) -1 ]",
    "EXPR [ (1, _42, _54) 0 ]",
    "EXPR [ (-2, _35, _42) (65536, _35) (1, _42) (-1, _55) 0 ]",
    "EXPR [ (-1, _54) (-1, _56) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (-2, _29, _27) (1, _51, _52) (1, _27) (1, _29) 131071 ], EXPR [ 65536 ]], outputs: [_57, _58]",
    "BLACKBOX::RANGE [(_57, 2)] []",
    "BLACKBOX::RANGE [(_58, 16)] []",
    "EXPR [ (-2, _27, _29) (1, _51, _52) (1, _27) (1, _29) (-65536, _57) (-1, _58) 131071 ]",
    "EXPR [ (131070, _27, _29) (-65535, _27) (-65535, _29) (-1, _59) 65535 ]",
    "EXPR [ (-1, _9) (-1, _60) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _9, _58) (1, _59, _60) 0 ], EXPR [ 65536 ]], outputs: [_61, _62]",
    "BLACKBOX::RANGE [(_61, 1)] []",
    "BLACKBOX::RANGE [(_62, 16)] []",
    "EXPR [ (1, _9, _58) (1, _59, _60) (-65536, _61) (-1, _62) 0 ]",
    "EXPR [ (-1, _0, _62) (1, _2) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(5), bit_size: Integer(U32), value: 0 }, Const { destination: Direct(6), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(7), bit_size: Integer(U32), value: 3 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(7), offset_address: Direct(5) }, Cast { destination: Direct(1), source: Direct(1), bit_size: Integer(U32) }, Const { destination: Direct(9), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Direct(7), op: Add, bit_size: U32, lhs: Direct(9), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(3), op: IntegerDiv, lhs: Direct(0), rhs: Direct(2) }, BinaryFieldOp { destination: Direct(4), op: Mul, lhs: Direct(3), rhs: Direct(2) }, BinaryFieldOp { destination: Direct(4), op: Sub, lhs: Direct(0), rhs: Direct(4) }, Store { destination_pointer: Direct(9), source: Direct(4) }, BinaryIntOp { destination: Direct(9), op: Add, bit_size: U32, lhs: Direct(9), rhs: Direct(6) }, Mov { destination: Direct(0), source: Direct(3) }, BinaryIntOp { destination: Direct(8), op: LessThan, bit_size: U32, lhs: Direct(9), rhs: Direct(7) }, JumpIf { condition: Direct(8), location: 7 }, Const { destination: Direct(9), bit_size: Integer(U32), value: 10 }, Stop { return_data: HeapVector { pointer: Direct(9), size: Direct(1) } }]",
    "unconstrained func 2",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "ddNLboMwEIDhu3jNIn6bXKWqIkKcCgkBcqBSFeXuNf6dNl10M8Ye5hPY47u4xPP2cRqm63wTx7e7OKdhHIeP0zj33TrMU169PxrxnJ7WFGNeEi/5XLV0KU6rOE7bODbisxu38tJt6aYyrl3K2UMj4nTJYwavwxj3p0fzW334v9SrWuvDT7HN1e951vVD+vO9QomjbIQu0ZRoS3Ql+hJDiW2J8sAgGSiX1EsAiSAhJIYEkSgKRaEoFIWiUBSKQlEoCkWhaBSNouuvoGgUjaJRNIpG0SgGxaAYFFN3BMWgGBSDYlAMikWxKBbFoti6sSgWxaJYFIviUByKQ3EoDsXV80FxKA7FoXgUj+JRPIpH8Si+HjOKR/EoASWgBJSAElACSkAJtVtQAkqL0qK0KC1KuyuPvZPT0J3HWC/QdZv6l/u0fi3PzPPGLWnu42VLce/lksvd/Q0=",
  "file_map": {
    "50": {
      "source": "fn main(active: bool, a: pub i16) -> pub i16 {\n    if active {\n        (a >> a)\n    } else {\n        0\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_to_radix",
    "directive_invert"
  ]
}
