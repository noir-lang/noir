---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "active",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      },
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "public"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 16
      },
      "visibility": "public"
    },
    "error_types": {
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _53",
    "private parameters indices : [_0]",
    "public parameters indices : [_1]",
    "return value indices : [_2]",
    "BLACKBOX::RANGE [(_0, 1)] []",
    "BLACKBOX::RANGE [(_1, 16)] []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 65521 ], EXPR [ 65536 ]], outputs: [_3, _4]",
    "BLACKBOX::RANGE [(_3, 1)] []",
    "BLACKBOX::RANGE [(_4, 16)] []",
    "EXPR [ (1, _1) (-65536, _3) (-1, _4) 65521 ]",
    "EXPR [ (-1, _0, _3) 0 ]",
    "EXPR [ (-1, _5) 1 ]",
    "EXPR [ (-1, _6) 2 ]",
    "EXPR [ (-1, _7) 4 ]",
    "EXPR [ (-1, _8) 8 ]",
    "EXPR [ (-1, _9) 16 ]",
    "EXPR [ (-1, _10) 32 ]",
    "EXPR [ (-1, _11) 64 ]",
    "EXPR [ (-1, _12) 128 ]",
    "EXPR [ (-1, _13) 256 ]",
    "EXPR [ (-1, _14) 512 ]",
    "EXPR [ (-1, _15) 1024 ]",
    "EXPR [ (-1, _16) 2048 ]",
    "EXPR [ (-1, _17) 4096 ]",
    "EXPR [ (-1, _18) 8192 ]",
    "EXPR [ (-1, _19) 16384 ]",
    "EXPR [ (-1, _20) 32768 ]",
    "INIT (id: 0, len: 16, witnesses: [_5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20])",
    "EXPR [ (1, _0, _1) (-1, _21) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _21) 0 ], value: EXPR [ (1, _22) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 0 ], EXPR [ 32768 ]], outputs: [_23, _24]",
    "BLACKBOX::RANGE [(_23, 1)] []",
    "BLACKBOX::RANGE [(_24, 15)] []",
    "EXPR [ (1, _1) (-32768, _23) (-1, _24) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 131072 ], EXPR [ 131072 ]], outputs: [_25, _26]",
    "BLACKBOX::RANGE [(_25, 1)] []",
    "BLACKBOX::RANGE [(_26, 17)] []",
    "EXPR [ (1, _1) (-131072, _25) (-1, _26) 131072 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (2, _25, _23) (1, _1) (-1, _23) (-1, _25) 1 ], EXPR [ 65536 ]], outputs: [_27, _28]",
    "BLACKBOX::RANGE [(_27, 1)] []",
    "BLACKBOX::RANGE [(_28, 16)] []",
    "EXPR [ (2, _23, _25) (1, _1) (-1, _23) (-1, _25) (-65536, _27) (-1, _28) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _22) 0 ], EXPR [ 32768 ]], outputs: [_29, _30]",
    "BLACKBOX::RANGE [(_29, 1)] []",
    "BLACKBOX::RANGE [(_30, 15)] []",
    "EXPR [ (1, _22) (-32768, _29) (-1, _30) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _28) 0 ], EXPR [ 32768 ]], outputs: [_31, _32]",
    "BLACKBOX::RANGE [(_31, 1)] []",
    "BLACKBOX::RANGE [(_32, 15)] []",
    "EXPR [ (1, _28) (-32768, _31) (-1, _32) 0 ]",
    "EXPR [ (-2, _22, _29) (1, _22) (65536, _29) (-1, _33) 0 ]",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _33) 0 ]], outputs: [_34]",
    "EXPR [ (1, _33, _34) (1, _35) -1 ]",
    "EXPR [ (1, _33, _35) 0 ]",
    "EXPR [ (1, _0, _35) 0 ]",
    "BRILLIG CALL func 0: PREDICATE: EXPR [ (1, _0) 0 ]",
    "inputs: [EXPR [ (-2, _28, _31) (1, _28) (65536, _31) 0 ], EXPR [ (-2, _22, _29) (1, _22) (65536, _29) 0 ]], outputs: [_36, _37]",
    "BLACKBOX::RANGE [(_36, 16)] []",
    "BLACKBOX::RANGE [(_37, 16)] []",
    "EXPR [ (-2, _22, _29) (-1, _0) (1, _22) (65536, _29) (-1, _37) (-1, _38) 0 ]",
    "BLACKBOX::RANGE [(_38, 16)] []",
    "EXPR [ (-2, _22, _29) (1, _22) (65536, _29) (-1, _39) 0 ]",
    "EXPR [ (1, _36, _39) (1, _37) (-1, _40) 0 ]",
    "EXPR [ (-2, _28, _31) (1, _28) (65536, _31) (-1, _41) 0 ]",
    "EXPR [ (-1, _0, _40) (1, _0, _41) 0 ]",
    "EXPR [ (-1, _36) (-1, _42) 32768 ]",
    "EXPR [ (-2, _29, _31) (1, _29) (1, _31) (-1, _43) 0 ]",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _36) 0 ]], outputs: [_44]",
    "EXPR [ (1, _36, _44) (1, _45) -1 ]",
    "EXPR [ (1, _36, _45) 0 ]",
    "EXPR [ (2, _42, _43) (1, _36) (-1, _46) 0 ]",
    "EXPR [ (-1, _45) (-1, _47) 1 ]",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _37) 0 ]], outputs: [_48]",
    "EXPR [ (1, _37, _48) (1, _49) -1 ]",
    "EXPR [ (1, _37, _49) 0 ]",
    "EXPR [ (-2, _31, _37) (65536, _31) (1, _37) (-1, _50) 0 ]",
    "EXPR [ (-1, _49) (-1, _51) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (-2, _25, _23) (1, _46, _47) (1, _23) (1, _25) 131071 ], EXPR [ 65536 ]], outputs: [_52, _53]",
    "BLACKBOX::RANGE [(_52, 2)] []",
    "BLACKBOX::RANGE [(_53, 16)] []",
    "EXPR [ (-2, _23, _25) (1, _46, _47) (1, _23) (1, _25) (-65536, _52) (-1, _53) 131071 ]",
    "EXPR [ (-1, _0, _53) (1, _2) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "ddJNboMwEIbhu3jNIv5Pc5WqighxIkuWQQ5UqqLcvcYvadNFN2Pw8D0CM3dxDqfleoz5Mt7E4f0uTiWmFK/HNA79HMdcd++PTjxvj3MJoW6Jl35NTX0JeRaHvKTUic8+Le2h29Tnts59qd1dJ0I+17WCl5jCevXoftO7/6NebVm//wnbmv6od/0Qy5/3FUocZCd0q6ZV26pr1be6b/WtVbljkSzEJXkJIBEkhMSQIBJFoSgUhaJQFIpCUSgKRaEoFI2iUfT2KSgaRaNoFI2iUTSKQTEoBsVsJ4JiUAyKQTEoBsWiWBSLYlHsdrAoFsWiWBSL4lAcikNxKA7Fbf8HxaE4FIfiUTyKR/EoHsWvymMdohL7Uwrb7F6WPLyM8vw1PTvPYZ/KOITzUsI6Rq1XB+sb",
  "file_map": {
    "50": {
      "source": "fn main(active: bool, a: pub i16) -> pub i16 {\n    if active {\n        (a >> a)\n    } else {\n        0\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
