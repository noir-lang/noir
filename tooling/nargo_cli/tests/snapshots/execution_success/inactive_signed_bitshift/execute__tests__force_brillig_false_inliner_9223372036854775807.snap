---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "active",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      },
      {
        "name": "a",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "public"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 16
      },
      "visibility": "public"
    },
    "error_types": {
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      },
      "16061458491050355795": {
        "error_kind": "string",
        "string": "Field failed to decompose into specified 5 limbs"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _65",
    "private parameters indices : [_0]",
    "public parameters indices : [_1]",
    "return value indices : [_2]",
    "BLACKBOX::RANGE [_0]:1 bits []",
    "BLACKBOX::RANGE [_1]:16 bits []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 65521 ], EXPR [ 65536 ]], outputs: [_3, _4]",
    "BLACKBOX::RANGE [_3]:1 bits []",
    "BLACKBOX::RANGE [_4]:16 bits []",
    "EXPR [ (1, _1) (-65536, _3) (-1, _4) 65521 ]",
    "EXPR [ (-1, _0, _3) 0 ]",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _1, _0) 0 ], EXPR [ 5 ], EXPR [ 2 ]], outputs: [[_5, _6, _7, _8, _9]]",
    "BLACKBOX::RANGE [_5]:1 bits []",
    "BLACKBOX::RANGE [_6]:1 bits []",
    "BLACKBOX::RANGE [_7]:1 bits []",
    "BLACKBOX::RANGE [_8]:1 bits []",
    "BLACKBOX::RANGE [_9]:1 bits []",
    "EXPR [ (1, _0, _1) (-1, _5) (-2, _6) (-4, _7) (-8, _8) (-16, _9) 0 ]",
    "EXPR [ (1, _9, _9) (2, _9) (-1, _10) 1 ]",
    "EXPR [ (-1, _8) (-1, _11) 1 ]",
    "EXPR [ (2, _8, _10) (1, _10, _11) (-1, _12) 0 ]",
    "EXPR [ (1, _12, _12) (-1, _13) 0 ]",
    "EXPR [ (-1, _7) (-1, _14) 1 ]",
    "EXPR [ (2, _7, _13) (1, _13, _14) (-1, _15) 0 ]",
    "EXPR [ (1, _15, _15) (-1, _16) 0 ]",
    "EXPR [ (-1, _6) (-1, _17) 1 ]",
    "EXPR [ (2, _6, _16) (1, _16, _17) (-1, _18) 0 ]",
    "EXPR [ (1, _18, _18) (-1, _19) 0 ]",
    "EXPR [ (-1, _5) (-1, _20) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 0 ], EXPR [ 32768 ]], outputs: [_21, _22]",
    "BLACKBOX::RANGE [_21]:1 bits []",
    "BLACKBOX::RANGE [_22]:15 bits []",
    "EXPR [ (1, _1) (-32768, _21) (-1, _22) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 131072 ], EXPR [ 131072 ]], outputs: [_23, _24]",
    "BLACKBOX::RANGE [_23]:1 bits []",
    "BLACKBOX::RANGE [_24]:17 bits []",
    "EXPR [ (1, _1) (-131072, _23) (-1, _24) 131072 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (2, _23, _21) (1, _1) (-1, _21) (-1, _23) 1 ], EXPR [ 65536 ]], outputs: [_25, _26]",
    "BLACKBOX::RANGE [_25]:1 bits []",
    "BLACKBOX::RANGE [_26]:16 bits []",
    "EXPR [ (2, _21, _23) (1, _1) (-1, _21) (-1, _23) (-65536, _25) (-1, _26) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (2, _19, _5) (1, _19, _20) 0 ], EXPR [ 32768 ]], outputs: [_27, _28]",
    "BLACKBOX::RANGE [_27]:1 bits []",
    "BLACKBOX::RANGE [_28]:15 bits []",
    "EXPR [ (2, _5, _19) (-1, _63) 0 ]",
    "EXPR [ (1, _19, _20) (-1, _64) 0 ]",
    "EXPR [ (-32768, _27) (-1, _28) (1, _63) (1, _64) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _26) 0 ], EXPR [ 32768 ]], outputs: [_29, _30]",
    "BLACKBOX::RANGE [_29]:1 bits []",
    "BLACKBOX::RANGE [_30]:15 bits []",
    "EXPR [ (1, _26) (-32768, _29) (-1, _30) 0 ]",
    "EXPR [ (-1, _31) (-1, _63) (-1, _64) 32768 ]",
    "EXPR [ (2, _27, _31) (-1, _65) 0 ]",
    "EXPR [ (-1, _32) (1, _63) (1, _64) (1, _65) 0 ]",
    "BRILLIG CALL func 2: inputs: [EXPR [ (1, _32) 0 ]], outputs: [_33]",
    "EXPR [ (1, _32, _33) (1, _34) -1 ]",
    "EXPR [ (1, _32, _34) 0 ]",
    "EXPR [ (1, _0, _34) 0 ]",
    "BRILLIG CALL func 0: PREDICATE: EXPR [ (1, _0) 0 ]",
    "inputs: [EXPR [ (-2, _26, _29) (1, _26) (65536, _29) 0 ], EXPR [ (2, _19, _5) (1, _19, _20) (2, _31, _27) 0 ]], outputs: [_35, _36]",
    "BLACKBOX::RANGE [_35]:16 bits []",
    "BLACKBOX::RANGE [_36]:16 bits []",
    "EXPR [ (-1, _0) (-1, _36) (-1, _37) (1, _63) (1, _64) (1, _65) 0 ]",
    "BLACKBOX::RANGE [_37]:16 bits []",
    "EXPR [ (-1, _38) (1, _63) (1, _64) (1, _65) 0 ]",
    "EXPR [ (1, _35, _38) (1, _36) (-1, _39) 0 ]",
    "EXPR [ (-2, _26, _29) (1, _26) (65536, _29) (-1, _40) 0 ]",
    "EXPR [ (-1, _0, _39) (1, _0, _40) 0 ]",
    "EXPR [ (-1, _35) (-1, _41) 32768 ]",
    "EXPR [ (-2, _27, _29) (1, _27) (1, _29) (-1, _42) 0 ]",
    "BRILLIG CALL func 2: inputs: [EXPR [ (1, _35) 0 ]], outputs: [_43]",
    "EXPR [ (1, _35, _43) (1, _44) -1 ]",
    "EXPR [ (1, _35, _44) 0 ]",
    "EXPR [ (2, _41, _42) (1, _35) (-1, _45) 0 ]",
    "EXPR [ (-1, _44) (-1, _46) 1 ]",
    "BRILLIG CALL func 2: inputs: [EXPR [ (1, _36) 0 ]], outputs: [_47]",
    "EXPR [ (1, _36, _47) (1, _48) -1 ]",
    "EXPR [ (1, _36, _48) 0 ]",
    "EXPR [ (-2, _29, _36) (65536, _29) (1, _36) (-1, _49) 0 ]",
    "EXPR [ (-1, _48) (-1, _50) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (-2, _23, _21) (1, _45, _46) (1, _21) (1, _23) 131071 ], EXPR [ 65536 ]], outputs: [_51, _52]",
    "BLACKBOX::RANGE [_51]:2 bits []",
    "BLACKBOX::RANGE [_52]:16 bits []",
    "EXPR [ (-2, _21, _23) (1, _45, _46) (1, _21) (1, _23) (-65536, _51) (-1, _52) 131071 ]",
    "EXPR [ (-1, _0, _52) (1, _2) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(5), bit_size: Integer(U32), value: 0 }, Const { destination: Direct(6), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(7), bit_size: Integer(U32), value: 3 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(7), offset_address: Direct(5) }, Cast { destination: Direct(1), source: Direct(1), bit_size: Integer(U32) }, Const { destination: Direct(9), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Direct(7), op: Add, bit_size: U32, lhs: Direct(9), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(3), op: IntegerDiv, lhs: Direct(0), rhs: Direct(2) }, BinaryFieldOp { destination: Direct(4), op: Mul, lhs: Direct(3), rhs: Direct(2) }, BinaryFieldOp { destination: Direct(4), op: Sub, lhs: Direct(0), rhs: Direct(4) }, Store { destination_pointer: Direct(9), source: Direct(4) }, BinaryIntOp { destination: Direct(9), op: Add, bit_size: U32, lhs: Direct(9), rhs: Direct(6) }, Mov { destination: Direct(0), source: Direct(3) }, BinaryIntOp { destination: Direct(8), op: LessThan, bit_size: U32, lhs: Direct(9), rhs: Direct(7) }, JumpIf { condition: Direct(8), location: 7 }, Const { destination: Direct(9), bit_size: Integer(U32), value: 10 }, Stop { return_data: HeapVector { pointer: Direct(9), size: Direct(1) } }]",
    "unconstrained func 2",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "ddNLboMwEIDhu3jNIn6nuUpVRYQ4EZJlkAOVqih3r/HvtOmimxnwMJ/AHu7iHE7r9Timy3QTh/e7OOUxxvF6jNPQL+OUyur90Ynn7XHJIZQl8VIvXXOfQ1rEIa0xduKzj2t96Db3qealz6W660RI55ILeBlj2K4e3W/37v9Wr1qv3/8029L9Ue76Ycx/3lcocZCd0DWaGm2NrkZf477GtxrljiRJtEv6JYBEkBASQ4JIFIWiUBSKQlEoCkWhKBSFolA0ikbR7VNQNIpG0SgaRaNoFINiUAyKaTuCYlAMikExKAbFolgUi2JRbNtYFItiUSyKRXEoDsWhOBSH4tr5oDgUh+JQPIpH8SgexaN4FN+OGcVvymObrDz2pxjaQF/WNLzM9/I1PyvPP2DO0xDOaw7bbNVambZv",
  "file_map": {
    "50": {
      "source": "fn main(active: bool, a: pub i16) -> pub i16 {\n    if active {\n        (a >> a)\n    } else {\n        0\n    }\n}\n",
      "path": ""
    }
  },
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
