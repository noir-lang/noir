---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 64
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "1998584279744703196": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _32",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [_0]:64 bits []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (2, _0) 0 ], EXPR [ 18446744073709551616 ]], outputs: [_1, _2]",
    "BLACKBOX::RANGE [_1]:1 bits []",
    "EXPR [ (2, _0) (-18446744073709551616, _1) (-1, _2) 0 ]",
    "EXPR [ (1, _2) -128 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ], EXPR [ 4 ]], outputs: [_3, _4]",
    "BLACKBOX::RANGE [_4]:2 bits []",
    "EXPR [ (1, _0) (-4, _3) (-1, _4) 0 ]",
    "EXPR [ (1, _3) -16 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (9223372036854775808, _0) 0 ], EXPR [ 18446744073709551616 ]], outputs: [_5, _6]",
    "BLACKBOX::RANGE [_5]:63 bits []",
    "EXPR [ (9223372036854775808, _0) (-18446744073709551616, _5) (-1, _6) 0 ]",
    "EXPR [ (1, _6) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (-1, _0) 36893488147419103232 ], EXPR [ 18446744073709551616 ]], outputs: [_7, _8]",
    "BLACKBOX::RANGE [_7]:2 bits []",
    "BLACKBOX::RANGE [_8]:64 bits []",
    "EXPR [ (-1, _0) (-18446744073709551616, _7) (-1, _8) 36893488147419103232 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 9223372036854775808 ], EXPR [ 18446744073709551616 ]], outputs: [_9, _10]",
    "BLACKBOX::RANGE [_9]:1 bits []",
    "BLACKBOX::RANGE [_10]:64 bits []",
    "EXPR [ (1, _0) (-18446744073709551616, _9) (-1, _10) 9223372036854775808 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _8) 9223372036854775808 ], EXPR [ 18446744073709551616 ]], outputs: [_11, _12]",
    "BLACKBOX::RANGE [_11]:1 bits []",
    "BLACKBOX::RANGE [_12]:64 bits []",
    "EXPR [ (1, _8) (-18446744073709551616, _11) (-1, _12) 9223372036854775808 ]",
    "EXPR [ (-1, _9, _11) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _8) 0 ], EXPR [ 9223372036854775808 ]], outputs: [_13, _14]",
    "BLACKBOX::RANGE [_13]:1 bits []",
    "BLACKBOX::RANGE [_14]:63 bits []",
    "EXPR [ (1, _8) (-9223372036854775808, _13) (-1, _14) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _8) 36893488147419103232 ], EXPR [ 36893488147419103232 ]], outputs: [_15, _16]",
    "BLACKBOX::RANGE [_15]:1 bits []",
    "BLACKBOX::RANGE [_16]:65 bits []",
    "EXPR [ (1, _8) (-36893488147419103232, _15) (-1, _16) 36893488147419103232 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (2, _15, _13) (1, _8) (-1, _13) (-1, _15) 1 ], EXPR [ 18446744073709551616 ]], outputs: [_17, _18]",
    "BLACKBOX::RANGE [_17]:1 bits []",
    "BLACKBOX::RANGE [_18]:64 bits []",
    "EXPR [ (2, _13, _15) (1, _8) (-1, _13) (-1, _15) (-18446744073709551616, _17) (-1, _18) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _18) 0 ], EXPR [ 9223372036854775808 ]], outputs: [_19, _20]",
    "BLACKBOX::RANGE [_19]:1 bits []",
    "BLACKBOX::RANGE [_20]:63 bits []",
    "EXPR [ (1, _18) (-9223372036854775808, _19) (-1, _20) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (-2, _18, _19) (1, _18) (18446744073709551616, _19) 0 ], EXPR [ 4611686018427387904 ]], outputs: [_21, _22]",
    "BLACKBOX::RANGE [_21]:2 bits []",
    "BLACKBOX::RANGE [_22]:62 bits []",
    "EXPR [ (-2, _18, _19) (1, _18) (18446744073709551616, _19) (-4611686018427387904, _21) (-1, _22) 0 ]",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _21) 0 ]], outputs: [_23]",
    "EXPR [ (1, _21, _23) (1, _24) -1 ]",
    "EXPR [ (1, _21, _24) 0 ]",
    "EXPR [ (-2, _19, _21) (18446744073709551616, _19) (1, _21) (-1, _25) 0 ]",
    "EXPR [ (-1, _24) (-1, _26) 1 ]",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _22) 0 ]], outputs: [_27]",
    "EXPR [ (1, _22, _27) (1, _28) -1 ]",
    "EXPR [ (1, _22, _28) 0 ]",
    "EXPR [ (-2, _19, _22) (18446744073709551616, _19) (1, _22) (-1, _29) 0 ]",
    "EXPR [ (-1, _28) (-1, _30) 1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (-2, _15, _13) (1, _25, _26) (1, _13) (1, _15) 36893488147419103231 ], EXPR [ 18446744073709551616 ]], outputs: [_31, _32]",
    "BLACKBOX::RANGE [_31]:2 bits []",
    "EXPR [ (-2, _13, _15) (1, _25, _26) (1, _13) (1, _15) (-18446744073709551616, _31) (-1, _32) 36893488147419103231 ]",
    "EXPR [ (1, _32) -18446744073709551615 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
