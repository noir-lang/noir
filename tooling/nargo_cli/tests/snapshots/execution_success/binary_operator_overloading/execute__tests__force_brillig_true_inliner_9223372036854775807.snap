---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "361444214588792908": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      },
      "1998584279744703196": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "14990209321349310352": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "15764276373176857197": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _1",
    "private parameters indices : [_0, _1]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U32) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U32) }, Mov { destination: Relative(1), source: Direct(32836) }, Mov { destination: Relative(2), source: Direct(32837) }, Call { location: 15 }, Call { location: 16 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 305 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(4) }, JumpIf { condition: Relative(5), location: 21 }, Call { location: 311 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 12 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 26 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Sub, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, JumpIf { condition: Relative(5), location: 30 }, Call { location: 314 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 35 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(6), rhs: Relative(2) }, JumpIf { condition: Relative(5), location: 43 }, BinaryIntOp { destination: Relative(8), op: Div, bit_size: U32, lhs: Relative(4), rhs: Relative(2) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(1) }, JumpIf { condition: Relative(7), location: 43 }, Call { location: 317 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 27 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 48 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Div, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 54 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(5), op: Div, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, BinaryIntOp { destination: Relative(6), op: Mul, bit_size: U32, lhs: Relative(5), rhs: Relative(2) }, BinaryIntOp { destination: Relative(4), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Relative(6) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 62 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: And, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 68 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Or, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 11 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(6) }, JumpIf { condition: Relative(7), location: 74 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, BinaryIntOp { destination: Relative(4), op: Xor, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(6) }, JumpIf { condition: Relative(7), location: 80 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, BinaryIntOp { destination: Relative(4), op: Shl, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 72 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(6) }, JumpIf { condition: Relative(7), location: 86 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, BinaryIntOp { destination: Relative(4), op: Shr, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 91 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U1), value: 0 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U1, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 97 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, BinaryIntOp { destination: Relative(6), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(1), source: Relative(6), bit_size: U1 }, Cast { destination: Relative(2), source: Relative(6), bit_size: Field }, Cast { destination: Relative(7), source: Relative(1), bit_size: Field }, Const { destination: Relative(1), bit_size: Field, value: 2 }, BinaryFieldOp { destination: Relative(8), op: Mul, lhs: Relative(2), rhs: Relative(1) }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(8), rhs: Relative(7) }, BinaryFieldOp { destination: Relative(9), op: Add, lhs: Relative(8), rhs: Relative(7) }, BinaryFieldOp { destination: Relative(10), op: Add, lhs: Relative(8), rhs: Relative(7) }, BinaryFieldOp { destination: Relative(11), op: Add, lhs: Relative(8), rhs: Relative(7) }, BinaryFieldOp { destination: Relative(12), op: Add, lhs: Relative(8), rhs: Relative(7) }, BinaryFieldOp { destination: Relative(13), op: Add, lhs: Relative(8), rhs: Relative(7) }, BinaryFieldOp { destination: Relative(14), op: Add, lhs: Relative(8), rhs: Relative(7) }, BinaryFieldOp { destination: Relative(15), op: Add, lhs: Relative(8), rhs: Relative(7) }, BinaryFieldOp { destination: Relative(16), op: Add, lhs: Relative(8), rhs: Relative(7) }, Const { destination: Relative(17), bit_size: Field, value: 0 }, JumpIf { condition: Relative(4), location: 119 }, Jump { location: 116 }, BinaryFieldOp { destination: Relative(18), op: Add, lhs: Relative(8), rhs: Relative(7) }, Mov { destination: Relative(3), source: Relative(18) }, Jump { location: 121 }, Mov { destination: Relative(3), source: Relative(17) }, Jump { location: 121 }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(3), rhs: Relative(17) }, JumpIf { condition: Relative(8), location: 125 }, Const { destination: Relative(18), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(18) } }, JumpIf { condition: Relative(4), location: 129 }, Jump { location: 127 }, Mov { destination: Relative(7), source: Relative(2) }, Jump { location: 131 }, Mov { destination: Relative(7), source: Relative(17) }, Jump { location: 131 }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(7), rhs: Relative(1) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U1, lhs: Relative(3), rhs: Relative(5) }, JumpIf { condition: Relative(7), location: 136 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, JumpIf { condition: Relative(4), location: 140 }, Jump { location: 138 }, Mov { destination: Relative(2), source: Relative(9) }, Jump { location: 142 }, Mov { destination: Relative(2), source: Relative(17) }, Jump { location: 142 }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(2), rhs: Relative(1) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U1, lhs: Relative(7), rhs: Relative(5) }, JumpIf { condition: Relative(2), location: 147 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, JumpIf { condition: Relative(4), location: 151 }, Jump { location: 149 }, Mov { destination: Relative(3), source: Relative(10) }, Jump { location: 153 }, Mov { destination: Relative(3), source: Relative(17) }, Jump { location: 153 }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(3), rhs: Relative(17) }, JumpIf { condition: Relative(7), location: 157 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, JumpIf { condition: Relative(4), location: 161 }, Jump { location: 159 }, Mov { destination: Relative(2), source: Relative(11) }, Jump { location: 163 }, Mov { destination: Relative(2), source: Relative(17) }, Jump { location: 163 }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(2), rhs: Relative(17) }, JumpIf { condition: Relative(7), location: 167 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, JumpIf { condition: Relative(4), location: 171 }, Jump { location: 169 }, Mov { destination: Relative(3), source: Relative(12) }, Jump { location: 173 }, Mov { destination: Relative(3), source: Relative(17) }, Jump { location: 173 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(3) }, Const { destination: Relative(7), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(3), rhs: Relative(7) }, Not { destination: Relative(3), source: Relative(4), bit_size: U1 }, Cast { destination: Relative(9), source: Relative(4), bit_size: Field }, Cast { destination: Relative(10), source: Relative(3), bit_size: Field }, BinaryFieldOp { destination: Relative(3), op: Mul, lhs: Relative(9), rhs: Relative(1) }, BinaryFieldOp { destination: Relative(9), op: Add, lhs: Relative(3), rhs: Relative(10) }, BinaryFieldOp { destination: Relative(11), op: Add, lhs: Relative(3), rhs: Relative(10) }, BinaryFieldOp { destination: Relative(12), op: Add, lhs: Relative(3), rhs: Relative(10) }, BinaryFieldOp { destination: Relative(18), op: Add, lhs: Relative(3), rhs: Relative(10) }, JumpIf { condition: Relative(8), location: 188 }, Jump { location: 197 }, JumpIf { condition: Relative(6), location: 193 }, Jump { location: 190 }, BinaryFieldOp { destination: Relative(19), op: Add, lhs: Relative(3), rhs: Relative(10) }, Mov { destination: Relative(8), source: Relative(19) }, Jump { location: 195 }, Mov { destination: Relative(8), source: Relative(17) }, Jump { location: 195 }, Store { destination_pointer: Relative(2), source: Relative(8) }, Jump { location: 197 }, Load { destination: Relative(8), source_pointer: Relative(2) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(8), rhs: Relative(17) }, JumpIf { condition: Relative(2), location: 202 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(10) } }, JumpIf { condition: Relative(4), location: 206 }, Jump { location: 204 }, Mov { destination: Relative(3), source: Relative(13) }, Jump { location: 208 }, Mov { destination: Relative(3), source: Relative(17) }, Jump { location: 208 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(3) }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(3), rhs: Relative(7) }, JumpIf { condition: Relative(8), location: 214 }, Jump { location: 222 }, JumpIf { condition: Relative(6), location: 218 }, Jump { location: 216 }, Mov { destination: Relative(3), source: Relative(9) }, Jump { location: 220 }, Mov { destination: Relative(3), source: Relative(17) }, Jump { location: 220 }, Store { destination_pointer: Relative(2), source: Relative(3) }, Jump { location: 222 }, Load { destination: Relative(8), source_pointer: Relative(2) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(8), rhs: Relative(1) }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U1, lhs: Relative(2), rhs: Relative(5) }, JumpIf { condition: Relative(8), location: 228 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, JumpIf { condition: Relative(6), location: 232 }, Jump { location: 230 }, Mov { destination: Relative(3), source: Relative(11) }, Jump { location: 234 }, Mov { destination: Relative(3), source: Relative(17) }, Jump { location: 234 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(3) }, BinaryFieldOp { destination: Relative(8), op: Equals, lhs: Relative(3), rhs: Relative(7) }, JumpIf { condition: Relative(8), location: 240 }, Jump { location: 248 }, JumpIf { condition: Relative(4), location: 244 }, Jump { location: 242 }, Mov { destination: Relative(3), source: Relative(14) }, Jump { location: 246 }, Mov { destination: Relative(3), source: Relative(17) }, Jump { location: 246 }, Store { destination_pointer: Relative(2), source: Relative(3) }, Jump { location: 248 }, Load { destination: Relative(8), source_pointer: Relative(2) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(8), rhs: Relative(1) }, JumpIf { condition: Relative(2), location: 253 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, JumpIf { condition: Relative(6), location: 257 }, Jump { location: 255 }, Mov { destination: Relative(3), source: Relative(12) }, Jump { location: 259 }, Mov { destination: Relative(3), source: Relative(17) }, Jump { location: 259 }, Mov { destination: Relative(1), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(1), source: Relative(3) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(3), rhs: Relative(7) }, JumpIf { condition: Relative(2), location: 265 }, Jump { location: 273 }, JumpIf { condition: Relative(4), location: 269 }, Jump { location: 267 }, Mov { destination: Relative(2), source: Relative(15) }, Jump { location: 271 }, Mov { destination: Relative(2), source: Relative(17) }, Jump { location: 271 }, Store { destination_pointer: Relative(1), source: Relative(2) }, Jump { location: 273 }, Load { destination: Relative(3), source_pointer: Relative(1) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(3), rhs: Relative(17) }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U1, lhs: Relative(1), rhs: Relative(5) }, JumpIf { condition: Relative(3), location: 279 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, JumpIf { condition: Relative(4), location: 283 }, Jump { location: 281 }, Mov { destination: Relative(2), source: Relative(16) }, Jump { location: 285 }, Mov { destination: Relative(2), source: Relative(17) }, Jump { location: 285 }, Mov { destination: Relative(1), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(1), source: Relative(2) }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(2), rhs: Relative(7) }, JumpIf { condition: Relative(3), location: 291 }, Jump { location: 299 }, JumpIf { condition: Relative(6), location: 295 }, Jump { location: 293 }, Mov { destination: Relative(2), source: Relative(18) }, Jump { location: 297 }, Mov { destination: Relative(2), source: Relative(17) }, Jump { location: 297 }, Store { destination_pointer: Relative(1), source: Relative(2) }, Jump { location: 299 }, Load { destination: Relative(2), source_pointer: Relative(1) }, BinaryFieldOp { destination: Relative(1), op: Equals, lhs: Relative(2), rhs: Relative(17) }, JumpIf { condition: Relative(1), location: 304 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 310 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 15764276373176857197 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14990209321349310352 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 1998584279744703196 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 361444214588792908 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
