---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "361444214588792908": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      },
      "1998584279744703196": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "14990209321349310352": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "15764276373176857197": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _1",
    "private parameters indices : [_0, _1]",
    "public parameters indices : []",
    "return value indices : []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ], EXPR [ (1, _1) 0 ]], outputs: []",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U32) }, Cast { destination: Direct(32837), source: Direct(32837), bit_size: Integer(U32) }, Mov { destination: Relative(1), source: Direct(32836) }, Mov { destination: Relative(2), source: Direct(32837) }, Call { location: 15 }, Call { location: 16 }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(1), size: Relative(2) } }, Return, Call { location: 331 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(4) }, JumpIf { condition: Relative(5), location: 21 }, Call { location: 337 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 12 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 26 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Sub, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, BinaryIntOp { destination: Relative(5), op: LessThanEquals, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, JumpIf { condition: Relative(5), location: 30 }, Call { location: 340 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 6 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 35 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Mul, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(6), rhs: Relative(2) }, JumpIf { condition: Relative(5), location: 43 }, BinaryIntOp { destination: Relative(8), op: Div, bit_size: U32, lhs: Relative(4), rhs: Relative(2) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(8), rhs: Relative(1) }, JumpIf { condition: Relative(7), location: 43 }, Call { location: 343 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 27 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 48 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Div, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 54 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(5), op: Div, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, BinaryIntOp { destination: Relative(6), op: Mul, bit_size: U32, lhs: Relative(5), rhs: Relative(2) }, BinaryIntOp { destination: Relative(4), op: Sub, bit_size: U32, lhs: Relative(1), rhs: Relative(6) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 62 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: And, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 68 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Or, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 11 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(6) }, JumpIf { condition: Relative(7), location: 74 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, BinaryIntOp { destination: Relative(4), op: Xor, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 10 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(6) }, JumpIf { condition: Relative(7), location: 80 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, BinaryIntOp { destination: Relative(4), op: Shl, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Const { destination: Relative(6), bit_size: Integer(U32), value: 72 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(6) }, JumpIf { condition: Relative(7), location: 86 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, BinaryIntOp { destination: Relative(4), op: Shr, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 91 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, Const { destination: Relative(5), bit_size: Integer(U1), value: 0 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U1, lhs: Relative(4), rhs: Relative(5) }, JumpIf { condition: Relative(6), location: 97 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, BinaryIntOp { destination: Relative(4), op: LessThan, bit_size: U32, lhs: Relative(1), rhs: Relative(2) }, BinaryIntOp { destination: Relative(6), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(1) }, Not { destination: Relative(1), source: Relative(6), bit_size: U1 }, Cast { destination: Relative(2), source: Relative(6), bit_size: Field }, Cast { destination: Relative(7), source: Relative(1), bit_size: Field }, Const { destination: Relative(8), bit_size: Field, value: 2 }, BinaryFieldOp { destination: Relative(9), op: Mul, lhs: Relative(2), rhs: Relative(8) }, Cast { destination: Relative(10), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(11), op: Mul, lhs: Relative(2), rhs: Relative(8) }, Cast { destination: Relative(12), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(13), op: Mul, lhs: Relative(2), rhs: Relative(8) }, Cast { destination: Relative(14), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(15), op: Mul, lhs: Relative(2), rhs: Relative(8) }, Cast { destination: Relative(16), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(17), op: Mul, lhs: Relative(2), rhs: Relative(8) }, Cast { destination: Relative(18), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(19), op: Mul, lhs: Relative(2), rhs: Relative(8) }, Cast { destination: Relative(20), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(21), op: Mul, lhs: Relative(2), rhs: Relative(8) }, Cast { destination: Relative(22), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(23), op: Mul, lhs: Relative(2), rhs: Relative(8) }, Cast { destination: Relative(24), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(25), op: Mul, lhs: Relative(2), rhs: Relative(8) }, Const { destination: Relative(26), bit_size: Field, value: 0 }, JumpIf { condition: Relative(4), location: 128 }, Jump { location: 123 }, Cast { destination: Relative(27), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(1), op: Mul, lhs: Relative(2), rhs: Relative(8) }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(1), rhs: Relative(27) }, Mov { destination: Relative(3), source: Relative(2) }, Jump { location: 130 }, Mov { destination: Relative(3), source: Relative(26) }, Jump { location: 130 }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(3), rhs: Relative(26) }, JumpIf { condition: Relative(2), location: 134 }, Const { destination: Relative(27), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(27) } }, JumpIf { condition: Relative(4), location: 139 }, Jump { location: 136 }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(9), rhs: Relative(7) }, Mov { destination: Relative(1), source: Relative(2) }, Jump { location: 141 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 141 }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(1), rhs: Relative(8) }, BinaryIntOp { destination: Relative(1), op: Equals, bit_size: U1, lhs: Relative(3), rhs: Relative(5) }, JumpIf { condition: Relative(1), location: 146 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, JumpIf { condition: Relative(4), location: 151 }, Jump { location: 148 }, BinaryFieldOp { destination: Relative(1), op: Add, lhs: Relative(11), rhs: Relative(10) }, Mov { destination: Relative(2), source: Relative(1) }, Jump { location: 153 }, Mov { destination: Relative(2), source: Relative(26) }, Jump { location: 153 }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(2), rhs: Relative(8) }, BinaryIntOp { destination: Relative(2), op: Equals, bit_size: U1, lhs: Relative(3), rhs: Relative(5) }, JumpIf { condition: Relative(2), location: 158 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, JumpIf { condition: Relative(4), location: 163 }, Jump { location: 160 }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(13), rhs: Relative(12) }, Mov { destination: Relative(1), source: Relative(2) }, Jump { location: 165 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 165 }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(1), rhs: Relative(26) }, JumpIf { condition: Relative(3), location: 169 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, JumpIf { condition: Relative(4), location: 174 }, Jump { location: 171 }, BinaryFieldOp { destination: Relative(1), op: Add, lhs: Relative(15), rhs: Relative(14) }, Mov { destination: Relative(2), source: Relative(1) }, Jump { location: 176 }, Mov { destination: Relative(2), source: Relative(26) }, Jump { location: 176 }, BinaryFieldOp { destination: Relative(3), op: Equals, lhs: Relative(2), rhs: Relative(26) }, JumpIf { condition: Relative(3), location: 180 }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(7) } }, JumpIf { condition: Relative(4), location: 185 }, Jump { location: 182 }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(17), rhs: Relative(16) }, Mov { destination: Relative(1), source: Relative(2) }, Jump { location: 187 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 187 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(1) }, Const { destination: Relative(3), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(1), rhs: Relative(3) }, Not { destination: Relative(1), source: Relative(4), bit_size: U1 }, Cast { destination: Relative(9), source: Relative(4), bit_size: Field }, Cast { destination: Relative(10), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(11), op: Mul, lhs: Relative(9), rhs: Relative(8) }, Cast { destination: Relative(12), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(13), op: Mul, lhs: Relative(9), rhs: Relative(8) }, Cast { destination: Relative(14), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(15), op: Mul, lhs: Relative(9), rhs: Relative(8) }, Cast { destination: Relative(16), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(17), op: Mul, lhs: Relative(9), rhs: Relative(8) }, JumpIf { condition: Relative(7), location: 204 }, Jump { location: 215 }, JumpIf { condition: Relative(6), location: 211 }, Jump { location: 206 }, Cast { destination: Relative(27), source: Relative(1), bit_size: Field }, BinaryFieldOp { destination: Relative(1), op: Mul, lhs: Relative(9), rhs: Relative(8) }, BinaryFieldOp { destination: Relative(9), op: Add, lhs: Relative(1), rhs: Relative(27) }, Mov { destination: Relative(7), source: Relative(9) }, Jump { location: 213 }, Mov { destination: Relative(7), source: Relative(26) }, Jump { location: 213 }, Store { destination_pointer: Relative(2), source: Relative(7) }, Jump { location: 215 }, Load { destination: Relative(7), source_pointer: Relative(2) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(7), rhs: Relative(26) }, JumpIf { condition: Relative(2), location: 220 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, JumpIf { condition: Relative(4), location: 225 }, Jump { location: 222 }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(19), rhs: Relative(18) }, Mov { destination: Relative(1), source: Relative(2) }, Jump { location: 227 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 227 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(1) }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(1), rhs: Relative(3) }, JumpIf { condition: Relative(7), location: 233 }, Jump { location: 242 }, JumpIf { condition: Relative(6), location: 238 }, Jump { location: 235 }, BinaryFieldOp { destination: Relative(7), op: Add, lhs: Relative(11), rhs: Relative(10) }, Mov { destination: Relative(1), source: Relative(7) }, Jump { location: 240 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 240 }, Store { destination_pointer: Relative(2), source: Relative(1) }, Jump { location: 242 }, Load { destination: Relative(7), source_pointer: Relative(2) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(7), rhs: Relative(8) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U1, lhs: Relative(2), rhs: Relative(5) }, JumpIf { condition: Relative(7), location: 248 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, JumpIf { condition: Relative(6), location: 253 }, Jump { location: 250 }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(13), rhs: Relative(12) }, Mov { destination: Relative(1), source: Relative(2) }, Jump { location: 255 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 255 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(1) }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(1), rhs: Relative(3) }, JumpIf { condition: Relative(7), location: 261 }, Jump { location: 270 }, JumpIf { condition: Relative(4), location: 266 }, Jump { location: 263 }, BinaryFieldOp { destination: Relative(7), op: Add, lhs: Relative(21), rhs: Relative(20) }, Mov { destination: Relative(1), source: Relative(7) }, Jump { location: 268 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 268 }, Store { destination_pointer: Relative(2), source: Relative(1) }, Jump { location: 270 }, Load { destination: Relative(7), source_pointer: Relative(2) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(7), rhs: Relative(8) }, JumpIf { condition: Relative(2), location: 275 }, Const { destination: Relative(9), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(9) } }, JumpIf { condition: Relative(6), location: 280 }, Jump { location: 277 }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(15), rhs: Relative(14) }, Mov { destination: Relative(1), source: Relative(2) }, Jump { location: 282 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 282 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(1) }, BinaryFieldOp { destination: Relative(7), op: Equals, lhs: Relative(1), rhs: Relative(3) }, JumpIf { condition: Relative(7), location: 288 }, Jump { location: 297 }, JumpIf { condition: Relative(4), location: 293 }, Jump { location: 290 }, BinaryFieldOp { destination: Relative(7), op: Add, lhs: Relative(23), rhs: Relative(22) }, Mov { destination: Relative(1), source: Relative(7) }, Jump { location: 295 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 295 }, Store { destination_pointer: Relative(2), source: Relative(1) }, Jump { location: 297 }, Load { destination: Relative(7), source_pointer: Relative(2) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(7), rhs: Relative(26) }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U1, lhs: Relative(2), rhs: Relative(5) }, JumpIf { condition: Relative(7), location: 303 }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(8) } }, JumpIf { condition: Relative(4), location: 308 }, Jump { location: 305 }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(25), rhs: Relative(24) }, Mov { destination: Relative(1), source: Relative(2) }, Jump { location: 310 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 310 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(2), source: Relative(1) }, BinaryFieldOp { destination: Relative(4), op: Equals, lhs: Relative(1), rhs: Relative(3) }, JumpIf { condition: Relative(4), location: 316 }, Jump { location: 325 }, JumpIf { condition: Relative(6), location: 321 }, Jump { location: 318 }, BinaryFieldOp { destination: Relative(3), op: Add, lhs: Relative(17), rhs: Relative(16) }, Mov { destination: Relative(1), source: Relative(3) }, Jump { location: 323 }, Mov { destination: Relative(1), source: Relative(26) }, Jump { location: 323 }, Store { destination_pointer: Relative(2), source: Relative(1) }, Jump { location: 325 }, Load { destination: Relative(1), source_pointer: Relative(2) }, BinaryFieldOp { destination: Relative(2), op: Equals, lhs: Relative(1), rhs: Relative(26) }, JumpIf { condition: Relative(2), location: 330 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 336 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 15764276373176857197 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14990209321349310352 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 1998584279744703196 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 361444214588792908 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
