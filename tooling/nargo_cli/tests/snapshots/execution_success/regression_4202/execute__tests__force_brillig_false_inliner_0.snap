---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "input",
        "type": {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _3",
    "private parameters indices : [_0, _1, _2, _3]",
    "public parameters indices : []",
    "return value indices : []",
    "EXPR [ (-1, _0) 1 ]",
    "EXPR [ (-1, _1) 2 ]",
    "EXPR [ (-1, _2) 3 ]",
    "EXPR [ (-1, _3) 4 ]"
  ],
  "debug_symbols": "jZDBCoMwDIbfJecerM6DvsoYUmuUQmlLbAdDfPfFopseBrskTf58DfkXGLBPU2fc6Gdo7wv0ZKw1U2e9VtF4x91lFXCUXSREbsFJZyooQhehdclaAU9lUx6ag3I5R0WsFgLQDZz5w9FY3F6r+NLFb1Q2tx2WTf3B67/5UlY7X1a3C//gSmlDl4uh4EEBMscyx4rjui0go3qLuy9jcvpkU3yFQzmMDOQ1DolwW5A1XvkG",
  "file_map": {
    "50": {
      "source": "fn main(input: [u32; 4]) {\n    let mut slice1: [u32] = &[1, 2, 3, 4];\n    if slice1[0] == 3 {\n        slice1[1] = 4;\n    }\n\n    if slice1[1] == 5 {\n        slice1[3] = 6;\n    }\n\n    for i in 0..4 {\n        assert(slice1[i] == input[i]);\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": []
}
