---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 8
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _1",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 8)] []",
    "BLACKBOX::AND [(255, 8), (_0, 8)] [_1]",
    "EXPR [ (1, _1) -1 ]"
  ],
  "debug_symbols": "nZDLCoMwEEX/ZdZZaK0P8iulSIyjBEISYlIo4r93FNPqolC6msedcwfuDD12cWyVGewE/DZD55XWamy1lSIoa2g7LwzS2AaPSCs46EQ54dEE4CZqzeAhdNyOJifMVoPwpGYM0PRUyXBQGtduYR86+47W+c421zdc/kznZbHjeZX9w9dV4pszf6dJSOVPeUEO/MLgArxYVlOvRKdxT3KIRh6CDU+XlBS981ZiHz2upptGb14=",
  "file_map": {
    "50": {
      "source": "fn main(x: u8) {\n    // Safety: test code\n    let predicate = unsafe { return_true() };\n    let tmp: u8 = if predicate { 0xff } else { 0 };\n\n    let y = tmp & x;\n    assert_eq(y, 1);\n}\n\nunconstrained fn return_true() -> bool {\n    true\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": []
}
