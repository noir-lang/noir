---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "array",
        "length": 3,
        "type": {
          "kind": "boolean"
        }
      },
      "visibility": "public"
    },
    "error_types": {
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _3",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1, _2, _3]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 })], outputs: [Array([Witness(1), Witness(2), Witness(3)])]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32844 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32840), size_address: Relative(2), offset_address: Relative(3) }, Cast { destination: Direct(32840), source: Direct(32840), bit_size: Integer(U1) }, Mov { destination: Relative(1), source: Direct(32840) }, Call { location: 20 }, Call { location: 34 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 32841 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 3 }, Mov { destination: Direct(32771), source: Relative(2) }, Mov { destination: Direct(32772), source: Relative(3) }, Mov { destination: Direct(32773), source: Relative(4) }, Call { location: 67 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32841 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 3 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, Const { destination: Direct(32835), bit_size: Integer(U1), value: 1 }, Const { destination: Direct(32836), bit_size: Integer(U1), value: 0 }, Mov { destination: Direct(32837), source: Direct(1) }, Const { destination: Direct(32838), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32838) }, IndirectConst { destination_pointer: Direct(32837), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32838), op: Add, bit_size: U32, lhs: Direct(32837), rhs: Direct(2) }, Mov { destination: Direct(32839), source: Direct(32838) }, Store { destination_pointer: Direct(32839), source: Direct(32835) }, BinaryIntOp { destination: Direct(32839), op: Add, bit_size: U32, lhs: Direct(32839), rhs: Direct(2) }, Store { destination_pointer: Direct(32839), source: Direct(32836) }, BinaryIntOp { destination: Direct(32839), op: Add, bit_size: U32, lhs: Direct(32839), rhs: Direct(2) }, Store { destination_pointer: Direct(32839), source: Direct(32835) }, Return, Call { location: 78 }, Load { destination: Relative(2), source_pointer: Direct(32837) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(4), source: Relative(4), bit_size: U1 }, JumpIf { condition: Relative(4), location: 41 }, Call { location: 84 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Direct(32837), source: Relative(2) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 5 }, Mov { destination: Relative(5), source: Direct(0) }, Mov { destination: Relative(6), source: Relative(1) }, Mov { destination: Relative(7), source: Direct(32837) }, BinaryIntOp { destination: Direct(0), op: Add, bit_size: U32, lhs: Direct(0), rhs: Relative(4) }, Call { location: 87 }, Mov { destination: Direct(0), source: Relative(0) }, Mov { destination: Relative(2), source: Relative(6) }, Load { destination: Relative(4), source_pointer: Direct(32837) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(6), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(4) }, Not { destination: Relative(6), source: Relative(6), bit_size: U1 }, JumpIf { condition: Relative(6), location: 57 }, Call { location: 84 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Store { destination_pointer: Direct(32837), source: Relative(4) }, Not { destination: Relative(4), source: Relative(1), bit_size: U1 }, ConditionalMov { destination: Relative(7), source_a: Direct(32837), source_b: Relative(2), condition: Relative(1) }, Mov { destination: Direct(32771), source: Relative(7) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 4 }, Call { location: 98 }, Mov { destination: Relative(6), source: Direct(32773) }, Mov { destination: Relative(1), source: Relative(6) }, Return, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 77 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 70 }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 83 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Call { location: 78 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Mov { destination: Direct(32771), source: Relative(2) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 4 }, Call { location: 98 }, Mov { destination: Relative(4), source: Direct(32773) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, BinaryIntOp { destination: Relative(6), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, Store { destination_pointer: Relative(6), source: Relative(1) }, Mov { destination: Relative(1), source: Relative(4) }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32775), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32775), location: 102 }, Jump { location: 104 }, Mov { destination: Direct(32773), source: Direct(32771) }, Jump { location: 119 }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 116 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 109 }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32774), op: Sub, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Jump { location: 119 }, Return]"
  ],
  "debug_symbols": "jZJLjoQgFEX3wpiBoPzcijEGFSskBA2lnXSMe++HT7uqBp30hAM+zpXfTkbXb4/Ox2l+krrZSZ98CP7RhXmwq58jfN1JkZuqJDWjpKoQAiERCqER5oQoEAzBEZgiMEVgisAUgSkCUyTqEnWJukRdoq5hJgeYE6ZAMARHlIgKAf/jx0HJvb1uTc7l3b3tF05hscnFldRxC4GSLxu2c9JzsfHkahNUC0pcHIEQOPngcu+gL7v4WzXl5bJC/dri3zpn5vI5Lz/8FkZ28OnjAo+clLztg7uG0xaHt+r6vdyV+wEsaR7cuCWXk16vAJrGaMqYaSmBs22kokpBn+WK0lSXeQB30OiKatkeeU0/",
  "file_map": {
    "50": {
      "source": "global G_C: [bool; 3] = [true, false, true];\nfn main(a: bool) -> pub [bool; 3] {\n    let b = func_1(a, G_C);\n    if a {\n        G_C\n    } else {\n        b\n    }\n}\nfn func_1(a: bool, mut b: [bool; 3]) -> [bool; 3] {\n    b[1] = a;\n    b\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
