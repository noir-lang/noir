---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "is_active",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "struct",
        "path": "std::embedded_curve_ops::EmbeddedCurvePoint",
        "fields": [
          {
            "name": "x",
            "type": {
              "kind": "field"
            }
          },
          {
            "name": "y",
            "type": {
              "kind": "field"
            }
          },
          {
            "name": "is_infinite",
            "type": {
              "kind": "boolean"
            }
          }
        ]
      },
      "visibility": "public"
    },
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _3",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1, _2, _3]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ]], outputs: [_1, _2, _3]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32840 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U1) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 16 }, Call { location: 17 }, Mov { destination: Direct(32837), source: Relative(1) }, Mov { destination: Direct(32838), source: Relative(2) }, Mov { destination: Direct(32839), source: Relative(3) }, Const { destination: Relative(4), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 3 }, Stop { return_data: HeapVector { pointer: Relative(4), size: Relative(5) } }, Return, Call { location: 50 }, Const { destination: Relative(5), bit_size: Field, value: 0 }, Const { destination: Relative(6), bit_size: Field, value: 5 }, Const { destination: Relative(7), bit_size: Integer(U1), value: 0 }, JumpIf { condition: Relative(1), location: 27 }, Jump { location: 23 }, Mov { destination: Relative(2), source: Relative(5) }, Mov { destination: Relative(3), source: Relative(6) }, Mov { destination: Relative(4), source: Relative(7) }, Jump { location: 46 }, Mov { destination: Relative(1), source: Direct(1) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(8) }, IndirectConst { destination_pointer: Relative(1), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, BlackBox(EmbeddedCurveAdd { input1_x: Relative(5), input1_y: Relative(6), input1_infinite: Relative(7), input2_x: Relative(5), input2_y: Relative(6), input2_infinite: Relative(7), result: HeapArray { pointer: Relative(8), size: 3 } }), Const { destination: Relative(5), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, Load { destination: Relative(6), source_pointer: Relative(7) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, Load { destination: Relative(7), source_pointer: Relative(8) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(1), rhs: Relative(5) }, Load { destination: Relative(8), source_pointer: Relative(9) }, Mov { destination: Relative(2), source: Relative(6) }, Mov { destination: Relative(3), source: Relative(7) }, Mov { destination: Relative(4), source: Relative(8) }, Jump { location: 46 }, Mov { destination: Relative(1), source: Relative(2) }, Mov { destination: Relative(2), source: Relative(3) }, Mov { destination: Relative(3), source: Relative(4) }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 55 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
