---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "16078247100671166886": {
        "error_kind": "fmtstring",
        "length": 28,
        "item_types": []
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/+2YWXKbQBCGZyxAQhK2LCfWCbI92AVa8ZsfchEiWecgZ0wOlCg1DU1nZBvR7aWqqVKxzPD1P81sv6ypD+vOAbk3njr37px2OzJGVuoV+tgBde7cRezuz1B5j7GxMYnLyc/T5Sr2tI9R/yJ2TMn8AFOAn/Yd53tZ82lbDkfi7nEfgncGf39jU18n7jom70h8W8Hcp1ce/RBr5Nr61Tbbeobyw6Qjw207HOEjunw5sWxalnPgByL8TcUPRfjrajxFMvwH4Pdl+NV8M5Dh58CPRfjzFPhDmf5T5Wckk5898Mcy+qs5LZHRvwX+uQx/CfwLmfxU/ImM/mr+uZThV993KsP/AfwrxDeGb00E/gcZfjU/f0R8zjU9NM219Lc7H9aDT+6a7rkY2zeHNl07nm8tp+s81P2JtH6T17roovUWab1B11/Ifgmz+MbBYpF48mJJzq5JO3hiZztL4hnT3L/TvA6N6B4/syQe6KH5gT0j5G7m0TrxlNG95swTZ+aJ42MFjKyQkRUxsvqMrAEjK2Zk2Teqa8jI4sz9iJE1ZmQljKxzRhZnn+Ac25zf8YKRxZmvCSPr8o22kTP3nOvQlJHFmXs6hmD+x+s59iTgH+iesnRn2f/2sgfY44A+gzT4/oPijG1JPMg3fobjJx49oHt4pOz+RK27/Txb5/luud6s8rtibQkftNJndA8Yeer79pq+/8sYc72F9atX1vwI5fVwBKgsJGUhKgONh3X/1jb1R0L6n5N/HH/iKcNeus23nJpmX8Pj8QW93Fy9XC3Iknig59j4Ui/39FqlXk69nHq5diz1cu1Y6uVer43q5bqNIZj/23q5X+6sXk693Cn6Sa7Vy5l37+Uy9XK1IEvigZ5j40u93NNrlXo59XLq5dqx1Mu1Y6mXe702qpfrNoZg/m/r5T67C/Vy6uVO0U9yrV7OyHu5kann3qDkz8MmT1MYF/AdQ9PsT4bED0n9GwfA+z9juo+X/abI9otiX6yK3W65LaaEj/M5Qs/7ZV3eI1r/6XfX0A8HuD4pi8v/2w9xhu4+QHEwC3SEpH7uALAORugdeH/iiR+R+A3dnmd43qCsnucZ7n8Z6n9/APmZo2hNOQAA",
  "debug_symbols": "pdXLbuJAEEDRf/GahftVVc2vjKKIEGdkyTLIgZFGEf8+btclkywizWPDxZg6gIW737rn4en6/XGcX06v3f7bW/e0jNM0fn+cTsfDZTzN66tvXd8eknb7sOuSbcmh28c10SMe9Zinbim9xweKD5TkyZ7icaW4Ulwprogr4oq4Iq6IK+KKuCKuiCviirqirqgr6oq6oq6oK+qKuqKumCvmirlirpgr5oq5Yq6YK+ZKdaW6Ul2prlRXqivVlepKdaW6EvqeBhppopkWKlTpyuXW6g09DTTSRDMtVKhSvIAX8SJexIt4ES/iRbyIF+v2fwupp4FGmmimhQpVahQv42W8jJfxMl7Gy3gZL+NlvIJX8ApewSt4Ba/gFbyCV/AET/AET/AET/AET/AET/AUT/EUT/EUT/EUT/EUT/EMz/AMz/AMz/AMz/AMz/AqXrsfSmukiWZaqFClRuvW2O6LrYFGmmimhQpVahQv4LXrJK2FClVqtHrbddoaaKSJ4hme4Rme4Rlexat4Fa9dJ7nddt195X68LMPQFu4PS/m6wJ8PyzBfuv18naZd9+MwXbc3vZ4P89bLYVnP9rtumJ/XruDLOA3t2W33e7r/enT9RQynGN/Hyx/Pp6T3eS3/Ml/vXz5H+2o+fT2vkXHV9+mcPk3H/5oOfz/9sB4djuPyaVu+NWcZD0/TwOHLdT5+OHv5eb6fuW/r5+V0HJ6vy9CkD3v7+tdIfdylEB/aXrAexiq71IeHW/v0Xw==",
  "file_map": {
    "43": {
      "source": "pub fn panic<T, U, let N: u32>(message: fmtstr<N, T>) -> U {\n    assert(false, message);\n    crate::mem::zeroed()\n}\n",
      "path": "std/panic.nr"
    },
    "50": {
      "source": "// This program lead to panics previously due to the compiler lowering it to multiple blocks\n// which all jumped to the same end block. It runs now due to the compiler lowering to the\n// equivalent of a nested series of if-else instead.\nfn main(x: Field) {\n    match x {\n        1 => panic(f\"Branch 1 should not be taken\"),\n        2 => panic(f\"Branch 2 should not be taken\"),\n        3 => panic(f\"Branch 3 should not be taken\"),\n        _ => (),\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
