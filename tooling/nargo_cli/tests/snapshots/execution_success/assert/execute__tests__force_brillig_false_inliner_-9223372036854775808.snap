---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "10220664360449826677": {
        "error_kind": "fmtstring",
        "length": 33,
        "item_types": [
          {
            "kind": "boolean"
          }
        ]
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/6WOQQqAMAwELfigpEnazc2vWEz//wQRKgqiF+eysIdh0nSRpifnt4ylf/DdJVRUo+Zg4ZWyNxiptQIGG2zLEAkoqjev5KwS3M2lD9nRNn+0v7EDo/0phPQAAAA=",
  "debug_symbols": "dY/RCoMwDEX/Jc99cMgY+CtjSK1RAiEtsR0M8d8XRTf3sKc0uT03uTP02JWxJRniBM19hk6JmcaWY/CZoth0XhwcbZsV0UZw0o1KXlEyNFKYHTw9l+3TlLxsNXs1tXKA0ls1w4EY19fivnT1H60vO1vfPvDV6Id1PpD+3AsVNJdlNVPyHeOeYSgSTpHyKx3KETppDNgXxdVu02zBGw==",
  "file_map": {
    "50": {
      "source": "fn main(x: Field) {\n    assert(x == 1);\n    assert(1 == conditional(x as bool));\n}\n\nfn conditional(x: bool) -> Field {\n    assert(x, f\"Expected x to be true but got {x}\");\n    assert_eq(x, true, f\"Expected x to be true but got {x}\");\n    1\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": []
}
