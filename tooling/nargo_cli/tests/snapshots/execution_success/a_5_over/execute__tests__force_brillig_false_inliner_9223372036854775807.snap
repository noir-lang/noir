---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _11",
    "private parameters indices : [_0, _1]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 32)] []",
    "BLACKBOX::RANGE [(_1, 32)] []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0, _0) 0 ], EXPR [ 4294967296 ]], outputs: [_2, _3]",
    "BLACKBOX::RANGE [(_2, 222)] []",
    "BLACKBOX::RANGE [(_3, 32)] []",
    "EXPR [ (1, _0, _0) (-4294967296, _2) (-1, _3) 0 ]",
    "EXPR [ (-1, _2) (-1, _4) 5096253676302562286669017222071363378443840053029366383258766538131 ]",
    "BLACKBOX::RANGE [(_4, 222)] []",
    "BRILLIG CALL func 1: inputs: [EXPR [ (-1, _2) 5096253676302562286669017222071363378443840053029366383258766538131 ]], outputs: [_5]",
    "EXPR [ (-1, _2, _5) (5096253676302562286669017222071363378443840053029366383258766538131, _5) (1, _6) -1 ]",
    "EXPR [ (-1, _2, _6) (5096253676302562286669017222071363378443840053029366383258766538131, _6) 0 ]",
    "EXPR [ (1, _3, _6) (268435455, _6) (-1, _7) 0 ]",
    "BLACKBOX::RANGE [(_7, 32)] []",
    "EXPR [ (1, _1) (-1, _3) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _1) 0 ], EXPR [ 2 ]], outputs: [_8, _9]",
    "BLACKBOX::RANGE [(_8, 31)] []",
    "BLACKBOX::RANGE [(_9, 1)] []",
    "EXPR [ (1, _1) (-2, _8) (-1, _9) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (-1, _9) 2 ], EXPR [ 2 ]], outputs: [_10, _11]",
    "BLACKBOX::RANGE [(_11, 1)] []",
    "EXPR [ (-1, _9) (-2, _10) (-1, _11) 2 ]",
    "EXPR [ (-1, _10) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
