---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "w",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "field"
      },
      "visibility": "public"
    },
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "7233212735005103307": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _1",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ]], outputs: [_1]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32838 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 13 }, Call { location: 14 }, Mov { destination: Direct(32837), source: Relative(1) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, Return, Call { location: 537 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 3 }, Mov { destination: Relative(6), source: Direct(1) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(7) }, IndirectConst { destination_pointer: Relative(6), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, Mov { destination: Relative(8), source: Relative(7) }, Store { destination_pointer: Relative(8), source: Relative(3) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(4) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Store { destination_pointer: Relative(8), source: Relative(5) }, Load { destination: Relative(5), source_pointer: Relative(6) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(5) }, Not { destination: Relative(8), source: Relative(8), bit_size: U1 }, JumpIf { condition: Relative(8), location: 35 }, Call { location: 543 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(5) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Mov { destination: Relative(8), source: Direct(1) }, Const { destination: Relative(9), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(9) }, IndirectConst { destination_pointer: Relative(8), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(8), rhs: Direct(2) }, Mov { destination: Relative(10), source: Relative(9) }, Store { destination_pointer: Relative(10), source: Relative(5) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(5) }, BinaryIntOp { destination: Relative(10), op: Add, bit_size: U32, lhs: Relative(10), rhs: Direct(2) }, Store { destination_pointer: Relative(10), source: Relative(5) }, Mov { destination: Relative(9), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(9), source: Relative(8) }, Const { destination: Relative(8), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(10), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(11), bit_size: Integer(U32), value: 2147483648 }, Const { destination: Relative(12), bit_size: Field, value: 4294967296 }, Const { destination: Relative(13), bit_size: Field, value: 2 }, Const { destination: Relative(14), bit_size: Integer(U1), value: 1 }, Const { destination: Relative(15), bit_size: Integer(U32), value: 1 }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 61 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(10) }, JumpIf { condition: Relative(7), location: 495 }, Jump { location: 64 }, Load { destination: Relative(7), source_pointer: Relative(9) }, Load { destination: Relative(9), source_pointer: Relative(7) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(9) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 71 }, Call { location: 543 }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(9), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(9) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(15) }, Load { destination: Relative(9), source_pointer: Relative(13) }, Const { destination: Relative(18), bit_size: Integer(U32), value: 2147483648 }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(18) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(18) }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(16), rhs: Relative(17) }, Const { destination: Relative(16), bit_size: Integer(U32), value: 2 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(16) }, Load { destination: Relative(17), source_pointer: Relative(18) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 2147483648 }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(20) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(17), rhs: Relative(20) }, BinaryIntOp { destination: Relative(16), op: LessThan, bit_size: U32, lhs: Relative(18), rhs: Relative(19) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(7), rhs: Relative(10) }, Load { destination: Relative(18), source_pointer: Relative(19) }, Const { destination: Relative(22), bit_size: Integer(U32), value: 2147483648 }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(22) }, BinaryIntOp { destination: Relative(21), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(22) }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(20), rhs: Relative(21) }, JumpIf { condition: Relative(13), location: 95 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, JumpIf { condition: Relative(16), location: 98 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, JumpIf { condition: Relative(19), location: 101 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, Load { destination: Relative(3), source_pointer: Relative(7) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(3) }, Not { destination: Relative(16), source: Relative(16), bit_size: U1 }, JumpIf { condition: Relative(16), location: 107 }, Call { location: 543 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(14) }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 114 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(10) }, JumpIf { condition: Relative(12), location: 481 }, Jump { location: 117 }, Load { destination: Relative(12), source_pointer: Relative(3) }, JumpIf { condition: Relative(12), location: 121 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, Load { destination: Relative(3), source_pointer: Relative(7) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(3) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 127 }, Call { location: 543 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(5) }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 134 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(10) }, JumpIf { condition: Relative(12), location: 459 }, Jump { location: 137 }, Load { destination: Relative(12), source_pointer: Relative(3) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 12 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(3) }, JumpIf { condition: Relative(13), location: 143 }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(16) } }, Load { destination: Relative(12), source_pointer: Relative(7) }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U32, lhs: Relative(13), rhs: Relative(12) }, Not { destination: Relative(16), source: Relative(16), bit_size: U1 }, JumpIf { condition: Relative(16), location: 149 }, Call { location: 543 }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(12) }, Mov { destination: Relative(12), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(5) }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 156 }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(10) }, JumpIf { condition: Relative(5), location: 428 }, Jump { location: 159 }, Load { destination: Relative(5), source_pointer: Relative(12) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 18 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(12) }, JumpIf { condition: Relative(13), location: 165 }, Const { destination: Relative(16), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(16) } }, Load { destination: Relative(5), source_pointer: Relative(7) }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(5) }, Not { destination: Relative(13), source: Relative(13), bit_size: U1 }, JumpIf { condition: Relative(13), location: 171 }, Call { location: 543 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(5), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(5) }, Mov { destination: Relative(5), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(5), source: Relative(9) }, Mov { destination: Relative(2), source: Relative(15) }, Jump { location: 178 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(10) }, JumpIf { condition: Relative(12), location: 406 }, Jump { location: 181 }, Load { destination: Relative(12), source_pointer: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U32, lhs: Relative(12), rhs: Relative(3) }, JumpIf { condition: Relative(5), location: 186 }, Const { destination: Relative(13), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(13) } }, Load { destination: Relative(3), source_pointer: Relative(7) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, Not { destination: Relative(12), source: Relative(12), bit_size: U1 }, JumpIf { condition: Relative(12), location: 192 }, Call { location: 543 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(9) }, Mov { destination: Relative(2), source: Relative(15) }, Jump { location: 199 }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(10) }, JumpIf { condition: Relative(5), location: 375 }, Jump { location: 202 }, Load { destination: Relative(5), source_pointer: Relative(3) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 16 }, BinaryIntOp { destination: Relative(11), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, JumpIf { condition: Relative(11), location: 208 }, Const { destination: Relative(12), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(12) } }, Load { destination: Relative(3), source_pointer: Relative(7) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(11), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, Not { destination: Relative(11), source: Relative(11), bit_size: U1 }, JumpIf { condition: Relative(11), location: 214 }, Call { location: 543 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(7), source: Relative(3) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 2147483647 }, BinaryIntOp { destination: Relative(7), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(9) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Sub, bit_size: U32, lhs: Relative(20), rhs: Relative(9) }, JumpIf { condition: Relative(7), location: 222 }, Jump { location: 224 }, Mov { destination: Relative(11), source: Relative(21) }, Jump { location: 226 }, Mov { destination: Relative(11), source: Relative(9) }, Jump { location: 226 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 2147483647 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Sub, bit_size: U32, lhs: Relative(20), rhs: Relative(4) }, JumpIf { condition: Relative(12), location: 232 }, Jump { location: 234 }, Mov { destination: Relative(13), source: Relative(21) }, Jump { location: 236 }, Mov { destination: Relative(13), source: Relative(4) }, Jump { location: 236 }, BinaryIntOp { destination: Relative(3), op: Div, bit_size: U32, lhs: Relative(11), rhs: Relative(13) }, BinaryIntOp { destination: Relative(16), op: Xor, bit_size: U1, lhs: Relative(7), rhs: Relative(12) }, JumpIf { condition: Relative(16), location: 240 }, Jump { location: 242 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(3), op: Sub, bit_size: U32, lhs: Relative(19), rhs: Relative(3) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 2147483647 }, BinaryIntOp { destination: Relative(9), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(17) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Sub, bit_size: U32, lhs: Relative(20), rhs: Relative(17) }, JumpIf { condition: Relative(9), location: 248 }, Jump { location: 250 }, Mov { destination: Relative(11), source: Relative(21) }, Jump { location: 252 }, Mov { destination: Relative(11), source: Relative(17) }, Jump { location: 252 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 2147483647 }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Sub, bit_size: U32, lhs: Relative(20), rhs: Relative(4) }, JumpIf { condition: Relative(12), location: 258 }, Jump { location: 260 }, Mov { destination: Relative(13), source: Relative(21) }, Jump { location: 262 }, Mov { destination: Relative(13), source: Relative(4) }, Jump { location: 262 }, BinaryIntOp { destination: Relative(7), op: Div, bit_size: U32, lhs: Relative(11), rhs: Relative(13) }, BinaryIntOp { destination: Relative(16), op: Xor, bit_size: U1, lhs: Relative(9), rhs: Relative(12) }, JumpIf { condition: Relative(16), location: 266 }, Jump { location: 268 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(7), op: Sub, bit_size: U32, lhs: Relative(19), rhs: Relative(7) }, Const { destination: Relative(19), bit_size: Integer(U32), value: 2147483647 }, BinaryIntOp { destination: Relative(11), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(18) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Sub, bit_size: U32, lhs: Relative(20), rhs: Relative(18) }, JumpIf { condition: Relative(11), location: 274 }, Jump { location: 276 }, Mov { destination: Relative(12), source: Relative(21) }, Jump { location: 278 }, Mov { destination: Relative(12), source: Relative(18) }, Jump { location: 278 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 2147483647 }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Const { destination: Relative(20), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(21), op: Sub, bit_size: U32, lhs: Relative(20), rhs: Relative(4) }, JumpIf { condition: Relative(13), location: 284 }, Jump { location: 286 }, Mov { destination: Relative(16), source: Relative(21) }, Jump { location: 288 }, Mov { destination: Relative(16), source: Relative(4) }, Jump { location: 288 }, BinaryIntOp { destination: Relative(9), op: Div, bit_size: U32, lhs: Relative(12), rhs: Relative(16) }, BinaryIntOp { destination: Relative(17), op: Xor, bit_size: U1, lhs: Relative(11), rhs: Relative(13) }, JumpIf { condition: Relative(17), location: 292 }, Jump { location: 294 }, Const { destination: Relative(19), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Sub, bit_size: U32, lhs: Relative(19), rhs: Relative(9) }, Mov { destination: Relative(4), source: Direct(1) }, Const { destination: Relative(11), bit_size: Integer(U32), value: 4 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Relative(11) }, IndirectConst { destination_pointer: Relative(4), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, Mov { destination: Relative(12), source: Relative(11) }, Store { destination_pointer: Relative(12), source: Relative(3) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(7) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(12), rhs: Direct(2) }, Store { destination_pointer: Relative(12), source: Relative(9) }, Load { destination: Relative(3), source_pointer: Relative(6) }, Const { destination: Relative(7), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(3) }, Not { destination: Relative(9), source: Relative(9), bit_size: U1 }, JumpIf { condition: Relative(9), location: 311 }, Call { location: 543 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(6), source: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(14) }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 318 }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(10) }, JumpIf { condition: Relative(5), location: 362 }, Jump { location: 321 }, Load { destination: Relative(5), source_pointer: Relative(3) }, JumpIf { condition: Relative(5), location: 325 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, Load { destination: Relative(3), source_pointer: Relative(4) }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(7), op: Equals, bit_size: U32, lhs: Relative(5), rhs: Relative(3) }, Not { destination: Relative(7), source: Relative(7), bit_size: U1 }, JumpIf { condition: Relative(7), location: 331 }, Call { location: 543 }, BinaryIntOp { destination: Relative(3), op: Add, bit_size: U32, lhs: Relative(3), rhs: Direct(2) }, Store { destination_pointer: Relative(4), source: Relative(3) }, Mov { destination: Relative(3), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, Store { destination_pointer: Relative(3), source: Relative(14) }, Mov { destination: Relative(2), source: Relative(8) }, Jump { location: 338 }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(2), rhs: Relative(10) }, JumpIf { condition: Relative(5), location: 349 }, Jump { location: 341 }, Load { destination: Relative(2), source_pointer: Relative(3) }, JumpIf { condition: Relative(2), location: 345 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Relative(3) } }, Const { destination: Relative(2), bit_size: Field, value: 5 }, BinaryFieldOp { destination: Relative(3), op: Add, lhs: Relative(1), rhs: Relative(2) }, Mov { destination: Relative(1), source: Relative(3) }, Return, Load { destination: Relative(5), source_pointer: Relative(3) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(8), rhs: Relative(2) }, Load { destination: Relative(7), source_pointer: Relative(9) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(2) }, Load { destination: Relative(8), source_pointer: Relative(11) }, BinaryIntOp { destination: Relative(9), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(8) }, BinaryIntOp { destination: Relative(7), op: Mul, bit_size: U1, lhs: Relative(5), rhs: Relative(9) }, Store { destination_pointer: Relative(3), source: Relative(7) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(15) }, Mov { destination: Relative(2), source: Relative(5) }, Jump { location: 338 }, Load { destination: Relative(5), source_pointer: Relative(3) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(4), rhs: Direct(2) }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(9), rhs: Relative(2) }, Load { destination: Relative(7), source_pointer: Relative(11) }, BinaryIntOp { destination: Relative(11), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(2) }, Load { destination: Relative(9), source_pointer: Relative(12) }, BinaryIntOp { destination: Relative(11), op: Equals, bit_size: U32, lhs: Relative(7), rhs: Relative(9) }, BinaryIntOp { destination: Relative(7), op: Mul, bit_size: U1, lhs: Relative(5), rhs: Relative(11) }, Store { destination_pointer: Relative(3), source: Relative(7) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(15) }, Mov { destination: Relative(2), source: Relative(5) }, Jump { location: 318 }, Load { destination: Relative(5), source_pointer: Relative(3) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(2) }, Load { destination: Relative(12), source_pointer: Relative(16) }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(5), rhs: Relative(12) }, Mov { destination: Relative(16), source: Relative(13) }, Cast { destination: Relative(13), source: Relative(16), bit_size: Integer(U32) }, Cast { destination: Relative(19), source: Relative(5), bit_size: Integer(U32) }, Cast { destination: Relative(5), source: Relative(12), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(11) }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(11) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U1, lhs: Relative(12), rhs: Relative(19) }, BinaryIntOp { destination: Relative(19), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Relative(11) }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U1, lhs: Relative(19), rhs: Relative(12) }, BinaryIntOp { destination: Relative(12), op: Mul, bit_size: U1, lhs: Relative(13), rhs: Relative(5) }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U1, lhs: Relative(12), rhs: Relative(5) }, JumpIf { condition: Relative(13), location: 393 }, Call { location: 546 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(4) }, Mov { destination: Relative(12), source: Relative(5) }, Cast { destination: Relative(5), source: Relative(12), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(11) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U1, lhs: Relative(13), rhs: Relative(19) }, BinaryIntOp { destination: Relative(13), op: Mul, bit_size: U1, lhs: Relative(5), rhs: Relative(19) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U1, lhs: Relative(13), rhs: Relative(19) }, JumpIf { condition: Relative(5), location: 402 }, Call { location: 546 }, Store { destination_pointer: Relative(3), source: Relative(12) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(15) }, Mov { destination: Relative(2), source: Relative(5) }, Jump { location: 199 }, Load { destination: Relative(12), source_pointer: Relative(5) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(2) }, Load { destination: Relative(13), source_pointer: Relative(19) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(13) }, Mov { destination: Relative(19), source: Relative(16) }, Cast { destination: Relative(16), source: Relative(19), bit_size: Integer(U32) }, Cast { destination: Relative(20), source: Relative(12), bit_size: Integer(U32) }, Cast { destination: Relative(12), source: Relative(13), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(13), op: LessThan, bit_size: U32, lhs: Relative(20), rhs: Relative(11) }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(12), rhs: Relative(11) }, BinaryIntOp { destination: Relative(12), op: Equals, bit_size: U1, lhs: Relative(13), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(16), rhs: Relative(11) }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U1, lhs: Relative(20), rhs: Relative(13) }, BinaryIntOp { destination: Relative(13), op: Mul, bit_size: U1, lhs: Relative(16), rhs: Relative(12) }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U1, lhs: Relative(13), rhs: Relative(12) }, JumpIf { condition: Relative(16), location: 424 }, Call { location: 546 }, Store { destination_pointer: Relative(5), source: Relative(19) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(15) }, Mov { destination: Relative(2), source: Relative(12) }, Jump { location: 178 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(2) }, Load { destination: Relative(5), source_pointer: Relative(16) }, Load { destination: Relative(13), source_pointer: Relative(12) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(5) }, Mov { destination: Relative(19), source: Relative(16) }, Cast { destination: Relative(16), source: Relative(19), bit_size: Integer(U32) }, Cast { destination: Relative(20), source: Relative(13), bit_size: Integer(U32) }, Cast { destination: Relative(13), source: Relative(5), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(5), op: LessThan, bit_size: U32, lhs: Relative(20), rhs: Relative(11) }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Relative(11) }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U1, lhs: Relative(5), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(16), rhs: Relative(11) }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U1, lhs: Relative(20), rhs: Relative(5) }, BinaryIntOp { destination: Relative(5), op: Mul, bit_size: U1, lhs: Relative(16), rhs: Relative(13) }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U1, lhs: Relative(5), rhs: Relative(13) }, JumpIf { condition: Relative(16), location: 446 }, Call { location: 546 }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(19), rhs: Relative(4) }, Mov { destination: Relative(13), source: Relative(5) }, Cast { destination: Relative(5), source: Relative(13), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(16), op: LessThan, bit_size: U32, lhs: Relative(5), rhs: Relative(11) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U1, lhs: Relative(16), rhs: Relative(20) }, BinaryIntOp { destination: Relative(16), op: Mul, bit_size: U1, lhs: Relative(5), rhs: Relative(20) }, BinaryIntOp { destination: Relative(5), op: Equals, bit_size: U1, lhs: Relative(16), rhs: Relative(20) }, JumpIf { condition: Relative(5), location: 455 }, Call { location: 546 }, Store { destination_pointer: Relative(12), source: Relative(13) }, BinaryIntOp { destination: Relative(5), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(15) }, Mov { destination: Relative(2), source: Relative(5) }, Jump { location: 156 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(2) }, Load { destination: Relative(12), source_pointer: Relative(16) }, Load { destination: Relative(13), source_pointer: Relative(3) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(12) }, Mov { destination: Relative(19), source: Relative(16) }, Cast { destination: Relative(16), source: Relative(19), bit_size: Integer(U32) }, Cast { destination: Relative(20), source: Relative(13), bit_size: Integer(U32) }, Cast { destination: Relative(13), source: Relative(12), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(12), op: LessThan, bit_size: U32, lhs: Relative(20), rhs: Relative(11) }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(13), rhs: Relative(11) }, BinaryIntOp { destination: Relative(13), op: Equals, bit_size: U1, lhs: Relative(12), rhs: Relative(20) }, BinaryIntOp { destination: Relative(20), op: LessThan, bit_size: U32, lhs: Relative(16), rhs: Relative(11) }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U1, lhs: Relative(20), rhs: Relative(12) }, BinaryIntOp { destination: Relative(12), op: Mul, bit_size: U1, lhs: Relative(16), rhs: Relative(13) }, BinaryIntOp { destination: Relative(16), op: Equals, bit_size: U1, lhs: Relative(12), rhs: Relative(13) }, JumpIf { condition: Relative(16), location: 477 }, Call { location: 546 }, Store { destination_pointer: Relative(3), source: Relative(19) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(15) }, Mov { destination: Relative(2), source: Relative(12) }, Jump { location: 134 }, BinaryIntOp { destination: Relative(13), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(13), rhs: Relative(2) }, Load { destination: Relative(12), source_pointer: Relative(16) }, Load { destination: Relative(13), source_pointer: Relative(3) }, Const { destination: Relative(21), bit_size: Integer(U32), value: 2147483648 }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(12), rhs: Relative(21) }, BinaryIntOp { destination: Relative(20), op: Add, bit_size: U32, lhs: Relative(4), rhs: Relative(21) }, BinaryIntOp { destination: Relative(16), op: LessThan, bit_size: U32, lhs: Relative(19), rhs: Relative(20) }, Not { destination: Relative(12), source: Relative(16), bit_size: U1 }, BinaryIntOp { destination: Relative(16), op: Mul, bit_size: U1, lhs: Relative(13), rhs: Relative(12) }, Store { destination_pointer: Relative(3), source: Relative(16) }, BinaryIntOp { destination: Relative(12), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(15) }, Mov { destination: Relative(2), source: Relative(12) }, Jump { location: 114 }, BinaryIntOp { destination: Relative(16), op: Add, bit_size: U32, lhs: Relative(6), rhs: Direct(2) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(16), rhs: Relative(2) }, Load { destination: Relative(7), source_pointer: Relative(17) }, BinaryIntOp { destination: Relative(16), op: Mul, bit_size: U32, lhs: Relative(7), rhs: Relative(4) }, Cast { destination: Relative(17), source: Relative(16), bit_size: Integer(U64) }, Cast { destination: Relative(18), source: Relative(17), bit_size: Integer(U32) }, Cast { destination: Relative(16), source: Relative(18), bit_size: Integer(U64) }, Cast { destination: Relative(17), source: Relative(7), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(18), op: LessThan, bit_size: U32, lhs: Relative(17), rhs: Relative(11) }, Not { destination: Relative(17), source: Relative(18), bit_size: U1 }, Cast { destination: Relative(19), source: Relative(7), bit_size: Field }, Cast { destination: Relative(7), source: Relative(18), bit_size: Field }, BinaryFieldOp { destination: Relative(18), op: Mul, lhs: Relative(7), rhs: Relative(19) }, BinaryFieldOp { destination: Relative(7), op: Sub, lhs: Relative(12), rhs: Relative(19) }, Cast { destination: Relative(19), source: Relative(17), bit_size: Field }, BinaryFieldOp { destination: Relative(20), op: Mul, lhs: Relative(19), rhs: Relative(7) }, BinaryFieldOp { destination: Relative(7), op: Add, lhs: Relative(18), rhs: Relative(20) }, BinaryFieldOp { destination: Relative(18), op: Mul, lhs: Relative(7), rhs: Relative(13) }, Cast { destination: Relative(7), source: Relative(18), bit_size: Field }, Const { destination: Relative(19), bit_size: Field, value: 4294967295 }, BinaryFieldOp { destination: Relative(20), op: LessThanEquals, lhs: Relative(7), rhs: Relative(19) }, JumpIf { condition: Relative(20), location: 518 }, Call { location: 549 }, Cast { destination: Relative(7), source: Relative(18), bit_size: Integer(U32) }, Cast { destination: Relative(18), source: Relative(17), bit_size: Integer(U32) }, BinaryIntOp { destination: Relative(17), op: Add, bit_size: U32, lhs: Relative(11), rhs: Relative(18) }, BinaryIntOp { destination: Relative(18), op: LessThan, bit_size: U32, lhs: Relative(7), rhs: Relative(17) }, JumpIf { condition: Relative(18), location: 524 }, Call { location: 549 }, Cast { destination: Relative(7), source: Relative(16), bit_size: Integer(U32) }, Load { destination: Relative(16), source_pointer: Relative(9) }, Mov { destination: Direct(32771), source: Relative(16) }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 4 }, Call { location: 552 }, Mov { destination: Relative(17), source: Direct(32773) }, BinaryIntOp { destination: Relative(18), op: Add, bit_size: U32, lhs: Relative(17), rhs: Direct(2) }, BinaryIntOp { destination: Relative(19), op: Add, bit_size: U32, lhs: Relative(18), rhs: Relative(2) }, Store { destination_pointer: Relative(19), source: Relative(7) }, Store { destination_pointer: Relative(9), source: Relative(17) }, BinaryIntOp { destination: Relative(7), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(15) }, Mov { destination: Relative(2), source: Relative(7) }, Jump { location: 61 }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 542 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 5019202896831570965 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 7233212735005103307 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, Load { destination: Direct(32774), source_pointer: Direct(32771) }, BinaryIntOp { destination: Direct(32775), op: Equals, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, JumpIf { condition: Direct(32775), location: 556 }, Jump { location: 558 }, Mov { destination: Direct(32773), source: Direct(32771) }, Jump { location: 573 }, Mov { destination: Direct(32773), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32772) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32772) }, Mov { destination: Direct(32778), source: Direct(32771) }, Mov { destination: Direct(32779), source: Direct(32773) }, BinaryIntOp { destination: Direct(32780), op: Equals, bit_size: U32, lhs: Direct(32778), rhs: Direct(32777) }, JumpIf { condition: Direct(32780), location: 570 }, Load { destination: Direct(32776), source_pointer: Direct(32778) }, Store { destination_pointer: Direct(32779), source: Direct(32776) }, BinaryIntOp { destination: Direct(32778), op: Add, bit_size: U32, lhs: Direct(32778), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32779), op: Add, bit_size: U32, lhs: Direct(32779), rhs: Direct(2) }, Jump { location: 563 }, IndirectConst { destination_pointer: Direct(32773), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32774), op: Sub, bit_size: U32, lhs: Direct(32774), rhs: Direct(2) }, Jump { location: 573 }, Return]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
