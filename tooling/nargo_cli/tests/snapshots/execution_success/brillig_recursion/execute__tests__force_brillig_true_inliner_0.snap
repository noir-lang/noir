---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/8VWTU/DMAxNt3ajTHCAI1zggjggJVu6drcdJjQJif8QVvo79tNZJVt9eNlHIQFLk9Pl1c9+TrwlqrOEfCqelQezJK9/ZyZgLO1N9Jgx5p18Tn4A+8OAxeaCN2T8Stsi99QXMP9ZTjFj6sMxI8TXY4qz2nbxZS0KPOPkO+3+Fa3xnDHmgvZ5fU3rXLwTo/8R+6NvPfkz14RqvRe1RuqlZf15WKHxXgbcmLO0oXjGvNuaHiGuxElO1D4TWsTo++5alonIOaW1zIf5M4G/E3mmUfLU+gbiKsE1Ud38Tbfh+ctKa+YdbjsdZO+RPxP4B3q+PFDH8od5NqUzzcw1rnB1bTdO6tTaP90zk6jvfWLNJKc8W4x/Jj/afZ5o7bsrCeBexffyPPruEuIziHVOrox/Id/qu6Z1rvZnSUB956zFSO0b742B+9ifM98cy6CmPnMM9RoLLSLNh6ns36F+Iz9qh/2WGKW6fjN+Adqs/6bG3v1GLaT5+p1CTX36jfoiv/yNPXafzr1/OEsQv4Lc30R+A8/7OCt8deDMDD2zp1U1X0w/tC3rTVPb2amZHZrfFq7cuNKYhTWf1hSn+L8AgpRVX+kNAAA=",
  "debug_symbols": "pdPNjoMgEAfwd+HMgW/QV2mahlrakBA0VDfZNL77jkxt3U32Yi/+RPgPSpwHuYTzdDvFfO3vpD08yLnElOLtlPrOj7HP8PRB2HLhmrScEm4QizikqQiGcESQVgASUYhGTEXCSAKmoiCnAIFIRCGwUgMGsYhDmopmCEegigEkohCNGASqWMAhTcUwhCMCkQhUcYBGDAJV3DxTsh7ZaSwhLCe2OUM42cGXkEfS5iklSr58muqi++BzdfQFZhklIV9AKHiNKSx3M32n2f9RbvgzzK18xfWufLMjL5R45oVye/LNK9/YPXn3zu/ZX/L1+yU3e/Lsnf/s/f/mjzDyXSy/unJeKpXozyk8h9cpd5vZ8XtYZ9auHkrfhctUwlJp09pwPQhHpTxCL8Off7CCWnWcl61/AA==",
  "file_map": {
    "50": {
      "source": "// Tests a very simple program.\n//\n// The feature being tested is brillig recursion\nfn main(x: u32) {\n    // Safety: testing context\n    unsafe {\n        assert(fibonacci(x) == 55);\n    }\n}\n\nunconstrained fn fibonacci(x: u32) -> u32 {\n    if x <= 1 {\n        x\n    } else {\n        fibonacci(x - 1) + fibonacci(x - 2)\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
