---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": "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",
  "debug_symbols": "pZbLrsIgEED/hXUXDG/8lZsbUyuaJoQ22N7kxvjvUuNQXdTFuKKFnjM8BsqVHcNhPu/7dBoubPdzZYfcx9if93Ho2qkfUqm93hqGr/sph1Cq2Et7ocY2hzSxXZpjbNhfG+fHR5exTY9yanNp5Q0L6VjKIjz1MSxPt2al+TaqBMJKiYrrdx62eSfsk3fCUXhlkFeWwlvsv3NA4U2N70jj98h7TonvhUZeyS3+0/q5un7eb/Fumwdu3FMA3DqKAbhAA4CgGWA1kEYBSlWD0iSDWw20mQStq8FxikHUzQhCAclgVoOjGZxeDYZk0HI1CEJOG8CEMkDZE6YuhNGGwluP/PY6fuI9prPlisBbjmeqBU3hAbe0lfBdfBIPAucPJGX+oP4TwFgCLwDnXwAl/8reQ96S4nvMX8nhS56Sv7IeI1L473j5nr+/5a3t+vx2i2F86XLDYCluizb37SGG5w3nNKfu5cIz/Y/YgleiMQ9dOM45LNpHWwl0Bw==",
  "file_map": {
    "50": {
      "source": "fn main() {\n    let numerator =\n        [790096867046896348, 1063071665130103641, 602707730209562162, 996751591622961462, 28650, 0];\n    unsafe { __udiv_mod(numerator) };\n\n    let denominator = [12, 0, 0, 0, 0, 0];\n    let result = unsafe { __validate_gt_remainder(denominator) };\n    assert(result[4] == 0);\n    assert(result[5] == 0);\n}\n\nunconstrained fn __udiv_mod(remainder_u60: [u64; 6]) {\n    let bit_difference = get_msb(remainder_u60);\n    let accumulator_u60: [u64; 6] = shl(bit_difference);\n}\n\nunconstrained fn __validate_gt_remainder(a_u60: [u64; 6]) -> [u64; 6] {\n    let mut addend_u60: [u64; 6] = [0; 6];\n    let mut result_u60: [u64; 6] = [0; 6];\n\n    for i in 0..6 {\n        result_u60[i] = a_u60[i] + addend_u60[i];\n    }\n\n    result_u60\n}\n\nunconstrained fn get_msb(val: [u64; 6]) -> u32 {\n    let mut count = 0;\n    for i in 0..6 {\n        let v = val[(6 - 1) - i];\n        if (v > 0) {\n            count = 60 * ((6 - 1) - i);\n            break;\n        }\n    }\n    count\n}\n\nunconstrained fn shl(shift: u32) -> [u64; 6] {\n    let num_shifted_limbs = shift / 60;\n    let limb_shift = (shift % 60) as u8;\n\n    let mut result = [0; 6];\n    result[num_shifted_limbs] = (1 << limb_shift);\n\n    for i in 1..(6 - num_shifted_limbs) {\n        result[i + num_shifted_limbs] = 0;\n    }\n    result\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "__udiv_mod",
    "__validate_gt_remainder"
  ]
}
