---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "7233212735005103307": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "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",
  "debug_symbols": "ndvRSiMxFIDhd+l1L5JzkpPEV1mWpWpdCqVK1YVFfPedLk6VSVr5z4044sfQ/rF1TjNvq/vt7evvX7vDw+Pz6ubH22r/eLd52T0epqO39/Xq9rjb73e/f3398Sqcvkj4//vPT5vD6fD5ZXN8Wd1EaevV9nA/fadh8g+7/XZ1k8P7z/VKIhaChWKRsMhYGBYFi4pFo0Jxc8XNFTdX3Fxxc8XNFTdX3Fxxc8XNE26ecPM0bp5sFlaWQrFIWGQsDIuCxbC5xPghJMpSNCpywCJiIVgoFgmLjIVhUbDAzTNubri54eaGmxtubri54eY2bp7Ooiz/aq1gUbFoVJSARcRCsFAsEhYZC9y84OYFNy+4ecXN67h5kw+hIS6FYKHfCVuKhEXGwrAYNlcJs5C2FBWL9o3QtBAtYBGxECpiGJ4knUlK0hHhRDlJnGROjJPCyXB9pXomrXWkYRIDJ5ET4UQ5SZxkToyTwgmvH3l94fWF1xdefzyqsTi/gFvUjhgnhZPKScNkPK+5TiInwolykjjh9ZXXV15feX3l9ROvn3j9xOsnXj/x+uPxjeU8k2wdMU4KJ5WThsl4hnOdRE6EE+UkccLrZ14/8/qZ18+8vvH6xusbr2+8vvH643GLlXkEbXU5go7jWYi1+bq4hO76ZTzauH6W4cMvocxnibkjiZPMiXEyfJJLrDPR2JHKScNkPOL48lgGJHIinCgnCS/L8ZzjOjFOCieVk4ZJ43/I42nHdSKcDB9Llbl+lbogEgInkZPhGqvnD6FqKh0Z1q9lvharNXakctIwGQ8irpPIiXCinIy72LlLlY5kToyTcf02k9bNd2U8Imgyv4m3pB1RThInmRPjpHBSOWmYKO8yHhFcJzzlhf0TweY3/mkY2r2SXdhCMY2NZxS7D/Pkwi6Kb1BzoAt7KaZB+CdqHYoeJB403lQxXXyfUcodSh6UPcg8qHhQ9aDmQDl4UPQg8SDPisieFZE9KyJ7VkT2rIjsWRHZsyLMsyLMsyLswoqon6ibqIupByUPyh5kHlQ86MKKOI8lJt/vA20OVIIHRQ8SD1IPSh6UPejCPszzZ6ZxeoftUPGg6kHNgap40IUtrFnPqP9Pv3qeiHrhibBP1F/s1OZALXhQ9CBxPHtNPSh5kCduMw8qHlQ9qHGkIVD0Ph392Rx3m9v99uOuh4fXw92XmyBe/j5tF/dDPB0f77b3r8ft6c6Iz5siTifXYGuV8vO0kWI6bGnd2ungtOpU6lo1TOeczvsP",
  "file_map": {
    "50": {
      "source": "fn main() {\n    let numerator =\n        [790096867046896348, 1063071665130103641, 602707730209562162, 996751591622961462, 28650, 0];\n    unsafe { __udiv_mod(numerator) };\n\n    let denominator = [12, 0, 0, 0, 0, 0];\n    let result = unsafe { __validate_gt_remainder(denominator) };\n    assert(result[4] == 0);\n    assert(result[5] == 0);\n}\n\nunconstrained fn __udiv_mod(remainder_u60: [u64; 6]) {\n    let bit_difference = get_msb(remainder_u60);\n    let accumulator_u60: [u64; 6] = shl(bit_difference);\n}\n\nunconstrained fn __validate_gt_remainder(a_u60: [u64; 6]) -> [u64; 6] {\n    let mut addend_u60: [u64; 6] = [0; 6];\n    let mut result_u60: [u64; 6] = [0; 6];\n\n    for i in 0..6 {\n        result_u60[i] = a_u60[i] + addend_u60[i];\n    }\n\n    result_u60\n}\n\nunconstrained fn get_msb(val: [u64; 6]) -> u32 {\n    let mut count = 0;\n    for i in 0..6 {\n        let v = val[(6 - 1) - i];\n        if (v > 0) {\n            count = 60 * ((6 - 1) - i);\n            break;\n        }\n    }\n    count\n}\n\nunconstrained fn shl(shift: u32) -> [u64; 6] {\n    let num_shifted_limbs = shift / 60;\n    let limb_shift = (shift % 60) as u8;\n\n    let mut result = [0; 6];\n    result[num_shifted_limbs] = (1 << limb_shift);\n\n    for i in 1..(6 - num_shifted_limbs) {\n        result[i + num_shifted_limbs] = 0;\n    }\n    result\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
