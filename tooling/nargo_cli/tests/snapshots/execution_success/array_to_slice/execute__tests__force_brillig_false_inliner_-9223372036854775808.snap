---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "public"
      }
    ],
    "return_type": null,
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _26",
    "private parameters indices : [_0]",
    "public parameters indices : [_1]",
    "return value indices : []",
    "EXPR [ (-1, _2) 3 ]",
    "EXPR [ (-1, _3) 2 ]",
    "EXPR [ (-1, _4) 1 ]",
    "EXPR [ (-1, _5) 0 ]",
    "INIT (id: 0, len: 4, witnesses: [_2, _3, _4, _5])",
    "EXPR [ (-1, _6) 1000 ]",
    "MEM (id: 0, write EXPR [ (1, _6) 0 ] at: EXPR [ (1, _0) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) (-1, _1) 0 ]], outputs: [_7]",
    "EXPR [ (1, _0, _7) (-1, _1, _7) -1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _8) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _9) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _10) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _2) 0 ], value: EXPR [ (1, _11) 0 ]) ",
    "EXPR [ (1, _8) -1000 ]",
    "EXPR [ (1, _9) -2 ]",
    "EXPR [ (1, _10) -1 ]",
    "EXPR [ (1, _11) 0 ]",
    "EXPR [ (1, _0) (-1, _12) 10 ]",
    "BLACKBOX::RANGE [_12]:32 bits []",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _0) 4294967292 ], EXPR [ 4294967296 ]], outputs: [_13, _14]",
    "BLACKBOX::RANGE [_14]:32 bits []",
    "EXPR [ (1, _0) (-4294967296, _13) (-1, _14) 4294967292 ]",
    "EXPR [ (-1, _13) 0 ]",
    "INIT (id: 2, len: 4, witnesses: [_0, _4, _3, _2])",
    "MEM (id: 2, write EXPR [ (1, _12) 0 ] at: EXPR [ (1, _0) 0 ]) ",
    "EXPR [ (1, _1) (-1, _15) 5 ]",
    "BLACKBOX::RANGE [_15]:32 bits []",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _1) 4294967293 ], EXPR [ 4294967296 ]], outputs: [_16, _17]",
    "BLACKBOX::RANGE [_17]:32 bits []",
    "EXPR [ (1, _1) (-4294967296, _16) (-1, _17) 4294967293 ]",
    "EXPR [ (-1, _16) 0 ]",
    "EXPR [ (-1, _18) 5 ]",
    "EXPR [ (-1, _19) 6 ]",
    "INIT (id: 3, len: 3, witnesses: [_1, _18, _19])",
    "MEM (id: 3, write EXPR [ (1, _15) 0 ] at: EXPR [ (1, _1) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _20) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _5) 0 ], value: EXPR [ (1, _21) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _22) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _23) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _2) 0 ], value: EXPR [ (1, _24) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _4) 0 ], value: EXPR [ (1, _25) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _3) 0 ], value: EXPR [ (1, _26) 0 ]) ",
    "EXPR [ (1, _21) -10 ]",
    "EXPR [ (-1, _1) (1, _20) 0 ]",
    "EXPR [ (1, _25) -6 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "expression_width": {
    "Bounded": {
      "width": 4
    }
  }
}
