---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "field"
        },
        "visibility": "public"
      }
    ],
    "return_type": null,
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/+1Z227CMAxNSrutQ7s/bJq0y9teC3TAyyakcfmOaojv6KdvCFuY09AVSFZAsYSSksR2ju24brRakP79hdTnNlBF0tQOqE12o5ZFXolLPbULPUNS1AO91NMZ0IHyQEs9nQHd8ECv6OkEaHlea4Py8j9pnDk9UxtTG4g1DYsbjw062eLfT9JuDPuzrH8nFjwd8G/HBjta5J+cEp9hvspfgdwLepY+w2t4TAb0iMbOaJz7l9SPgZ8Lu0udbON2Z9CfZTVprw8CD4mrKlmLuChrOndTlBWpor11iX3s6ZIkGmSHBiykfNT1HvR0FR+3sH8pq6mW52OY25ff6y9wmlMjX+Ig/UiB/AjmP9Hz+Zp9DLbUc9bLWrNONsves+k0/c4QpznJeJhQ/8DzSd/nk3LifDLOV/kr9Xc+4TWmfDKhMcwnN9R3nE/6deYT9rmvfImHJblt5j20z7vDvEf2ebc4xz6C/R3FTco+Gaoi8VgkZGsYO1FFu2oDLzzb5Z7m+30VfHEe0yHkpRd6rjsvSR+SOEli/8XzCv0B/S9YMxYZ1nJs43vOG7Xs3xHwG9BzsiOZ3nMikH3ssdUVfHGe2lMsghIstEH/qlh8Cr44j6lq/LBvm+JHr1lrih+sW0y1aARzP6h1bDdj/LCsqjjxHrbFCd9RlL39pSgXbWCyD88dg3511WpH8k2r52uQcuIaRObtqjUIrzHVIFyfYA1yTX3HNUjP1yAbU6fKtzi5rzpyFH7LqitH+W9Z1WoGfzdSifzdiNrsbuSK+sd8N+Iwj/zbWb+v79n+TmSVQjEu5+9LHvkBIbI8kVglAAA=",
  "debug_symbols": "pZXLjuowDED/pesu4rzNr4wQKpAZVaoK6rQjXSH+/Tqxw7w0m7DpIa2PTZ00uXXndNzeDuP8ennvdi+37riM0zS+HabLaVjHy0x3b53KF3DdDvoOfLfThMCIDCzQigEMTbjTw2JToOFAw4GGAw0HZhiGLTA0AkWkIVBdk8tTVuOFQRiFlBnIs0oIQi00Qit0wpzPEoMwCpHplBCEWkh+BumOQLYnRAYWeMWgyoFAhSOBPCR4RmBEBnlIHdOlY6EUyI1z3DjPjfPcOM+N8xRvSrwvZbIWWUPWkDVkDVnDO3l1kg/rklLO8WXWaS1chyXNa7ebt2nqu49h2krQ+3WYC9dhoac0R2k+Eynh6zil/Ovef9rqb9WgE9mqT901+aHBdxjE99BS38bqW7RP+rHl/+cPo/gOWt4fwEdJABCezhChKQPamkE3rYIQtCQIAZ/zo2nx0YsflW7wo8Lqm6Y5UK4uA1CxZR2Ce0xidC3+4zvUpmUNaFtfQPuWGdShdtDA9xnY02g4jcuv8wxcOZjAl90WQtlEIX+EH8MyDscp5cica5tPVaTh+u9an9Sj8rpcTum8LSkX+XJe0vVF217j/nEIllu+N7B/7PLfoszPW/kN/gM=",
  "file_map": {
    "50": {
      "source": "global ONE: Field = 1;\nglobal TWO: Field = 2;\nglobal THREE: Field = 3;\n\nfn main(x: Field, y: pub Field) {\n    // Safety: testing context\n    unsafe {\n        entry_point_no_global(x, y);\n        entry_point_inner_func_globals(x, y);\n        entry_point_one_global(x, y);\n        entry_point_one_diff_global(x, y);\n    }\n}\n\nunconstrained fn entry_point_no_global(x: Field, y: Field) {\n    assert(x + y != 100);\n}\n\nunconstrained fn entry_point_one_global(x: Field, y: Field) {\n    let z = TWO + x + y;\n    assert(z == 3);\n}\n\nunconstrained fn entry_point_inner_func_globals(x: Field, y: Field) {\n    wrapper(x, y);\n}\n\n// Test that we duplicate Brillig entry points called within\n// another entry point's inner calls\nunconstrained fn wrapper(x: Field, y: Field) {\n    let z = ONE + x + y;\n    assert(z == 2);\n    entry_point_one_global(x, y);\n    // Test that we handle repeated entry point calls\n    // `entry_point_one_diff_global` should be duplicated and the duplicated function\n    // should use the globals from `entry_point_inner_func_globals`\n    entry_point_one_diff_global(y, x);\n}\n\nunconstrained fn entry_point_one_diff_global(x: Field, y: Field) {\n    let z = THREE + x + y;\n    assert(z == 4);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "entry_point_no_global",
    "entry_point_inner_func_globals",
    "entry_point_one_global",
    "entry_point_one_diff_global"
  ]
}
