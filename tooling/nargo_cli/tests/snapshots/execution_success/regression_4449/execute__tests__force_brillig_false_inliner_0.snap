---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 8
        },
        "visibility": "private"
      },
      {
        "name": "result",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : 71",
    "private parameters indices : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 8)] []",
    "BLACKBOX::RANGE [(_1, 8)] []",
    "BLACKBOX::RANGE [(_2, 8)] []",
    "BLACKBOX::RANGE [(_3, 8)] []",
    "BLACKBOX::RANGE [(_4, 8)] []",
    "BLACKBOX::RANGE [(_5, 8)] []",
    "BLACKBOX::RANGE [(_6, 8)] []",
    "BLACKBOX::RANGE [(_7, 8)] []",
    "BLACKBOX::RANGE [(_8, 8)] []",
    "BLACKBOX::RANGE [(_9, 8)] []",
    "BLACKBOX::RANGE [(_10, 8)] []",
    "BLACKBOX::RANGE [(_11, 8)] []",
    "BLACKBOX::RANGE [(_12, 8)] []",
    "BLACKBOX::RANGE [(_13, 8)] []",
    "BLACKBOX::RANGE [(_14, 8)] []",
    "BLACKBOX::RANGE [(_15, 8)] []",
    "BLACKBOX::RANGE [(_16, 8)] []",
    "BLACKBOX::RANGE [(_17, 8)] []",
    "BLACKBOX::RANGE [(_18, 8)] []",
    "BLACKBOX::RANGE [(_19, 8)] []",
    "BLACKBOX::RANGE [(_20, 8)] []",
    "BLACKBOX::RANGE [(_21, 8)] []",
    "BLACKBOX::RANGE [(_22, 8)] []",
    "BLACKBOX::RANGE [(_23, 8)] []",
    "BLACKBOX::RANGE [(_24, 8)] []",
    "BLACKBOX::RANGE [(_25, 8)] []",
    "BLACKBOX::RANGE [(_26, 8)] []",
    "BLACKBOX::RANGE [(_27, 8)] []",
    "BLACKBOX::RANGE [(_28, 8)] []",
    "BLACKBOX::RANGE [(_29, 8)] []",
    "BLACKBOX::RANGE [(_30, 8)] []",
    "BLACKBOX::RANGE [(_31, 8)] []",
    "BLACKBOX::RANGE [(_32, 8)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 31 })], outputs: [Simple(Witness(33)), Simple(Witness(34))]",
    "BLACKBOX::RANGE [(_33, 4)] []",
    "BLACKBOX::RANGE [(_34, 5)] []",
    "EXPR [ (1, _34) (-1, _35) 1 ]",
    "BLACKBOX::RANGE [(_35, 5)] []",
    "EXPR [ (1, _0) (-31, _33) (-1, _34) 0 ]",
    "EXPR [ (1, _34) (-1, _36) 69 ]",
    "BLACKBOX::RANGE [(_36, 8)] []",
    "EXPR [ (1, _36) (-1, _37) 1 ]",
    "BLACKBOX::RANGE [(_37, 8)] []",
    "EXPR [ (1, _36) (-1, _38) -1 ]",
    "BLACKBOX::RANGE [(_38, 8)] []",
    "EXPR [ (1, _36) (-1, _39) -2 ]",
    "BLACKBOX::RANGE [(_39, 8)] []",
    "BLACKBOX::BLAKE3 [(_36, 8), (_34, 8), (32, 8), (0, 8), (_37, 8), (_38, 8), (_39, 8), (5, 8)] [_40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71]",
    "EXPR [ (-1, _1) (1, _40) 0 ]",
    "EXPR [ (-1, _2) (1, _41) 0 ]",
    "EXPR [ (-1, _3) (1, _42) 0 ]",
    "EXPR [ (-1, _4) (1, _43) 0 ]",
    "EXPR [ (-1, _5) (1, _44) 0 ]",
    "EXPR [ (-1, _6) (1, _45) 0 ]",
    "EXPR [ (-1, _7) (1, _46) 0 ]",
    "EXPR [ (-1, _8) (1, _47) 0 ]",
    "EXPR [ (-1, _9) (1, _48) 0 ]",
    "EXPR [ (-1, _10) (1, _49) 0 ]",
    "EXPR [ (-1, _11) (1, _50) 0 ]",
    "EXPR [ (-1, _12) (1, _51) 0 ]",
    "EXPR [ (-1, _13) (1, _52) 0 ]",
    "EXPR [ (-1, _14) (1, _53) 0 ]",
    "EXPR [ (-1, _15) (1, _54) 0 ]",
    "EXPR [ (-1, _16) (1, _55) 0 ]",
    "EXPR [ (-1, _17) (1, _56) 0 ]",
    "EXPR [ (-1, _18) (1, _57) 0 ]",
    "EXPR [ (-1, _19) (1, _58) 0 ]",
    "EXPR [ (-1, _20) (1, _59) 0 ]",
    "EXPR [ (-1, _21) (1, _60) 0 ]",
    "EXPR [ (-1, _22) (1, _61) 0 ]",
    "EXPR [ (-1, _23) (1, _62) 0 ]",
    "EXPR [ (-1, _24) (1, _63) 0 ]",
    "EXPR [ (-1, _25) (1, _64) 0 ]",
    "EXPR [ (-1, _26) (1, _65) 0 ]",
    "EXPR [ (-1, _27) (1, _66) 0 ]",
    "EXPR [ (-1, _28) (1, _67) 0 ]",
    "EXPR [ (-1, _29) (1, _68) 0 ]",
    "EXPR [ (-1, _30) (1, _69) 0 ]",
    "EXPR [ (-1, _31) (1, _70) 0 ]",
    "EXPR [ (-1, _32) (1, _71) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "ldbLioQwEIXhd8nahUlMlfFVhqHxEpuAqHgZGKTffdKNGRo7m7OzTP1B+DYeonPNfr/5sZ9WUX0dYpjaevPTGKZDaP16t871+BzXrV42UZUqE27swkP5yETvBycqkz++M6ELcN+A+wTuM7hfgvs2tS8Nn4EkdSmKHC5ksrBFLKy9Fgouks4ql2ehcroWBVyYdFHGQuprQXCR9FaaYmE+vioprvi/sB8eFi1MDhcSLhRcaLgo4MLABcEFwwVsbmBzgs0JNifYnGBzgs0JNifYnGBzgs0JNmfYnGFzhs0ZNmfYnGFzhs0ZNmfYnEHzMDSLHwZ/v73/N4XXP/Xi62Zw59jvY/t2uv3O8ST28zK1rtsX97zpdRau/wM=",
  "file_map": {
    "50": {
      "source": "// Regression test for issue #4449\nfn main(x: u8, result: [u8; 32]) {\n    let x = x % 31;\n    let mut digest = [0; 32];\n    for i in 0..70 {\n        let y = x + i;\n        let a = [y, x, 32, 0, y + 1, y - 1, y - 2, 5];\n        digest = std::hash::blake3(a);\n    }\n\n    assert(digest == result);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient"
  ]
}
