---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
global G_A: [(bool, bool, str<4>); 3] =
    [(false, true, "LZUT"), (false, true, "MFFA"), (false, true, "XPHT")];

fn main() -> pub Field {
    // Safety: comment added by `nargo expand`
    let mut a: ((str<4>, Field, str<4>, str<3>, bool), [&mut u8; 2]) = (
        (G_A[2_u32].2, unsafe { func_4() } as Field, G_A[1_u32].2, "TWC", false),
        [&mut 57_u8, &mut 219_u8],
    );
    for idx_d in 0_u32..1_u32 {}
    a.0 = (a.0.2, 0_Field, a.0.0, a.0.3, (128_u8 % *a.1[0_u32]) == *a.1[1_u32]);
    0_Field
}

unconstrained fn func_4() -> bool {
    let mut a: str<4> = G_A[1_u32].2;
    println(a);
    true
}
