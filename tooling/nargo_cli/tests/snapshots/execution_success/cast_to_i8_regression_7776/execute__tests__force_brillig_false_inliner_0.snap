---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "a",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "b",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "signed",
        "width": 8
      },
      "visibility": "public"
    },
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _8",
    "private parameters indices : [_0, _1]",
    "public parameters indices : []",
    "return value indices : [_2]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0)), (-1, Witness(1))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 256 })], outputs: [Simple(Witness(3)), Simple(Witness(4))]",
    "BLACKBOX::RANGE [(_3, 246)] []",
    "BLACKBOX::RANGE [(_4, 8)] []",
    "EXPR [ (1, _0) (-1, _1) (-256, _3) (-1, _4) 0 ]",
    "EXPR [ (-1, _3) (-1, _5) 85500948718122168836900022442411230814642048439125134155071110103811751936 ]",
    "BLACKBOX::RANGE [(_5, 246)] []",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(3))], q_c: 85500948718122168836900022442411230814642048439125134155071110103811751936 })], outputs: [Simple(Witness(6))]",
    "EXPR [ (-1, _3, _6) (85500948718122168836900022442411230814642048439125134155071110103811751936, _6) (1, _7) -1 ]",
    "EXPR [ (-1, _3, _7) (85500948718122168836900022442411230814642048439125134155071110103811751936, _7) 0 ]",
    "EXPR [ (1, _4, _7) (-1, _8) 0 ]",
    "BLACKBOX::RANGE [(_8, 0)] []",
    "EXPR [ (1, _2) (-1, _4) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "jZDBDoMgDED/pWcO6tSpv7IsBrUaEgIEYcli/PdBp5seluzySlseKV1gwM5PrVCjnqG5LdBZIaWYWql77oRWobqsDPa0dRYxlODQD5bhFpWDRnkpGTy49HRpNlxRdNyGbsIA1RBieHAUEuNpZV87+a3m9eYW+Ucu/rerzS7Tk30PGe+FPf0WEmgyBikxI16IObEglsQrsSLWbyvKa5zECt5J3NY3etUftumeZu/s+zZW9zh4i3EW6oXpXg==",
  "file_map": {
    "50": {
      "source": "pub fn main(a: Field, b: Field) -> pub i8 {\n    (a - b) as i8\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
