---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 3,
          "type": {
            "kind": "struct",
            "path": "Foo",
            "fields": [
              {
                "name": "a",
                "type": {
                  "kind": "field"
                }
              },
              {
                "name": "b",
                "type": {
                  "kind": "array",
                  "length": 3,
                  "type": {
                    "kind": "field"
                  }
                }
              },
              {
                "name": "bar",
                "type": {
                  "kind": "struct",
                  "path": "Bar",
                  "fields": [
                    {
                      "name": "inner",
                      "type": {
                        "kind": "array",
                        "length": 3,
                        "type": {
                          "kind": "integer",
                          "sign": "unsigned",
                          "width": 8
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "public"
      },
      {
        "name": "hash_result",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "public"
      }
    ],
    "return_type": null,
    "error_types": {
      "1998584279744703196": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "16431471497789672479": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _130",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20]",
    "public parameters indices : [_21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53]",
    "return value indices : []",
    "BLACKBOX::RANGE [(_4, 8)] []",
    "BLACKBOX::RANGE [(_5, 8)] []",
    "BLACKBOX::RANGE [(_6, 8)] []",
    "BLACKBOX::RANGE [(_11, 8)] []",
    "BLACKBOX::RANGE [(_12, 8)] []",
    "BLACKBOX::RANGE [(_13, 8)] []",
    "BLACKBOX::RANGE [(_18, 8)] []",
    "BLACKBOX::RANGE [(_19, 8)] []",
    "BLACKBOX::RANGE [(_20, 8)] []",
    "INIT (id: 0, len: 21, witnesses: [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20])",
    "BLACKBOX::RANGE [(_21, 32)] []",
    "BLACKBOX::RANGE [(_22, 8)] []",
    "BLACKBOX::RANGE [(_23, 8)] []",
    "BLACKBOX::RANGE [(_24, 8)] []",
    "BLACKBOX::RANGE [(_25, 8)] []",
    "BLACKBOX::RANGE [(_26, 8)] []",
    "BLACKBOX::RANGE [(_27, 8)] []",
    "BLACKBOX::RANGE [(_28, 8)] []",
    "BLACKBOX::RANGE [(_29, 8)] []",
    "BLACKBOX::RANGE [(_30, 8)] []",
    "BLACKBOX::RANGE [(_31, 8)] []",
    "BLACKBOX::RANGE [(_32, 8)] []",
    "BLACKBOX::RANGE [(_33, 8)] []",
    "BLACKBOX::RANGE [(_34, 8)] []",
    "BLACKBOX::RANGE [(_35, 8)] []",
    "BLACKBOX::RANGE [(_36, 8)] []",
    "BLACKBOX::RANGE [(_37, 8)] []",
    "BLACKBOX::RANGE [(_38, 8)] []",
    "BLACKBOX::RANGE [(_39, 8)] []",
    "BLACKBOX::RANGE [(_40, 8)] []",
    "BLACKBOX::RANGE [(_41, 8)] []",
    "BLACKBOX::RANGE [(_42, 8)] []",
    "BLACKBOX::RANGE [(_43, 8)] []",
    "BLACKBOX::RANGE [(_44, 8)] []",
    "BLACKBOX::RANGE [(_45, 8)] []",
    "BLACKBOX::RANGE [(_46, 8)] []",
    "BLACKBOX::RANGE [(_47, 8)] []",
    "BLACKBOX::RANGE [(_48, 8)] []",
    "BLACKBOX::RANGE [(_49, 8)] []",
    "BLACKBOX::RANGE [(_50, 8)] []",
    "BLACKBOX::RANGE [(_51, 8)] []",
    "BLACKBOX::RANGE [(_52, 8)] []",
    "BLACKBOX::RANGE [(_53, 8)] []",
    "EXPR [ (1, _21) (-1, _54) -1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _54) 4294967293 ], EXPR [ 4294967296 ]], outputs: [_55, _56]",
    "BLACKBOX::RANGE [(_56, 32)] []",
    "EXPR [ (1, _54) (-4294967296, _55) (-1, _56) 4294967293 ]",
    "EXPR [ (-1, _55) 0 ]",
    "EXPR [ (-1, _57) 0 ]",
    "EXPR [ (-1, _58) 1 ]",
    "EXPR [ (-1, _59) 4 ]",
    "EXPR [ (-1, _60) 7 ]",
    "EXPR [ (-1, _61) 8 ]",
    "EXPR [ (-1, _62) 11 ]",
    "EXPR [ (-1, _63) 14 ]",
    "EXPR [ (-1, _64) 15 ]",
    "EXPR [ (-1, _65) 18 ]",
    "EXPR [ (-1, _66) 21 ]",
    "INIT (id: 2, len: 10, witnesses: [_57, _58, _59, _60, _61, _62, _63, _64, _65, _66])",
    "EXPR [ (3, _54) (-1, _67) 2 ]",
    "MEM (id: 2, read at: EXPR [ (1, _67) 0 ], value: EXPR [ (1, _68) 0 ]) ",
    "EXPR [ (-1, _69) 106 ]",
    "MEM (id: 0, write EXPR [ (1, _69) 0 ] at: EXPR [ (1, _68) 0 ]) ",
    "EXPR [ (1, _68) (-1, _70) 1 ]",
    "EXPR [ (-1, _71) 107 ]",
    "MEM (id: 0, write EXPR [ (1, _71) 0 ] at: EXPR [ (1, _70) 0 ]) ",
    "EXPR [ (1, _70) (-1, _72) 1 ]",
    "EXPR [ (-1, _73) 10 ]",
    "MEM (id: 0, write EXPR [ (1, _73) 0 ] at: EXPR [ (1, _72) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _57) 0 ], value: EXPR [ (1, _74) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _58) 0 ], value: EXPR [ (1, _75) 0 ]) ",
    "EXPR [ (-1, _76) 2 ]",
    "MEM (id: 2, read at: EXPR [ (1, _76) 0 ], value: EXPR [ (1, _77) 0 ]) ",
    "EXPR [ (-1, _78) 3 ]",
    "MEM (id: 2, read at: EXPR [ (1, _78) 0 ], value: EXPR [ (1, _79) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _59) 0 ], value: EXPR [ (1, _80) 0 ]) ",
    "EXPR [ (-1, _81) 5 ]",
    "MEM (id: 2, read at: EXPR [ (1, _81) 0 ], value: EXPR [ (1, _82) 0 ]) ",
    "EXPR [ (-1, _83) 6 ]",
    "MEM (id: 2, read at: EXPR [ (1, _83) 0 ], value: EXPR [ (1, _84) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _60) 0 ], value: EXPR [ (1, _85) 0 ]) ",
    "MEM (id: 2, read at: EXPR [ (1, _61) 0 ], value: EXPR [ (1, _86) 0 ]) ",
    "EXPR [ (-1, _87) 9 ]",
    "MEM (id: 2, read at: EXPR [ (1, _87) 0 ], value: EXPR [ (1, _88) 0 ]) ",
    "INIT (id: 3, len: 10, witnesses: [_74, _75, _77, _79, _80, _82, _84, _85, _86, _88])",
    "EXPR [ (3, _54) (-1, _89) 2 ]",
    "MEM (id: 3, read at: EXPR [ (1, _89) 0 ], value: EXPR [ (1, _90) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _90) 0 ], value: EXPR [ (1, _91) 0 ]) ",
    "EXPR [ (1, _90) (-1, _92) 1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _92) 0 ], value: EXPR [ (1, _93) 0 ]) ",
    "EXPR [ (1, _92) (-1, _94) 1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _94) 0 ], value: EXPR [ (1, _95) 0 ]) ",
    "INIT (id: 4, len: 3, witnesses: [_91, _93, _95])",
    "MEM (id: 4, write EXPR [ (1, _57) 0 ] at: EXPR [ (1, _54) 0 ]) ",
    "MEM (id: 4, read at: EXPR [ (1, _57) 0 ], value: EXPR [ (1, _96) 0 ]) ",
    "MEM (id: 4, read at: EXPR [ (1, _58) 0 ], value: EXPR [ (1, _97) 0 ]) ",
    "MEM (id: 4, read at: EXPR [ (1, _76) 0 ], value: EXPR [ (1, _98) 0 ]) ",
    "BLACKBOX::BLAKE3 [(_96, 8), (_97, 8), (_98, 8)] [_99, _100, _101, _102, _103, _104, _105, _106, _107, _108, _109, _110, _111, _112, _113, _114, _115, _116, _117, _118, _119, _120, _121, _122, _123, _124, _125, _126, _127, _128, _129, _130]",
    "EXPR [ (-1, _22) (1, _99) 0 ]",
    "EXPR [ (-1, _23) (1, _100) 0 ]",
    "EXPR [ (-1, _24) (1, _101) 0 ]",
    "EXPR [ (-1, _25) (1, _102) 0 ]",
    "EXPR [ (-1, _26) (1, _103) 0 ]",
    "EXPR [ (-1, _27) (1, _104) 0 ]",
    "EXPR [ (-1, _28) (1, _105) 0 ]",
    "EXPR [ (-1, _29) (1, _106) 0 ]",
    "EXPR [ (-1, _30) (1, _107) 0 ]",
    "EXPR [ (-1, _31) (1, _108) 0 ]",
    "EXPR [ (-1, _32) (1, _109) 0 ]",
    "EXPR [ (-1, _33) (1, _110) 0 ]",
    "EXPR [ (-1, _34) (1, _111) 0 ]",
    "EXPR [ (-1, _35) (1, _112) 0 ]",
    "EXPR [ (-1, _36) (1, _113) 0 ]",
    "EXPR [ (-1, _37) (1, _114) 0 ]",
    "EXPR [ (-1, _38) (1, _115) 0 ]",
    "EXPR [ (-1, _39) (1, _116) 0 ]",
    "EXPR [ (-1, _40) (1, _117) 0 ]",
    "EXPR [ (-1, _41) (1, _118) 0 ]",
    "EXPR [ (-1, _42) (1, _119) 0 ]",
    "EXPR [ (-1, _43) (1, _120) 0 ]",
    "EXPR [ (-1, _44) (1, _121) 0 ]",
    "EXPR [ (-1, _45) (1, _122) 0 ]",
    "EXPR [ (-1, _46) (1, _123) 0 ]",
    "EXPR [ (-1, _47) (1, _124) 0 ]",
    "EXPR [ (-1, _48) (1, _125) 0 ]",
    "EXPR [ (-1, _49) (1, _126) 0 ]",
    "EXPR [ (-1, _50) (1, _127) 0 ]",
    "EXPR [ (-1, _51) (1, _128) 0 ]",
    "EXPR [ (-1, _52) (1, _129) 0 ]",
    "EXPR [ (-1, _53) (1, _130) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "[debug_symbols]",
  "file_map": "[file_map]",
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient"
  ]
}
