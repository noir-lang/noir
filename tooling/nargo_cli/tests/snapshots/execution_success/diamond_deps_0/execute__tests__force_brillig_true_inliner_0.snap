---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "field"
        },
        "visibility": "public"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "field"
      },
      "visibility": "public"
    },
    "error_types": {
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _2",
    "private parameters indices : [_0]",
    "public parameters indices : [_1]",
    "return value indices : [_2]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 0 })], outputs: [Simple(Witness(2))]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32839 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 2 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(3), offset_address: Relative(4) }, Mov { destination: Relative(1), source: Direct(32836) }, Mov { destination: Relative(2), source: Direct(32837) }, Call { location: 14 }, Call { location: 16 }, Mov { destination: Direct(32838), source: Relative(1) }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32838 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, Const { destination: Direct(32835), bit_size: Field, value: 3 }, Return, Call { location: 22 }, BinaryFieldOp { destination: Relative(3), op: Add, lhs: Relative(1), rhs: Relative(2) }, BinaryFieldOp { destination: Relative(1), op: Add, lhs: Relative(3), rhs: Relative(3) }, BinaryFieldOp { destination: Relative(2), op: Add, lhs: Relative(1), rhs: Direct(32835) }, Mov { destination: Relative(1), source: Relative(2) }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 27 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "nZLBDoMgDIbfpWcOwsZUXmVZDGpdSAgaBksWw7sPjE49uCy7tJT2+/kTOkKLtb9XynT9A8R1hNoqrdW90n0jnepNvB0hS4HmIE4EaAHiHFMJgodAYBmsnEVMcxsy6g3SonEgjNeawFNqPw09Bmmm7KSN3YwAmjbmKNgpjekUyEpnxyhlxQxTfvrgfM/TY744z3hZrjTd0ewLzRd6tc7ZH95zeuT9N7647PhbrGSj7O4fQ1KyStYa57Lzptl03WtYOsseDLZvsPUWk9JmGWK8MkZYfgvptTc=",
  "file_map": {
    "50": {
      "source": "use dep1::call_dep1_then_dep2;\nuse dep2::call_dep2;\nuse dep2::RESOLVE_THIS;\n\nfn main(x: Field, y: pub Field) -> pub Field {\n    call_dep1_then_dep2(x, y) + call_dep2(x, y) + RESOLVE_THIS\n}\n",
      "path": ""
    },
    "51": {
      "source": "use dep2::call_dep2;\n\npub fn call_dep1_then_dep2(x: Field, y: Field) -> Field {\n    call_dep2(x, y)\n}\n",
      "path": ""
    },
    "52": {
      "source": "global RESOLVE_THIS: Field = 3;\n\npub fn call_dep2(x: Field, y: Field) -> Field {\n    x + y\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
