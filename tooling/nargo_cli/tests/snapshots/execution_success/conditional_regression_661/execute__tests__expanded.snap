---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
fn main(a: u32, mut c: [u32; 4]) {
    let mut c_661: [u32; 1] = [0_u32];
    if a > 5_u32 {
        c_661 = issue_661_foo(issue_661_bar(c), a);
    } else {
        c_661 = issue_661_foo(issue_661_bar(c), a + 2_u32);
    };
    assert(c_661[0_u32] < 20000_u32);
}

fn test5(a: u32) {
    if a > 1_u32 {
        let q: u32 = a / 2_u32;
        assert(q == 2_u32);
    }
}

fn issue_661_foo(array: [u32; 4], b: u32) -> [u32; 1] {
    [array[0_u32] + b]
}

fn issue_661_bar(a: [u32; 4]) -> [u32; 4] {
    let mut b: [u32; 4] = [0_u32; 4];
    b[0_u32] = a[0_u32] + 1_u32;
    b
}
