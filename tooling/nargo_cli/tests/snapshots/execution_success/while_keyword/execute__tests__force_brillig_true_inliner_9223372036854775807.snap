---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [],
    "return_type": null,
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/71VzU6EMBBuFyggbtzoxYMXPXjy0EoJ6MVN9EWaXXkOHl1IZuxk0kVXqE3ItPTr99PSIIVvEmoqFjQkeYdaQt2Q+WR89jDWy5opme6a/J22tgzkW9F/XQKnjMOvkT/S/usceD4Gz0+zoG4xPhXpXwr/fcTKj+cXM//NTOYKsr7CeMuwgq0TbC4JvNuwfYuVazeTa0v0lubYMS75fxm/v400Dv8z8mdx+I0aOW6B6wr4FdGSrI93NQMfHL8h8xT/AHXC3jE9fm+pHo5Toidn9BB/DzXy+ehrwiuYViXO21OaUQX4+J7WUCfsI/RDegmby2e8FMK3kBe+tiQeQviCeUf8E9Rpfg/90D0umJ4K+KOeshN51Am8Yv4Qb2b8ycD6v94jmkOdmSN0LjxH98sceSAHnlU6eNxad6fttEb9ZPDe6f9AMP2M4d9gfEFyYE0X+OxbZ/ra9a5xx6M9OH7Hp0b/z2vr28a1B9ca82LNpzXNT/pfcpmOc4ELAAA=",
  "debug_symbols": "tddLioQwEAbgu2TtIu+OXmUYGh+xCYiKj4FBvPskgzZ2XIZ/I0TKL6EoS2sjja3W19P17TCT4msj3VCXixt6v9r2jFST6zr3el5vExouTPzHz2PZh+W8lNNCCmUyYvuGFA/mn25dZ/09ume3QKbpEcn0R+h3RpjE0QpHaxz9SKMNO2nDY9rg6BxGc4mjEyskV0ckpzSm03ItKD8iBTUxnZZrIc6ECBkXn6A4muFojqMlrEJEWvFxJk+a3+i04uPifep7QnIYLdOKj5t3QvL4RZcMR3McLXC0xNEK1vmkxtEPHI37FMgcRisGa0+Kw3qIEjha4miFozWI3v3qp5xcWXX2GCData8v88TyO9potBinobbNOtkwZFzmi9D5/Zm0CL+SofC0zLT2e/h9/gA=",
  "file_map": {
    "50": {
      "source": "fn main() {\n    // Safety: test code\n    unsafe {\n        check_while();\n    }\n\n    check_comptime_while();\n}\n\nunconstrained fn check_while() {\n    let mut i = 0;\n    let mut sum = 0;\n\n    while i < 4 {\n        if i == 2 {\n            i += 1;\n            continue;\n        }\n\n        sum += i;\n        i += 1;\n    }\n\n    assert_eq(sum, 1 + 3);\n}\n\nfn check_comptime_while() {\n    comptime {\n        let mut i = 0;\n        let mut sum = 0;\n\n        while i < 4 {\n            if i == 2 {\n                i += 1;\n                continue;\n            }\n\n            sum += i;\n            i += 1;\n        }\n\n        assert_eq(sum, 1 + 3);\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
