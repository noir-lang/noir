---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "b",
        "type": {
          "kind": "boolean"
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "tuple",
        "fields": [
          {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        ]
      },
      "visibility": "public"
    },
    "error_types": {
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _2",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1, _2]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _0) 0 ]], outputs: [_1, _2]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32839 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32836), size_address: Relative(2), offset_address: Relative(3) }, Cast { destination: Direct(32836), source: Direct(32836), bit_size: Integer(U1) }, Mov { destination: Relative(1), source: Direct(32836) }, Call { location: 15 }, Call { location: 16 }, Mov { destination: Direct(32837), source: Relative(1) }, Mov { destination: Direct(32838), source: Relative(2) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 32837 }, Const { destination: Relative(4), bit_size: Integer(U32), value: 2 }, Stop { return_data: HeapVector { pointer: Relative(3), size: Relative(4) } }, Return, Call { location: 29 }, JumpIf { condition: Relative(1), location: 24 }, Jump { location: 19 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 1 }, Mov { destination: Relative(1), source: Relative(3) }, Mov { destination: Relative(2), source: Relative(3) }, Jump { location: 23 }, Return, Const { destination: Relative(1), bit_size: Integer(U1), value: 0 }, Const { destination: Relative(2), bit_size: Integer(U1), value: 1 }, BinaryIntOp { destination: Relative(3), op: Equals, bit_size: U1, lhs: Relative(1), rhs: Relative(2) }, JumpIf { condition: Relative(3), location: 29 }, Call { location: 35 }, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 34 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 14225679739041873922 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "dZDLDoMgEEX/ZdYsfNT6+BVjDOpoSAgShCaN4d87+Kh20c1chsu5ZGaFATs3tUKN8wJVvUJnhJRiauXccytmRbcrRKEkD6hiBkm2y3OXfJeCxHsGJ9ZagxioWw6la25QWaiUk5LBi0u3PVo0V5tabsiNGKAaSClwFBLDybOLjv6jRXKwZfaFM6Ib6ngvzM9cPuQYwTuJRzs61d9c+9anc+5Fm7nHwRkMSddyYqp1UrL00TCIY2rSjKV548PXHw==",
  "file_map": {
    "50": {
      "source": "global G_A: [u32] = &[];\nfn main(b: bool) -> pub (u32, u32) {\n    if b {\n        (G_A.pop_front().0, G_A.remove(0).1)\n    } else {\n        (1, 1)\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
