---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      },
      {
        "name": "z",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "t",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "index",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      },
      {
        "name": "index2",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      },
      {
        "name": "offset",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "sublen",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "7233212735005103307": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _78",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 32)] []",
    "BLACKBOX::RANGE [(_1, 32)] []",
    "BLACKBOX::RANGE [(_2, 32)] []",
    "BLACKBOX::RANGE [(_3, 32)] []",
    "BLACKBOX::RANGE [(_4, 32)] []",
    "INIT (id: 0, len: 5, witnesses: [_0, _1, _2, _3, _4])",
    "BLACKBOX::RANGE [(_5, 32)] []",
    "BLACKBOX::RANGE [(_6, 32)] []",
    "BLACKBOX::RANGE [(_7, 3)] []",
    "BLACKBOX::RANGE [(_8, 3)] []",
    "BLACKBOX::RANGE [(_9, 3)] []",
    "BLACKBOX::RANGE [(_10, 3)] []",
    "BLACKBOX::RANGE [(_11, 3)] []",
    "INIT (id: 1, len: 5, witnesses: [_7, _8, _9, _10, _11])",
    "BLACKBOX::RANGE [(_12, 32)] []",
    "BLACKBOX::RANGE [(_13, 32)] []",
    "BLACKBOX::RANGE [(_14, 32)] []",
    "BLACKBOX::RANGE [(_15, 32)] []",
    "BLACKBOX::RANGE [(_16, 32)] []",
    "BLACKBOX::RANGE [(_17, 32)] []",
    "EXPR [ (5, _6) (-1, _19) 0 ]",
    "BLACKBOX::RANGE [(_19, 32)] []",
    "EXPR [ (1, _5) (-1, _19) (-1, _20) 0 ]",
    "BLACKBOX::RANGE [(_20, 32)] []",
    "EXPR [ (1, _20) (-1, _21) -5 ]",
    "BLACKBOX::RANGE [(_21, 3)] []",
    "EXPR [ (1, _21) (-1, _22) -3 ]",
    "BLACKBOX::RANGE [(_22, 3)] []",
    "MEM (id: 0, read at: EXPR [ (1, _21) 0 ], value: EXPR [ (1, _23) 0 ]) ",
    "EXPR [ (1, _23) -111 ]",
    "MEM (id: 0, read at: EXPR [ (1, _22) 0 ], value: EXPR [ (1, _24) 0 ]) ",
    "EXPR [ (1, _24) -101 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _22) 4294967291 ], EXPR [ 4294967296 ]], outputs: [_25, _26]",
    "BLACKBOX::RANGE [(_25, 0)] []",
    "BLACKBOX::RANGE [(_26, 32)] []",
    "EXPR [ (1, _22) (-4294967296, _25) (-1, _26) 4294967291 ]",
    "EXPR [ (-1, _25) 0 ]",
    "EXPR [ (-1, _27) 0 ]",
    "MEM (id: 0, write EXPR [ (1, _27) 0 ] at: EXPR [ (1, _22) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _21) 0 ], value: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (1, _28) -111 ]",
    "EXPR [ (-1, _29) 1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _29) 0 ], value: EXPR [ (1, _30) 0 ]) ",
    "EXPR [ (1, _30) 0 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _21) 4294967286 ], EXPR [ 4294967296 ]], outputs: [_31, _32]",
    "BLACKBOX::RANGE [(_31, 1)] []",
    "BLACKBOX::RANGE [(_32, 32)] []",
    "EXPR [ (1, _21) (-4294967296, _31) (-1, _32) 4294967286 ]",
    "EXPR [ (-1, _21, _31) (1, _21) (-1, _33) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _33) 0 ], value: EXPR [ (1, _34) 0 ]) ",
    "EXPR [ (-1, _31, _34) (2, _31) (1, _34) (-1, _35) -2 ]",
    "BLACKBOX::RANGE [(_35, 32)] []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _21) 4294967291 ], EXPR [ 4294967296 ]], outputs: [_36, _37]",
    "BLACKBOX::RANGE [(_36, 1)] []",
    "BLACKBOX::RANGE [(_37, 32)] []",
    "EXPR [ (1, _21) (-4294967296, _36) (-1, _37) 4294967291 ]",
    "EXPR [ (1, _31, _36) (-1, _36) 0 ]",
    "EXPR [ (-1, _21, _31) (1, _21) (-1, _38) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _38) 0 ], value: EXPR [ (1, _39) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _27) 0 ], value: EXPR [ (1, _40) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _29) 0 ], value: EXPR [ (1, _41) 0 ]) ",
    "EXPR [ (-1, _42) 2 ]",
    "MEM (id: 0, read at: EXPR [ (1, _42) 0 ], value: EXPR [ (1, _43) 0 ]) ",
    "EXPR [ (-1, _44) 3 ]",
    "MEM (id: 0, read at: EXPR [ (1, _44) 0 ], value: EXPR [ (1, _45) 0 ]) ",
    "EXPR [ (-1, _46) 4 ]",
    "MEM (id: 0, read at: EXPR [ (1, _46) 0 ], value: EXPR [ (1, _47) 0 ]) ",
    "INIT (id: 3, len: 5, witnesses: [_40, _41, _43, _45, _47])",
    "EXPR [ (-1, _31, _35) (1, _31, _39) (1, _35) (-1, _48) 0 ]",
    "MEM (id: 3, write EXPR [ (1, _48) 0 ] at: EXPR [ (1, _38) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _46) 0 ], value: EXPR [ (1, _49) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _46) 0 ], value: EXPR [ (1, _50) 0 ]) ",
    "EXPR [ (-1, _31, _36) 0 ]",
    "EXPR [ (1, _21, _31) (-1, _51) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _51) 0 ], value: EXPR [ (1, _52) 0 ]) ",
    "EXPR [ (-1, _31, _52) (1, _52) (-1, _53) 0 ]",
    "MEM (id: 0, write EXPR [ (1, _53) 0 ] at: EXPR [ (1, _51) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _46) 0 ], value: EXPR [ (1, _54) 0 ]) ",
    "EXPR [ (-1, _31) (-1, _55) 1 ]",
    "EXPR [ (-1, _31, _49) (1, _31, _50) (1, _49) (-1, _56) 0 ]",
    "EXPR [ (1, _31, _54) (1, _55, _56) -109 ]",
    "EXPR [ (-1, _57) 246 ]",
    "EXPR [ (-1, _58) 159 ]",
    "EXPR [ (-1, _59) 32 ]",
    "EXPR [ (-1, _60) 176 ]",
    "EXPR [ (-1, _61) 8 ]",
    "INIT (id: 4, len: 5, witnesses: [_57, _58, _59, _60, _61])",
    "MEM (id: 4, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _62) 0 ]) ",
    "MEM (id: 4, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _63) 0 ]) ",
    "MEM (id: 4, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _64) 0 ]) ",
    "MEM (id: 4, read at: EXPR [ (1, _10) 0 ], value: EXPR [ (1, _65) 0 ]) ",
    "MEM (id: 4, read at: EXPR [ (1, _11) 0 ], value: EXPR [ (1, _66) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [EXPR [ (1, _62) (1, _63) (1, _64) (1, _65) (1, _66) 0 ]], outputs: [_67]",
    "EXPR [ (1, _62, _67) (1, _63, _67) (1, _64, _67) (1, _65, _67) (1, _66, _67) -1 ]",
    "BRILLIG CALL func 0: inputs: [EXPR [ (1, _18) 0 ], EXPR [ 4294967296 ]], outputs: [_68, _69]",
    "BLACKBOX::RANGE [(_68, 222)] []",
    "BLACKBOX::RANGE [(_69, 32)] []",
    "EXPR [ (1, _18) (-4294967296, _68) (-1, _69) 0 ]",
    "EXPR [ (-1, _68) (-1, _70) 5096253676302562286669017222071363378443840053029366383258766538131 ]",
    "BLACKBOX::RANGE [(_70, 222)] []",
    "BRILLIG CALL func 1: inputs: [EXPR [ (-1, _68) 5096253676302562286669017222071363378443840053029366383258766538131 ]], outputs: [_71]",
    "EXPR [ (-1, _68, _71) (5096253676302562286669017222071363378443840053029366383258766538131, _71) (1, _72) -1 ]",
    "EXPR [ (-1, _68, _72) (5096253676302562286669017222071363378443840053029366383258766538131, _72) 0 ]",
    "EXPR [ (1, _69, _72) (268435455, _72) (-1, _73) 0 ]",
    "BLACKBOX::RANGE [(_73, 32)] []",
    "BRILLIG CALL func 0: inputs: [EXPR [ (-1, _69) 4294967299 ], EXPR [ 4294967296 ]], outputs: [_74, _75]",
    "BLACKBOX::RANGE [(_74, 1)] []",
    "BLACKBOX::RANGE [(_75, 32)] []",
    "EXPR [ (-1, _69) (-4294967296, _74) (-1, _75) 4294967299 ]",
    "EXPR [ (-1, _17, _74) (1, _17) (-3, _74) (-1, _76) 3 ]",
    "BLACKBOX::RANGE [(_76, 32)] []",
    "EXPR [ (-1, _74, _76) (1, _76) (-1, _77) 0 ]",
    "MEM (id: 1, read at: EXPR [ (1, _77) 0 ], value: EXPR [ (1, _78) 0 ]) ",
    "EXPR [ (1, _15, _74) (-1, _74, _78) (-1, _15) (1, _78) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "rZbdbtswDIXfxde50A8pSn2VYSjc1C0MGE7gJgWGou8+Kj70sgEZNqVXH2PlHNKU9fPRPQ9P59fHcX45vHUP3z66p2WcpvH1cTrs+9N4mPXpx+eus5+Pp2UY9FF3Na6qY78M86l7mM/TtOve++l8+dPbsZ8vPPWLjrpdN8zPSjV8GaehRp+7X2p3W+o5QeyT3+T8H/rwZXpu0AfP0IcQWvIX2fTxlp5v6zla/RzTfXpqys9WP9/u/z/qc4s+b/XnpvrF5o+ltOiLfb/JuTv10qBPwZs+8H362FJ/Ilv8iVv6n2TLL3ynvmX+UiLTN31/4gr04l2T3r5fcS3rV8KWn1zD/hO3+qNv0tOmZ2nSp02fm/T+Pr3Y/hNv7x9/0xd7f/KhSU+bviU/RaufSJr0ftO39I+285Oazt+r/H/ov+uvfj8uv91YuuD0zNx1wa8Iem4q4grSfip4RVJPhazIusIVRRfKrovqkhXqotMX1cVrjTGCBDKYQLXymjVmUM285qVak2akWpTmogBWP127VP00OTGYQAGrn1ZFZSVXPy2PPRjACBLIYAKrn74PZ7CsTA70YAAjSCCDCYRfgl+Cn8BP4Cd1FrQ/UqdB+yIEMphAATNYVmZXbz9K9QvarxzACBLIYAIFzGBZWRwIv1L9tK8lgtVP+1UYTKCAGSwrvXMWeAuCBdECsqC6lhokC8SCbEGpO68G3lng6w5cg2CBOse6Jbz3y9g/TQNu7C/neX91gT/9ONqIXfGPy2E/PJ+XoS6dy5gupp8=",
  "file_map": {
    "50": {
      "source": "fn main(\n    x: [u32; 5],\n    mut z: u32,\n    t: u32,\n    index: [u32; 5],\n    index2: [u32; 5],\n    offset: u32,\n    sublen: Field,\n) {\n    let idx = (z - 5 * t - 5);\n    //dynamic array test\n    dyn_array(x, idx, idx - 3);\n    //regression for issue 1283\n    let mut s = 0;\n    let x3 = [246, 159, 32, 176, 8];\n    for i in 0..5 {\n        s += x3[index[i]];\n    }\n    assert(s != 0);\n\n    if 3 < (sublen as u32) {\n        assert(index[offset + 3] == index2[3]);\n    }\n}\n\nfn dyn_array(mut x: [u32; 5], y: u32, z: u32) {\n    assert(x[y] == 111);\n    assert(x[z] == 101);\n    x[z] = 0;\n    assert(x[y] == 111);\n    assert(x[1] == 0);\n    if y as u32 < 10 {\n        x[y] = x[y] - 2;\n    } else {\n        x[y] = 0;\n    }\n    assert(x[4] == 109);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
