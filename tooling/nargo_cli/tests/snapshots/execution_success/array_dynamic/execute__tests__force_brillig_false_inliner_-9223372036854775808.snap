---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      },
      {
        "name": "z",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "t",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "index",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      },
      {
        "name": "index2",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      },
      {
        "name": "offset",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "sublen",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "7233212735005103307": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : 95",
    "private parameters indices : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [(_0, 32)] []",
    "BLACKBOX::RANGE [(_1, 32)] []",
    "BLACKBOX::RANGE [(_2, 32)] []",
    "BLACKBOX::RANGE [(_3, 32)] []",
    "BLACKBOX::RANGE [(_4, 32)] []",
    "INIT (id: 0, len: 5, witnesses: [_0, _1, _2, _3, _4])",
    "BLACKBOX::RANGE [(_5, 32)] []",
    "BLACKBOX::RANGE [(_6, 32)] []",
    "INIT (id: 1, len: 5, witnesses: [_7, _8, _9, _10, _11])",
    "EXPR [ (5, _6) (-1, _19) 0 ]",
    "BLACKBOX::RANGE [(_19, 32)] []",
    "EXPR [ (1, _5) (-1, _19) (-1, _20) 0 ]",
    "BLACKBOX::RANGE [(_20, 32)] []",
    "EXPR [ (1, _20) (-1, _21) -5 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(21))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(22)), Simple(Witness(23))]",
    "BLACKBOX::RANGE [(_23, 32)] []",
    "EXPR [ (1, _21) (-4294967296, _22) (-1, _23) 4294967291 ]",
    "EXPR [ (-1, _22) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _21) 0 ], value: EXPR [ (1, _24) 0 ]) ",
    "EXPR [ (1, _24) -111 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(21))], q_c: 4294967288 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(25)), Simple(Witness(26))]",
    "BLACKBOX::RANGE [(_26, 32)] []",
    "EXPR [ (1, _21) (-4294967296, _25) (-1, _26) 4294967288 ]",
    "EXPR [ (-1, _25) 0 ]",
    "EXPR [ (1, _21) (-1, _27) -3 ]",
    "MEM (id: 0, read at: EXPR [ (1, _27) 0 ], value: EXPR [ (1, _28) 0 ]) ",
    "EXPR [ (1, _28) -101 ]",
    "EXPR [ (-1, _29) 0 ]",
    "MEM (id: 0, write EXPR [ (1, _29) 0 ] at: EXPR [ (1, _27) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _21) 0 ], value: EXPR [ (1, _30) 0 ]) ",
    "EXPR [ (1, _30) -111 ]",
    "EXPR [ (-1, _31) 1 ]",
    "MEM (id: 0, read at: EXPR [ (1, _31) 0 ], value: EXPR [ (1, _32) 0 ]) ",
    "EXPR [ (1, _32) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(21))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(33)), Simple(Witness(34))]",
    "BLACKBOX::RANGE [(_33, 222)] []",
    "BLACKBOX::RANGE [(_34, 32)] []",
    "EXPR [ (1, _21) (-4294967296, _33) (-1, _34) 0 ]",
    "EXPR [ (-1, _33) (-1, _35) 5096253676302562286669017222071363378443840053029366383258766538131 ]",
    "BLACKBOX::RANGE [(_35, 222)] []",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(33))], q_c: 5096253676302562286669017222071363378443840053029366383258766538131 })], outputs: [Simple(Witness(36))]",
    "EXPR [ (-1, _33, _36) (5096253676302562286669017222071363378443840053029366383258766538131, _36) (1, _37) -1 ]",
    "EXPR [ (-1, _33, _37) (5096253676302562286669017222071363378443840053029366383258766538131, _37) 0 ]",
    "EXPR [ (-1, _34, _37) (4026531840, _37) (-1, _38) 0 ]",
    "BLACKBOX::RANGE [(_38, 33)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(34))], q_c: 4294967286 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(39)), Simple(Witness(40))]",
    "BLACKBOX::RANGE [(_39, 1)] []",
    "BLACKBOX::RANGE [(_40, 32)] []",
    "EXPR [ (1, _34) (-4294967296, _39) (-1, _40) 4294967286 ]",
    "EXPR [ (-1, _21, _39) (1, _21) (-1, _41) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _41) 0 ], value: EXPR [ (1, _42) 0 ]) ",
    "EXPR [ (-1, _39, _42) (2, _39) (1, _42) (-1, _43) -2 ]",
    "BLACKBOX::RANGE [(_43, 32)] []",
    "EXPR [ (-1, _21, _39) (1, _21) (-1, _44) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _44) 0 ], value: EXPR [ (1, _45) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _29) 0 ], value: EXPR [ (1, _46) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _31) 0 ], value: EXPR [ (1, _47) 0 ]) ",
    "EXPR [ (-1, _48) 2 ]",
    "MEM (id: 0, read at: EXPR [ (1, _48) 0 ], value: EXPR [ (1, _49) 0 ]) ",
    "EXPR [ (-1, _50) 3 ]",
    "MEM (id: 0, read at: EXPR [ (1, _50) 0 ], value: EXPR [ (1, _51) 0 ]) ",
    "EXPR [ (-1, _52) 4 ]",
    "MEM (id: 0, read at: EXPR [ (1, _52) 0 ], value: EXPR [ (1, _53) 0 ]) ",
    "INIT (id: 3, len: 5, witnesses: [_46, _47, _49, _51, _53])",
    "EXPR [ (-1, _39, _42) (1, _39, _45) (2, _39) (1, _42) (-1, _54) -2 ]",
    "MEM (id: 3, write EXPR [ (1, _54) 0 ] at: EXPR [ (1, _44) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _52) 0 ], value: EXPR [ (1, _55) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _52) 0 ], value: EXPR [ (1, _56) 0 ]) ",
    "EXPR [ (1, _21, _39) (-1, _57) 0 ]",
    "MEM (id: 0, read at: EXPR [ (1, _57) 0 ], value: EXPR [ (1, _58) 0 ]) ",
    "EXPR [ (-1, _39, _58) (1, _58) (-1, _59) 0 ]",
    "MEM (id: 0, write EXPR [ (1, _59) 0 ] at: EXPR [ (1, _57) 0 ]) ",
    "MEM (id: 0, read at: EXPR [ (1, _52) 0 ], value: EXPR [ (1, _60) 0 ]) ",
    "EXPR [ (-1, _39) (-1, _61) 1 ]",
    "EXPR [ (-1, _39, _55) (1, _39, _56) (1, _55) (-1, _62) 0 ]",
    "EXPR [ (1, _39, _60) (1, _61, _62) -109 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(7))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(63)), Simple(Witness(64))]",
    "BLACKBOX::RANGE [(_64, 32)] []",
    "EXPR [ (1, _7) (-4294967296, _63) (-1, _64) 4294967291 ]",
    "EXPR [ (-1, _63) 0 ]",
    "EXPR [ (-1, _65) 246 ]",
    "EXPR [ (-1, _66) 159 ]",
    "EXPR [ (-1, _67) 32 ]",
    "EXPR [ (-1, _68) 176 ]",
    "EXPR [ (-1, _69) 8 ]",
    "INIT (id: 4, len: 5, witnesses: [_65, _66, _67, _68, _69])",
    "MEM (id: 4, read at: EXPR [ (1, _7) 0 ], value: EXPR [ (1, _70) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(8))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(71)), Simple(Witness(72))]",
    "BLACKBOX::RANGE [(_72, 32)] []",
    "EXPR [ (1, _8) (-4294967296, _71) (-1, _72) 4294967291 ]",
    "EXPR [ (-1, _71) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _8) 0 ], value: EXPR [ (1, _73) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(9))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(74)), Simple(Witness(75))]",
    "BLACKBOX::RANGE [(_75, 32)] []",
    "EXPR [ (1, _9) (-4294967296, _74) (-1, _75) 4294967291 ]",
    "EXPR [ (-1, _74) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _9) 0 ], value: EXPR [ (1, _76) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(10))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(77)), Simple(Witness(78))]",
    "BLACKBOX::RANGE [(_78, 32)] []",
    "EXPR [ (1, _10) (-4294967296, _77) (-1, _78) 4294967291 ]",
    "EXPR [ (-1, _77) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _10) 0 ], value: EXPR [ (1, _79) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(11))], q_c: 4294967291 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(80)), Simple(Witness(81))]",
    "BLACKBOX::RANGE [(_81, 32)] []",
    "EXPR [ (1, _11) (-4294967296, _80) (-1, _81) 4294967291 ]",
    "EXPR [ (-1, _80) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _11) 0 ], value: EXPR [ (1, _82) 0 ]) ",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(70)), (1, Witness(73)), (1, Witness(76)), (1, Witness(79)), (1, Witness(82))], q_c: 0 })], outputs: [Simple(Witness(83))]",
    "EXPR [ (1, _70, _83) (1, _73, _83) (1, _76, _83) (1, _79, _83) (1, _82, _83) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(18))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(84)), Simple(Witness(85))]",
    "BLACKBOX::RANGE [(_84, 222)] []",
    "BLACKBOX::RANGE [(_85, 32)] []",
    "EXPR [ (1, _18) (-4294967296, _84) (-1, _85) 0 ]",
    "EXPR [ (-1, _84) (-1, _86) 5096253676302562286669017222071363378443840053029366383258766538131 ]",
    "BLACKBOX::RANGE [(_86, 222)] []",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(84))], q_c: 5096253676302562286669017222071363378443840053029366383258766538131 })], outputs: [Simple(Witness(87))]",
    "EXPR [ (-1, _84, _87) (5096253676302562286669017222071363378443840053029366383258766538131, _87) (1, _88) -1 ]",
    "EXPR [ (-1, _84, _88) (5096253676302562286669017222071363378443840053029366383258766538131, _88) 0 ]",
    "EXPR [ (-1, _85, _88) (4026531840, _88) (-1, _89) 0 ]",
    "BLACKBOX::RANGE [(_89, 33)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(-1, Witness(85))], q_c: 4294967299 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(90)), Simple(Witness(91))]",
    "BLACKBOX::RANGE [(_90, 1)] []",
    "BLACKBOX::RANGE [(_91, 32)] []",
    "EXPR [ (-1, _85) (-4294967296, _90) (-1, _91) 4294967299 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(17))], q_c: 4294967294 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(92)), Simple(Witness(93))]",
    "BLACKBOX::RANGE [(_92, 1)] []",
    "BLACKBOX::RANGE [(_93, 32)] []",
    "EXPR [ (1, _17) (-4294967296, _92) (-1, _93) 4294967294 ]",
    "EXPR [ (1, _90, _92) (-1, _92) 0 ]",
    "EXPR [ (-1, _17, _90) (1, _17) (-3, _90) (-1, _94) 3 ]",
    "MEM (id: 1, read at: EXPR [ (1, _94) 0 ], value: EXPR [ (1, _95) 0 ]) ",
    "EXPR [ (1, _15, _90) (-1, _90, _95) (-1, _15) (1, _95) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "tZrbbuIwFEX/Jc88+HaO7f7KaFRxCVUkBIjLSCPUfx+oMIOclGor2W8k8VpRONl2YufSrNrF+eO92653x+bt16XZ7JbzU7fbXrcuTf7addzPt7et42l+ODVvVt2saber26/4OWvW3aZt3sR8/p411sCEHSQkfU84mPA/ENHWRBginC3X4Xx6Jma9piHovWmIWsuFKVemPDLlaaRcxN6bikgtz9PJ1VVyZ5hyy5Q7ptwz5WMTKrHcipJMLRemXCeU112dG5tQyaHIc6rliSkfm1C1cm+qNldyb6aTu7rj8mMTqsEUeQi13DHlfkJ57z8fm1CVXOS9Id0LU65MeWTKE1OeifJgmHLLlDum3DPlzISGCRMa69E/KFMemfLElI9OaH7057keLMQw5XZCef1oIY4pH53Q5Iu89zgngSkXplyZ8siUJ6Y8E+VqmHLLlDumnJlQZSZUmQlVZkKVmVAdm9DoysRCdPVMkWaiPBqm3DLljin3THlgyscmNIYyCx2lfoOOgwn1WiZRfO8BMEaYSDCRUSKZYcI+CF8TFiYcTHiYCDAhMKEwAdc8wTVPcM2zgQm45tnB5/AwEWBCYAKueYZrnuGaZ7jm1hgcgatujcPP4nEk4IjgiOKXP1z7XIYc33tFtSbhyGD1gy3XElx/JdfgiMURhyMeRwKOCI4ojkQcSTiCV394ETSY/EB699jw0uZrxOGIx5Hh6kvJS+gtR9rhJcPXiOJIxJGEI8PV/792r71OaXiB7TVif0CqLwSuG4tDt9l0H+/PH6lcd/+ZH7r5YtPeN9fn7fLp6Onvvhwp/P6wW7ar86G9mb6OXfX/AA==",
  "file_map": {
    "50": {
      "source": "fn main(\n    x: [u32; 5],\n    mut z: u32,\n    t: u32,\n    index: [Field; 5],\n    index2: [Field; 5],\n    offset: Field,\n    sublen: Field,\n) {\n    let idx = (z - 5 * t - 5) as Field;\n    //dynamic array test\n    dyn_array(x, idx, idx - 3);\n    //regression for issue 1283\n    let mut s = 0;\n    let x3 = [246, 159, 32, 176, 8];\n    for i in 0..5 {\n        s += x3[index[i]];\n    }\n    assert(s != 0);\n\n    if 3 < (sublen as u32) {\n        assert(index[offset + 3] == index2[3]);\n    }\n}\n\nfn dyn_array(mut x: [u32; 5], y: Field, z: Field) {\n    assert(x[y] == 111);\n    assert(x[z] == 101);\n    x[z] = 0;\n    assert(x[y] == 111);\n    assert(x[1] == 0);\n    if y as u32 < 10 {\n        x[y] = x[y] - 2;\n    } else {\n        x[y] = 0;\n    }\n    assert(x[4] == 109);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
