---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      },
      {
        "name": "z",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "t",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "index",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      },
      {
        "name": "index2",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      },
      {
        "name": "offset",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "sublen",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "7233212735005103307": {
        "error_kind": "string",
        "string": "attempt to multiply with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "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",
  "debug_symbols": "rZfBbiIxEET/Zc5zsNvttp1fiaKIJJMICZGIwEqriH9fF3aR7IFsZPZCvWGowvS4e5iP6Wl5OLzcr7fPr+/Tze3H9LBbbzbrl/vN6+Nqv37d1nc/JoeX5KcbP09JmoQm2iQ2sSapSW5STpJriFTxTaRJaFJTQpXYxJqkJjVFq9SUOE/FNakpqYo0CU20SWxiTWpKrpKblJN4V2MK1HeVrqGrdo1drWvqmrvit7kK3hE8AXXygEBQQiQYARUTQCaUDuIIniCEQFBCJCA5ABIhE5BcK+qDI3iCEJAcAUqIBCQbIBEyoXRQJCeAJwgBybgEqgTYUUwtHaIjeIIQAkEJkVDXI6h8zITSwRzBE4QQCEqwHmgIxNWxTEAgypscwROEgEDUGa3RIBKMgGTUGS3SoHQ4tckJPEEIgaCESDACkzOTM5MLkwuTC5MLkwuTC5NLTxa0jEQAPmwAfDgBIsEIiZAJpQM6RTLAE4SA5AJQAmaAA2RC6YC+aOAJNSd4QCAoAZNFAEZIBCQHQOmAvmjgCdp/O7ogoBroggaJkAmlA7qggSdghchBFzRQQuxVVSOghnY8zhNn8f1+tywYxV+Gcx3Zb6vdst1PN9vDZjNPv1abw+lD72+r7Un3q109Wyu0bJ+q1sDn9WYBHedPt7tsrd3SzbUnzvb4c3/M/8uf/JA/0Z9H/BJYvHq5R/xezv58yW+X/arW/ZpswB+j7/4Y43V+kxF/4vpjdlf604i/KP1lpP6GG9/Jb75c55eR62fK/WeqV/qH1h8L/Zau86eR/ZOE+y/JyP61HPj9Q/snKedPinKlv4zMj0y/5BF/EO7/cLl+3/n17Nchf2T/hhRG/IXzM1zu32/86rl+lZH5ra6c/UPfH7l+vTw/3Y/mv43UTy39+/7hrrz/fHf97Lx/kgz5/YX9c1ePVo/r3V+Pq0ck7darh83SD58P28cvZ/e/33iGj7tvu9fH5emwW5D0+cxbX27F4izZ7uap/mm7rX9FLN/h0Q+nopslRhz602GZxfzdEQv7Aw==",
  "file_map": {
    "50": {
      "source": "fn main(\n    x: [u32; 5],\n    mut z: u32,\n    t: u32,\n    index: [Field; 5],\n    index2: [Field; 5],\n    offset: Field,\n    sublen: Field,\n) {\n    let idx = (z - 5 * t - 5) as Field;\n    //dynamic array test\n    dyn_array(x, idx, idx - 3);\n    //regression for issue 1283\n    let mut s = 0;\n    let x3 = [246, 159, 32, 176, 8];\n    for i in 0..5 {\n        s += x3[index[i]];\n    }\n    assert(s != 0);\n\n    if 3 < (sublen as u32) {\n        assert(index[offset + 3] == index2[3]);\n    }\n}\n\nfn dyn_array(mut x: [u32; 5], y: Field, z: Field) {\n    assert(x[y] == 111);\n    assert(x[z] == 101);\n    x[z] = 0;\n    assert(x[y] == 111);\n    assert(x[1] == 0);\n    if y as u32 < 10 {\n        x[y] = x[y] - 2;\n    } else {\n        x[y] = 0;\n    }\n    assert(x[4] == 109);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
