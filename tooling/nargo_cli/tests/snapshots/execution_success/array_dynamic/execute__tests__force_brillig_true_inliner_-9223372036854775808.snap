---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          }
        },
        "visibility": "private"
      },
      {
        "name": "z",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "t",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "index",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      },
      {
        "name": "index2",
        "type": {
          "kind": "array",
          "length": 5,
          "type": {
            "kind": "field"
          }
        },
        "visibility": "private"
      },
      {
        "name": "offset",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      },
      {
        "name": "sublen",
        "type": {
          "kind": "field"
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "H4sIAAAAAAAA/+1aO28bMQzW+e7snB+x4/yRc2InaYECGfLe2915GN26depwU9uxY5cW6D9tGIvxdzRlw7XUVkAIBLoTKfITSYn0IYmZ0/DxL7HPmR1bdqT53NSJZU/tWG5HI4+6ylAYkwgwNiLAmEaAMQuAMQTOPBKcTY84/8Z91DL/f47uRICxiABjOwKMHRPX+elG4NNeBBh3I8DYjwDjIADGEDj3IsE5DITT7AvQ1NBSw0gNGV1a1EhQcabiR8WFLm+6HOnCoQNNB4YSkgJOzhwaN7FTftmxsGMD+B6b1VEh7PrUf1JOjgtlfx7xHxZW504Q/aNn/UUY/CX/oD2rFvpxL2w3FXJyTQoy5yBz7pC5AJkLh8wlyFw6ZK5A5sohcw0y1w6ZG5C5ETIcgzA5Oh4HjvGkZ+pxNbAXtt0OY/soEfaMWfgceWy/bUKep/kHC7THeKR/+L7rsUy1wJMIXlYt74N5OfA4vmTnNcjJ3NoRPMZCxPnbA98wcd5yTDPQ6TFfb1/yNa58zQQvq5b3sWm+Ym4xDo5NHsAXj7W8fMm7uPIuF7ysWt7HpnmHuSXvyaZZ0NuqzmsB71210H8Oti7sc9h6P+9J8V73HLtyX8GPtoha1cIfnGcpzOXgvyf/oLzgFcDLqrqdtn3PwA7qYhy5kD+z7307NmENrx8o9pvCfg23Mif9UijyhSJPufbGPnfsH+XQdzvHeYe/PxLHiLZwjm3Ju4fo1I7lljQwy3dqW9jteLc7O2LdXe+6X81Yd8+77oPnGrTrXffts+6+d93lCefjAHTL2rYH8/+itrH9tsAaqrbtCTzSP1jbiDdUsA4UXgeekYd2hoodTVfXo66eR127HnVxvsv7xnd/J+8c33W3UPxs/OkfFYrvfZ4L2f+ir6jePZh6zHl/uVnuDTGOuZD/Cjrf2+e+We5ZZO1sOPRpNSsJE4MyAb8TZQo+6RuU/yBwBurfy6HYP9pKFbwtgSM17h7SpUP2yyH76Ec6lLHI1+CWsfhoR8rDL/ZZYjYe8Uo8/N5UfLhqH4ngN9bsX55Dlv9kR8qLnwIDfldinRnMybg3FflUyBD1lb3w2sD5Mk6UfTDWfAVW3Aeu1c65jBHyWPaz2G+I73RE2h3AtjDnO2b1/funOdFV5NGXfB9pOdFdsW6Tc4DrXOfgmx21c6DtQesRWb6vyMt+w7VnXCv97boLtN9v8twlCiasO9xPaPWf12L9Z1tZVbd5aufLLej4ZF5jn7Ba/RxPSRnwUf6HfcdvdTxu809ss+PpaHY4nU0n0/v78d1Uni8ijksngP27ydHt3XgyLR9G9Hqwzv5vLdYzm8kqAAA=",
  "debug_symbols": "pZXLbqNAEEX/pdcs+v3wr0SWhe12hISwRWCkkcW/T5WrimQWkaLOxue2m3NpoAVPda3n9f00TLf7hzq8PdV5HsZxeD+N90u/DPcJ/n0qjT/JqIPpVLIER/CEoA4WEAmJkAnlhawJhmAJjuAJ1JKpJVNLppZMLYVaCrUUainUUqjFaJh0SBh7JNQGZGQmZmYWotFM8CPSMh0T+hIyMMHPyEK0mmmYlumY4BdkYEYmrMdoDFlC4eCg0hgMRoKV4CREulyHNXj9LksoHLyWYCRYCU4CPkns8UFClJDoRvrMhF6/bZ2STXJa5lpxj3zZNbCXHv1cp0UdpnUcO/WnH9fXQR+Pfnpx6WeYheus0xUIhbdhrJi27tPW36s2Z5ZtLrsefuw769l3NrT4fvd9kx+i+Mm1+MWKX3KD742s39vU4uuy+03nD7J+H22L7+Put9w/H5P4Kf7u/E2+i/v+SbbJN9/snyOM+ssw//ce37BpHvrzWHl4W6fLl9nl70Nm5DvwmO+Xel3nik2fHwN4a7yF3MV8xBcoDAw8ShMSDs1rmDsT9XHDpfwD",
  "file_map": {
    "50": {
      "source": "fn main(\n    x: [u32; 5],\n    mut z: u32,\n    t: u32,\n    index: [Field; 5],\n    index2: [Field; 5],\n    offset: Field,\n    sublen: Field,\n) {\n    let idx = (z - 5 * t - 5) as Field;\n    //dynamic array test\n    dyn_array(x, idx, idx - 3);\n    //regression for issue 1283\n    let mut s = 0;\n    let x3 = [246, 159, 32, 176, 8];\n    for i in 0..5 {\n        s += x3[index[i]];\n    }\n    assert(s != 0);\n\n    if 3 < (sublen as u32) {\n        assert(index[offset + 3] == index2[3]);\n    }\n}\n\nfn dyn_array(mut x: [u32; 5], y: Field, z: Field) {\n    assert(x[y] == 111);\n    assert(x[z] == 101);\n    x[z] = 0;\n    assert(x[y] == 111);\n    assert(x[1] == 0);\n    if y as u32 < 10 {\n        x[y] = x[y] - 2;\n    } else {\n        x[y] = 0;\n    }\n    assert(x[4] == 109);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
