---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "ops",
        "type": {
          "kind": "array",
          "length": 15,
          "type": {
            "kind": "struct",
            "path": "SignedDivOp",
            "fields": [
              {
                "name": "lhs",
                "type": {
                  "kind": "integer",
                  "sign": "signed",
                  "width": 8
                }
              },
              {
                "name": "rhs",
                "type": {
                  "kind": "integer",
                  "sign": "signed",
                  "width": 8
                }
              },
              {
                "name": "result",
                "type": {
                  "kind": "integer",
                  "sign": "signed",
                  "width": 8
                }
              }
            ]
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {}
  },
  "bytecode": [
    "func 0",
    "current witness index : _329",
    "private parameters indices : [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44]",
    "public parameters indices : []",
    "return value indices : []",
    "BLACKBOX::RANGE [_0]:8 bits []",
    "BLACKBOX::RANGE [_1]:8 bits []",
    "BLACKBOX::RANGE [_2]:8 bits []",
    "BLACKBOX::RANGE [_3]:8 bits []",
    "BLACKBOX::RANGE [_4]:8 bits []",
    "BLACKBOX::RANGE [_5]:8 bits []",
    "BLACKBOX::RANGE [_6]:8 bits []",
    "BLACKBOX::RANGE [_7]:8 bits []",
    "BLACKBOX::RANGE [_8]:8 bits []",
    "BLACKBOX::RANGE [_9]:8 bits []",
    "BLACKBOX::RANGE [_10]:8 bits []",
    "BLACKBOX::RANGE [_11]:8 bits []",
    "BLACKBOX::RANGE [_12]:8 bits []",
    "BLACKBOX::RANGE [_13]:8 bits []",
    "BLACKBOX::RANGE [_14]:8 bits []",
    "BLACKBOX::RANGE [_15]:8 bits []",
    "BLACKBOX::RANGE [_16]:8 bits []",
    "BLACKBOX::RANGE [_17]:8 bits []",
    "BLACKBOX::RANGE [_18]:8 bits []",
    "BLACKBOX::RANGE [_19]:8 bits []",
    "BLACKBOX::RANGE [_20]:8 bits []",
    "BLACKBOX::RANGE [_21]:8 bits []",
    "BLACKBOX::RANGE [_22]:8 bits []",
    "BLACKBOX::RANGE [_23]:8 bits []",
    "BLACKBOX::RANGE [_24]:8 bits []",
    "BLACKBOX::RANGE [_25]:8 bits []",
    "BLACKBOX::RANGE [_26]:8 bits []",
    "BLACKBOX::RANGE [_27]:8 bits []",
    "BLACKBOX::RANGE [_28]:8 bits []",
    "BLACKBOX::RANGE [_29]:8 bits []",
    "BLACKBOX::RANGE [_30]:8 bits []",
    "BLACKBOX::RANGE [_31]:8 bits []",
    "BLACKBOX::RANGE [_32]:8 bits []",
    "BLACKBOX::RANGE [_33]:8 bits []",
    "BLACKBOX::RANGE [_34]:8 bits []",
    "BLACKBOX::RANGE [_35]:8 bits []",
    "BLACKBOX::RANGE [_36]:8 bits []",
    "BLACKBOX::RANGE [_37]:8 bits []",
    "BLACKBOX::RANGE [_38]:8 bits []",
    "BLACKBOX::RANGE [_39]:8 bits []",
    "BLACKBOX::RANGE [_40]:8 bits []",
    "BLACKBOX::RANGE [_41]:8 bits []",
    "BLACKBOX::RANGE [_42]:8 bits []",
    "BLACKBOX::RANGE [_43]:8 bits []",
    "BLACKBOX::RANGE [_44]:8 bits []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(1))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(45)), Simple(Witness(46))]",
    "BLACKBOX::RANGE [_45]:1 bits []",
    "BLACKBOX::RANGE [_46]:7 bits []",
    "EXPR [ (1, _1) (-128, _45) (-1, _46) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(0))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(47)), Simple(Witness(48))]",
    "BLACKBOX::RANGE [_47]:1 bits []",
    "BLACKBOX::RANGE [_48]:7 bits []",
    "EXPR [ (1, _0) (-128, _47) (-1, _48) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(1), Witness(45))], linear_combinations: [(1, Witness(1)), (256, Witness(45))], q_c: 0 })], outputs: [Simple(Witness(49))]",
    "EXPR [ (-2, _1, _45) (1, _1) (256, _45) (-1, _50) 0 ]",
    "EXPR [ (1, _49, _50) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(0), Witness(47))], linear_combinations: [(1, Witness(0)), (256, Witness(47))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(50))], q_c: 0 })], outputs: [Simple(Witness(51)), Simple(Witness(52))]",
    "BLACKBOX::RANGE [_51]:8 bits []",
    "BLACKBOX::RANGE [_52]:8 bits []",
    "EXPR [ (1, _50) (-1, _52) (-1, _53) -1 ]",
    "BLACKBOX::RANGE [_53]:8 bits []",
    "EXPR [ (-2, _0, _47) (-1, _50, _51) (1, _0) (256, _47) (-1, _52) 0 ]",
    "EXPR [ (-1, _51) (-1, _54) 128 ]",
    "EXPR [ (-2, _45, _47) (1, _45) (1, _47) (-1, _55) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(51))], q_c: 0 })], outputs: [Simple(Witness(56))]",
    "EXPR [ (1, _51, _56) (1, _57) -1 ]",
    "EXPR [ (1, _51, _57) 0 ]",
    "EXPR [ (2, _54, _55) (1, _51) (-1, _58) 0 ]",
    "EXPR [ (-1, _57) (-1, _59) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(52))], q_c: 0 })], outputs: [Simple(Witness(60))]",
    "EXPR [ (1, _52, _60) (1, _61) -1 ]",
    "EXPR [ (1, _52, _61) 0 ]",
    "EXPR [ (-2, _47, _52) (256, _47) (1, _52) (-1, _62) 0 ]",
    "EXPR [ (-1, _61) (-1, _63) 1 ]",
    "EXPR [ (1, _58, _59) (-1, _2) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(4))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(64)), Simple(Witness(65))]",
    "BLACKBOX::RANGE [_64]:1 bits []",
    "BLACKBOX::RANGE [_65]:7 bits []",
    "EXPR [ (1, _4) (-128, _64) (-1, _65) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(3))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(66)), Simple(Witness(67))]",
    "BLACKBOX::RANGE [_66]:1 bits []",
    "BLACKBOX::RANGE [_67]:7 bits []",
    "EXPR [ (1, _3) (-128, _66) (-1, _67) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(4), Witness(64))], linear_combinations: [(1, Witness(4)), (256, Witness(64))], q_c: 0 })], outputs: [Simple(Witness(68))]",
    "EXPR [ (-2, _4, _64) (1, _4) (256, _64) (-1, _69) 0 ]",
    "EXPR [ (1, _68, _69) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(3), Witness(66))], linear_combinations: [(1, Witness(3)), (256, Witness(66))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(69))], q_c: 0 })], outputs: [Simple(Witness(70)), Simple(Witness(71))]",
    "BLACKBOX::RANGE [_70]:8 bits []",
    "BLACKBOX::RANGE [_71]:8 bits []",
    "EXPR [ (1, _69) (-1, _71) (-1, _72) -1 ]",
    "BLACKBOX::RANGE [_72]:8 bits []",
    "EXPR [ (-2, _3, _66) (-1, _69, _70) (1, _3) (256, _66) (-1, _71) 0 ]",
    "EXPR [ (-1, _70) (-1, _73) 128 ]",
    "EXPR [ (-2, _64, _66) (1, _64) (1, _66) (-1, _74) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(70))], q_c: 0 })], outputs: [Simple(Witness(75))]",
    "EXPR [ (1, _70, _75) (1, _76) -1 ]",
    "EXPR [ (1, _70, _76) 0 ]",
    "EXPR [ (2, _73, _74) (1, _70) (-1, _77) 0 ]",
    "EXPR [ (-1, _76) (-1, _78) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(71))], q_c: 0 })], outputs: [Simple(Witness(79))]",
    "EXPR [ (1, _71, _79) (1, _80) -1 ]",
    "EXPR [ (1, _71, _80) 0 ]",
    "EXPR [ (-2, _66, _71) (256, _66) (1, _71) (-1, _81) 0 ]",
    "EXPR [ (-1, _80) (-1, _82) 1 ]",
    "EXPR [ (1, _77, _78) (-1, _5) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(7))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(83)), Simple(Witness(84))]",
    "BLACKBOX::RANGE [_83]:1 bits []",
    "BLACKBOX::RANGE [_84]:7 bits []",
    "EXPR [ (1, _7) (-128, _83) (-1, _84) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(6))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(85)), Simple(Witness(86))]",
    "BLACKBOX::RANGE [_85]:1 bits []",
    "BLACKBOX::RANGE [_86]:7 bits []",
    "EXPR [ (1, _6) (-128, _85) (-1, _86) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(7), Witness(83))], linear_combinations: [(1, Witness(7)), (256, Witness(83))], q_c: 0 })], outputs: [Simple(Witness(87))]",
    "EXPR [ (-2, _7, _83) (1, _7) (256, _83) (-1, _88) 0 ]",
    "EXPR [ (1, _87, _88) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(6), Witness(85))], linear_combinations: [(1, Witness(6)), (256, Witness(85))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(88))], q_c: 0 })], outputs: [Simple(Witness(89)), Simple(Witness(90))]",
    "BLACKBOX::RANGE [_89]:8 bits []",
    "BLACKBOX::RANGE [_90]:8 bits []",
    "EXPR [ (1, _88) (-1, _90) (-1, _91) -1 ]",
    "BLACKBOX::RANGE [_91]:8 bits []",
    "EXPR [ (-2, _6, _85) (-1, _88, _89) (1, _6) (256, _85) (-1, _90) 0 ]",
    "EXPR [ (-1, _89) (-1, _92) 128 ]",
    "EXPR [ (-2, _83, _85) (1, _83) (1, _85) (-1, _93) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(89))], q_c: 0 })], outputs: [Simple(Witness(94))]",
    "EXPR [ (1, _89, _94) (1, _95) -1 ]",
    "EXPR [ (1, _89, _95) 0 ]",
    "EXPR [ (2, _92, _93) (1, _89) (-1, _96) 0 ]",
    "EXPR [ (-1, _95) (-1, _97) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(90))], q_c: 0 })], outputs: [Simple(Witness(98))]",
    "EXPR [ (1, _90, _98) (1, _99) -1 ]",
    "EXPR [ (1, _90, _99) 0 ]",
    "EXPR [ (-2, _85, _90) (256, _85) (1, _90) (-1, _100) 0 ]",
    "EXPR [ (-1, _99) (-1, _101) 1 ]",
    "EXPR [ (1, _96, _97) (-1, _8) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(10))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(102)), Simple(Witness(103))]",
    "BLACKBOX::RANGE [_102]:1 bits []",
    "BLACKBOX::RANGE [_103]:7 bits []",
    "EXPR [ (1, _10) (-128, _102) (-1, _103) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(9))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(104)), Simple(Witness(105))]",
    "BLACKBOX::RANGE [_104]:1 bits []",
    "BLACKBOX::RANGE [_105]:7 bits []",
    "EXPR [ (1, _9) (-128, _104) (-1, _105) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(10), Witness(102))], linear_combinations: [(1, Witness(10)), (256, Witness(102))], q_c: 0 })], outputs: [Simple(Witness(106))]",
    "EXPR [ (-2, _10, _102) (1, _10) (256, _102) (-1, _107) 0 ]",
    "EXPR [ (1, _106, _107) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(9), Witness(104))], linear_combinations: [(1, Witness(9)), (256, Witness(104))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(107))], q_c: 0 })], outputs: [Simple(Witness(108)), Simple(Witness(109))]",
    "BLACKBOX::RANGE [_108]:8 bits []",
    "BLACKBOX::RANGE [_109]:8 bits []",
    "EXPR [ (1, _107) (-1, _109) (-1, _110) -1 ]",
    "BLACKBOX::RANGE [_110]:8 bits []",
    "EXPR [ (-2, _9, _104) (-1, _107, _108) (1, _9) (256, _104) (-1, _109) 0 ]",
    "EXPR [ (-1, _108) (-1, _111) 128 ]",
    "EXPR [ (-2, _102, _104) (1, _102) (1, _104) (-1, _112) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(108))], q_c: 0 })], outputs: [Simple(Witness(113))]",
    "EXPR [ (1, _108, _113) (1, _114) -1 ]",
    "EXPR [ (1, _108, _114) 0 ]",
    "EXPR [ (2, _111, _112) (1, _108) (-1, _115) 0 ]",
    "EXPR [ (-1, _114) (-1, _116) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(109))], q_c: 0 })], outputs: [Simple(Witness(117))]",
    "EXPR [ (1, _109, _117) (1, _118) -1 ]",
    "EXPR [ (1, _109, _118) 0 ]",
    "EXPR [ (-2, _104, _109) (256, _104) (1, _109) (-1, _119) 0 ]",
    "EXPR [ (-1, _118) (-1, _120) 1 ]",
    "EXPR [ (1, _115, _116) (-1, _11) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(13))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(121)), Simple(Witness(122))]",
    "BLACKBOX::RANGE [_121]:1 bits []",
    "BLACKBOX::RANGE [_122]:7 bits []",
    "EXPR [ (1, _13) (-128, _121) (-1, _122) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(12))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(123)), Simple(Witness(124))]",
    "BLACKBOX::RANGE [_123]:1 bits []",
    "BLACKBOX::RANGE [_124]:7 bits []",
    "EXPR [ (1, _12) (-128, _123) (-1, _124) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(13), Witness(121))], linear_combinations: [(1, Witness(13)), (256, Witness(121))], q_c: 0 })], outputs: [Simple(Witness(125))]",
    "EXPR [ (-2, _13, _121) (1, _13) (256, _121) (-1, _126) 0 ]",
    "EXPR [ (1, _125, _126) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(12), Witness(123))], linear_combinations: [(1, Witness(12)), (256, Witness(123))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(126))], q_c: 0 })], outputs: [Simple(Witness(127)), Simple(Witness(128))]",
    "BLACKBOX::RANGE [_127]:8 bits []",
    "BLACKBOX::RANGE [_128]:8 bits []",
    "EXPR [ (1, _126) (-1, _128) (-1, _129) -1 ]",
    "BLACKBOX::RANGE [_129]:8 bits []",
    "EXPR [ (-2, _12, _123) (-1, _126, _127) (1, _12) (256, _123) (-1, _128) 0 ]",
    "EXPR [ (-1, _127) (-1, _130) 128 ]",
    "EXPR [ (-2, _121, _123) (1, _121) (1, _123) (-1, _131) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(127))], q_c: 0 })], outputs: [Simple(Witness(132))]",
    "EXPR [ (1, _127, _132) (1, _133) -1 ]",
    "EXPR [ (1, _127, _133) 0 ]",
    "EXPR [ (2, _130, _131) (1, _127) (-1, _134) 0 ]",
    "EXPR [ (-1, _133) (-1, _135) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(128))], q_c: 0 })], outputs: [Simple(Witness(136))]",
    "EXPR [ (1, _128, _136) (1, _137) -1 ]",
    "EXPR [ (1, _128, _137) 0 ]",
    "EXPR [ (-2, _123, _128) (256, _123) (1, _128) (-1, _138) 0 ]",
    "EXPR [ (-1, _137) (-1, _139) 1 ]",
    "EXPR [ (1, _134, _135) (-1, _14) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(16))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(140)), Simple(Witness(141))]",
    "BLACKBOX::RANGE [_140]:1 bits []",
    "BLACKBOX::RANGE [_141]:7 bits []",
    "EXPR [ (1, _16) (-128, _140) (-1, _141) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(15))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(142)), Simple(Witness(143))]",
    "BLACKBOX::RANGE [_142]:1 bits []",
    "BLACKBOX::RANGE [_143]:7 bits []",
    "EXPR [ (1, _15) (-128, _142) (-1, _143) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(16), Witness(140))], linear_combinations: [(1, Witness(16)), (256, Witness(140))], q_c: 0 })], outputs: [Simple(Witness(144))]",
    "EXPR [ (-2, _16, _140) (1, _16) (256, _140) (-1, _145) 0 ]",
    "EXPR [ (1, _144, _145) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(15), Witness(142))], linear_combinations: [(1, Witness(15)), (256, Witness(142))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(145))], q_c: 0 })], outputs: [Simple(Witness(146)), Simple(Witness(147))]",
    "BLACKBOX::RANGE [_146]:8 bits []",
    "BLACKBOX::RANGE [_147]:8 bits []",
    "EXPR [ (1, _145) (-1, _147) (-1, _148) -1 ]",
    "BLACKBOX::RANGE [_148]:8 bits []",
    "EXPR [ (-2, _15, _142) (-1, _145, _146) (1, _15) (256, _142) (-1, _147) 0 ]",
    "EXPR [ (-1, _146) (-1, _149) 128 ]",
    "EXPR [ (-2, _140, _142) (1, _140) (1, _142) (-1, _150) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(146))], q_c: 0 })], outputs: [Simple(Witness(151))]",
    "EXPR [ (1, _146, _151) (1, _152) -1 ]",
    "EXPR [ (1, _146, _152) 0 ]",
    "EXPR [ (2, _149, _150) (1, _146) (-1, _153) 0 ]",
    "EXPR [ (-1, _152) (-1, _154) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(147))], q_c: 0 })], outputs: [Simple(Witness(155))]",
    "EXPR [ (1, _147, _155) (1, _156) -1 ]",
    "EXPR [ (1, _147, _156) 0 ]",
    "EXPR [ (-2, _142, _147) (256, _142) (1, _147) (-1, _157) 0 ]",
    "EXPR [ (-1, _156) (-1, _158) 1 ]",
    "EXPR [ (1, _153, _154) (-1, _17) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(19))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(159)), Simple(Witness(160))]",
    "BLACKBOX::RANGE [_159]:1 bits []",
    "BLACKBOX::RANGE [_160]:7 bits []",
    "EXPR [ (1, _19) (-128, _159) (-1, _160) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(18))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(161)), Simple(Witness(162))]",
    "BLACKBOX::RANGE [_161]:1 bits []",
    "BLACKBOX::RANGE [_162]:7 bits []",
    "EXPR [ (1, _18) (-128, _161) (-1, _162) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(19), Witness(159))], linear_combinations: [(1, Witness(19)), (256, Witness(159))], q_c: 0 })], outputs: [Simple(Witness(163))]",
    "EXPR [ (-2, _19, _159) (1, _19) (256, _159) (-1, _164) 0 ]",
    "EXPR [ (1, _163, _164) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(18), Witness(161))], linear_combinations: [(1, Witness(18)), (256, Witness(161))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(164))], q_c: 0 })], outputs: [Simple(Witness(165)), Simple(Witness(166))]",
    "BLACKBOX::RANGE [_165]:8 bits []",
    "BLACKBOX::RANGE [_166]:8 bits []",
    "EXPR [ (1, _164) (-1, _166) (-1, _167) -1 ]",
    "BLACKBOX::RANGE [_167]:8 bits []",
    "EXPR [ (-2, _18, _161) (-1, _164, _165) (1, _18) (256, _161) (-1, _166) 0 ]",
    "EXPR [ (-1, _165) (-1, _168) 128 ]",
    "EXPR [ (-2, _159, _161) (1, _159) (1, _161) (-1, _169) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(165))], q_c: 0 })], outputs: [Simple(Witness(170))]",
    "EXPR [ (1, _165, _170) (1, _171) -1 ]",
    "EXPR [ (1, _165, _171) 0 ]",
    "EXPR [ (2, _168, _169) (1, _165) (-1, _172) 0 ]",
    "EXPR [ (-1, _171) (-1, _173) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(166))], q_c: 0 })], outputs: [Simple(Witness(174))]",
    "EXPR [ (1, _166, _174) (1, _175) -1 ]",
    "EXPR [ (1, _166, _175) 0 ]",
    "EXPR [ (-2, _161, _166) (256, _161) (1, _166) (-1, _176) 0 ]",
    "EXPR [ (-1, _175) (-1, _177) 1 ]",
    "EXPR [ (1, _172, _173) (-1, _20) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(22))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(178)), Simple(Witness(179))]",
    "BLACKBOX::RANGE [_178]:1 bits []",
    "BLACKBOX::RANGE [_179]:7 bits []",
    "EXPR [ (1, _22) (-128, _178) (-1, _179) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(21))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(180)), Simple(Witness(181))]",
    "BLACKBOX::RANGE [_180]:1 bits []",
    "BLACKBOX::RANGE [_181]:7 bits []",
    "EXPR [ (1, _21) (-128, _180) (-1, _181) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(22), Witness(178))], linear_combinations: [(1, Witness(22)), (256, Witness(178))], q_c: 0 })], outputs: [Simple(Witness(182))]",
    "EXPR [ (-2, _22, _178) (1, _22) (256, _178) (-1, _183) 0 ]",
    "EXPR [ (1, _182, _183) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(21), Witness(180))], linear_combinations: [(1, Witness(21)), (256, Witness(180))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(183))], q_c: 0 })], outputs: [Simple(Witness(184)), Simple(Witness(185))]",
    "BLACKBOX::RANGE [_184]:8 bits []",
    "BLACKBOX::RANGE [_185]:8 bits []",
    "EXPR [ (1, _183) (-1, _185) (-1, _186) -1 ]",
    "BLACKBOX::RANGE [_186]:8 bits []",
    "EXPR [ (-2, _21, _180) (-1, _183, _184) (1, _21) (256, _180) (-1, _185) 0 ]",
    "EXPR [ (-1, _184) (-1, _187) 128 ]",
    "EXPR [ (-2, _178, _180) (1, _178) (1, _180) (-1, _188) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(184))], q_c: 0 })], outputs: [Simple(Witness(189))]",
    "EXPR [ (1, _184, _189) (1, _190) -1 ]",
    "EXPR [ (1, _184, _190) 0 ]",
    "EXPR [ (2, _187, _188) (1, _184) (-1, _191) 0 ]",
    "EXPR [ (-1, _190) (-1, _192) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(185))], q_c: 0 })], outputs: [Simple(Witness(193))]",
    "EXPR [ (1, _185, _193) (1, _194) -1 ]",
    "EXPR [ (1, _185, _194) 0 ]",
    "EXPR [ (-2, _180, _185) (256, _180) (1, _185) (-1, _195) 0 ]",
    "EXPR [ (-1, _194) (-1, _196) 1 ]",
    "EXPR [ (1, _191, _192) (-1, _23) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(25))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(197)), Simple(Witness(198))]",
    "BLACKBOX::RANGE [_197]:1 bits []",
    "BLACKBOX::RANGE [_198]:7 bits []",
    "EXPR [ (1, _25) (-128, _197) (-1, _198) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(24))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(199)), Simple(Witness(200))]",
    "BLACKBOX::RANGE [_199]:1 bits []",
    "BLACKBOX::RANGE [_200]:7 bits []",
    "EXPR [ (1, _24) (-128, _199) (-1, _200) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(25), Witness(197))], linear_combinations: [(1, Witness(25)), (256, Witness(197))], q_c: 0 })], outputs: [Simple(Witness(201))]",
    "EXPR [ (-2, _25, _197) (1, _25) (256, _197) (-1, _202) 0 ]",
    "EXPR [ (1, _201, _202) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(24), Witness(199))], linear_combinations: [(1, Witness(24)), (256, Witness(199))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(202))], q_c: 0 })], outputs: [Simple(Witness(203)), Simple(Witness(204))]",
    "BLACKBOX::RANGE [_203]:8 bits []",
    "BLACKBOX::RANGE [_204]:8 bits []",
    "EXPR [ (1, _202) (-1, _204) (-1, _205) -1 ]",
    "BLACKBOX::RANGE [_205]:8 bits []",
    "EXPR [ (-2, _24, _199) (-1, _202, _203) (1, _24) (256, _199) (-1, _204) 0 ]",
    "EXPR [ (-1, _203) (-1, _206) 128 ]",
    "EXPR [ (-2, _197, _199) (1, _197) (1, _199) (-1, _207) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(203))], q_c: 0 })], outputs: [Simple(Witness(208))]",
    "EXPR [ (1, _203, _208) (1, _209) -1 ]",
    "EXPR [ (1, _203, _209) 0 ]",
    "EXPR [ (2, _206, _207) (1, _203) (-1, _210) 0 ]",
    "EXPR [ (-1, _209) (-1, _211) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(204))], q_c: 0 })], outputs: [Simple(Witness(212))]",
    "EXPR [ (1, _204, _212) (1, _213) -1 ]",
    "EXPR [ (1, _204, _213) 0 ]",
    "EXPR [ (-2, _199, _204) (256, _199) (1, _204) (-1, _214) 0 ]",
    "EXPR [ (-1, _213) (-1, _215) 1 ]",
    "EXPR [ (1, _210, _211) (-1, _26) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(28))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(216)), Simple(Witness(217))]",
    "BLACKBOX::RANGE [_216]:1 bits []",
    "BLACKBOX::RANGE [_217]:7 bits []",
    "EXPR [ (1, _28) (-128, _216) (-1, _217) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(27))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(218)), Simple(Witness(219))]",
    "BLACKBOX::RANGE [_218]:1 bits []",
    "BLACKBOX::RANGE [_219]:7 bits []",
    "EXPR [ (1, _27) (-128, _218) (-1, _219) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(28), Witness(216))], linear_combinations: [(1, Witness(28)), (256, Witness(216))], q_c: 0 })], outputs: [Simple(Witness(220))]",
    "EXPR [ (-2, _28, _216) (1, _28) (256, _216) (-1, _221) 0 ]",
    "EXPR [ (1, _220, _221) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(27), Witness(218))], linear_combinations: [(1, Witness(27)), (256, Witness(218))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(221))], q_c: 0 })], outputs: [Simple(Witness(222)), Simple(Witness(223))]",
    "BLACKBOX::RANGE [_222]:8 bits []",
    "BLACKBOX::RANGE [_223]:8 bits []",
    "EXPR [ (1, _221) (-1, _223) (-1, _224) -1 ]",
    "BLACKBOX::RANGE [_224]:8 bits []",
    "EXPR [ (-2, _27, _218) (-1, _221, _222) (1, _27) (256, _218) (-1, _223) 0 ]",
    "EXPR [ (-1, _222) (-1, _225) 128 ]",
    "EXPR [ (-2, _216, _218) (1, _216) (1, _218) (-1, _226) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(222))], q_c: 0 })], outputs: [Simple(Witness(227))]",
    "EXPR [ (1, _222, _227) (1, _228) -1 ]",
    "EXPR [ (1, _222, _228) 0 ]",
    "EXPR [ (2, _225, _226) (1, _222) (-1, _229) 0 ]",
    "EXPR [ (-1, _228) (-1, _230) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(223))], q_c: 0 })], outputs: [Simple(Witness(231))]",
    "EXPR [ (1, _223, _231) (1, _232) -1 ]",
    "EXPR [ (1, _223, _232) 0 ]",
    "EXPR [ (-2, _218, _223) (256, _218) (1, _223) (-1, _233) 0 ]",
    "EXPR [ (-1, _232) (-1, _234) 1 ]",
    "EXPR [ (1, _229, _230) (-1, _29) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(31))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(235)), Simple(Witness(236))]",
    "BLACKBOX::RANGE [_235]:1 bits []",
    "BLACKBOX::RANGE [_236]:7 bits []",
    "EXPR [ (1, _31) (-128, _235) (-1, _236) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(30))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(237)), Simple(Witness(238))]",
    "BLACKBOX::RANGE [_237]:1 bits []",
    "BLACKBOX::RANGE [_238]:7 bits []",
    "EXPR [ (1, _30) (-128, _237) (-1, _238) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(31), Witness(235))], linear_combinations: [(1, Witness(31)), (256, Witness(235))], q_c: 0 })], outputs: [Simple(Witness(239))]",
    "EXPR [ (-2, _31, _235) (1, _31) (256, _235) (-1, _240) 0 ]",
    "EXPR [ (1, _239, _240) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(30), Witness(237))], linear_combinations: [(1, Witness(30)), (256, Witness(237))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(240))], q_c: 0 })], outputs: [Simple(Witness(241)), Simple(Witness(242))]",
    "BLACKBOX::RANGE [_241]:8 bits []",
    "BLACKBOX::RANGE [_242]:8 bits []",
    "EXPR [ (1, _240) (-1, _242) (-1, _243) -1 ]",
    "BLACKBOX::RANGE [_243]:8 bits []",
    "EXPR [ (-2, _30, _237) (-1, _240, _241) (1, _30) (256, _237) (-1, _242) 0 ]",
    "EXPR [ (-1, _241) (-1, _244) 128 ]",
    "EXPR [ (-2, _235, _237) (1, _235) (1, _237) (-1, _245) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(241))], q_c: 0 })], outputs: [Simple(Witness(246))]",
    "EXPR [ (1, _241, _246) (1, _247) -1 ]",
    "EXPR [ (1, _241, _247) 0 ]",
    "EXPR [ (2, _244, _245) (1, _241) (-1, _248) 0 ]",
    "EXPR [ (-1, _247) (-1, _249) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(242))], q_c: 0 })], outputs: [Simple(Witness(250))]",
    "EXPR [ (1, _242, _250) (1, _251) -1 ]",
    "EXPR [ (1, _242, _251) 0 ]",
    "EXPR [ (-2, _237, _242) (256, _237) (1, _242) (-1, _252) 0 ]",
    "EXPR [ (-1, _251) (-1, _253) 1 ]",
    "EXPR [ (1, _248, _249) (-1, _32) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(34))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(254)), Simple(Witness(255))]",
    "BLACKBOX::RANGE [_254]:1 bits []",
    "BLACKBOX::RANGE [_255]:7 bits []",
    "EXPR [ (1, _34) (-128, _254) (-1, _255) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(33))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(256)), Simple(Witness(257))]",
    "BLACKBOX::RANGE [_256]:1 bits []",
    "BLACKBOX::RANGE [_257]:7 bits []",
    "EXPR [ (1, _33) (-128, _256) (-1, _257) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(34), Witness(254))], linear_combinations: [(1, Witness(34)), (256, Witness(254))], q_c: 0 })], outputs: [Simple(Witness(258))]",
    "EXPR [ (-2, _34, _254) (1, _34) (256, _254) (-1, _259) 0 ]",
    "EXPR [ (1, _258, _259) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(33), Witness(256))], linear_combinations: [(1, Witness(33)), (256, Witness(256))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(259))], q_c: 0 })], outputs: [Simple(Witness(260)), Simple(Witness(261))]",
    "BLACKBOX::RANGE [_260]:8 bits []",
    "BLACKBOX::RANGE [_261]:8 bits []",
    "EXPR [ (1, _259) (-1, _261) (-1, _262) -1 ]",
    "BLACKBOX::RANGE [_262]:8 bits []",
    "EXPR [ (-2, _33, _256) (-1, _259, _260) (1, _33) (256, _256) (-1, _261) 0 ]",
    "EXPR [ (-1, _260) (-1, _263) 128 ]",
    "EXPR [ (-2, _254, _256) (1, _254) (1, _256) (-1, _264) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(260))], q_c: 0 })], outputs: [Simple(Witness(265))]",
    "EXPR [ (1, _260, _265) (1, _266) -1 ]",
    "EXPR [ (1, _260, _266) 0 ]",
    "EXPR [ (2, _263, _264) (1, _260) (-1, _267) 0 ]",
    "EXPR [ (-1, _266) (-1, _268) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(261))], q_c: 0 })], outputs: [Simple(Witness(269))]",
    "EXPR [ (1, _261, _269) (1, _270) -1 ]",
    "EXPR [ (1, _261, _270) 0 ]",
    "EXPR [ (-2, _256, _261) (256, _256) (1, _261) (-1, _271) 0 ]",
    "EXPR [ (-1, _270) (-1, _272) 1 ]",
    "EXPR [ (1, _267, _268) (-1, _35) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(37))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(273)), Simple(Witness(274))]",
    "BLACKBOX::RANGE [_273]:1 bits []",
    "BLACKBOX::RANGE [_274]:7 bits []",
    "EXPR [ (1, _37) (-128, _273) (-1, _274) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(36))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(275)), Simple(Witness(276))]",
    "BLACKBOX::RANGE [_275]:1 bits []",
    "BLACKBOX::RANGE [_276]:7 bits []",
    "EXPR [ (1, _36) (-128, _275) (-1, _276) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(37), Witness(273))], linear_combinations: [(1, Witness(37)), (256, Witness(273))], q_c: 0 })], outputs: [Simple(Witness(277))]",
    "EXPR [ (-2, _37, _273) (1, _37) (256, _273) (-1, _278) 0 ]",
    "EXPR [ (1, _277, _278) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(36), Witness(275))], linear_combinations: [(1, Witness(36)), (256, Witness(275))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(278))], q_c: 0 })], outputs: [Simple(Witness(279)), Simple(Witness(280))]",
    "BLACKBOX::RANGE [_279]:8 bits []",
    "BLACKBOX::RANGE [_280]:8 bits []",
    "EXPR [ (1, _278) (-1, _280) (-1, _281) -1 ]",
    "BLACKBOX::RANGE [_281]:8 bits []",
    "EXPR [ (-2, _36, _275) (-1, _278, _279) (1, _36) (256, _275) (-1, _280) 0 ]",
    "EXPR [ (-1, _279) (-1, _282) 128 ]",
    "EXPR [ (-2, _273, _275) (1, _273) (1, _275) (-1, _283) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(279))], q_c: 0 })], outputs: [Simple(Witness(284))]",
    "EXPR [ (1, _279, _284) (1, _285) -1 ]",
    "EXPR [ (1, _279, _285) 0 ]",
    "EXPR [ (2, _282, _283) (1, _279) (-1, _286) 0 ]",
    "EXPR [ (-1, _285) (-1, _287) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(280))], q_c: 0 })], outputs: [Simple(Witness(288))]",
    "EXPR [ (1, _280, _288) (1, _289) -1 ]",
    "EXPR [ (1, _280, _289) 0 ]",
    "EXPR [ (-2, _275, _280) (256, _275) (1, _280) (-1, _290) 0 ]",
    "EXPR [ (-1, _289) (-1, _291) 1 ]",
    "EXPR [ (1, _286, _287) (-1, _38) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(40))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(292)), Simple(Witness(293))]",
    "BLACKBOX::RANGE [_292]:1 bits []",
    "BLACKBOX::RANGE [_293]:7 bits []",
    "EXPR [ (1, _40) (-128, _292) (-1, _293) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(39))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(294)), Simple(Witness(295))]",
    "BLACKBOX::RANGE [_294]:1 bits []",
    "BLACKBOX::RANGE [_295]:7 bits []",
    "EXPR [ (1, _39) (-128, _294) (-1, _295) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(40), Witness(292))], linear_combinations: [(1, Witness(40)), (256, Witness(292))], q_c: 0 })], outputs: [Simple(Witness(296))]",
    "EXPR [ (-2, _40, _292) (1, _40) (256, _292) (-1, _297) 0 ]",
    "EXPR [ (1, _296, _297) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(39), Witness(294))], linear_combinations: [(1, Witness(39)), (256, Witness(294))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(297))], q_c: 0 })], outputs: [Simple(Witness(298)), Simple(Witness(299))]",
    "BLACKBOX::RANGE [_298]:8 bits []",
    "BLACKBOX::RANGE [_299]:8 bits []",
    "EXPR [ (1, _297) (-1, _299) (-1, _300) -1 ]",
    "BLACKBOX::RANGE [_300]:8 bits []",
    "EXPR [ (-2, _39, _294) (-1, _297, _298) (1, _39) (256, _294) (-1, _299) 0 ]",
    "EXPR [ (-1, _298) (-1, _301) 128 ]",
    "EXPR [ (-2, _292, _294) (1, _292) (1, _294) (-1, _302) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(298))], q_c: 0 })], outputs: [Simple(Witness(303))]",
    "EXPR [ (1, _298, _303) (1, _304) -1 ]",
    "EXPR [ (1, _298, _304) 0 ]",
    "EXPR [ (2, _301, _302) (1, _298) (-1, _305) 0 ]",
    "EXPR [ (-1, _304) (-1, _306) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(299))], q_c: 0 })], outputs: [Simple(Witness(307))]",
    "EXPR [ (1, _299, _307) (1, _308) -1 ]",
    "EXPR [ (1, _299, _308) 0 ]",
    "EXPR [ (-2, _294, _299) (256, _294) (1, _299) (-1, _309) 0 ]",
    "EXPR [ (-1, _308) (-1, _310) 1 ]",
    "EXPR [ (1, _305, _306) (-1, _41) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(43))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(311)), Simple(Witness(312))]",
    "BLACKBOX::RANGE [_311]:1 bits []",
    "BLACKBOX::RANGE [_312]:7 bits []",
    "EXPR [ (1, _43) (-128, _311) (-1, _312) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(42))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 128 })], outputs: [Simple(Witness(313)), Simple(Witness(314))]",
    "BLACKBOX::RANGE [_313]:1 bits []",
    "BLACKBOX::RANGE [_314]:7 bits []",
    "EXPR [ (1, _42) (-128, _313) (-1, _314) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [(-2, Witness(43), Witness(311))], linear_combinations: [(1, Witness(43)), (256, Witness(311))], q_c: 0 })], outputs: [Simple(Witness(315))]",
    "EXPR [ (-2, _43, _311) (1, _43) (256, _311) (-1, _316) 0 ]",
    "EXPR [ (1, _315, _316) -1 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [(-2, Witness(42), Witness(313))], linear_combinations: [(1, Witness(42)), (256, Witness(313))], q_c: 0 }), Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(316))], q_c: 0 })], outputs: [Simple(Witness(317)), Simple(Witness(318))]",
    "BLACKBOX::RANGE [_317]:8 bits []",
    "BLACKBOX::RANGE [_318]:8 bits []",
    "EXPR [ (1, _316) (-1, _318) (-1, _319) -1 ]",
    "BLACKBOX::RANGE [_319]:8 bits []",
    "EXPR [ (-2, _42, _313) (-1, _316, _317) (1, _42) (256, _313) (-1, _318) 0 ]",
    "EXPR [ (-1, _317) (-1, _320) 128 ]",
    "EXPR [ (-2, _311, _313) (1, _311) (1, _313) (-1, _321) 0 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(317))], q_c: 0 })], outputs: [Simple(Witness(322))]",
    "EXPR [ (1, _317, _322) (1, _323) -1 ]",
    "EXPR [ (1, _317, _323) 0 ]",
    "EXPR [ (2, _320, _321) (1, _317) (-1, _324) 0 ]",
    "EXPR [ (-1, _323) (-1, _325) 1 ]",
    "BRILLIG CALL func 1: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(318))], q_c: 0 })], outputs: [Simple(Witness(326))]",
    "EXPR [ (1, _318, _326) (1, _327) -1 ]",
    "EXPR [ (1, _318, _327) 0 ]",
    "EXPR [ (-2, _313, _318) (256, _313) (1, _318) (-1, _328) 0 ]",
    "EXPR [ (-1, _327) (-1, _329) 1 ]",
    "EXPR [ (1, _324, _325) (-1, _44) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]",
    "unconstrained func 1",
    "[Const { destination: Direct(21), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(20), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(21), offset_address: Direct(20) }, Const { destination: Direct(2), bit_size: Field, value: 0 }, BinaryFieldOp { destination: Direct(3), op: Equals, lhs: Direct(0), rhs: Direct(2) }, JumpIf { condition: Direct(3), location: 8 }, Const { destination: Direct(1), bit_size: Field, value: 1 }, BinaryFieldOp { destination: Direct(0), op: Div, lhs: Direct(1), rhs: Direct(0) }, Stop { return_data: HeapVector { pointer: Direct(20), size: Direct(21) } }]"
  ],
  "debug_symbols": "pdfdSiNpFIXhe8mxB9lrrfrzVoZBosYmEKJEHRjEe5+Y/dZ098HA0H20O6brNYX7ofJ9bB739+/f7g6np+fXze0fH5v78+F4PHy7Oz4/7N4Oz6fLTz8+bzbry7u3835/+dHmh/cvV73szvvT2+b29H483mz+2h3fr//p9WV3us633fny7vZmsz89XuYl+HQ47r/+9Xnz/ertf19aXri4Mvx7+fD/rx+0Xj/Mv3L9998/6leuH7NeP21/7/dP00/X/3l5tXs4nH/6i20ybG59s8nYY+ox91iuY9j2qB7q4R7p0ZWhK0NXhq4MXRm7MnZl7MrYlbErY1fGroxdGbsydmXqytSVqStTV6ZLZbiMrkxdmboydWXqytyVuStzV+auzP1Z5q7MXZm7Mndl7srSlaUrS1eWrixdWbqydGXpytKVpSu13TKLKaaZfVu1HXg9MifmzKRX9Ipe0St6FSa9olf0il7REz3REz3REz3REz3REz3RMz3TMz3TM/dreqZneqZneqEXeqEXeuHzsenFqhe7Xix7se3Fuhf7Xix8sfHFyhc7Xyx9sfXF2hd7Xyx+sfnF6he7XyP3y/YX61/sfwGgEFAQKAwUCAoFNfH5cFBAKCQUFAoLBYZCQ8Gh8FCAKEQUJAoTBYpCRcGicFHAKGTUwv1io8BR6Ch4FD6ED+FD+BA+tA1zYI7MiTkz6eFD+BA+hA/hQ/gQPoQP4UP4ED6ED+FD+JD6foUP4UP4ED6ED+FD+BA+hA+Zz4cP4UP4ED6ED+FD+BA+hA/hQ/gQPoQP4UP4ED6ED+FD+NDA/eJD+BA+hA/hQ/gQPoQP4UM8HIQP4UP4ED6ED+FD+BA+hA/hQ/gQPoQP4UP4ED6ED+FD+NDM/eJD+BA+hA/hQ/gQPoQP4UM8OoQP4UP4ED6ED+PD+DA+jA/jw/gwPowP48P4MD6MD+PD+HD1/RofxofxYXwYH8aH8WF8GB/m+WF8GB/Gh/FhfBgfxofxYXwYH8aH8WF8GB/Gh/FhfBgfxofD/eLD+DA+jA/jw/gwPowP48M8P4wP48P4MD6MD+PD+DA+jA/jw/gwPowP48P4MD6MD+PD+DBfo4wP48P4MD6MD+PD+DA+jA/z/DA+jA/jw/gwPowP48P4MD6MD+PD+DA+jA/jI/gIPoKP4CN8vwo+go/gI/gIPoKP4CP4CD7C8yP4CD6Cj+Aj+Ag+go/gI/gIPoKP4CP4CD6Cj+Aj+Ag+go/w/Sr4CD6Cj+Aj+Ag+go/gI/gIz4+sJ4n1KLGeJdbDBD6Cj+Aj+Ag+go/gI/gIPoKP4CP4CD6Cj+AjfL/KuJ506OEj+Ag+go/gI/gIPsLzI/jItB6d6OEj+Ag+go/gI/gIPoKP4CPzehajh4/gI/gIPoKPXL9ffX6dEM+H3f1x/9oH86f308MP5/S3v1/Wd9aT/Mv5+WH/+H7ef50Qr+9dzoz/AA==",
  "file_map": {
    "50": {
      "source": "struct SignedDivOp {\n    lhs: i8,\n    rhs: i8,\n    result: i8,\n}\n\nfn main(ops: [SignedDivOp; 15]) {\n    for i in 0..15 {\n        assert_eq(ops[i].lhs / ops[i].rhs, ops[i].result);\n    }\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_invert"
  ]
}
