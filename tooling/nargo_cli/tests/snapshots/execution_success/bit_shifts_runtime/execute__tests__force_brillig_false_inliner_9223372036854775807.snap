---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "x",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 64
        },
        "visibility": "private"
      },
      {
        "name": "y",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 8
        },
        "visibility": "private"
      },
      {
        "name": "z",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 16
        },
        "visibility": "private"
      },
      {
        "name": "u",
        "type": {
          "kind": "integer",
          "sign": "signed",
          "width": 64
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "14514982005979867414": {
        "error_kind": "string",
        "string": "attempt to bit-shift with overflow"
      }
    }
  },
  "bytecode": "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",
  "debug_symbols": "pdjLbhpJFIDhd2HtRZ9bXfIqo1FEHBIhIWwRO9LIyrtPVZ/+HWeRTbPh/DY5X2ToAuO3w9fTl9fvn8/Xb08/Dp/+eTt8uZ0vl/P3z5enx+PL+ek6vvv26+HAl59fbqfT+Nbhw/1j6/l4O11fDp+ur5fLw+Hn8fK6/qMfz8frOl+Ot3Hv8nA4Xb+OOcBv58tp1q+H39vL31dlsW1Z5Pd67Nqve/ZN2Ld23777nv3etn1d7twX2bGvGuzbvft7Hn/tddu3XT+/dnnfj/v2d11/ps7+ruvnw77bjn1fePxddM++8f+773n+Pd73y3Ln/p7Hz5uy3+7c73uuv1g4fyF37uuexy/eX3/C9lw/4YX90Pv2dz3/UXn+o927X3bsl4XHr0jct7/r+SvG8192vX983O9/7P87vjo+nm9/vOMffLxlPBxivS3rbV1v23rb11tZckgOzWE5EpAUJAlJQxKRVDQVTUVT0VQ0FU1FU9FUNBVNxVKxVCwVS8VSsVQsFUvFUrFUPBVPxVPxVDwVT8VT8VQ8FU8lUomhjBeNGMr43SMsh+eIHCVHzdFyDGVcrGUo4zW7SA7NYTk8R+QoOWqOlqOvo6ZSU6mp1FRqKnUo43DWoYz32FpztBx9HW3JITk0x1DGRdWG0seIHCVHzTEfl3FVtp6zL9uUbeo2bZu+zdhm2Wbd5ub1zZNlIYRQwggngihEJRqBLMiCLMiCLMiCLMiCLMiCrMiKrMiKrMiKrMiKrMiKbMiGbMiGbMiGbMiGbMiG7MiO7MiO7MiO7MiO7MiOHMiBHMiBHMiBHMiBHMiBXJALckEuyAW5IBfkglyQC/I8VLK+nk1ZZyhhhBNBFKISjehbzIOWgdyQG3JDbsgNuSE35IbckTtyR+7IHbkjd+SO3JH7JuuyEEIoYYQTQRSiEo1AFmRBFmRBFmRBFmRBFmRBVmRFVmRFVmRFVmRFVmRFNmRDNmRDNmRDNmRDNmRDdmRHdmRHdmRHdmRHdmRHDuRADuT1DNqMKZcZQRSiEo3oW6xncI0p1xlTbjOMcCKIQlSiEX2L9QyuIQRyRa7IFbkiV+SKXJEbckNuyA25ITfkhtyQG3JD7sgduSN35I68nsE+o8wP/TMq0YieYfMMZgihhBFOBFGISjQCWZAFWZAFWZAFWZAFWZAFWZEVWZEVWZEVWZEVWZEV2ZAN2ZAN2ZAN2ZAN2ZAN2ZEd2ZEd2ZEd2ZEd2ZEdOZADOZADOZADOZADOZADuSAX5IJckAvyPIO6/pY8ZZ1RiUb0LeYZzBBCCSOcCAK5IlfkeQbV5m/lCyGEEkY4EcSUfcaUY0Yj+hbzDGYIoYQRTgRRCOSO3DfZl4UQQokplxlTrjOCKEQlGtG3WM/gGkIoMeU2Y8p9RhCFqEQj+hbrGVxDCCWMQFZkRVZkRVZkQzZkQzZkQ55n0ObH4p/H2/n45XL6kX91/vZ6ffzwR+iX/565hz9TP9+eHk9fX2+n+fF1vW98oP0f",
  "file_map": {
    "50": {
      "source": "fn main(x: u64, y: u8, z: i16, u: i64) {\n    // runtime shifts on compile-time known values\n    assert(64 << y == 128);\n    assert(64 >> y == 32);\n    // runtime shifts on runtime values\n    assert(x << y == 128);\n    assert(x >> y == 32);\n    // regression tests for issue #8176\n    assert(u >> (x as u8) == 0);\n    assert(z >> (x as u8) == 0);\n\n    // Bit-shift with signed integers\n    let mut a: i8 = y as i8;\n    let mut b: i8 = x as i8;\n    assert(b << 1 == -128);\n    assert(b >> 2 == 16);\n    assert(b >> y == 32);\n    a = -a;\n    assert(a << 7 == -128);\n    assert(a << y == -2);\n\n    assert(x >> (x as u8) == 0);\n\n    assert_eq(z >> 3, -97);\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient",
    "directive_to_radix",
    "directive_invert"
  ]
}
