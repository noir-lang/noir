---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "i",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "unsigned",
        "width": 32
      },
      "visibility": "public"
    },
    "error_types": {
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : _1",
    "private parameters indices : [_0]",
    "public parameters indices : []",
    "return value indices : [_1]",
    "BLACKBOX::RANGE [(_0, 1)] []",
    "EXPR [ (-1, _0) (1, _1) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(2), bit_size: Integer(U32), value: 1 }, Const { destination: Direct(1), bit_size: Integer(U32), value: 32840 }, Const { destination: Direct(0), bit_size: Integer(U32), value: 3 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(32840), size_address: Relative(2), offset_address: Relative(3) }, Const { destination: Relative(1), bit_size: Integer(U32), value: 32840 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Mov { destination: Relative(2), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, IndirectConst { destination_pointer: Relative(2), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Relative(4), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Mov { destination: Direct(32771), source: Relative(1) }, Mov { destination: Direct(32772), source: Relative(4) }, Mov { destination: Direct(32773), source: Relative(3) }, Call { location: 46 }, Mov { destination: Relative(1), source: Relative(2) }, Call { location: 57 }, Call { location: 75 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(1), rhs: Direct(2) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 32840 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 0 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(5) }, Load { destination: Relative(7), source_pointer: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(6) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Mov { destination: Direct(32771), source: Relative(8) }, Mov { destination: Direct(32772), source: Relative(9) }, Mov { destination: Direct(32773), source: Relative(10) }, Call { location: 46 }, Const { destination: Relative(5), bit_size: Integer(U32), value: 1 }, Const { destination: Relative(6), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(2), rhs: Relative(5) }, Load { destination: Relative(7), source_pointer: Relative(8) }, BinaryIntOp { destination: Relative(8), op: Add, bit_size: U32, lhs: Relative(7), rhs: Direct(2) }, BinaryIntOp { destination: Relative(9), op: Add, bit_size: U32, lhs: Relative(3), rhs: Relative(6) }, Const { destination: Relative(10), bit_size: Integer(U32), value: 0 }, Mov { destination: Direct(32771), source: Relative(8) }, Mov { destination: Direct(32772), source: Relative(9) }, Mov { destination: Direct(32773), source: Relative(10) }, Call { location: 46 }, Const { destination: Relative(2), bit_size: Integer(U32), value: 32840 }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, Stop { return_data: HeapVector { pointer: Relative(2), size: Relative(3) } }, BinaryIntOp { destination: Direct(32775), op: Add, bit_size: U32, lhs: Direct(32771), rhs: Direct(32773) }, Mov { destination: Direct(32776), source: Direct(32771) }, Mov { destination: Direct(32777), source: Direct(32772) }, BinaryIntOp { destination: Direct(32778), op: Equals, bit_size: U32, lhs: Direct(32776), rhs: Direct(32775) }, JumpIf { condition: Direct(32778), location: 56 }, Load { destination: Direct(32774), source_pointer: Direct(32776) }, Store { destination_pointer: Direct(32777), source: Direct(32774) }, BinaryIntOp { destination: Direct(32776), op: Add, bit_size: U32, lhs: Direct(32776), rhs: Direct(2) }, BinaryIntOp { destination: Direct(32777), op: Add, bit_size: U32, lhs: Direct(32777), rhs: Direct(2) }, Jump { location: 49 }, Return, Mov { destination: Direct(32835), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, IndirectConst { destination_pointer: Direct(32835), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32836), op: Add, bit_size: U32, lhs: Direct(32835), rhs: Direct(2) }, Mov { destination: Direct(32836), source: Direct(1) }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(2) }, IndirectConst { destination_pointer: Direct(32836), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32837), op: Add, bit_size: U32, lhs: Direct(32836), rhs: Direct(2) }, Mov { destination: Direct(32837), source: Direct(1) }, Const { destination: Direct(32838), bit_size: Integer(U32), value: 3 }, BinaryIntOp { destination: Direct(1), op: Add, bit_size: U32, lhs: Direct(1), rhs: Direct(32838) }, IndirectConst { destination_pointer: Direct(32837), bit_size: Integer(U32), value: 1 }, BinaryIntOp { destination: Direct(32838), op: Add, bit_size: U32, lhs: Direct(32837), rhs: Direct(2) }, Mov { destination: Direct(32839), source: Direct(32838) }, Store { destination_pointer: Direct(32839), source: Direct(32835) }, BinaryIntOp { destination: Direct(32839), op: Add, bit_size: U32, lhs: Direct(32839), rhs: Direct(2) }, Store { destination_pointer: Direct(32839), source: Direct(32836) }, Return, Call { location: 86 }, Load { destination: Relative(2), source_pointer: Direct(32837) }, Const { destination: Relative(3), bit_size: Integer(U32), value: 0 }, BinaryIntOp { destination: Relative(4), op: Equals, bit_size: U32, lhs: Relative(3), rhs: Relative(2) }, Not { destination: Relative(4), source: Relative(4), bit_size: U1 }, JumpIf { condition: Relative(4), location: 82 }, Call { location: 92 }, BinaryIntOp { destination: Relative(2), op: Add, bit_size: U32, lhs: Relative(2), rhs: Direct(2) }, Store { destination_pointer: Direct(32837), source: Relative(2) }, Mov { destination: Relative(1), source: Direct(32837) }, Return, Const { destination: Direct(32772), bit_size: Integer(U32), value: 30720 }, BinaryIntOp { destination: Direct(32771), op: LessThan, bit_size: U32, lhs: Direct(0), rhs: Direct(32772) }, JumpIf { condition: Direct(32771), location: 91 }, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 17843811134343075018 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return, IndirectConst { destination_pointer: Direct(1), bit_size: Integer(U64), value: 12049594436772143978 }, Trap { revert_data: HeapVector { pointer: Direct(1), size: Direct(2) } }, Return]"
  ],
  "debug_symbols": "nZLBDoMgDIbfpWcPTtSpr7IsBrEaEgIEYclifPehEaeHJQun0v58LaH/DD12bmy5HNQEzWOGznAh+NgKxajlSvrqvCQQ0tYaRF+Ck+4pTQ1KC410QiTwosJtlyZN5RYtNV5NE0DZ++gbDlzgelqSL53+Rm9lvcO3qjzw4n+ekMCTOobPysDnaQxf5cf7ixj+fsyvshj+9H/kwj99Rhk3l41DCk2+rO0Mp53A3QWDk+xkCvvWQQm20UYx7J3Btd2m+QEf",
  "file_map": {
    "50": {
      "source": "global G_A: [[u128; 0]; 2] = [[], []];\nglobal G_S: [[u128; 0]] = [[], []];\nfn main(i: u32) -> pub u32 {\n    let _a = unsafe { func_3(G_A[i])[1] };\n    let _s = unsafe { func_3(G_S[i])[1] };\n    i\n}\nunconstrained fn func_3(_a: [u128; 0]) -> [[u128; 0]; 2] {\n    G_A\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "func_3"
  ]
}
