---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "[noir_version]",
  "hash": "[hash]",
  "abi": {
    "parameters": [
      {
        "name": "foos",
        "type": {
          "kind": "array",
          "length": 2,
          "type": {
            "kind": "struct",
            "path": "Foo",
            "fields": [
              {
                "name": "x",
                "type": {
                  "kind": "integer",
                  "sign": "unsigned",
                  "width": 32
                }
              },
              {
                "name": "y",
                "type": {
                  "kind": "array",
                  "length": 10,
                  "type": {
                    "kind": "integer",
                    "sign": "unsigned",
                    "width": 32
                  }
                }
              }
            ]
          }
        },
        "visibility": "databus"
      },
      {
        "name": "values",
        "type": {
          "kind": "array",
          "length": 3,
          "type": {
            "kind": "array",
            "length": 2,
            "type": {
              "kind": "array",
              "length": 2,
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 32
              }
            }
          }
        },
        "visibility": "databus"
      },
      {
        "name": "zero",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      },
      {
        "name": "one",
        "type": {
          "kind": "integer",
          "sign": "unsigned",
          "width": 32
        },
        "visibility": "private"
      }
    ],
    "return_type": {
      "abi_type": {
        "kind": "integer",
        "sign": "unsigned",
        "width": 32
      },
      "visibility": "public"
    },
    "error_types": {
      "5019202896831570965": {
        "error_kind": "string",
        "string": "attempt to add with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      }
    }
  },
  "bytecode": [
    "func 0",
    "current witness index : 131",
    "private parameters indices : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]",
    "public parameters indices : []",
    "return value indices : [36]",
    "BLACKBOX::RANGE [(_0, 32)] []",
    "BLACKBOX::RANGE [(_1, 32)] []",
    "BLACKBOX::RANGE [(_2, 32)] []",
    "BLACKBOX::RANGE [(_3, 32)] []",
    "BLACKBOX::RANGE [(_4, 32)] []",
    "BLACKBOX::RANGE [(_5, 32)] []",
    "BLACKBOX::RANGE [(_6, 32)] []",
    "BLACKBOX::RANGE [(_7, 32)] []",
    "BLACKBOX::RANGE [(_8, 32)] []",
    "BLACKBOX::RANGE [(_9, 32)] []",
    "BLACKBOX::RANGE [(_10, 32)] []",
    "BLACKBOX::RANGE [(_11, 32)] []",
    "BLACKBOX::RANGE [(_12, 32)] []",
    "BLACKBOX::RANGE [(_13, 32)] []",
    "BLACKBOX::RANGE [(_14, 32)] []",
    "BLACKBOX::RANGE [(_15, 32)] []",
    "BLACKBOX::RANGE [(_16, 32)] []",
    "BLACKBOX::RANGE [(_17, 32)] []",
    "BLACKBOX::RANGE [(_18, 32)] []",
    "BLACKBOX::RANGE [(_19, 32)] []",
    "BLACKBOX::RANGE [(_20, 32)] []",
    "BLACKBOX::RANGE [(_21, 32)] []",
    "BLACKBOX::RANGE [(_22, 32)] []",
    "BLACKBOX::RANGE [(_23, 32)] []",
    "BLACKBOX::RANGE [(_24, 32)] []",
    "BLACKBOX::RANGE [(_25, 32)] []",
    "BLACKBOX::RANGE [(_26, 32)] []",
    "BLACKBOX::RANGE [(_27, 32)] []",
    "BLACKBOX::RANGE [(_28, 32)] []",
    "BLACKBOX::RANGE [(_29, 32)] []",
    "BLACKBOX::RANGE [(_30, 32)] []",
    "BLACKBOX::RANGE [(_31, 32)] []",
    "BLACKBOX::RANGE [(_32, 32)] []",
    "BLACKBOX::RANGE [(_33, 32)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(34))], q_c: 4294967294 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(37)), Simple(Witness(38))]",
    "BLACKBOX::RANGE [(_38, 32)] []",
    "EXPR [ (1, _34) (-4294967296, _37) (-1, _38) 4294967294 ]",
    "EXPR [ (-1, _37) 0 ]",
    "EXPR [ (-1, _39) 0 ]",
    "EXPR [ (-1, _40) 1 ]",
    "EXPR [ (-1, _41) 11 ]",
    "EXPR [ (-1, _42) 12 ]",
    "EXPR [ (-1, _43) 22 ]",
    "INIT (id: 2, len: 5, witnesses: [_39, _40, _41, _42, _43])",
    "EXPR [ (2, _34) (-1, _44) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _44) 0 ], value: EXPR [ (1, _45) 0 ]) ",
    "INIT CALLDATA 0 (id: 3, len: 34, witnesses: [_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33])",
    "MEM (id: 3, read at: EXPR [ (1, _45) 0 ], value: EXPR [ (1, _46) 0 ]) ",
    "EXPR [ (1, _44) (-1, _47) 1 ]",
    "MEM (id: 2, read at: EXPR [ (1, _47) 0 ], value: EXPR [ (1, _48) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _48) 0 ], value: EXPR [ (1, _49) 0 ]) ",
    "EXPR [ (1, _48) (-1, _50) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _50) 0 ], value: EXPR [ (1, _51) 0 ]) ",
    "EXPR [ (1, _50) (-1, _52) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _52) 0 ], value: EXPR [ (1, _53) 0 ]) ",
    "EXPR [ (1, _52) (-1, _54) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _54) 0 ], value: EXPR [ (1, _55) 0 ]) ",
    "EXPR [ (1, _54) (-1, _56) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _56) 0 ], value: EXPR [ (1, _57) 0 ]) ",
    "EXPR [ (1, _56) (-1, _58) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _58) 0 ], value: EXPR [ (1, _59) 0 ]) ",
    "EXPR [ (1, _58) (-1, _60) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _60) 0 ], value: EXPR [ (1, _61) 0 ]) ",
    "EXPR [ (1, _60) (-1, _62) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _62) 0 ], value: EXPR [ (1, _63) 0 ]) ",
    "EXPR [ (1, _62) (-1, _64) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _64) 0 ], value: EXPR [ (1, _65) 0 ]) ",
    "EXPR [ (1, _64) (-1, _66) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _66) 0 ], value: EXPR [ (1, _67) 0 ]) ",
    "EXPR [ (1, _46) (-1, _68) 1 ]",
    "BLACKBOX::RANGE [(_68, 32)] []",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(35))], q_c: 4294967294 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(69)), Simple(Witness(70))]",
    "BLACKBOX::RANGE [(_70, 32)] []",
    "EXPR [ (1, _35) (-4294967296, _69) (-1, _70) 4294967294 ]",
    "EXPR [ (-1, _69) 0 ]",
    "EXPR [ (2, _35) (-1, _71) 0 ]",
    "MEM (id: 2, read at: EXPR [ (1, _71) 0 ], value: EXPR [ (1, _72) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _72) 0 ], value: EXPR [ (1, _73) 0 ]) ",
    "EXPR [ (1, _71) (-1, _74) 1 ]",
    "MEM (id: 2, read at: EXPR [ (1, _74) 0 ], value: EXPR [ (1, _75) 0 ]) ",
    "MEM (id: 3, read at: EXPR [ (1, _75) 0 ], value: EXPR [ (1, _76) 0 ]) ",
    "EXPR [ (1, _75) (-1, _77) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _77) 0 ], value: EXPR [ (1, _78) 0 ]) ",
    "EXPR [ (1, _77) (-1, _79) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _79) 0 ], value: EXPR [ (1, _80) 0 ]) ",
    "EXPR [ (1, _79) (-1, _81) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _81) 0 ], value: EXPR [ (1, _82) 0 ]) ",
    "EXPR [ (1, _81) (-1, _83) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _83) 0 ], value: EXPR [ (1, _84) 0 ]) ",
    "EXPR [ (1, _83) (-1, _85) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _85) 0 ], value: EXPR [ (1, _86) 0 ]) ",
    "EXPR [ (1, _85) (-1, _87) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _87) 0 ], value: EXPR [ (1, _88) 0 ]) ",
    "EXPR [ (1, _87) (-1, _89) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _89) 0 ], value: EXPR [ (1, _90) 0 ]) ",
    "EXPR [ (1, _89) (-1, _91) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _91) 0 ], value: EXPR [ (1, _92) 0 ]) ",
    "EXPR [ (1, _91) (-1, _93) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _93) 0 ], value: EXPR [ (1, _94) 0 ]) ",
    "EXPR [ (1, _68) (-1, _73) 0 ]",
    "EXPR [ (1, _55) (-1, _95) 2 ]",
    "BLACKBOX::RANGE [(_95, 32)] []",
    "EXPR [ (-1, _84) (1, _95) 0 ]",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(34))], q_c: 4294967293 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(96)), Simple(Witness(97))]",
    "BLACKBOX::RANGE [(_97, 32)] []",
    "EXPR [ (1, _34) (-4294967296, _96) (-1, _97) 4294967293 ]",
    "EXPR [ (-1, _96) 0 ]",
    "EXPR [ (-1, _98) 4 ]",
    "EXPR [ (-1, _99) 8 ]",
    "INIT (id: 4, len: 4, witnesses: [_39, _98, _99, _42])",
    "MEM (id: 4, read at: EXPR [ (1, _34) 0 ], value: EXPR [ (1, _100) 0 ]) ",
    "EXPR [ (1, _100) (-1, _101) 22 ]",
    "MEM (id: 3, read at: EXPR [ (1, _101) 0 ], value: EXPR [ (1, _102) 0 ]) ",
    "EXPR [ (1, _101) (-1, _103) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _103) 0 ], value: EXPR [ (1, _104) 0 ]) ",
    "EXPR [ (1, _103) (-1, _105) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _105) 0 ], value: EXPR [ (1, _106) 0 ]) ",
    "EXPR [ (1, _105) (-1, _107) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _107) 0 ], value: EXPR [ (1, _108) 0 ]) ",
    "INIT (id: 5, len: 4, witnesses: [_102, _104, _106, _108])",
    "EXPR [ (-1, _109) 2 ]",
    "INIT (id: 6, len: 3, witnesses: [_39, _109, _98])",
    "MEM (id: 6, read at: EXPR [ (1, _35) 0 ], value: EXPR [ (1, _110) 0 ]) ",
    "MEM (id: 5, read at: EXPR [ (1, _110) 0 ], value: EXPR [ (1, _111) 0 ]) ",
    "EXPR [ (1, _110) (-1, _112) 1 ]",
    "MEM (id: 5, read at: EXPR [ (1, _112) 0 ], value: EXPR [ (1, _113) 0 ]) ",
    "INIT (id: 7, len: 2, witnesses: [_111, _113])",
    "MEM (id: 7, read at: EXPR [ (1, _34) 0 ], value: EXPR [ (1, _114) 0 ]) ",
    "BRILLIG CALL func 0: inputs: [Single(Expression { mul_terms: [], linear_combinations: [(1, Witness(35))], q_c: 4294967293 }), Single(Expression { mul_terms: [], linear_combinations: [], q_c: 4294967296 })], outputs: [Simple(Witness(115)), Simple(Witness(116))]",
    "BLACKBOX::RANGE [(_116, 32)] []",
    "EXPR [ (1, _35) (-4294967296, _115) (-1, _116) 4294967293 ]",
    "EXPR [ (-1, _115) 0 ]",
    "MEM (id: 4, read at: EXPR [ (1, _35) 0 ], value: EXPR [ (1, _117) 0 ]) ",
    "EXPR [ (1, _117) (-1, _118) 22 ]",
    "MEM (id: 3, read at: EXPR [ (1, _118) 0 ], value: EXPR [ (1, _119) 0 ]) ",
    "EXPR [ (1, _118) (-1, _120) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _120) 0 ], value: EXPR [ (1, _121) 0 ]) ",
    "EXPR [ (1, _120) (-1, _122) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _122) 0 ], value: EXPR [ (1, _123) 0 ]) ",
    "EXPR [ (1, _122) (-1, _124) 1 ]",
    "MEM (id: 3, read at: EXPR [ (1, _124) 0 ], value: EXPR [ (1, _125) 0 ]) ",
    "INIT (id: 8, len: 4, witnesses: [_119, _121, _123, _125])",
    "INIT (id: 9, len: 3, witnesses: [_39, _109, _98])",
    "MEM (id: 9, read at: EXPR [ (1, _34) 0 ], value: EXPR [ (1, _126) 0 ]) ",
    "MEM (id: 8, read at: EXPR [ (1, _126) 0 ], value: EXPR [ (1, _127) 0 ]) ",
    "EXPR [ (1, _126) (-1, _128) 1 ]",
    "MEM (id: 8, read at: EXPR [ (1, _128) 0 ], value: EXPR [ (1, _129) 0 ]) ",
    "INIT (id: 10, len: 2, witnesses: [_127, _129])",
    "MEM (id: 10, read at: EXPR [ (1, _35) 0 ], value: EXPR [ (1, _130) 0 ]) ",
    "EXPR [ (1, _114) (-1, _130) 0 ]",
    "EXPR [ (1, _46) (1, _76) (-1, _131) 0 ]",
    "BLACKBOX::RANGE [(_131, 32)] []",
    "EXPR [ (1, _36) (-1, _131) 0 ]",
    "unconstrained func 0",
    "[Const { destination: Direct(10), bit_size: Integer(U32), value: 2 }, Const { destination: Direct(11), bit_size: Integer(U32), value: 0 }, CalldataCopy { destination_address: Direct(0), size_address: Direct(10), offset_address: Direct(11) }, BinaryFieldOp { destination: Direct(2), op: IntegerDiv, lhs: Direct(0), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Mul, lhs: Direct(2), rhs: Direct(1) }, BinaryFieldOp { destination: Direct(1), op: Sub, lhs: Direct(0), rhs: Direct(1) }, Mov { destination: Direct(0), source: Direct(2) }, Stop { return_data: HeapVector { pointer: Direct(11), size: Direct(10) } }]"
  ],
  "debug_symbols": "ldjBauMwFEDRf9E6Cz09PVnKrwxDcRKnGIwTnGRgCP33pqWGErk1dymJo81FstHdHbrd7fWlH4+ni9v+ubvhtG+v/Wl8jO5O8+fc5dyOH8PLtZ2ubitFNq4bD24bvLxt3LEfOrc1//Z347RQET0WgkXAQrGIWBgWCYsGC9w84uaGmxtubri54eaGmxtubri54eaGmxtunnDzhJsn3Dzh5gk3T7h5ws0Tbp5w87TavHkSjcdCsAhYKBYRi8XmwZdZSH4WCYsGi4xFoSJ7LASLgIViEbHAzTNunnHzjJtn3Lzg5gU3L7h5wc0Lbl5w84KbF9y84OZl7W4P/kmIX46uzUwsVUQ4CSukCRVRTiInxkniZLl9nktq9ZUWnzkpmIjnRDgJnCgnkRPjJHHC6wuvL6v1q1MZPCfCSeBEOYmcGCdr9aU6+6HhJHNSMFHPiXCyWF8lziRYRZSTyIlxkjhpOMmcFEyWH+x+J7JCtLqUYuBEOYmcGCeJk7X6Wt0wMXOydvZrsvx0p1FnUv/DLL/d/Uweg93UD0P/+vL9Nfox/a+d+nY3dF/D423cf1u9/j/PK7M/T6d9d7hN3cdOn2uP7d8B",
  "file_map": {
    "50": {
      "source": "struct Foo {\n    x: u32,\n    y: [u32; 10],\n}\n\nfn main(\n    foos: call_data(0) [Foo; 2],\n    values: call_data(0) [[[u32; 2]; 2]; 3],\n    zero: u32,\n    one: u32,\n) -> pub u32 {\n    assert_eq(foos[zero].x + 1, foos[one].x);\n    assert_eq(foos[zero].y[3] + 2, foos[one].y[4]);\n    assert_eq(values[zero][one][zero], values[one][zero][one]);\n    foos[zero].x + foos[one].y[0]\n}\n",
      "path": ""
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "directive_integer_quotient"
  ]
}
