---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "",
  "hash": "15417981510236156799",
  "abi": {
    "parameters": [
      {
        "name": "bn254_modulus_be_bytes",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "bn254_modulus_be_bits",
        "type": {
          "kind": "array",
          "length": 254,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 1
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "12049594436772143978": {
        "error_kind": "string",
        "string": "array ref-count underflow detected"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "16761564377371454734": {
        "error_kind": "string",
        "string": "Array index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "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",
  "debug_symbols": "nd3Ral1HEkbhd9G1L05XdXdV51WGITiJJwiMHRxnYAh595EGyxNydizWuhGRxR+Zs0q29Pli//7w07sffvv5+8cP//r468N3//j94f3HH99+fvz44em93/948/DDp8f37x9//v7Pv/xwe36Tef43+PWXtx+e3//189tPnx++y1u/eXj34aen/8p++h/86/H9u4fv1u2Pf755yHnjk8EnwSfJJ5NPFp9sPik+aT7h9Revv3j9xesvXn/x+ovXX7z+4vUXr794/c3rb15/8/qb19+8/ub1N6+/ef3N629ev3j94vWL1y9ev3j94vWL1y9ev3j94vWb129ev3n95vWb129ev3n95vWb129e//D6h9c/vP7h9Q+vf3j9w+sfXv/w+gfXn7cbnww+CT5JPpl8svhk80nxSfMJrz94/cHrD15/8PqD1x+8/uD1B68/eP3B6wevH7x+8PrB6wevH7x+8PrB6wevH7x+8vrJ6yevn7x+8vrJ6yevn7x+8vrc+ia3vsmtb3Lrm9z65t9Y3/w6qfvJ4pPNJ8UnzScHT/7G+r45GXwSfJJ8wusvXn/x+ovXX7z+4vU3r795/c3rb15/8/qb19+8/ub1N6+/ef3i9YvXL16/eP3i9YvXL16/eP3i9YvXb16/ef3m9ZvXb16/ef3m9ZvXb16/ef3D6x9e//D6h9c/vP7h9Q+vf3j9w+sfXH/dbnwy+CT4JPlk8snik80nxSfNJ7z+4PUHrz94/cHrD15/8PqD1x+8/uD1B69/bX3R82XS624y+CT4JPlk8snik80nxSfNJ5f1nzT3y+Tpp/u/Tq6t79uTwSfBJ8knk08Wn2w+ue6yX74qn37y+uvkWq52vnyWnXE3ubyxmi8HU5V3k+aTgyfXpvTtyeCT4JPkk8kni082n/D6i9dfvP7m9Tevv3n9zetvXn/z+pvX37z+5vU3r1+8fvH6xesXr1+8fvH6xesXr1+8fvH6zes3r9+8fvP6zes3r9+8fvP6zes3r394/cPrH17/8PqH1z+8/uH1D69/eP2D6+/bjU8GnwSfJJ9MPll8svmk+KT5hNcfvP7g9QevP3j9wesPXn/w+oPXH7z+4PWD1w9eP3j94PWD1w9eP3j94PWD1w9eP3n95PWT109eP3n95PWT109eP3n95PUnrz95/cnrT15/8vqT15+8Pre+za1vc+vb3Po2t77NrW9z69vc+ja3vs2tb3Pr29z6Nre+za1vc+vb3Po2t77NrW9z69vc+ja3vs2tb3Pr29z6Nre+za1vc+vb3Po2t77NrW9z69vc+ja3vs2tb3Pr29z6Nre+za1vc+vb3Po2t77NrW9z69vc+ja3vs2tb3Pr29z6Nre+za1vc+vb3Po2t77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3HrK259xa2vuPUVt77i1lfc+opbX3Hra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77m1tfc+ppbX3Pra259za2vufU1t77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63vsOt73DrO9z6Dre+w63vcOs73PoOt77Dre9w6zvc+g63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",
  "file_map": {
    "50": {
      "source": "fn main(bn254_modulus_be_bytes: [u8; 32], bn254_modulus_be_bits: [u1; 254]) {\n    let modulus_size = std::field::modulus_num_bits();\n    // NOTE: The constraints used in this circuit will only work when testing nargo with the plonk bn254 backend\n    assert(modulus_size == 254);\n\n    assert_reverse(\n        std::field::modulus_be_bytes(),\n        std::field::modulus_le_bytes(),\n    );\n\n    let modulus_be_byte_array = std::field::modulus_be_bytes();\n    for i in 0..32 {\n        assert(modulus_be_byte_array[i] == bn254_modulus_be_bytes[i]);\n    }\n    let modulus_le_byte_array = std::field::modulus_le_bytes();\n    for i in 0..32 {\n        assert(modulus_le_byte_array[i] == bn254_modulus_be_bytes[31 - i]);\n    }\n\n    let modulus_be_bits = std::field::modulus_be_bits();\n    for i in 0..254 {\n        assert(modulus_be_bits[i] == bn254_modulus_be_bits[i]);\n    }\n    let modulus_le_bits = std::field::modulus_le_bits();\n    for i in 0..254 {\n        assert(modulus_le_bits[i] == bn254_modulus_be_bits[253 - i]);\n    }\n}\n\nfn assert_reverse(forwards: [u8], backwards: [u8]) {\n    for i in 0..32 {\n        assert_eq(forwards[i], backwards[31 - i]);\n    }\n}\n",
      "path": "/Users/asterite/Projects/noir/test_programs/execution_success/modulus/src/main.nr"
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
