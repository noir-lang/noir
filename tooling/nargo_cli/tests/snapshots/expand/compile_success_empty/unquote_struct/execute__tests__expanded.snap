---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
use std::meta::unquote;

fn main() {
    let foo: Foo = Foo { x: 4, y: 4 };
    foo.assert_equal();
}

fn foo(x: Field, y: u32) -> u32 {
    (x as u32) + y
}

comptime fn output_struct(f: FunctionDefinition) -> Quoted {
    let fields: Quoted = f
        .parameters()
        .map(|(name, typ): (Quoted, Type)| -> Quoted quote { name: typ,  })
        .join(quote {  });
    quote {
        struct Foo {
            fields
        }
        impl Foo {
            fn assert_equal(self) {
                assert_eq(self.x as u32, self.y);
            }
        }
    }
}

struct Foo {
    x: Field,
    y: u32,
}

impl Foo {
    fn assert_equal(self) {
        assert((self.x as u32) == self.y);
    }
}

pub struct Bar<T> {}

pub fn bar() {
    let _: Bar<i32> = Bar::<i32> {};
}
