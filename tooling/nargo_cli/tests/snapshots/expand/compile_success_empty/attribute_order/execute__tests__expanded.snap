---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
mod a {
    mod a_child1 {
        pub fn foo() {}

        pub struct Foo {}
    }

    mod a_child2 {
        pub trait Foo {}

        pub fn foo() {}
    }

    pub fn foo() {}

    pub struct Bar {}

    pub trait Foo {}
}

mod b {
    mod b_child1 {
        pub fn foo() {}
    }

    mod b_child2 {
        pub fn foo() {}
    }

    pub fn foo() {}

    mod b_child3 {
        pub fn foo() {}
    }

    pub fn bar() {}
}

fn main() {
    assert(attributes_run == 19);
}

comptime mut global attributes_run: Field = 19;

pub comptime fn assert_run_order_function(_f: FunctionDefinition, order: Field) {
    assert(order == attributes_run);
    attributes_run = attributes_run + 1;
}

pub comptime fn assert_run_order_struct(_s: TypeDefinition, order: Field) {
    assert(order == attributes_run);
    attributes_run = attributes_run + 1;
}

pub comptime fn assert_run_order_trait(_t: TraitDefinition, order: Field) {
    assert(order == attributes_run);
    attributes_run = attributes_run + 1;
}

pub comptime fn assert_run_order_module(_m: Module, order: Field) {
    assert(order == attributes_run);
    attributes_run = attributes_run + 1;
}
