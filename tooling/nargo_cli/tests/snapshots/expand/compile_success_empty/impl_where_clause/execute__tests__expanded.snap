---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
struct MyStruct<T> {
    a: u32,
    b: T,
}

impl<T> MyStruct<T> {
    fn my_eq(self, other: Self) -> bool
    where
        T: MyEq,
    {
        (self.a == other.a) & MyEq::my_eq(self.b, other.b)
    }
}

struct InnerStruct {
    a: Field,
    b: Field,
}

impl MyEq for InnerStruct {
    fn my_eq(self, other: Self) -> bool {
        (self.a == other.a) & (self.b == other.b)
    }
}

trait MyEq {
    fn my_eq(self, other: Self) -> bool;
}

fn main() {
    let inner: InnerStruct = InnerStruct { a: 1, b: 2 };
    let my_struct: MyStruct<InnerStruct> = MyStruct::<InnerStruct> { a: 5, b: inner };
    assert(my_struct.my_eq(my_struct));
    let mut my_struct_new: MyStruct<InnerStruct> =
        MyStruct::<InnerStruct> { a: 5, b: InnerStruct { a: 10, b: 15 } };
    assert(my_struct_new.my_eq(my_struct_new));
}
