---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
trait FromCallData<let N: u32, let M: u32> {
    fn from_calldata(calldata: [Field; N]) -> (Self, [Field; M]);
}

impl<let N: u32> FromCallData<N, N - 1> for Field {
    fn from_calldata(calldata: [Self; N]) -> (Self, [Self; N - 1]) {
        let slice: [Self] = calldata.as_slice();
        let (value, slice): (Self, [Self]) = slice.pop_front();
        (value, slice.as_array())
    }
}

struct Point {
    x: Field,
    y: Field,
}

impl<let N: u32> FromCallData<N, N - 2> for Point {
    fn from_calldata(calldata: [Field; N]) -> (Self, [Field; N - 2]) {
        let (x, calldata): (Field, [Field; N - 1]) = FromCallData::from_calldata(calldata);
        let (y, calldata): (Field, [Field; N - 2]) = FromCallData::from_calldata(calldata);
        (Self { x: x, y: y }, calldata)
    }
}

fn main() {
    let calldata: [Field; 2] = [1, 2];
    let _: (Point, [Field; 2 - 2]) = FromCallData::from_calldata(calldata);
}
