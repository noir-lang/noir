---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
fn main() {
    // Safety: comment added by `nargo expand`
    unsafe {
        assert(modulo(47, 3) == 2);
        assert(modulo(2, 3) == 2);
        assert(signed_modulo(5, 3) == 2);
        assert(signed_modulo(2, 3) == 2);
        let minus_two: i8 = -2;
        let minus_three: i8 = -3;
        let minus_five: i8 = -5;
        assert(signed_modulo(5, minus_three) == 2);
        assert(signed_modulo(minus_five, 3) == minus_two);
        assert(signed_modulo(minus_five, minus_three) == minus_two);
    }
}

unconstrained fn modulo(x: u32, y: u32) -> u32 {
    x % y
}

unconstrained fn signed_modulo(x: i8, y: i8) -> i8 {
    x % y
}
