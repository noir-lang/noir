---
source: tooling/nargo_cli/tests/execute.rs
expression: artifact
---
{
  "noir_version": "",
  "hash": "15417981510236156799",
  "abi": {
    "parameters": [
      {
        "name": "bn254_modulus_be_bytes",
        "type": {
          "kind": "array",
          "length": 32,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 8
          }
        },
        "visibility": "private"
      },
      {
        "name": "bn254_modulus_be_bits",
        "type": {
          "kind": "array",
          "length": 254,
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 1
          }
        },
        "visibility": "private"
      }
    ],
    "return_type": null,
    "error_types": {
      "2920182694213909827": {
        "error_kind": "string",
        "string": "attempt to subtract with overflow"
      },
      "14225679739041873922": {
        "error_kind": "string",
        "string": "Index out of bounds"
      },
      "16761564377371454734": {
        "error_kind": "string",
        "string": "Array index out of bounds"
      },
      "17843811134343075018": {
        "error_kind": "string",
        "string": "Stack too deep"
      }
    }
  },
  "bytecode": "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",
  "debug_symbols": "td3fbtXHFUfxd/E1F2dm75m9J69SVRFJaGQJQURIpSrKu9duMUU9B6y1Et8g/OfLj2htB+vji/P73U9vfvjt5+/v3/3j/a933/3t97u37398/fH+/buHt37/49XdDx/u3769//n7L999d3n8JSL/M/j1l9fvHt/+9ePrDx/vvotLv7p78+6nh99FP/wB/7h/++buu3X54++vHiaLTzafFJ80nxw8yQufDD6ZfBJ8wusnr5+8fvL6yesnr794/cXrL15/8fqL11+8/uL1F6+/eP3F629ef/P6m9ffvP7m9Tevv3n9zetvXn/z+sXrF69fvH7x+sXrF69fvH7x+sXrF6/fvH7z+s3rN6/fvH7z+s3rN6/fvH7z+ofXP7z+4fUPr394/cPrH17/8PqH1z+4fl4ufDL4ZPJJ8EnyyeKTzSfFJ80nvP7g9QevP3j9wesPXn/w+oPXH7z+4PUHrz95/cnrT15/8vqT15+8/uT1J68/ef3J6wevH7x+8PrB63PrS259ya0vufUlt778ivXl50ldTb5ifd+cDD6ZfBJ8knyy+GTzSfFJ8wmvv3j9xesvXn/x+ovXX7z+4vUXr794/cXrb15/8/qb19+8/ub1N6+/ef3N629ef/P6xesXr1+8fvH6xesXr1+8fvH6xesXr9+8fvP6zes3r9+8fvP6zes3r9+8fvP6h9c/vP7h9Q+vf3j9w+sfXv/w+ofXP7j+ulz4ZPDJ5JPgk+STxSebT4pPmk94/cHrD15/8PqD1x+8/m2Gmp1Pk15fTl5dfeq4nKfPffjtvvrzb3Z/+J7u0+bh+67/n9y2kR2XT5Md82py84Yrn/5mVXE12XxSfNJ8cvDktlp8ezL4ZPJJ8EnyCa+fvH7y+snrJ6+/eP3F6y9ef/H6i9dfvP7i9Revv3j9xetvXn/z+pvX37z+5vU3r795/c3rb15/8/rF6xevX7x+8frF6xevX7x+8frF6xev37x+8/rN6zev37x+8/rN6zev37x+8/qH1z+8/uH1D69/eP3D6x9e//D6h9c/uP6+XPhk8Mnkk+CT5JPFJ5tPik+aT3j9wesPXn/w+oPXH7z+4PUHrz94/cHrD15/8vqT15+8/uT1J68/ef3J609ef/L6k9cPXj94/eD1g9cPXp9b3+bWt7n1bW59m1vf5ta3ufVtbn2bW9/m1re59W1ufZtb3+bWt7n1bW59m1vf5ta3ufVtbn2bW9/m1re59W1ufZtb3+bWt7n1bW59m1vf5ta3ufVtbn2bW9/m1re59W1ufZtb3+bWt7n1bW59m1vf5ta3ufVtbn2bW9/m1re59W1ufZtb3+bWt7n1bW59m1vf5ta3ufVtbn2bW9/m1re59W1ufZtb3+bWt7n1bW59m1tfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49RW3vuLWV9z6iltfcesrbn3Fra+49TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mltfc+trbn3Nra+59TW3vubW19z6mlvf4dZ3uPUdbn2HW9/h1ne49R1ufYdb3+HWd7j1HW59h1vf4dZ3uPUdbn2HW9/h1ne49R1ufYdb3+HWd7j1HW59h1vf4dZ3uPUdbn2HW9/h1ne49R1ufYdb3+HWd7j1HW59h1vf4dZ3uPUdbn2HW9/h1ne49R1ufYdb3+HWd7j1HW59h1vf4dZ3uPUdbn2HW9/h1ne49R1ufYdb3+HWd7j1HW59h1vf4dZ3uPUdbn2HW9/h1ne49R1ufYdb3+HWd7j1HW59h1vf4dZ3uPUdbn2HW9/h1ne49R1ufYdb3+HWd7j1HW59h1vf4dZ3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",
  "file_map": {
    "50": {
      "source": "fn main(bn254_modulus_be_bytes: [u8; 32], bn254_modulus_be_bits: [u1; 254]) {\n    let modulus_size = std::field::modulus_num_bits();\n    // NOTE: The constraints used in this circuit will only work when testing nargo with the plonk bn254 backend\n    assert(modulus_size == 254);\n\n    assert_reverse(\n        std::field::modulus_be_bytes(),\n        std::field::modulus_le_bytes(),\n    );\n\n    let modulus_be_byte_array = std::field::modulus_be_bytes();\n    for i in 0..32 {\n        assert(modulus_be_byte_array[i] == bn254_modulus_be_bytes[i]);\n    }\n    let modulus_le_byte_array = std::field::modulus_le_bytes();\n    for i in 0..32 {\n        assert(modulus_le_byte_array[i] == bn254_modulus_be_bytes[31 - i]);\n    }\n\n    let modulus_be_bits = std::field::modulus_be_bits();\n    for i in 0..254 {\n        assert(modulus_be_bits[i] == bn254_modulus_be_bits[i]);\n    }\n    let modulus_le_bits = std::field::modulus_le_bits();\n    for i in 0..254 {\n        assert(modulus_le_bits[i] == bn254_modulus_be_bits[253 - i]);\n    }\n}\n\nfn assert_reverse(forwards: [u8], backwards: [u8]) {\n    for i in 0..32 {\n        assert_eq(forwards[i], backwards[31 - i]);\n    }\n}\n",
      "path": "/Users/asterite/Projects/noir/test_programs/execution_success/modulus/src/main.nr"
    }
  },
  "names": [
    "main"
  ],
  "brillig_names": [
    "main"
  ]
}
