---
source: tooling/nargo_cli/tests/execute.rs
expression: stderr
---
error: `self` parameter is only allowed in associated functions
  ┌─ src/main.nr:1:12
  │
1 │ pub fn one(self: i32) {}
  │            ---- associated functions are those in `impl` or `trait` definitions
  │

error: unexpected `self` parameter in function
  ┌─ src/main.nr:6:21
  │
6 │     fn one(_x: i32, self) {}
  │                     ---- must be the first parameter of an associated function
  │

error: `self` value is a keyword and may not be bound to variables or shadowed
   ┌─ src/main.nr:10:18
   │
10 │     fn five((_x, self): (i32, Self)) {}
   │                  ----
   │

error: unexpected `self` parameter in function
   ┌─ src/main.nr:22:21
   │
22 │     fn one(_x: i32, self) {}
   │                     ---- must be the first parameter of an associated function
   │

error: `self` value is a keyword and may not be bound to variables or shadowed
   ┌─ src/main.nr:26:18
   │
26 │     fn five((_x, self): (i32, Self)) {}
   │                  ----
   │

error: unexpected `self` parameter in function
   ┌─ src/main.nr:14:21
   │
14 │     fn one(_x: i32, self);
   │                     ---- must be the first parameter of an associated function
   │

error: `self` value is a keyword and may not be bound to variables or shadowed
   ┌─ src/main.nr:30:9
   │
30 │     let self = 1;
   │         ----
   │

error: `self` value is a keyword and may not be bound to variables or shadowed
   ┌─ src/main.nr:31:13
   │
31 │     let mut self = 2;
   │             ----
   │

error: `self` value is a keyword and may not be bound to variables or shadowed
   ┌─ src/main.nr:32:14
   │
32 │     let _ = |self| {};
   │              ----
   │

error: `Trait::five` expects 0 parameters, but this method has 1
   ┌─ src/main.nr:26:8
   │
26 │     fn five((_x, self): (i32, Self)) {}
   │        ----
   │

error: Invalid pattern
   ┌─ src/main.nr:18:13
   │
18 │     fn five((_x, self): (i32, Self));
   │             ----------
   │

Aborting due to 11 previous errors
