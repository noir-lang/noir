---
source: tooling/nargo_cli/tests/execute.rs
expression: expanded_code
---
trait Trait {
    fn foo(self);
}

pub fn foo<T>(x: T)
where
    T: Trait,
{
    x.foo();
}

pub struct Foo {}

impl Foo {
    fn foo<T>(x: T)
    where
        T: Trait,
    {
        x.foo();
    }
}

impl Trait2 for Foo {
    fn foo<T>(self, x: T)
    where
        T: Trait,
    {
        x.foo();
    }
}

trait Trait2 {
    fn foo<T>(self, x: T)
    where
        T: Trait,
    {
        let _: Self = self;
        x.foo();
    }
}

pub struct Bar<T> {}

impl<T> Bar<T> {
    fn bar(x: T)
    where
        T: Trait,
    {
        x.foo();
    }

    fn baz(self)
    where
        T: Trait,
    {
        let _: Self = self;
    }
}

impl<U> Trait2 for Bar<U>
where
    U: Trait,
{
    fn foo<T>(self, x: T)
    where
        T: Trait,
    {
        self.baz();
        x.foo();
    }
}

fn main() {}
