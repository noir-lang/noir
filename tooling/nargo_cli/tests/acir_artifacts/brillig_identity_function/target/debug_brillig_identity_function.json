{"debug_symbols":[{"locations":{"0":[{"span":{"start":200,"end":211},"file":1}],"1":[{"span":{"start":195,"end":211},"file":1}],"2":[{"span":{"start":274,"end":296},"file":1}],"3":[{"span":{"start":309,"end":320},"file":1}],"4":[{"span":{"start":334,"end":345},"file":1}],"5":[{"span":{"start":425,"end":443},"file":1}],"6":[{"span":{"start":456,"end":480},"file":1}],"7":[{"span":{"start":494,"end":525},"file":1}],"8":[{"span":{"start":539,"end":570},"file":1}]}}],"file_map":{"1":{"source":"struct myStruct {\n    foo: Field,\n    foo_arr: [Field; 2],\n}\n\n// Tests a very simple program.\n// \n// The features being tested is the identity function in Brillig\nfn main(x : Field) {\n    assert(x == identity(x));\n    // TODO: add support for array comparison\n    let arr = identity_array([x, x]);\n    assert(x == arr[0]);\n    assert(x == arr[1]);\n\n    let s = myStruct { foo: x, foo_arr: [x, x] };\n    let identity_struct = identity_struct(s);\n    assert(x == identity_struct.foo);\n    assert(x == identity_struct.foo_arr[0]);\n    assert(x == identity_struct.foo_arr[1]);\n}\n\nunconstrained fn identity(x : Field) -> Field {\n    x\n}\n\nunconstrained fn identity_array(arr : [Field; 2]) -> [Field; 2] {\n    arr\n}\n\nunconstrained fn identity_struct(s : myStruct) -> myStruct {\n    s\n}\n","path":"/mnt/user-data/kev/noir/tooling/nargo_cli/tests/execution_success/brillig_identity_function/src/main.nr"}}}