{"debug_symbols":[{"locations":{"0":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"1":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"2":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"3":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"4":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"5":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"6":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"7":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"8":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"9":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"10":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"11":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"12":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"13":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"14":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"15":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"16":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"17":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"18":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"19":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"20":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"21":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"22":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"23":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"24":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"25":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"26":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"27":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"28":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"29":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"30":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"31":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"32":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"33":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"34":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"35":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"36":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"37":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"38":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"39":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"40":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"41":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"42":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"43":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"44":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"45":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"46":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"47":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"48":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"49":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"50":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"51":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"52":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"53":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"54":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"55":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"56":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"57":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"58":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"59":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"60":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"61":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"62":[{"span":{"start":141,"end":158},"file":1},{"span":{"start":555,"end":587},"file":19},{"span":{"start":870,"end":907},"file":19}],"63":[{"span":{"start":176,"end":192},"file":1}],"64":[{"span":{"start":176,"end":192},"file":1}],"65":[{"span":{"start":176,"end":192},"file":1}],"66":[{"span":{"start":176,"end":192},"file":1}],"67":[{"span":{"start":176,"end":192},"file":1}],"68":[{"span":{"start":176,"end":192},"file":1}],"69":[{"span":{"start":176,"end":192},"file":1}],"70":[{"span":{"start":176,"end":198},"file":1}],"71":[{"span":{"start":263,"end":279},"file":1}],"72":[{"span":{"start":263,"end":279},"file":1}],"73":[{"span":{"start":263,"end":279},"file":1}],"74":[{"span":{"start":263,"end":279},"file":1}],"75":[{"span":{"start":263,"end":300},"file":1}],"76":[{"span":{"start":314,"end":330},"file":1}],"77":[{"span":{"start":314,"end":330},"file":1}],"78":[{"span":{"start":314,"end":330},"file":1}],"79":[{"span":{"start":314,"end":330},"file":1}],"80":[{"span":{"start":314,"end":351},"file":1}]}}],"file_map":{"1":{"source":"use dep::std;\n\nfn main(x : Field, a: Field) {\n    let y: Field = 2040124;\n    let be_byte_array = y.to_be_bytes(31);\n    let le_byte_array = x.to_le_bytes(31);\n    \n    assert(le_byte_array[0] == 60);\n    assert(le_byte_array[0] == be_byte_array[30]);\n    assert(le_byte_array[1] == be_byte_array[29]);\n    assert(le_byte_array[2] == be_byte_array[28]);\n\n    let z = 0 - 1;\n    let p_bytes = std::field::modulus_le_bytes();\n    let z_bytes = z.to_le_bytes(32);\n    assert(p_bytes[10] == z_bytes[10]);\n    assert(p_bytes[0] == z_bytes[0] as u8 + 1 as u8);\n\n    let p_bits = std::field::modulus_le_bits();\n    let z_bits = z.to_le_bits(std::field::modulus_num_bits() as u32);\n    assert(z_bits[0] == 0);\n    assert(p_bits[100] == z_bits[100]);\n\n    a.to_le_bits(std::field::modulus_num_bits() as u32);\n}\n","path":"/mnt/user-data/kev/noir/tooling/nargo_cli/tests/execution_success/to_bytes_integration/src/main.nr"},"19":{"source":"\nimpl Field {\n    pub fn to_le_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_le_bits(bit_size)\n    }\n    \n    pub fn to_be_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_be_bits(bit_size)\n    }\n\n    #[builtin(to_le_bits)]\n    fn __to_le_bits(_self: Self, _bit_size: u32) -> [u1] {}\n    \n    #[builtin(to_be_bits)]\n    fn __to_be_bits(_self: Self, _bit_size: u32) -> [u1] {}\n\n    pub fn to_le_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_le_radix(256, byte_size)\n    }\n\n    pub fn to_be_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_be_radix(256, byte_size)\n    }\n\n\n    pub fn to_le_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_le_radix(radix, result_len)\n    }\n\n    pub fn to_be_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_be_radix(radix, result_len)\n    }\n\n\n\n    // decompose `_self` into a `_result_len` vector over the `_radix` basis\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n    \n    #[builtin(to_be_radix)]\n    fn __to_be_radix(_self: Self, _radix: u32, _result_len: u32) -> [u8] {}\n\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> Field {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n","path":"std/field.nr"}}}