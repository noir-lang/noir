{"debug_symbols":[{"locations":{"0":[{"span":{"start":168,"end":175},"file":1}],"1":[{"span":{"start":168,"end":175},"file":1}],"2":[{"span":{"start":168,"end":175},"file":1}],"3":[{"span":{"start":168,"end":175},"file":1}],"4":[{"span":{"start":168,"end":175},"file":1}],"5":[{"span":{"start":168,"end":175},"file":1}],"6":[{"span":{"start":168,"end":175},"file":1}],"7":[{"span":{"start":168,"end":175},"file":1}],"8":[{"span":{"start":168,"end":175},"file":1}],"9":[{"span":{"start":168,"end":175},"file":1}],"10":[{"span":{"start":195,"end":202},"file":1}],"11":[{"span":{"start":195,"end":202},"file":1}],"12":[{"span":{"start":195,"end":202},"file":1}],"13":[{"span":{"start":195,"end":202},"file":1}],"14":[{"span":{"start":195,"end":202},"file":1}],"15":[{"span":{"start":195,"end":202},"file":1}],"16":[{"span":{"start":195,"end":202},"file":1}],"17":[{"span":{"start":195,"end":202},"file":1}],"18":[{"span":{"start":195,"end":202},"file":1}],"19":[{"span":{"start":195,"end":202},"file":1}],"20":[{"span":{"start":221,"end":238},"file":1}],"21":[{"span":{"start":220,"end":250},"file":1}],"22":[{"span":{"start":300,"end":306},"file":1}],"23":[{"span":{"start":300,"end":306},"file":1}],"24":[{"span":{"start":300,"end":306},"file":1}],"25":[{"span":{"start":311,"end":318},"file":1}],"26":[{"span":{"start":311,"end":318},"file":1}],"27":[{"span":{"start":311,"end":318},"file":1}],"28":[{"span":{"start":311,"end":318},"file":1}],"29":[{"span":{"start":332,"end":336},"file":1}],"30":[{"span":{"start":392,"end":400},"file":1}],"31":[{"span":{"start":392,"end":400},"file":1}],"32":[{"span":{"start":392,"end":400},"file":1}],"33":[{"span":{"start":392,"end":400},"file":1}],"34":[{"span":{"start":392,"end":400},"file":1}],"35":[{"span":{"start":392,"end":400},"file":1}],"36":[{"span":{"start":392,"end":400},"file":1}],"37":[{"span":{"start":392,"end":400},"file":1}],"38":[{"span":{"start":392,"end":400},"file":1}],"39":[{"span":{"start":392,"end":400},"file":1}],"40":[{"span":{"start":421,"end":429},"file":1}],"41":[{"span":{"start":421,"end":429},"file":1}],"42":[{"span":{"start":421,"end":429},"file":1}],"43":[{"span":{"start":421,"end":429},"file":1}],"44":[{"span":{"start":421,"end":429},"file":1}],"45":[{"span":{"start":421,"end":429},"file":1}],"46":[{"span":{"start":421,"end":429},"file":1}],"47":[{"span":{"start":421,"end":429},"file":1}],"48":[{"span":{"start":421,"end":429},"file":1}],"49":[{"span":{"start":421,"end":429},"file":1}],"50":[{"span":{"start":443,"end":462},"file":1}],"51":[{"span":{"start":442,"end":475},"file":1}]}}],"file_map":{"1":{"source":"// You can only do bit operations with integers.\n// (Kobi/Daira/Circom/#37) https://github.com/iden3/circom/issues/37\nfn main(x : Field, y : Field) {\n    let x_as_u8 = x as u8;\n    let y_as_u8 = y as u8;\n    \n    assert((x_as_u8 & y_as_u8) == x_as_u8);\n\n    //bitwise and with 1 bit:\n    let flag = (x == 0) & (y == 16);\n    assert(flag);\n\n    //bitwise and with odd bits:\n    let x_as_u11 = x as u11;\n    let y_as_u11 = y as u11;\n    assert((x_as_u11 & y_as_u11) == x_as_u11);\n}\n\n","path":"/mnt/user-data/kev/noir/tooling/nargo_cli/tests/execution_success/bit_and/src/main.nr"}}}