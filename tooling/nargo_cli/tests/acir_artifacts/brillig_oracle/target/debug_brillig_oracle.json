{"debug_symbols":[{"locations":{"0":[{"span":{"start":103,"end":134},"file":1}],"0.5":[{"span":{"start":586,"end":611},"file":1}],"0.6":[{"span":{"start":586,"end":611},"file":1}],"0.7":[{"span":{"start":586,"end":611},"file":1}],"0.8":[{"span":{"start":586,"end":611},"file":1}],"0.9":[{"span":{"start":586,"end":611},"file":1}],"0.10":[{"span":{"start":586,"end":611},"file":1}],"0.14":[{"span":{"start":629,"end":638},"file":1}],"0.15":[{"span":{"start":629,"end":638},"file":1}],"0.18":[{"span":{"start":713,"end":746},"file":1}],"0.19":[{"span":{"start":713,"end":746},"file":1}],"0.20":[{"span":{"start":713,"end":746},"file":1}],"0.21":[{"span":{"start":713,"end":746},"file":1}],"0.22":[{"span":{"start":713,"end":746},"file":1}],"0.23":[{"span":{"start":713,"end":746},"file":1}],"0.27":[{"span":{"start":823,"end":832},"file":1}],"0.28":[{"span":{"start":823,"end":832},"file":1}],"0.32":[{"span":{"start":850,"end":858},"file":1}],"0.33":[{"span":{"start":850,"end":858},"file":1}],"0.34":[{"span":{"start":850,"end":858},"file":1}],"0.35":[{"span":{"start":850,"end":858},"file":1}],"0.36":[{"span":{"start":850,"end":858},"file":1}],"0.37":[{"span":{"start":850,"end":858},"file":1}],"0.38":[{"span":{"start":850,"end":858},"file":1}],"0.39":[{"span":{"start":877,"end":883},"file":1}],"0.40":[{"span":{"start":877,"end":883},"file":1}],"0.41":[{"span":{"start":877,"end":883},"file":1}],"0.42":[{"span":{"start":862,"end":884},"file":1}],"0.43":[{"span":{"start":862,"end":884},"file":1}],"0.44":[{"span":{"start":862,"end":884},"file":1}],"0.45":[{"span":{"start":862,"end":884},"file":1}],"0.46":[{"span":{"start":862,"end":884},"file":1}],"0.47":[{"span":{"start":862,"end":884},"file":1}],"0.48":[{"span":{"start":850,"end":884},"file":1}],"0.49":[{"span":{"start":850,"end":884},"file":1}],"0.50":[{"span":{"start":850,"end":884},"file":1}],"0.51":[{"span":{"start":850,"end":884},"file":1}],"0.52":[{"span":{"start":850,"end":884},"file":1}],"0.55":[{"span":{"start":656,"end":664},"file":1}],"0.56":[{"span":{"start":656,"end":664},"file":1}],"0.57":[{"span":{"start":656,"end":664},"file":1}],"0.58":[{"span":{"start":656,"end":664},"file":1}],"0.59":[{"span":{"start":656,"end":664},"file":1}],"0.60":[{"span":{"start":656,"end":664},"file":1}],"0.61":[{"span":{"start":656,"end":664},"file":1}],"0.62":[{"span":{"start":668,"end":678},"file":1}],"0.63":[{"span":{"start":656,"end":678},"file":1}],"0.64":[{"span":{"start":656,"end":678},"file":1}],"0.65":[{"span":{"start":656,"end":678},"file":1}],"0.66":[{"span":{"start":656,"end":678},"file":1}],"0.67":[{"span":{"start":656,"end":678},"file":1}]}}],"file_map":{"1":{"source":"use dep::std::slice;\n\n// Tests oracle usage in brillig/unconstrained functions\nfn main(x: Field) {\n    get_number_sequence_wrapper(20);\n}\n\n// TODO(#1911): This function does not need to be an oracle but acts \n// as a useful test while we finalize code generation for slices in Brillig\n#[oracle(get_number_sequence)]\nunconstrained fn get_number_sequence(_size: Field) -> [Field] {}\n\n// TODO(#1911)\n#[oracle(get_reverse_number_sequence)]\nunconstrained fn get_reverse_number_sequence(_size: Field) -> [Field] {}\n\nunconstrained fn get_number_sequence_wrapper(size: Field) {\n    let slice = get_number_sequence(size);\n    for i in 0..19 as u32 {\n        assert(slice[i] == i as Field);\n    }\n\n    let reversed_slice = get_reverse_number_sequence(size);\n    // Regression test that we have not overwritten memory\n    for i in 0..19 as u32 {\n        assert(slice[i] == reversed_slice[19 - i]);\n    }\n}\n\n","path":"/mnt/user-data/kev/noir/tooling/nargo_cli/tests/execution_success/brillig_oracle/src/main.nr"}}}