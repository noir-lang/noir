i: {i}, j: {j}
i: 0x05, j: 0x0a
i: 0x05, j: 0x0a
i: 0x05, j: 0x0a
myStruct { y: 0x05, x: 0x0a }
randomstring0x050x05
i: 0x05, s: myStruct { y: 0x05, x: 0x0a }
0x05
[0x05, 0x0a]
s: myStruct { y: 0x05, x: 0x0a }, foo: fooStruct { my_struct: myStruct { y: 0x05, x: 0x0a }, foo: 0x0f }
x: 0, y: 1
s1: myStruct { y: 0x05, x: 0x0a }, s2: myStruct { y: 0x1e, x: 0x14 }
foo1: fooStruct { my_struct: myStruct { y: 0x05, x: 0x0a }, foo: 0x0f }, foo2: fooStruct { my_struct: myStruct { y: 0x1e, x: 0x14 }, foo: 0x14 }
fooStruct { my_struct: myStruct { y: 0x1e, x: 0x14 }, foo: 0x14 }
one_tuple: (0x01, 0x02, 0x03), another_tuple: (0x04, 0x05, 0x06)
(0x01, 0x02, 0x03)
tuples_nested: ((0x01, 0x02, 0x03), (0x04, 0x05, 0x06))
((0x01, 0x02, 0x03), (0x04, 0x05, 0x06))
[1]
1
[aaa, bbb, ccc]
array_two_vals: [0x01, 0x02]
label_two_vals: 12
array_five_vals: [0x01, 0x02, 0x03, 0x04, 0x05]
label_five_vals: 12345
array_five_vals: [0x01, 0x02, 0x03, 0x04, 0x05], label_five_vals: 12345
first_array: [0x01, 0x02, 0x03], second_array: [0x04, 0x05, 0x06]
arrays_nested: [[0x01, 0x02, 0x03], [0x04, 0x05, 0x06]]
free_lambda: <<fn([Field]) -> Field>>, sentinel: 8888
<<fn([Field]) -> Field>>
closured_lambda: <<fn([Field]) -> Field>>, sentinel: 8888
<<fn([Field]) -> Field>>
slice_of_tuples: &[(11, 22), (33, 44)], sentinel: 8888
&[(11, 22), (33, 44)]
slice_of_tuples: &[(11, 22), (33, 44)], sentinel: 8888
&[(11, 22), (33, 44)]