After Initial SSA (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Removing Unreachable Functions (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Defunctionalization (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Inlining simple functions (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Removing Paired rc_inc & rc_decs (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Preprocessing Functions (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Inlining (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Mem2Reg (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Simplifying (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After `as_slice` optimization (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Removing Unreachable Functions (2):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After `static_assert` and `assert_constant` (1):
g0 = u32 2825334515

brillig(inline) fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Purity Analysis (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Loop Invariant Code Motion (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Unrolling (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Simplifying (2):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Mem2Reg (2):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Flattening (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Removing Bit Shifts (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Mem2Reg (3):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Inlining (2):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Remove IfElse (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Purity Analysis (2):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Constant Folding (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Simplify conditionals for unconstrained (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After EnableSideEffectsIf removal (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Constraint Folding (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Unrolling (2):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Adding constrain not equal (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Check u128 mul overflow (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    inc_rc v4
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Dead Instruction Elimination (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Simplifying (3):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Mem2Reg (4):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Array Set Optimizations (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Brillig Entry Point Analysis (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Removing Unreachable Functions (3):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Removing Truncate after RangeCheck (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 0 -> [u1; 4]
    v6 = array_get v4, index u32 3 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Brillig Array Get Optimizations (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 1 -> [u1; 4]
    v6 = array_get v4, index u32 4 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Dead Instruction Elimination (2):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 1 -> [u1; 4]
    v6 = array_get v4, index u32 4 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Checked to unchecked (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 1 -> [u1; 4]
    v6 = array_get v4, index u32 4 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Inlining Brillig Calls (1):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 1 -> [u1; 4]
    v6 = array_get v4, index u32 4 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Removing Unreachable Functions (4):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 1 -> [u1; 4]
    v6 = array_get v4, index u32 4 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

After Dead Instruction Elimination (3):
g0 = u32 2825334515

brillig(inline) predicate_pure fn main f0 {
  b0(v1: [[u1; 4]; 4]):
    v4 = array_get v1, index u32 1 -> [u1; 4]
    v6 = array_get v4, index u32 4 -> u1
    jmpif v6 then: b1, else: b2
  b1():
    v9 = mul u32 601072115, u32 2825334515
    v10 = cast v9 as u64
    jmp b3(v10)
  b2():
    jmp b3(u64 3513574538769362461)
  b3(v2: u64):
    return u1 0
}

