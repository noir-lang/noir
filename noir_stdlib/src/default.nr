// docs:start:default-trait
trait Default {
    fn default() -> Self;
}
// docs:end:default-trait

impl Default for Field { fn default() -> Field { 0 } }

impl Default for u8 { fn default() -> u8 { 0 } }
impl Default for u32 { fn default() -> u32 { 0 } }
impl Default for u64 { fn default() -> u64 { 0 } }

impl Default for i8 { fn default() -> i8 { 0 } }
impl Default for i32 { fn default() -> i32 { 0 } }
impl Default for i64 { fn default() -> i64 { 0 } }

impl Default for () { fn default() -> () { () } }
impl Default for bool { fn default() -> bool { false } }

impl<T, N> Default for [T; N] where T: Default {
    fn default() -> [T; N] {
        [T::default(); N]
    }
}

impl<T> Default for [T] {
    fn default() -> [T] {
        &[]
    }
}

impl<A, B> Default for (A, B) where A: Default, B: Default {
    fn default() -> (A, B) {
        (A::default(), B::default())
    }
}

impl<A, B, C> Default for (A, B, C) where A: Default, B: Default, C: Default {
    fn default() -> (A, B, C) {
        (A::default(), B::default(), C::default())
    }
}

impl<A, B, C, D> Default for (A, B, C, D) where A: Default, B: Default, C: Default, D: Default {
    fn default() -> (A, B, C, D) {
        (A::default(), B::default(), C::default(), D::default())
    }
}

impl<A, B, C, D, E> Default for (A, B, C, D, E) where A: Default, B: Default, C: Default, D: Default, E: Default {
    fn default() -> (A, B, C, D, E) {
        (A::default(), B::default(), C::default(), D::default(), E::default())
    }
}
