(function() {
    var type_impls = Object.fromEntries([["noir_ast_fuzzer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-CompareResult%3CT,+E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/noir_ast_fuzzer/compare/mod.rs.html#108-168\">Source</a><a href=\"#impl-CompareResult%3CT,+E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T, E&gt; <a class=\"enum\" href=\"noir_ast_fuzzer/compare/enum.CompareResult.html\" title=\"enum noir_ast_fuzzer::compare::CompareResult\">CompareResult</a>&lt;T, E&gt;<div class=\"where\">where\n    E: <a class=\"trait\" href=\"noir_ast_fuzzer/compare/trait.Comparable.html\" title=\"trait noir_ast_fuzzer::compare::Comparable\">Comparable</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    T: <a class=\"trait\" href=\"noir_ast_fuzzer/compare/trait.Comparable.html\" title=\"trait noir_ast_fuzzer::compare::Comparable\">Comparable</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.return_value_or_err\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_ast_fuzzer/compare/mod.rs.html#116-167\">Source</a><h4 class=\"code-header\">pub fn <a href=\"noir_ast_fuzzer/compare/enum.CompareResult.html#tymethod.return_value_or_err\" class=\"fn\">return_value_or_err</a>(&amp;self) -&gt; <a class=\"type\" href=\"https://docs.rs/eyre/0.6.12/eyre/type.Result.html\" title=\"type eyre::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;T</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Check that two programs agree on a return value.</p>\n<p>Returns an error if anything is different.</p>\n</div></details></div></details>",0,"noir_ast_fuzzer::compare::compiled::CompareCompiledResult","noir_ast_fuzzer::compare::interpreted::CompareInterpretedResult"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[2365]}