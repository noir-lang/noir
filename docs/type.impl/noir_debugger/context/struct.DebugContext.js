(function() {
    var type_impls = Object.fromEntries([["noir_debugger",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DebugContext%3C'a,+B%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#340-981\">Source</a><a href=\"#impl-DebugContext%3C'a,+B%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, B: BlackBoxFunctionSolver&lt;FieldElement&gt;&gt; <a class=\"struct\" href=\"noir_debugger/context/struct.DebugContext.html\" title=\"struct noir_debugger::context::DebugContext\">DebugContext</a>&lt;'a, B&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#341-373\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.new\" class=\"fn\">new</a>(\n    blackbox_solver: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.reference.html\">&amp;'a B</a>,\n    circuits: &amp;'a [Circuit&lt;FieldElement&gt;],\n    debug_artifact: &amp;'a DebugArtifact,\n    initial_witness: WitnessMap&lt;FieldElement&gt;,\n    foreign_call_executor: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"noir_debugger/foreign_calls/trait.DebugForeignCallExecutor.html\" title=\"trait noir_debugger::foreign_calls::DebugForeignCallExecutor\">DebugForeignCallExecutor</a> + 'a&gt;,\n    unconstrained_functions: &amp;'a [BrilligBytecode&lt;FieldElement&gt;],\n) -&gt; Self</h4></section><section id=\"method.get_opcodes\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#375-377\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_opcodes\" class=\"fn\">get_opcodes</a>(&amp;self) -&gt; &amp;[Opcode&lt;FieldElement&gt;]</h4></section><section id=\"method.get_opcodes_of_circuit\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#379-381\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_opcodes_of_circuit\" class=\"fn\">get_opcodes_of_circuit</a>(\n    &amp;self,\n    circuit_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u32.html\">u32</a>,\n) -&gt; &amp;[Opcode&lt;FieldElement&gt;]</h4></section><section id=\"method.get_witness_map\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#383-385\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_witness_map\" class=\"fn\">get_witness_map</a>(&amp;self) -&gt; &amp;WitnessMap&lt;FieldElement&gt;</h4></section><section id=\"method.overwrite_witness\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#387-393\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.overwrite_witness\" class=\"fn\">overwrite_witness</a>(\n    &amp;mut self,\n    witness: Witness,\n    value: FieldElement,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;FieldElement&gt;</h4></section><section id=\"method.get_current_debug_location\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#395-419\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_current_debug_location\" class=\"fn\">get_current_debug_location</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>&gt;</h4></section><section id=\"method.get_call_stack\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#421-453\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_call_stack\" class=\"fn\">get_call_stack</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>&gt;</h4></section><section id=\"method.is_source_location_in_debug_module\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#455-461\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.is_source_location_in_debug_module\" class=\"fn\">is_source_location_in_debug_module</a>(\n    &amp;self,\n    location: &amp;Location,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_opcode_for_source_location\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#475-499\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.find_opcode_for_source_location\" class=\"fn\">find_opcode_for_source_location</a>(\n    &amp;self,\n    file_id: &amp;FileId,\n    line: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i64.html\">i64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Find an opcode location matching a source code location</p>\n</div></details><section id=\"method.find_opcode_at_current_file_line\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#501-505\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.find_opcode_at_current_file_line\" class=\"fn\">find_opcode_at_current_file_line</a>(\n    &amp;self,\n    line: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.i64.html\">i64</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_current_source_location\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#514-519\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_current_source_location\" class=\"fn\">get_current_source_location</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Location&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the callstack in source code locations for the currently\nexecuting opcode. This can be <code>None</code> if the execution finished (and\n<code>get_current_opcode_location()</code> returns <code>None</code>) or if the opcode is not\nmapped to a specific source location in the debug artifact (which can\nhappen for certain opcodes inserted synthetically by the compiler).\nThis function also filters source locations that are determined to be in\nthe internal debug module.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_current_file\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#522-525\">Source</a><h4 class=\"code-header\">fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_current_file\" class=\"fn\">get_current_file</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;FileId&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the <code>FileId</code> of the file associated with the innermost function on the call stack.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_source_location_for_debug_location\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#533-563\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_source_location_for_debug_location\" class=\"fn\">get_source_location_for_debug_location</a>(\n    &amp;self,\n    debug_location: &amp;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Location&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the (possible) stack of source locations corresponding to the\ngiven opcode location. Due to compiler inlining it’s possible for this\nfunction to return multiple source locations. An empty vector means that\nthe given opcode location cannot be mapped back to a source location\n(eg. it may be pure debug instrumentation code or other synthetically\nproduced opcode by the compiler)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_source_call_stack\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#569-578\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_source_call_stack\" class=\"fn\">get_source_call_stack</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>, Location)&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the current call stack with expanded source locations. In\ngeneral, the matching between opcode location and source location is 1\nto 1, but due to the compiler inlining functions a single opcode\nlocation may expand to multiple source locations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug_location_to_address\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#581-583\">Source</a><h4 class=\"code-header\">pub fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.debug_location_to_address\" class=\"fn\">debug_location_to_address</a>(&amp;self, location: &amp;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the absolute address of the opcode at the given location.</p>\n</div></details><section id=\"method.address_to_debug_location\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#586-588\">Source</a><h4 class=\"code-header\">pub fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.address_to_debug_location\" class=\"fn\">address_to_debug_location</a>(&amp;self, address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>&gt;</h4></section><section id=\"method.render_opcode_at_location\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#590-612\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.render_opcode_at_location\" class=\"fn\">render_opcode_at_location</a>(\n    &amp;self,\n    location: &amp;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section><section id=\"method.step_brillig_opcode\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#614-650\">Source</a><h4 class=\"code-header\">fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.step_brillig_opcode\" class=\"fn\">step_brillig_opcode</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section><section id=\"method.handle_foreign_call\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#652-673\">Source</a><h4 class=\"code-header\">fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.handle_foreign_call\" class=\"fn\">handle_foreign_call</a>(\n    &amp;mut self,\n    foreign_call: ForeignCallWaitInfo&lt;FieldElement&gt;,\n) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section><section id=\"method.handle_acir_call\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#675-697\">Source</a><h4 class=\"code-header\">fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.handle_acir_call\" class=\"fn\">handle_acir_call</a>(\n    &amp;mut self,\n    call_info: AcirCallWaitInfo&lt;FieldElement&gt;,\n) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section><section id=\"method.handle_acir_call_finished\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#699-728\">Source</a><h4 class=\"code-header\">fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.handle_acir_call_finished\" class=\"fn\">handle_acir_call_finished</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section><section id=\"method.handle_acvm_status\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#730-754\">Source</a><h4 class=\"code-header\">fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.handle_acvm_status\" class=\"fn\">handle_acvm_status</a>(\n    &amp;mut self,\n    status: ACVMStatus&lt;FieldElement&gt;,\n) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section><section id=\"method.step_into_opcode\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#756-768\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.step_into_opcode\" class=\"fn\">step_into_opcode</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section><section id=\"method.get_current_acir_index\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#770-778\">Source</a><h4 class=\"code-header\">fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_current_acir_index\" class=\"fn\">get_current_acir_index</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>&gt;</h4></section><section id=\"method.step_out_of_brillig_opcode\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#780-794\">Source</a><h4 class=\"code-header\">fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.step_out_of_brillig_opcode\" class=\"fn\">step_out_of_brillig_opcode</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section><section id=\"method.is_executing_brillig\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#796-815\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.is_executing_brillig\" class=\"fn\">is_executing_brillig</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.step_acir_opcode\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#817-824\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.step_acir_opcode\" class=\"fn\">step_acir_opcode</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_into\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#827-839\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.next_into\" class=\"fn\">next_into</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section></summary><div class=\"docblock\"><p>Steps debugging execution until the next source location</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_over\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#843-855\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.next_over\" class=\"fn\">next_over</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section></summary><div class=\"docblock\"><p>Steps debugging execution until the next source location at the same (or\nless) call stack depth (eg. don’t dive into function calls)</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_out\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#859-871\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.next_out\" class=\"fn\">next_out</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section></summary><div class=\"docblock\"><p>Steps debugging execution until the next source location with a smaller\ncall stack depth (eg. returning from the current function)</p>\n</div></details><section id=\"method.cont\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#873-880\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.cont\" class=\"fn\">cont</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"noir_debugger/context/enum.DebugCommandResult.html\" title=\"enum noir_debugger::context::DebugCommandResult\">DebugCommandResult</a></h4></section><section id=\"method.get_brillig_memory\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#882-884\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_brillig_memory\" class=\"fn\">get_brillig_memory</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[MemoryValue&lt;FieldElement&gt;]&gt;</h4></section><section id=\"method.write_brillig_memory\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#886-899\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.write_brillig_memory\" class=\"fn\">write_brillig_memory</a>(\n    &amp;mut self,\n    ptr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>,\n    value: FieldElement,\n    bit_size: BitSize,\n)</h4></section><section id=\"method.get_variables\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#901-903\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.get_variables\" class=\"fn\">get_variables</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.85.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;StackFrame&lt;'_, FieldElement&gt;&gt;</h4></section><section id=\"method.current_stack_frame\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#905-907\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.current_stack_frame\" class=\"fn\">current_stack_frame</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;StackFrame&lt;'_, FieldElement&gt;&gt;</h4></section><section id=\"method.breakpoint_reached\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#909-915\">Source</a><h4 class=\"code-header\">fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.breakpoint_reached\" class=\"fn\">breakpoint_reached</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_valid_debug_location\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#917-938\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.is_valid_debug_location\" class=\"fn\">is_valid_debug_location</a>(&amp;self, location: &amp;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_breakpoint_set\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#940-942\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.is_breakpoint_set\" class=\"fn\">is_breakpoint_set</a>(&amp;self, location: &amp;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.add_breakpoint\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#944-946\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.add_breakpoint\" class=\"fn\">add_breakpoint</a>(&amp;mut self, location: <a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.delete_breakpoint\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#948-950\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.delete_breakpoint\" class=\"fn\">delete_breakpoint</a>(&amp;mut self, location: &amp;<a class=\"struct\" href=\"noir_debugger/context/struct.DebugLocation.html\" title=\"struct noir_debugger::context::DebugLocation\">DebugLocation</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.clear_breakpoints\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#952-954\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.clear_breakpoints\" class=\"fn\">clear_breakpoints</a>(&amp;mut self)</h4></section><section id=\"method.is_solved\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#956-958\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.is_solved\" class=\"fn\">is_solved</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.finalize\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#960-964\">Source</a><h4 class=\"code-header\">pub fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.finalize\" class=\"fn\">finalize</a>(self) -&gt; WitnessStack&lt;FieldElement&gt;</h4></section><section id=\"method.restart\" class=\"method\"><a class=\"src rightside\" href=\"src/noir_debugger/context.rs.html#966-980\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"noir_debugger/context/struct.DebugContext.html#tymethod.restart\" class=\"fn\">restart</a>(&amp;mut self)</h4></section></div></details>",0,"noir_debugger::repl::Context"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[27523]}