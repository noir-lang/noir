searchState.loadedDescShard("noir_ssa_fuzzer", 0, "Builder for generating fuzzed SSA functions Contains a …\nInserts unary instruction with one argument and returns Id …\nInserts binary instruction with two arguments and returns …\nInserts a new parameter to the current SSA block and …\nCompiles the built function into a CompiledProgram, to run …\nTerminates main function block with the given value\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the index of the entry block\nInserts an add instruction between two values\nInserts a bitwise AND instruction between two values\nInserts a new basic block and returns its index\nInserts a cast instruction\nInserts a divide instruction between two values\nInserts an equals comparison instruction between two values\nInserts an unconditional jump to the given block with …\nInserts a conditional jump based on the condition value\nInserts a less than comparison instruction between two …\nInserts a modulo instruction between two values\nInserts a multiply instruction between two values\nInserts a not instruction for the given value\nInserts a bitwise OR instruction between two values\nInserts a return instruction with the given value\nInserts a left shift instruction between two values The …\nInserts a right shift instruction between two values The …\nInserts a subtract instruction between two values\nInserts initial variables of the given type into the …\nInserts a bitwise XOR instruction between two values\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new FuzzerBuilder in ACIR context\nCreates a new FuzzerBuilder in Brillig context\nSwitches the current block to the given block\nCompiles the given FunctionBuilder into a CompiledProgram\nOptimizes the given FunctionBuilder into ACIR its taken …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHigh level function to execute the given ACIR and Brillig …\nHelper to check if this type could be used for casts into …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from our simple ValueType to the internal SSA Type\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper to check if this value has a field type\nHelper to check if this value has a signed integer type\nHelper to check if this value has an unsigned integer type\nGet the numeric type if this value has one\nHelper to check if bitwise operations are supported for …\nHelper to check if modulo operations are supported for …\nHelper to check if not operations are supported for this …\nHelper to check if shift operations are supported for this …\nHelper to check if unchecked operations are supported for …\nConvert to the NumericType\nConvert to the SSA Type\nConvert to our simple ValueType from the internal SSA Type")