searchState.loadedDescShard("noirc_artifacts", 0, "This module defines the structure of Nargo’s different …\nDeserialize <code>hash</code> from <code>String</code> in JSON.\nSerialize <code>hash</code> as <code>String</code>, so that it doesn’t get …\nEach function in the contract will be compiled as a …\nMaximum width of the expressions which will be constrained\nMap of file Id to the source code so locations in debug …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEach of the contract’s functions are compiled into a …\nHash of the monomorphized program from which the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the contract.\nVersion of noir used to compile this contract\nA Debug Artifact stores, for a given program, the debug …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGiven a location, returns the last line index of its file\nGiven a location, returns the column number it starts at\nGiven a location, returns the index of the line it ends at\nGiven a location, returns a Span relative to its last line…\nGiven a location, returns a Span relative to its line’s …\nGiven a location, returns the index of the line it starts …\nGiven a location, returns the line number it starts at\nGiven a location, returns its file’s source code\nMaximum width of the expressions which will be constrained\nMap of file Id to the source code so locations in debug …\nReturns the argument unchanged.\nHash of the monomorphized program from which this …\nCalls <code>U::from(self)</code>.")