(function() {
    var implementors = Object.fromEntries([["acir",[["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;(<a class=\"enum\" href=\"acir/circuit/enum.OpcodeLocation.html\" title=\"enum acir::circuit::OpcodeLocation\">OpcodeLocation</a>, <a class=\"struct\" href=\"acir/circuit/struct.AssertionPayload.html\" title=\"struct acir::circuit::AssertionPayload\">AssertionPayload</a>&lt;F&gt;), <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.AssertMessage.html\" title=\"struct acir::proto::acir::circuit::AssertMessage\">AssertMessage</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"acir/circuit/brillig/enum.BrilligInputs.html\" title=\"enum acir::circuit::brillig::BrilligInputs\">BrilligInputs</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.BrilligInputs.html\" title=\"struct acir::proto::acir::circuit::BrilligInputs\">BrilligInputs</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"acir/circuit/brillig/enum.BrilligOutputs.html\" title=\"enum acir::circuit::brillig::BrilligOutputs\">BrilligOutputs</a>, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.BrilligOutputs.html\" title=\"struct acir::proto::acir::circuit::BrilligOutputs\">BrilligOutputs</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"acir/circuit/enum.ExpressionOrMemory.html\" title=\"enum acir::circuit::ExpressionOrMemory\">ExpressionOrMemory</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.ExpressionOrMemory.html\" title=\"struct acir::proto::acir::circuit::ExpressionOrMemory\">ExpressionOrMemory</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"acir/circuit/enum.ExpressionWidth.html\" title=\"enum acir::circuit::ExpressionWidth\">ExpressionWidth</a>, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.ExpressionWidth.html\" title=\"struct acir::proto::acir::circuit::ExpressionWidth\">ExpressionWidth</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"acir/circuit/enum.OpcodeLocation.html\" title=\"enum acir::circuit::OpcodeLocation\">OpcodeLocation</a>, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.OpcodeLocation.html\" title=\"struct acir::proto::acir::circuit::OpcodeLocation\">OpcodeLocation</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"acir/circuit/opcodes/enum.BlackBoxFuncCall.html\" title=\"enum acir::circuit::opcodes::BlackBoxFuncCall\">BlackBoxFuncCall</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.BlackBoxFuncCall.html\" title=\"struct acir::proto::acir::circuit::BlackBoxFuncCall\">BlackBoxFuncCall</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"acir/circuit/opcodes/enum.BlockType.html\" title=\"enum acir::circuit::opcodes::BlockType\">BlockType</a>, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.BlockType.html\" title=\"struct acir::proto::acir::circuit::BlockType\">BlockType</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"acir/circuit/opcodes/enum.ConstantOrWitnessEnum.html\" title=\"enum acir::circuit::opcodes::ConstantOrWitnessEnum\">ConstantOrWitnessEnum</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.ConstantOrWitnessEnum.html\" title=\"struct acir::proto::acir::circuit::ConstantOrWitnessEnum\">ConstantOrWitnessEnum</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"acir/circuit/opcodes/enum.Opcode.html\" title=\"enum acir::circuit::opcodes::Opcode\">Opcode</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.Opcode.html\" title=\"struct acir::proto::acir::circuit::Opcode\">Opcode</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"brillig/black_box/enum.BlackBoxOp.html\" title=\"enum brillig::black_box::BlackBoxOp\">BlackBoxOp</a>, <a class=\"struct\" href=\"acir/proto/brillig/struct.BlackBoxOp.html\" title=\"struct acir::proto::brillig::BlackBoxOp\">BlackBoxOp</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"brillig/opcodes/enum.BinaryFieldOp.html\" title=\"enum brillig::opcodes::BinaryFieldOp\">BinaryFieldOp</a>, <a class=\"enum\" href=\"acir/proto/brillig/enum.BinaryFieldOpKind.html\" title=\"enum acir::proto::brillig::BinaryFieldOpKind\">BinaryFieldOpKind</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"brillig/opcodes/enum.BinaryIntOp.html\" title=\"enum brillig::opcodes::BinaryIntOp\">BinaryIntOp</a>, <a class=\"enum\" href=\"acir/proto/brillig/enum.BinaryIntOpKind.html\" title=\"enum acir::proto::brillig::BinaryIntOpKind\">BinaryIntOpKind</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"brillig/opcodes/enum.BitSize.html\" title=\"enum brillig::opcodes::BitSize\">BitSize</a>, <a class=\"struct\" href=\"acir/proto/brillig/struct.BitSize.html\" title=\"struct acir::proto::brillig::BitSize\">BitSize</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"brillig/opcodes/enum.HeapValueType.html\" title=\"enum brillig::opcodes::HeapValueType\">HeapValueType</a>, <a class=\"struct\" href=\"acir/proto/brillig/struct.HeapValueType.html\" title=\"struct acir::proto::brillig::HeapValueType\">HeapValueType</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"brillig/opcodes/enum.IntegerBitSize.html\" title=\"enum brillig::opcodes::IntegerBitSize\">IntegerBitSize</a>, <a class=\"enum\" href=\"acir/proto/brillig/enum.IntegerBitSize.html\" title=\"enum acir::proto::brillig::IntegerBitSize\">IntegerBitSize</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"brillig/opcodes/enum.MemoryAddress.html\" title=\"enum brillig::opcodes::MemoryAddress\">MemoryAddress</a>, <a class=\"struct\" href=\"acir/proto/brillig/struct.MemoryAddress.html\" title=\"struct acir::proto::brillig::MemoryAddress\">MemoryAddress</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"brillig/opcodes/enum.ValueOrArray.html\" title=\"enum brillig::opcodes::ValueOrArray\">ValueOrArray</a>, <a class=\"struct\" href=\"acir/proto/brillig/struct.ValueOrArray.html\" title=\"struct acir::proto::brillig::ValueOrArray\">ValueOrArray</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.usize.html\">usize</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/circuit/opcodes/struct.FunctionInput.html\" title=\"struct acir::circuit::opcodes::FunctionInput\">FunctionInput</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.FunctionInput.html\" title=\"struct acir::proto::acir::circuit::FunctionInput\">FunctionInput</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/circuit/opcodes/struct.MemOp.html\" title=\"struct acir::circuit::opcodes::MemOp\">MemOp</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.MemOp.html\" title=\"struct acir::proto::acir::circuit::MemOp\">MemOp</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/circuit/struct.AssertionPayload.html\" title=\"struct acir::circuit::AssertionPayload\">AssertionPayload</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.AssertionPayload.html\" title=\"struct acir::proto::acir::circuit::AssertionPayload\">AssertionPayload</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/native_types/struct.Expression.html\" title=\"struct acir::native_types::Expression\">Expression</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/native/struct.Expression.html\" title=\"struct acir::proto::acir::native::Expression\">Expression</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/native_types/struct.Witness.html\" title=\"struct acir::native_types::Witness\">Witness</a>, <a class=\"struct\" href=\"acir/proto/acir/native/struct.Witness.html\" title=\"struct acir::proto::acir::native::Witness\">Witness</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/native_types/struct.WitnessMap.html\" title=\"struct acir::native_types::WitnessMap\">WitnessMap</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/witness/struct.WitnessMap.html\" title=\"struct acir::proto::acir::witness::WitnessMap\">WitnessMap</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/native_types/struct.WitnessStack.html\" title=\"struct acir::native_types::WitnessStack\">WitnessStack</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/witness/struct.WitnessStack.html\" title=\"struct acir::proto::acir::witness::WitnessStack\">WitnessStack</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>,</div>"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"brillig/opcodes/struct.HeapArray.html\" title=\"struct brillig::opcodes::HeapArray\">HeapArray</a>, <a class=\"struct\" href=\"acir/proto/brillig/struct.HeapArray.html\" title=\"struct acir::proto::brillig::HeapArray\">HeapArray</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"brillig/opcodes/struct.HeapVector.html\" title=\"struct brillig::opcodes::HeapVector\">HeapVector</a>, <a class=\"struct\" href=\"acir/proto/brillig/struct.HeapVector.html\" title=\"struct acir::proto::brillig::HeapVector\">HeapVector</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"enum\" href=\"brillig/opcodes/enum.BrilligOpcode.html\" title=\"enum brillig::opcodes::BrilligOpcode\">BrilligOpcode</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/brillig/struct.BrilligOpcode.html\" title=\"struct acir::proto::brillig::BrilligOpcode\">BrilligOpcode</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/circuit/brillig/struct.BrilligBytecode.html\" title=\"struct acir::circuit::brillig::BrilligBytecode\">BrilligBytecode</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/brillig/struct.BrilligBytecode.html\" title=\"struct acir::proto::brillig::BrilligBytecode\">BrilligBytecode</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/circuit/struct.Circuit.html\" title=\"struct acir::circuit::Circuit\">Circuit</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/acir/circuit/struct.Circuit.html\" title=\"struct acir::proto::acir::circuit::Circuit\">Circuit</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;<a class=\"struct\" href=\"acir/circuit/struct.Program.html\" title=\"struct acir::circuit::Program\">Program</a>&lt;F&gt;, <a class=\"struct\" href=\"acir/proto/program/struct.Program.html\" title=\"struct acir::proto::program::Program\">Program</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"],["impl&lt;F: <a class=\"trait\" href=\"acir/trait.AcirField.html\" title=\"trait acir::AcirField\">AcirField</a>&gt; <a class=\"trait\" href=\"noir_protobuf/trait.ProtoCodec.html\" title=\"trait noir_protobuf::ProtoCodec\">ProtoCodec</a>&lt;F, <a class=\"struct\" href=\"acir/proto/acir/native/struct.Field.html\" title=\"struct acir::proto::acir::native::Field\">Field</a>&gt; for <a class=\"struct\" href=\"acir/proto/convert/struct.ProtoSchema.html\" title=\"struct acir::proto::convert::ProtoSchema\">ProtoSchema</a>&lt;F&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[21407]}